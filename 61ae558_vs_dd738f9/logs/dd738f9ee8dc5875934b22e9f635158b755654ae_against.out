cset: moving following pidspec: 18597
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.253913941 seconds)
loading group "string"... done (took 0.580152668 seconds)
loading group "linalg"... done (took 7.625212779 seconds)
loading group "parallel"... done (took 0.16065111 seconds)
loading group "find"... done (took 1.137987608 seconds)
loading group "tuple"... done (took 1.836246755 seconds)
loading group "dates"... done (took 1.226142041 seconds)
loading group "micro"... done (took 0.237082352 seconds)
loading group "io"... done (took 0.900552476 seconds)
loading group "scalar"... done (took 37.734112915 seconds)
loading group "sparse"... done (took 11.597345268 seconds)
loading group "broadcast"... done (took 0.919302945 seconds)
loading group "union"... done (took 13.240139487 seconds)
loading group "simd"... done (took 4.665069057 seconds)
loading group "random"... done (took 8.966857954 seconds)
loading group "problem"... done (took 1.796345055 seconds)
loading group "array"... done (took 20.063359028 seconds)
loading group "misc"... done (took 1.764292641 seconds)
loading group "sort"... done (took 3.135683128 seconds)
loading group "collection"... done (took 17.192375687 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53768687 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130010234 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137660536 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.127403502 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.155563839 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.126581702 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.134347804 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09265429 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.897230905 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.158641923 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120919768 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415501866 seconds)
done (took 5.421941808 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177291154 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086519395 seconds)
    (2/2) benchmarking "String"...
    done (took 0.091710142 seconds)
  done (took 1.237874368 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071994076 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132342131 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074943869 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074840852 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.074602804 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074296038 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07385381 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.073968599 seconds)
  done (took 1.637470862 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.079110141 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073652212 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071429732 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073545619 seconds)
  done (took 1.358907924 seconds)
done (took 5.551143939 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.775221658 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.212298955 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189534969 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.402932028 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135109337 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182869724 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.649556681 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317677638 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.191091373 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081781719 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112508315 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.349351546 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125917325 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.644423102 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079513799 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095061581 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141394628 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.416083299 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072983442 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087612195 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094438606 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.1341614 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.091124987 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078510158 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150076881 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073301106 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.140032694 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.088840822 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.072428327 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.218478105 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17772795 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.650879118 seconds)
  done (took 10.323969352 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104280138 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.106957041 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076575726 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.132900702 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102942834 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077165961 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082851854 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074723043 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.100787785 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.137326231 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096710546 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110588462 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073968279 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076558776 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.090472924 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.217799864 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088021822 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086727644 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075603191 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08351486 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11278262 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083534176 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084618198 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084845493 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133794576 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185313594 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101571086 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102423583 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071573834 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086682914 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119935944 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132220582 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071612229 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070911209 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130124195 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099822348 seconds)
  done (took 4.766340904 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.987788991 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145528298 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093612058 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136205975 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070608826 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112123872 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073972384 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085549203 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211375265 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.380684902 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.588075301 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.138925086 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117738291 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111575333 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075522811 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.075797708 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074041258 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.490476417 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10699016 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114289979 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087070571 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076097774 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074510528 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070381655 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072627344 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069569755 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073742151 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.118917321 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080355753 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.306391041 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125733258 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073912393 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.939347824 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170282332 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071062691 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.241724519 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.175607788 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096458286 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145375115 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074856677 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071513131 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163556564 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.071187704 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075737358 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071844998 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089296065 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108579921 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12509757 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071206478 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071661556 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173012757 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070466868 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084601651 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.1482048 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158438203 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071791592 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292713662 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095438459 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07606348 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071323861 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.16986904 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125993842 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.0734641 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072639302 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074121521 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074170708 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382667255 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073862538 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.888970938 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075734874 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.08197548 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074963413 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074520132 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078002016 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078608323 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093662679 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071558027 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078447814 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.071651241 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070912066 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.07425169 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087183239 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.372788252 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071143471 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071834558 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.17465207 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097631574 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100933884 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073149515 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071379055 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10513885 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.071062812 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073348933 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071719403 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071694189 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069751341 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096292005 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087877965 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075563753 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11841917 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.072071677 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.088380726 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103320101 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074662714 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103493421 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084176759 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073435082 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.435908717 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071192323 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07730577 seconds)
    (110/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.070348121 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070851008 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071004486 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072893543 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.085434857 seconds)
  done (took 22.105716663 seconds)
done (took 39.242883823 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247801559 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076899131 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077267646 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07748622 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077539914 seconds)
  done (took 1.703517786 seconds)
done (took 2.838454097 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124727993 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102865151 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070277459 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102149498 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070623164 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107615502 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104559748 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08299993 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103813441 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07027303 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101798129 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071907046 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072001824 seconds)
  done (took 2.328567491 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088363282 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088564598 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07575565 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088055554 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068882509 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087336215 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086248757 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093904222 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086868833 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079281932 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070988114 seconds)
  done (took 2.039166988 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087648 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.090568791 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077058822 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090083313 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074134319 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089387136 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088802368 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093410101 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089404282 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081345104 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070023327 seconds)
  done (took 2.054416361 seconds)
done (took 7.54267567 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081389942 seconds)
  done (took 1.194733003 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.531030551 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.648485172 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084714085 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.10999139 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198465735 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117588004 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.248765417 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087430333 seconds)
  done (took 8.294102406 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09524177 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075556931 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087319094 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07546873 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075539805 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079404405 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075680421 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079739797 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079972296 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077072148 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076307344 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075743722 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078994691 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077913174 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078508226 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078263455 seconds)
  done (took 2.453437455 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097345367 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098489598 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.080537232 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.082474029 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079590687 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078657238 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.081311632 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080509947 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077571528 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079427265 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.081825814 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0802517 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.078383874 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.070350224 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.080848052 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082925585 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078023137 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.080833261 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081656898 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082212408 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.082184807 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.070070388 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.078856425 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.080357932 seconds)
  done (took 3.155920656 seconds)
done (took 16.221047321 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110664159 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07296013 seconds)
  done (took 1.301265085 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08420189 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084866467 seconds)
  done (took 1.295356248 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084408588 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069927148 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091343832 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081231951 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070630943 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069670444 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089271898 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070177886 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070063393 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070213581 seconds)
  done (took 1.894214548 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071972837 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080034956 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073949437 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08382778 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077741698 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068381735 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076269276 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.073543988 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082229273 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069637201 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.077175825 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.088011863 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.076986348 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091305752 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.078230028 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.074927484 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076652937 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07362622 seconds)
  done (took 2.523648882 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070214271 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071232944 seconds)
  done (took 1.27971902 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07091776 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067949328 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070974709 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070310618 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067953225 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06764593 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067922936 seconds)
  done (took 1.616799012 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.393743864 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123285623 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.312560383 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079059949 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088082721 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.264257914 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073872188 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.078710762 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078600417 seconds)
  done (took 2.66385564 seconds)
done (took 13.70856728 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085829401 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.092920654 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.102255731 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.388587824 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.099928239 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074854151 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.120860499 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186375273 seconds)
done (took 2.299604202 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217607836 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.668667601 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.409256254 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213225261 seconds)
  done (took 2.430145772 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343526194 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094228837 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067511062 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075614053 seconds)
  done (took 1.726427483 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072650507 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074881126 seconds)
  done (took 1.291578916 seconds)
done (took 6.810634258 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07283038 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.18589114 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.069956652 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071844249 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.069277845 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069190785 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093575419 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073291983 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073586018 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.073268975 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.073457126 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073350569 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070840406 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070942391 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070120401 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072401865 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.070600596 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071678195 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071024452 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073195757 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070780094 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073337076 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070853224 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070965447 seconds)
  done (took 3.028179481 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087356619 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071677752 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075516638 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075843241 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073943347 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075192373 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075507944 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071464402 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07570698 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073345607 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073657914 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073386638 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073701857 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073513605 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073726141 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073376193 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075346774 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071674806 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073364574 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.074069147 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.076413577 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072158988 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073442644 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076676726 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073862114 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073218373 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073630686 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.072104026 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076318592 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073418654 seconds)
  done (took 3.383644993 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075146175 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068700034 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069429007 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07604447 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068975857 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068939873 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068186536 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.069277582 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068912285 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068484019 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069295004 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068265437 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06916945 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068863299 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.069179074 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072678961 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08447427 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06849766 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068527672 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.069043702 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074685254 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068042414 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068485513 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068491992 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068250611 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067988974 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.069135139 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068247784 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068728178 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068349085 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072067583 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.07249042 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068618211 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.077731 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072701966 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068592915 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.073145701 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067969971 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06886847 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067939107 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068496171 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068233102 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068165576 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076600077 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.069200653 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069850853 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068639243 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069750431 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.069240204 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070350254 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068090163 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068319302 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070564381 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069338282 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072647455 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.068103695 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069213336 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068755387 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069264409 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068575424 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068496847 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068046173 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071351236 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069096467 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085330834 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075993912 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067873022 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069808611 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.070032567 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.074430033 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.071442343 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.085915034 seconds)
  done (took 6.231130861 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092360046 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09155105 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070868954 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071117722 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066519577 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069098366 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074684778 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068922226 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071111997 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087901759 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069051759 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071005246 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072361912 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074088718 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06934588 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071531702 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077951946 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067543607 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.070606841 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074020042 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070677031 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074934644 seconds)
  done (took 2.794543872 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152280265 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075326258 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109499754 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080366972 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07480426 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080221392 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076374767 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077747631 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077125049 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075164272 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074981792 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077900697 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077319324 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0753477 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074827794 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074640449 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077591959 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075484008 seconds)
  done (took 2.645134882 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082542019 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.07128631 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093743849 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073220519 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.073159908 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07605151 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077719389 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081035976 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076914539 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.073552285 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.080862801 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075901406 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.075767687 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073278566 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075623374 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073436017 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075749763 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0732694 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080886919 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077561966 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077965732 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080991506 seconds)
  done (took 2.860713599 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086124479 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074373235 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088584227 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.074452892 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068772849 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071548818 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.075948356 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.07207957 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.076363052 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.074415733 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073659524 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070770882 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075612546 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073093237 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075758734 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073343729 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075497681 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073236192 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075752228 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068590357 seconds)
  done (took 2.658751812 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088807288 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072195691 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073583874 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079319113 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072878234 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072603534 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079321612 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073135245 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073636997 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.094029799 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074491525 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074665267 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081010761 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081630206 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075184493 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080976589 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080988536 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08066238 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074953301 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074052266 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09550528 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074667751 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079933915 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072491847 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07229729 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072487902 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07220878 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07654614 seconds)
  done (took 3.335844774 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072634794 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071844867 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069812152 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068959713 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069634446 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069234272 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069117428 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069399004 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07159588 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069960017 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071528536 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071657756 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072066045 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071522504 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071939691 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071855033 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071549197 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069428062 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069626719 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069527301 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071580724 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072087998 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071681811 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069109904 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069750942 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.072391105 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069243458 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069200547 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07206849 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069751157 seconds)
  done (took 3.284292794 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080578535 seconds)
    (2/2) benchmarking "in"...
    done (took 0.078051841 seconds)
  done (took 1.323669795 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06791257 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086033144 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068276004 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076963405 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075545935 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072775865 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078339848 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074446971 seconds)
  done (took 1.761859526 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086077694 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080783735 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.072521492 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082252272 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081395145 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089199278 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131748726 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073141952 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.079582147 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071694921 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085476118 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.072399306 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07898867 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07215993 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077822956 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079395826 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.069562525 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075322599 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072286967 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069358465 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071559027 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079911708 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074663501 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066370051 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073361273 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094157733 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.083590294 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071479986 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074556073 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079130064 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077738956 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065966116 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.07082864 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.07120448 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068921563 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079639257 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085349482 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074457716 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080027303 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071171015 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079098167 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06639549 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076680248 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078842373 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082461236 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071342536 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071318003 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066543659 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.071537127 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.075795787 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068558609 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074345539 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.068722155 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080825438 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077467592 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084237133 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071862195 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075378528 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076663288 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.077310769 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.080848769 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.075558747 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077409626 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.072661432 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084464941 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079100454 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081592287 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.067720382 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065817651 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069530838 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081471705 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096240022 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077658869 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071090868 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071565549 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06914488 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074895031 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071669225 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076814237 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078244183 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.07061583 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075488674 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079023975 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072477075 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073905803 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076779226 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069316149 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073234529 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.070258342 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087082053 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.072303486 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069145072 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069510005 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081489204 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075040422 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069837117 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.071299863 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079764501 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.066460629 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.071222593 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071004761 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071812909 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079133278 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073499774 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07341642 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079349099 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076891043 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07108591 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073038339 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066946672 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.19938316 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.073139594 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.081178455 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06714287 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075932332 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.074600209 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072905234 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.08138739 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070219192 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071612726 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080902048 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.078522392 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070944056 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068989054 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075103548 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071014432 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073293241 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080823581 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.070365477 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066858228 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066490781 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.076187747 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.071067277 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.076013649 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074918415 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075206677 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.066022632 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.070216636 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075588881 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.081040851 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072380461 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073822142 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077969106 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073449426 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070188165 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078123811 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.075086222 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071853172 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.078137039 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075250168 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.068937343 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073976309 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.074355481 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.070230914 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.076039433 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07342678 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.074088838 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073235635 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071547676 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.079121393 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07383837 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073136022 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07408069 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.071900405 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.083711714 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075930413 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068672823 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.070442699 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080213486 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.072017871 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.072094188 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071600229 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073935489 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071156675 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069200062 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070520732 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073644718 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07924308 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073593533 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071547504 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076994103 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084071906 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070733473 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074328952 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070540545 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071625956 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071601535 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080933667 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077873143 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074708936 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074411727 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068352376 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076125484 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079706377 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070786481 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068720367 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071139629 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074214675 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077549579 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073864586 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070910753 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068759194 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072623305 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073201293 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07525905 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070284584 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.071184458 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075363781 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069074841 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075568589 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070071922 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080936694 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074120574 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065920771 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071841145 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068191295 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076982889 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065614091 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069105806 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070591564 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070334213 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069404549 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072800005 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064357037 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.210470131 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081372345 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.075396361 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.075326703 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074670695 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.083739705 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07741197 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078784377 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07915603 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.081601005 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085349902 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.073754886 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080037077 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082839107 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071583783 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065657723 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077200338 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069855931 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070413804 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070287191 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068845812 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075266217 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078816587 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078190031 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065340555 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074827023 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069821968 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.072450445 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066448586 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076025721 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.075052435 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.073265712 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079013708 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071865085 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071197277 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07569921 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070343062 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071481694 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071723444 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075263944 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071206785 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073945216 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071419882 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074325343 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07118141 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068649597 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073620016 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070552065 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072424921 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07720158 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.072415378 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073419706 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076339817 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.07313508 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074990634 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.074268484 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.073147216 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07699883 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07485889 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.074843094 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076671009 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.068404022 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081829973 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.072333024 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080921533 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074343494 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.069847343 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077747666 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.076653623 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.077055102 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071616928 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071439727 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073191668 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070471001 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074501199 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078583474 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069871873 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082224946 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078204509 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073055735 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074262265 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072947741 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073108084 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071028459 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072383094 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071382128 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071947408 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070237527 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075663301 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073658056 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072302919 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073286237 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.0713683 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071925601 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.07173612 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065563778 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070857443 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.071464857 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070460047 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079954172 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070786663 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071247817 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069403762 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070583159 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06936118 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067192107 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075809714 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076057265 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069973102 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076481111 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069854044 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072337246 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080501716 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064318024 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.069085786 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.204977772 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07204019 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080862417 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072513581 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.082856865 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.073462471 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072422423 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.069726283 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071789634 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.070405364 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066061476 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069154723 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075709991 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.071129337 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070455875 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071627896 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.075377917 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070908845 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080536831 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070487322 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072976507 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071482965 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068464043 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071426676 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071327761 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074866484 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071606234 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.070815576 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.070042583 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.071024148 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.073097457 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.074491528 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.073021814 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075520791 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081047563 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071654501 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.075021023 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07315124 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065829141 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074715853 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070673084 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.071137835 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.071202547 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077464476 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074865025 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072071429 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080801638 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070244594 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073349502 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072273866 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.070243285 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.07083468 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070611924 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070675499 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071423902 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071552418 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079689788 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069506201 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.076769922 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073860891 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074397127 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080137291 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.073445762 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077517369 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078475838 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.074226665 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075444774 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08037087 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075106832 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075778905 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072686271 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073387385 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078229495 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071249437 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.079081735 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.073044399 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071321173 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07350599 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.071534887 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070721282 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070653548 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070509649 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077105242 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07153965 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071305916 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.071489166 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06888861 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072941643 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072700976 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079731779 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074256968 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074860023 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066860763 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068553816 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071355697 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070166356 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073875565 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073897501 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077219473 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.074423571 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072216996 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069985071 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080103962 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077044197 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.075101449 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069812571 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074583793 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070444967 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073189018 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072097159 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071226526 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071348549 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.075789495 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074014739 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.071291325 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076602493 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073842976 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.204393228 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075001924 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074634909 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.074099198 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.067386675 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072557813 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074662599 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077108922 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074691442 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071810732 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082670427 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069992476 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072977619 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073895818 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070002712 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075930778 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066628321 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07427236 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071491208 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071593785 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066350723 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.072084145 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070338942 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074628209 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071602889 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.067060707 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082613992 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081976491 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.077488646 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072714042 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071391172 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06847322 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.069117462 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073217531 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073957715 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.074914936 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081791783 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07157194 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070988048 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066740111 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071411308 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074919029 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074933949 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06823877 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066655759 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073378717 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077024151 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079028373 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07157922 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.072548647 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076821125 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.075871669 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.071126397 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075780118 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.069413537 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.076116206 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084200006 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.072056026 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073382312 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077644742 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079118485 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071183698 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066251335 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071406744 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075121757 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.073313269 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074073274 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.073687569 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088440731 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07701698 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073460052 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.071864437 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.078322203 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073530686 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.081899756 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072871519 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071803279 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076149909 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073745627 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077941968 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075527631 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078102403 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074694515 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074923222 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070807594 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072188003 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069341338 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.070911936 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071391295 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.072056572 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.076165483 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076995833 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070668061 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081839793 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.08063221 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073287375 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068438864 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071600207 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071175141 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066530627 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.072370428 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.070476271 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069894028 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068645882 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069904706 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072416834 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075663684 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072518266 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070642799 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069671602 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064705852 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074179123 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073013179 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071923095 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067148011 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069504209 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.204479682 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077613839 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075483097 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071090691 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.075224463 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074460822 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074062257 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.068229152 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.080918615 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072598209 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.075394801 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.073685557 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07389305 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.072551136 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07626393 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076663868 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0723641 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074573486 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075779138 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072719134 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06863613 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.0687041 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07752296 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069408463 seconds)
  done (took 45.876396785 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103709866 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068586103 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068392619 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068113824 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077761436 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069161752 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067284078 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068007518 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067671559 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069388984 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066552427 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066478858 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074999859 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081200019 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076428361 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071830387 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068231709 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069604132 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068316358 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069413028 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076303442 seconds)
  done (took 2.768705368 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077097493 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082828714 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079305324 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086567803 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075311773 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073927099 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079214041 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074188307 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082464667 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076700293 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082334254 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073840752 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076553837 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077283021 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076479299 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074341852 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08206483 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075334115 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074122223 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078941867 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074359796 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078940683 seconds)
  done (took 2.955181631 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071432769 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070090707 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073843892 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066663491 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069857195 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066006577 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073403016 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.069877428 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.074305868 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.080148145 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.072696093 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072182195 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.075044768 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06789072 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.073606312 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.070428175 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112451177 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073447749 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.071126338 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071615092 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066214452 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073111079 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066182041 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066607399 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070916528 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072836375 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070843441 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068717466 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070115756 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.071487644 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070724965 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068644355 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072671108 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072021722 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070509203 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070933188 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.07257335 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070126833 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066366001 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069035459 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071810026 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067092606 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070982547 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072252511 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06881051 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068923697 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072836579 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069722986 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066211564 seconds)
  done (took 4.750551083 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081317684 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112622315 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072874899 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092529594 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083361941 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075920105 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.075213995 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094090977 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.069878157 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.070055482 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.086267055 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08371737 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070032575 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074252759 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.077647138 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070458958 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071163093 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069533537 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073329954 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069878786 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073448709 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076781574 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083729616 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081693855 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073262122 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06874675 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069063964 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074229941 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080814584 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073916056 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074258905 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074802725 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083951221 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074921532 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072101664 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074053855 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086945553 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.071717724 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072546727 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068179461 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071999418 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073772821 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076906086 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084774723 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069820054 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075106103 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070075982 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067680579 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097022115 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072082466 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076634529 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082450001 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073385722 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.07019979 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073784843 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083653457 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069772306 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068229925 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072890204 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08111075 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0681139 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073357615 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082026421 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071550676 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076565526 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081996455 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074658315 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074204189 seconds)
  done (took 6.560295605 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079444062 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101019454 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086637256 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086363496 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079981669 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080266199 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080002005 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080021801 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079502091 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084218453 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079851251 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119575263 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084260742 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081970096 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079736108 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080437625 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080563625 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080158349 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08028541 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080101468 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.080007932 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086210773 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080383665 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086300516 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083111861 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076254938 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079992897 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080655151 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087022946 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080388874 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083162806 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080429172 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080284423 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086608728 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083085126 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07970401 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070105133 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08008446 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080175366 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079924458 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075920811 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086337558 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079972736 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.076557468 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080946378 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080855558 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086737648 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083620678 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082180495 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084103707 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080200278 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086272191 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079582838 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08024921 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08639413 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089141605 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086000831 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086325601 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080113132 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086470925 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086466039 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089325251 seconds)
  done (took 6.431691105 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085428234 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077551234 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088738061 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066830585 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069161484 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076975448 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069209489 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068976965 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077613063 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077802407 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079597469 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076587138 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079187797 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079244444 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076315101 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079442422 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077211077 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076880799 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077911886 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076513689 seconds)
  done (took 2.82356102 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080594125 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088289595 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072147274 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07642199 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073970627 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076070148 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073310501 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074254451 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071708669 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074171678 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.081495371 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081555956 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07215023 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076234495 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080423931 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076113727 seconds)
  done (took 2.503072198 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087293788 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076462596 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082235243 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070529473 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071453255 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067485649 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070378472 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066390298 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.067068573 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083991507 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.0701885 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081336636 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070261553 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069156143 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067534738 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.076228453 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067304 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067677221 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070030816 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081655772 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074313948 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068693751 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073938841 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070233571 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072858683 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074632584 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069569067 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071708036 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067639244 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070949085 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07354863 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074476954 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067285473 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068390423 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069245424 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067585183 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070071217 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070902257 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076581943 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070944155 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068833924 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073710132 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070897193 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071996619 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067509501 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070999035 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.067165872 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073304625 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068161439 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073538451 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070383931 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.073257231 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071053045 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077785979 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073150004 seconds)
  done (took 5.234900225 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085076322 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074301932 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066605016 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069008613 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074055001 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072474532 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074715167 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07182549 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072592478 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068916972 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072360573 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073720657 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072534289 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074437579 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072339949 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074909552 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06623884 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072012993 seconds)
  done (took 2.596526418 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077143947 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071501925 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078803502 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0712992 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071150975 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073705015 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066850624 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069508474 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069162049 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07168749 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071319086 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073304622 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06924464 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073509708 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071860214 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071013537 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073116399 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068890471 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071055828 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066481633 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073643952 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069495374 seconds)
  done (took 2.852789604 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098563727 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.090169103 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14609825 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.086703767 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.093975474 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.079230977 seconds)
  done (took 1.876772753 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096765921 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104824721 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071416076 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074155709 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079682761 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074566283 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074597455 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074606579 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081741069 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079480535 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077373006 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08202949 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081958101 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081285216 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079602577 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079956815 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074916913 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075081258 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071775068 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086565226 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075161533 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082222143 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075181578 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074863488 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074987468 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081387259 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081968846 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07994725 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074606196 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08281277 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079507804 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075926143 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084558584 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082171562 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076400327 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08452563 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077553774 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087722892 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080700699 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081650875 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074018871 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080465534 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08192758 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079258154 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082711083 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075276602 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078682464 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074963828 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075191428 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088554029 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079806674 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081563745 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079671123 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082067436 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082070829 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08800132 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079825731 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081304026 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079490853 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080136636 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081684331 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079821561 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081058849 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079954694 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080088991 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081448042 seconds)
  done (took 6.570972699 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10896375 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072078225 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075212067 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080015159 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080899685 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074646731 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075336414 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075262209 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074824957 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072125704 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112055541 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075071664 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081866225 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081041915 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074959736 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074780097 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074813689 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081376715 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072849215 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087796502 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074860012 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081345891 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081408853 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081741279 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079316447 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079756182 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075175985 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075254082 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074872332 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075305189 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078877847 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075232319 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081134073 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071975912 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081248484 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075123935 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074954313 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07894948 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075453241 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07948755 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081449536 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086595322 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074662489 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075026949 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079779359 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07488337 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074910022 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071929567 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074896291 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0716732 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079535145 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079820474 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079720403 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0814154 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075432369 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075671821 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07501108 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075318569 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074801135 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079780944 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081271132 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075147497 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088327356 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074800775 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075628909 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081256054 seconds)
  done (took 6.48176384 seconds)
done (took 134.737684304 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198401373 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175562023 seconds)
  done (took 1.645840414 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073407509 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10095395 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080800157 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133082483 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071317459 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105695499 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104158843 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08178567 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071653734 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071638021 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071360455 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073312429 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136519275 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071450711 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071457278 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07353709 seconds)
  done (took 2.682778442 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101765891 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.160952324 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106934977 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070209344 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102265881 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076959866 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073009021 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079478231 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075446396 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071239622 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077126588 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074858072 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070585146 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074824315 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075779983 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076479196 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070808339 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076735928 seconds)
  done (took 2.809232638 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10164487 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094067073 seconds)
  done (took 1.491683072 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162178859 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137454599 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206257127 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341747779 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157381849 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146664353 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146676843 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145064847 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117810356 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140842821 seconds)
  done (took 2.994393041 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104264651 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153473775 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277946028 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122305421 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078442599 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094992917 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122272184 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084757209 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084173018 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084015131 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083293043 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081036811 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103621896 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078152554 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079871585 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080424355 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107356197 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078758941 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079452884 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079982736 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105983895 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071757321 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078248349 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078556498 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081035934 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080963878 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071500074 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071518251 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080122775 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079797556 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080543323 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093868284 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081223562 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105216041 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076111856 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107067993 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080864987 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078081479 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079875921 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077959099 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081513661 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08184541 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078689734 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080874718 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071721718 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.08077153 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071816641 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.072083121 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081747497 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07267708 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08183172 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081107913 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105673398 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072429375 seconds)
  done (took 6.152871673 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112147679 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110902988 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075494356 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11644047 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108018537 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07503142 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109609091 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102633823 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111012926 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074831765 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073491698 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075101759 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084297603 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084958464 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119929312 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111026771 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077188919 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0741184 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111836057 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111143607 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074859989 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108045671 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104329428 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112932927 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073236512 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075004861 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074297209 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075578435 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080330573 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081504714 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073633719 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08291401 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087236017 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081010724 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07346631 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073262559 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074040861 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081776317 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083056819 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082468927 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080777114 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072737919 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073219594 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074538914 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074070269 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072927717 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081352922 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082841289 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081699134 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073832602 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075718069 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.076146311 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076434141 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084204274 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082946739 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08553544 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085501133 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075769196 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075261403 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078479947 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085758333 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083876625 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08322788 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077341795 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08314791 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073330379 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083445782 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086414034 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073442247 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07560615 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073666601 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073233735 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074660571 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079857704 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079702314 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074296525 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072778841 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072882852 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081990816 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080599524 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072825249 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079399922 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072681971 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073086554 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075880373 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075161698 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080451994 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082130653 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074430845 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073103468 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072503531 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072446009 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07124277 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07809956 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080440757 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.08045466 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079351709 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073043533 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.0804782 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079368553 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.210416869 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083493273 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075403848 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075878619 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075919685 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082526748 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081273539 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083928955 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073815309 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073983845 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081211042 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084318354 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074154216 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080888486 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083194834 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082138363 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072947462 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08395429 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074595185 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083063369 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074238294 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08319549 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073942845 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081958478 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07371445 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.073044933 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073770178 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081787796 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074974574 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073265011 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074728068 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074155128 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081763335 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085398383 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075398901 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08186999 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081429444 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074896521 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081145353 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073761474 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081937315 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073583921 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074275813 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07247358 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084519136 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07385738 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07326918 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073350915 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082717664 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073889986 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08261182 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080709687 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07250548 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084666302 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083285836 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079892896 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08273547 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074644527 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073556503 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07340511 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073224291 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080919692 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082101898 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074848128 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073410391 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080596438 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082309488 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07238172 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081155331 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08094673 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081167865 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073366588 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073681441 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083482735 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083499381 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081196941 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081058942 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08105211 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073377416 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079968351 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081413876 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073060532 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086170237 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073407262 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085113783 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081755533 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079545468 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081142616 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082406338 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082478053 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082819465 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084641356 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072514939 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072616828 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080020184 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072670766 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073226196 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078985211 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073714371 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073731326 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083775294 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073130662 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22097634 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074395073 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.08376421 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074027969 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075305207 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08688953 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074383254 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078046044 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082431186 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07373691 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080947056 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083739743 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081138328 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073831916 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074898397 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082421685 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082209358 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073808485 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073824422 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075495311 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.0812437 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080696617 seconds)
  done (took 19.541224571 seconds)
done (took 38.625709369 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.196913105 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149497646 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.161789165 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116986178 seconds)
  done (took 2.006992198 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.113795301 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102001416 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093029409 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070474512 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099100402 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070633933 seconds)
  done (took 1.880552163 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276441416 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.192835708 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17728122 seconds)
  done (took 1.975757574 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20246555 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186827458 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.433077622 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265202113 seconds)
  done (took 2.514644174 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141714169 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088998995 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071728037 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087862914 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128932395 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157490778 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099646517 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124344856 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083825928 seconds)
  done (took 2.361407125 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146938426 seconds)
done (took 12.216352363 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097213343 seconds)
    (2/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.209786278 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075193104 seconds)
    (4/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.262507948 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090680994 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.098520561 seconds)
    (7/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.082449187 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080278898 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087752673 seconds)
    (10/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.095612312 seconds)
    (11/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.079203456 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.189554008 seconds)
    (13/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.216974595 seconds)
    (14/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.08128592 seconds)
    (15/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.195583657 seconds)
    (16/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.119850171 seconds)
    (17/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.152546389 seconds)
    (18/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.080536509 seconds)
    (19/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.078524946 seconds)
    (20/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079549657 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.092733457 seconds)
    (22/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.081641309 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.402627007 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.096570723 seconds)
    (25/309) benchmarking ("sort", Float64, false)...
    done (took 0.135749642 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.081129283 seconds)
    (27/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086875925 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.20381126 seconds)
    (29/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.087413526 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.15558638 seconds)
    (31/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.08066318 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.167603894 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.126768763 seconds)
    (34/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07168024 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.099877564 seconds)
    (36/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.24408308 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.2182856 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.106466697 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.168512914 seconds)
    (40/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172287915 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.166340706 seconds)
    (42/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.081807015 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 0.160342332 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.236203368 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173236952 seconds)
    (46/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.101307161 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093802905 seconds)
    (48/309) benchmarking ("sort", Int64, false)...
    done (took 0.073304073 seconds)
    (49/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.120285514 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.078508289 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.209589788 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.181435908 seconds)
    (53/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070531135 seconds)
    (54/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078925786 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.109380446 seconds)
    (56/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.156302947 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.107857723 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.25215875 seconds)
    (59/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.170196569 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069967868 seconds)
    (61/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070925272 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136064084 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.157435727 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.092247144 seconds)
    (65/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098778043 seconds)
    (66/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.081159729 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074663491 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.182803221 seconds)
    (69/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163234468 seconds)
    (70/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071537623 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078444139 seconds)
    (72/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.115686162 seconds)
    (73/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.070461789 seconds)
    (74/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.172966933 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.072771473 seconds)
    (76/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.079742521 seconds)
    (77/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.079027668 seconds)
    (78/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.121708142 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.338874828 seconds)
    (80/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.097667439 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145789215 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.081829339 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.102247234 seconds)
    (84/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.106557495 seconds)
    (85/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.083173529 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.074932826 seconds)
    (87/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086176894 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.096942027 seconds)
    (89/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.080156572 seconds)
    (90/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.082572263 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083621284 seconds)
    (92/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.2010943 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07997586 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097830562 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.099363467 seconds)
    (96/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.080505291 seconds)
    (97/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.087282164 seconds)
    (98/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.070656965 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.085949631 seconds)
    (100/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.080893193 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.083942077 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.097038659 seconds)
    (103/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.186814525 seconds)
    (104/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07705108 seconds)
    (105/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.059937921 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.183852859 seconds)
    (107/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.084217581 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073158686 seconds)
    (109/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.059639692 seconds)
    (110/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.154995941 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.079130919 seconds)
    (112/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.106171392 seconds)
    (113/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078742819 seconds)
    (114/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095057193 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.195178388 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117400181 seconds)
    (117/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.083143463 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.184163046 seconds)
    (119/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084465182 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08481763 seconds)
    (121/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.196125023 seconds)
    (122/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.175980631 seconds)
    (123/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.082342059 seconds)
    (124/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.060102345 seconds)
    (125/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.058612058 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.206348272 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.080117664 seconds)
    (128/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.080855315 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117897308 seconds)
    (130/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.15927171 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.078433512 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17647159 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09375307 seconds)
    (134/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077944128 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078875473 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175095609 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124987178 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.10351065 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.059452866 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077366383 seconds)
    (141/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.072339103 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073604497 seconds)
    (143/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09960577 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.15446492 seconds)
    (145/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.071505156 seconds)
    (146/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.083544808 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.058708472 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.092840543 seconds)
    (149/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.057824788 seconds)
    (150/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.118450123 seconds)
    (151/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.109071769 seconds)
    (152/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.163663153 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078220685 seconds)
    (154/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070665094 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.056482651 seconds)
    (156/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.119434356 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.150653163 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.070953344 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.056498018 seconds)
    (160/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.057081979 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.056910938 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073521629 seconds)
    (163/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077911149 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.057016447 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080766142 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056636479 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.152660648 seconds)
    (168/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.058697512 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182360051 seconds)
    (170/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071635705 seconds)
    (171/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078826129 seconds)
    (172/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082740386 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072734765 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093407898 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.057755177 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.057721511 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141929101 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.057078005 seconds)
    (179/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075050436 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070413165 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095887014 seconds)
    (182/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.057576397 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05777619 seconds)
    (184/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.112225556 seconds)
    (185/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.243349108 seconds)
    (186/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.071931067 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.188953966 seconds)
    (188/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.112399634 seconds)
    (189/309) benchmarking ("sort", Float32, false)...
    done (took 0.144533582 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087046418 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.077634427 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.101170817 seconds)
    (193/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.077227422 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.080530428 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.126125244 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.084795554 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123075193 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.10125685 seconds)
    (199/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.071373383 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09581955 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.098088359 seconds)
    (202/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.07000378 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196794661 seconds)
    (204/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079436357 seconds)
    (205/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.057355017 seconds)
    (206/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080017504 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078014324 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.057465098 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096495762 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07830124 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153919656 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.074870888 seconds)
    (213/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.060281224 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091588717 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.133985467 seconds)
    (216/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.070767434 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.072294465 seconds)
    (218/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126206848 seconds)
    (219/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.059706206 seconds)
    (220/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079808307 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078737029 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080232643 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095442055 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145960978 seconds)
    (225/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086777328 seconds)
    (226/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.058640162 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.058059892 seconds)
    (228/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071913006 seconds)
    (229/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.060417999 seconds)
    (230/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.057663486 seconds)
    (231/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073121091 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071862553 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078027046 seconds)
    (234/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.068759187 seconds)
    (235/309) benchmarking ("sort", BigInt, false)...
    done (took 0.195380237 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143287553 seconds)
    (237/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.078078188 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12475819 seconds)
    (239/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05708274 seconds)
    (240/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070443096 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071059521 seconds)
    (242/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.069723648 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.094805742 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173804002 seconds)
    (245/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070780853 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.057386128 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.056906269 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059194173 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069532233 seconds)
    (250/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.058602053 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070868482 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.071237269 seconds)
    (253/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.073584894 seconds)
    (254/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.057167264 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.070768676 seconds)
    (256/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080546287 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.057692595 seconds)
    (258/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.057544028 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077370478 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072709219 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.073242834 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.083099181 seconds)
    (263/309) benchmarking ("sort", Int8, false)...
    done (took 0.150886299 seconds)
    (264/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083317878 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.079331557 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07181411 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093646963 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.058600169 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.072555816 seconds)
    (270/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05882078 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076777253 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070969519 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11921865 seconds)
    (274/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072683222 seconds)
    (275/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.057068971 seconds)
    (276/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070411317 seconds)
    (277/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.056390596 seconds)
    (278/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.058526856 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.070853809 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.057944618 seconds)
    (281/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078933155 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059964146 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07032764 seconds)
    (284/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07149814 seconds)
    (285/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07844194 seconds)
    (286/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.056857783 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.058417628 seconds)
    (288/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.057534251 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13063455 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078417101 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090759084 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.057097648 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.057500515 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.059782155 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070506553 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.071299943 seconds)
    (297/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.069086741 seconds)
    (298/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.058068171 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077276919 seconds)
    (300/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093203543 seconds)
    (301/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069803044 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071731977 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128209341 seconds)
    (304/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.059727514 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.058404058 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069999129 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.233260767 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081387499 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.074624564 seconds)
  done (took 32.913323477 seconds)
done (took 34.254237884 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08958386 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09982707 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.082823427 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.099699059 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.090856036 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.08613847 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.081942932 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08681936 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.090042678 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.091714423 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.088449447 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.064461396 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.082573538 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.083139109 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.083461206 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098108656 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.087299928 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.08179751 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.08183293 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.071586673 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.080161721 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071958884 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073357554 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061441637 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.085379019 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078341911 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.081172887 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.081597102 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.073157324 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.074339328 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.077166551 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.081416946 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071637003 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.086568543 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.080538753 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079689393 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.081967513 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083430853 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.073612486 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.072074584 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.081321497 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071518401 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.079410302 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.080124938 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.078452032 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077731615 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.080222409 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083988652 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096566708 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07405903 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081336152 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082251927 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.084074612 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.079236617 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.076101697 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079615713 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077117097 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096538543 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.08006783 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073872025 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080906404 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.081302806 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077517824 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079500626 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079338432 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.082017433 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083230588 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077721944 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081546303 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.078450619 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071580094 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079581783 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.076026644 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.07438614 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.083272459 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.084491093 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.070317468 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077858833 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079417077 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079407881 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071446075 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073705725 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07308881 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.078230412 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074182594 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061493533 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.076408097 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078914049 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070976089 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079741791 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078469367 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.081376861 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.074244988 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083291473 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070636942 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076693036 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.072186436 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071246069 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.073216847 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07578944 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071441586 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073808473 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.082168953 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.073194416 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07803854 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083972704 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.071127982 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.079023627 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069975437 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.07062364 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084507584 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.081356281 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.071079932 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073660357 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069760263 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078126528 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069840293 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069954484 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070032315 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.0698395 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.078314483 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.072387264 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.076216051 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.080747989 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.232514886 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.07411589 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077967062 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075699918 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.073014261 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07902441 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.072905013 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.07218887 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073677497 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.069542904 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074396642 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.072083313 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.079610856 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073893993 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.079788897 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.073128276 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080062015 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.077273276 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.078654284 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.077969998 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070524785 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.067009308 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075026625 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074508406 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073404084 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.072107691 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.073391735 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071461336 seconds)
done (took 13.427389583 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072397477 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.136881705 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098878207 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098851805 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089525624 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.072576207 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080368218 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099748487 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073893273 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102509202 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092613173 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091039249 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114379431 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070539265 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071363426 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.0757785 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073747345 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085867979 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10073954 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092053972 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116197839 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.071365153 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095807133 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092850376 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091058384 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106207699 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.073121842 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.077100963 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.078084034 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.097851623 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094986726 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.076491488 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072451547 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101840473 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095832642 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086663102 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072254114 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086878848 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072254949 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071838278 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07364987 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100295149 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084241613 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084552827 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.076023325 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.082899273 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.073239547 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086389324 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092942236 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083267578 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089191707 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102433907 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074434854 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088323873 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.07024784 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088759092 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080751669 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.075429613 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072144806 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07946906 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071741678 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075737694 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084801535 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083737814 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075600008 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087777297 seconds)
  done (took 7.056955689 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090201223 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.102246423 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088016212 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088001512 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071634141 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071882789 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072876647 seconds)
  done (took 2.026035941 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07243151 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093652826 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092952398 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093289321 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086080342 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096583739 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081551115 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072304535 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095990868 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073238132 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092169339 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10245107 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07521671 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.084968138 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094268823 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072131259 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094598579 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.0724376 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074932673 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094383032 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077440035 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100133934 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080055827 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072560719 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085063824 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072576581 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11778829 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076913514 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074710269 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075626439 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073776745 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111003953 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085346582 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079570752 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07280807 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086971817 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08612816 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076458152 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08419513 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08143876 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085443743 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.07259871 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073132785 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.073944982 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076476751 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082242518 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.074470706 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076758014 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075042063 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091052482 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071197698 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084922502 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.075084397 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07772436 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074304989 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078380615 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082861153 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073728962 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091307518 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073925484 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087562513 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087676286 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085386099 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086835089 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07466656 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085090359 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085520638 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075571729 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075118381 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.076594995 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087202651 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071859449 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074395963 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082576666 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074849607 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094698119 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094359517 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074547663 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085577801 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073145901 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.073020519 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072773148 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094238811 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077358917 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072486371 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076769324 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076621232 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.075624909 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071799354 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076357519 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070234728 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078605193 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075253283 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075178253 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075148321 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087135506 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.075287506 seconds)
  done (took 9.31288687 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075682925 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074365001 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.075399998 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073727894 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07372638 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.074155706 seconds)
  done (took 1.911775514 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095672223 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073946512 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084868062 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077257811 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108447919 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091373602 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091279999 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08185111 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088047698 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083832358 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090596316 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092606625 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096000242 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077712897 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091459778 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077612187 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.093094501 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080171926 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.084339467 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07816009 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090014797 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077205916 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077476131 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085679973 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080587738 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076707022 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083758837 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.084025498 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083258702 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082012715 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07719667 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080581953 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075558515 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082151536 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091685291 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076055622 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079577395 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081590648 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076767373 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080173534 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091768865 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077463339 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078703797 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082268596 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081644064 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075958167 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081875143 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.084091477 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.09191223 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.083294646 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082119681 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076328812 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079888733 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.082388928 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076084085 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084697186 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.083559873 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.092360747 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076872091 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075300194 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07395367 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080875645 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081621149 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080838081 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082124105 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081299627 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075434871 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077568336 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077321042 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076980435 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081666018 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073846381 seconds)
  done (took 7.375271355 seconds)
done (took 29.104133801 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543993449 seconds)
  done (took 1.962305036 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.610138499 seconds)
  done (took 2.056173107 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.511443115 seconds)
  done (took 7.952985635 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.373399307 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.482208774 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.724410202 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140101269 seconds)
  done (took 3.201883865 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.740697502 seconds)
  done (took 2.194868276 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239547124 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230722553 seconds)
  done (took 1.937638065 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380876135 seconds)
  done (took 1.824275669 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.124244509 seconds)
  done (took 2.571141573 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.240406134 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181090807 seconds)
  done (took 1.870022578 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.44660061 seconds)
  done (took 1.893729158 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.938488415 seconds)
  done (took 6.387532037 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223260222 seconds)
  done (took 1.72432627 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240816479 seconds)
  done (took 1.691650861 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.767827892 seconds)
  done (took 3.217385773 seconds)
done (took 41.943905185 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088269521 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.09073503 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090434917 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086246882 seconds)
  done (took 1.786249193 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082160352 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078737589 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.082287307 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078390168 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081746514 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077941597 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079509099 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080589622 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077823252 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078670593 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077910448 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077948979 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080322693 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079220616 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076424451 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080439079 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081031757 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078546864 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080569831 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077880869 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076109433 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079997851 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080188535 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07725045 seconds)
  done (took 3.352756541 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083961567 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077977413 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080945674 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076844215 seconds)
  done (took 1.778971061 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083566963 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09512282 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092983183 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083775722 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095151313 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090760818 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074453021 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074709496 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075254829 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083093299 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073713361 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099082684 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092590877 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.084004152 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085725517 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070348345 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072731017 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.09179091 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083667417 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084529322 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075886234 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.084280455 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073594952 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093927398 seconds)
  done (took 3.469331598 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086493469 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10624025 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085020181 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.096057958 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097019739 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070961658 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084793242 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097919819 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131748962 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071122559 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.077601439 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071171429 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.080223721 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.074202706 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085587731 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113131438 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116632964 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074814845 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103364156 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071212551 seconds)
  done (took 3.259579222 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077877602 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074645544 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076796716 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071036585 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082735302 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078121683 seconds)
  done (took 1.928866494 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073828269 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073102594 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.073418002 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072187446 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077486485 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072498978 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071536945 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072681962 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.073905333 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072529791 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072148957 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071119221 seconds)
  done (took 2.33914273 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.186096892 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07373253 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074062623 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.0710904 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075969007 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072025108 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086953553 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072971795 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096932443 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072189878 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072331804 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074231439 seconds)
  done (took 2.492990049 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197365388 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080504671 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22828044 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154882065 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114395958 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116332157 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114723058 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114368951 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139172241 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104120635 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163989681 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16453218 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109362953 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139311056 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094176871 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106637727 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154123705 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165847775 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109956703 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163938258 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143506419 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128799057 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146348754 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103974524 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107619894 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123154448 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.078984267 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085530183 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165461306 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131847245 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142121539 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113587158 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09393895 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177449979 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1651656 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138909157 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148789697 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088147406 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10667819 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133380817 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199149436 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091824046 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30529707 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114795586 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084794923 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134866347 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120100562 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122353235 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107508991 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094566019 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145961586 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17819605 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.134410621 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089607404 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125462549 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113845778 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113564081 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115282529 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173665225 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158475398 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130711839 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076866045 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109940543 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149654262 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136520479 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110391559 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124871126 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094509781 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132617561 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154643948 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125834148 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142503006 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117244795 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091709134 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122308073 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137843825 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12799524 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159676221 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125911986 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077606828 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122081111 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101651387 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084625985 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.149372986 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079976737 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171894406 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102818052 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108799213 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12487079 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11018496 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110819071 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152555488 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.289173287 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108445691 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073363602 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109051528 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12164367 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144710458 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091502728 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110603062 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11808347 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082583591 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134236147 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.082578467 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128471151 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.085517163 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126813177 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131161139 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.08222605 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124391483 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10645064 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104867075 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131755457 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157742473 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092158383 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085090259 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163556743 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123606913 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104590868 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141541133 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154643964 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105949256 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101437427 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145371017 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166648492 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093253553 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159976365 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106599066 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087249214 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091701944 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124681079 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112774107 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125113127 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085673196 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118266848 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161463369 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079131328 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098259017 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135240902 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083732551 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084989826 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106815746 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106037846 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09969811 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101563969 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104424109 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135423497 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279955021 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109144366 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126187249 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102349164 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165794366 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092107602 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106903467 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107279428 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075586214 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.132420922 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154072639 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083213578 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158481953 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123183618 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117926859 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121100301 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087356392 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136000647 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083728442 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075333973 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140708397 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113944902 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111467375 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148133154 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117359336 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124245282 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120057555 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13057173 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130062098 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129812644 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110732425 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.09387191 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116309612 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128131457 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078460361 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09329935 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084755156 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107938004 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098096506 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087693263 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140400545 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123298387 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11002283 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114534863 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100744759 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144964309 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.08070422 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127049117 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120850218 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09864235 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148846004 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149601506 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132572254 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101936774 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287015402 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076956639 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080001352 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091198895 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124389887 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087498338 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087761353 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11596822 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14505668 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129256267 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135683938 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125011166 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120639976 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153372969 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075296664 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122066731 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143478598 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122523886 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107994057 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094518775 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102550838 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141530958 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107114843 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174187534 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116920885 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126542519 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157508803 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.107673094 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085856512 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106216039 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132042078 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105299772 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143275044 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102259793 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092175544 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1110274 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081142979 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101198547 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127089527 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119090818 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137253904 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115552925 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132139849 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082346902 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115220019 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122924329 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120927727 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069587287 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119159336 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163080897 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098102201 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118335468 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301238812 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08429053 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139524978 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169651643 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144201656 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089248663 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109317667 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12279611 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126321948 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121987204 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13667075 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107899089 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138471648 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11299676 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090314038 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091272832 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099579433 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106255944 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098274356 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10591793 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115966251 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099964507 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131685077 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105645741 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1125119 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119503916 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103250361 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096370819 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099743247 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17113834 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119755445 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166474761 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103837678 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.140362131 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157882804 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079971915 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083915179 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083266721 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136256409 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089027718 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131010055 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11303104 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117654683 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124250802 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137054854 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098487911 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073751605 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110899704 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132909375 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124815988 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100570728 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106173316 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15890444 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102725849 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082352392 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264257751 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121278985 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106913069 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166803036 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068739622 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110416091 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081805329 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083750849 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127047455 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14845287 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08713948 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105484119 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124877105 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116641796 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129341386 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103349335 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110699828 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12657625 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148269186 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130744226 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09414499 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112373051 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130146611 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152924239 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105069464 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102309929 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167859004 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149475396 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156947176 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089831216 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116133285 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116119171 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111405155 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137009091 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087888699 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157697781 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087212288 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13563298 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105340809 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090825873 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127207606 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113346821 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091817254 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143044686 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118436189 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086582778 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081969331 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116477601 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11970906 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105593642 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.081039315 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289443169 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.079845456 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134759266 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158828737 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086845707 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107835127 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100836133 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084730345 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107000957 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104302334 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090221765 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103618251 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166414394 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089967829 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145365807 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134206083 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113702177 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13426779 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105410612 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643652945 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082373994 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148855632 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11610896 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167295918 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102893998 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119786685 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112357723 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121855098 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141234781 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105545125 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181378135 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132850983 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117421361 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083279844 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104632196 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106666539 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090508136 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109641101 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115755673 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117512894 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096357632 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117934388 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123355282 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086479006 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099414241 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15229953 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117012577 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142744456 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136007407 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087890842 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118999048 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135763332 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237271233 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119724481 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149865708 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108230814 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102694403 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086002139 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101423005 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156485972 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078891022 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154944494 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124957864 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113355108 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115596953 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111292192 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131600728 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107538897 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123142967 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112665871 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109472529 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116287633 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087977088 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.08428159 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109895899 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114774073 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104617861 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101075342 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103789032 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14987543 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.080550017 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104149041 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11941152 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143725707 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167395809 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093539147 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08766531 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121513794 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117501188 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11424284 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122893627 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083541324 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085882159 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083923773 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08665064 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110312193 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116067886 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11520779 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11104515 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156719336 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087465799 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228122154 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097585346 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106937599 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074701129 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081841993 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098609096 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099160729 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259426928 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11177959 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158583701 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100169511 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093666398 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095269076 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.080307422 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088014087 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126092022 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113917125 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119740557 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104490255 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068762331 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109436632 seconds)
  done (took 59.730138945 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107830917 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087315897 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.102183514 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148078431 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12679213 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204498598 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154898901 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193278809 seconds)
  done (took 2.694506277 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073252565 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099251391 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.109391356 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088352636 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072255158 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073918164 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.229477063 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.0860718 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071577025 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.097816287 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082308883 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074245212 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.411110418 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071810854 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.07279149 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067270387 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073230464 seconds)
  done (took 3.412794981 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.397598489 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.628401312 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.347007169 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.084599862 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.987294186 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09863958 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.297491993 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141826437 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084332732 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533258208 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.417091827 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.138129926 seconds)
  done (took 18.721701357 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.088512057 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.083844355 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.097562024 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.097744231 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.087853152 seconds)
  done (took 2.126307103 seconds)
done (took 108.573476937 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.089564672 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.424446334 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.062233614 seconds)
  done (took 2.083152025 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.093055203 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.09128022 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.091297039 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088869302 seconds)
  done (took 1.936606692 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.080922858 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.083760276 seconds)
  done (took 1.734495796 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23328102 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.177746498 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.10440436 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.089354322 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.085896604 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08621362 seconds)
  done (took 1.83656099 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078354505 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.081695867 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07911925 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082906258 seconds)
  done (took 1.89175449 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08203476 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.059723246 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.062845162 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064447711 seconds)
  done (took 1.839896921 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09232439 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.090062595 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085221942 seconds)
  done (took 1.839639257 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105912781 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094807067 seconds)
  done (took 1.772738277 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086833915 seconds)
  done (took 1.660515022 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09446253 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104553843 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13710386 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.120971576 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14383879 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118411671 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089918944 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091320369 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084609127 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091741484 seconds)
  done (took 2.648500621 seconds)
done (took 21.417021577 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084461658 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.378489084 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365684154 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095457209 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67621315 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.366486707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991053787 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098847865 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146230848 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074037458 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090699125 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.656864711 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981157478 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.336738335 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.96855069 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.337086538 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656508236 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075689552 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075028897 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074662129 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.982072955 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075148843 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074844584 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075872369 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65547282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.380164928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075077332 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.337127165 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075335612 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076958457 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.36265538 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075085373 seconds)
  done (took 16.32445697 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095089801 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125736863 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079451574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090076956 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.077424058 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07678001 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.078323802 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.076401853 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127063433 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075269264 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092177738 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075012385 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.078933374 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075728852 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094508876 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077774441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075810756 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076405027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075265405 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075727208 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093400007 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075399407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075208564 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075874175 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075121991 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087516187 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075647951 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075763611 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07550144 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077130701 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078035068 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075749325 seconds)
  done (took 4.220447472 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122847653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130090554 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081058954 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110922521 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119016878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077477283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151078488 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100401501 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.134555142 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075142663 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092393926 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07544416 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108439209 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075750732 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095234636 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075618216 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076342605 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075548911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075985999 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075318751 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094512559 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075260218 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075017476 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075989294 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075561032 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089153516 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07546218 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07580434 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075265636 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077290748 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078961889 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075727496 seconds)
  done (took 4.455189397 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079094077 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.081237204 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088127482 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089613088 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07579204 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07825112 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.080206073 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.076021832 seconds)
  done (took 2.235458802 seconds)
done (took 28.808244652 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085564563 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07587827 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.079089506 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.095235206 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.080729269 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.084173978 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.073109459 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.083249228 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079750383 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079817799 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.081132462 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073696533 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.078379642 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073713317 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080426228 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074452038 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084940818 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07874341 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084847003 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085136209 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.077134794 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080028058 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.082090387 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084912595 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084560484 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.085845935 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084401009 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079754039 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.074493722 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.077134098 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082996261 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089529403 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074452913 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084611615 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073780769 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073909608 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07790379 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074093368 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084815861 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.08285819 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076265541 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.082897052 seconds)
  done (took 4.939380899 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094152112 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098334853 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.091208423 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068864983 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073961061 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071604773 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09544404 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066424836 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067167527 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.09472458 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063470161 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065899269 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069695843 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061261276 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.067032934 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064691271 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.068276117 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.062187894 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06709619 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.066451097 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.096211299 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060897198 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08375176 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069601405 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.06330374 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.069051722 seconds)
  done (took 3.517036999 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.081244331 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.090440551 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.097506038 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149486831 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.117267393 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084156328 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085133431 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.098884236 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100423457 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.07333432 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.077319306 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100549043 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09410308 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079974296 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073992936 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.090736216 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.091945024 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075496781 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079309044 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10133286 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092548651 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.092097672 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098099806 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087992494 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072923691 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07625781 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077786435 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086760611 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077207268 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083092957 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076753668 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.077044108 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075846088 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085187996 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.076622881 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075901455 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.100045515 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084313726 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084739705 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.074942981 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081966739 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.075169775 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097567272 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131744704 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.075286801 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.080878991 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077706014 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083874908 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.073299618 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100685195 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08580994 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.074517332 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076877213 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07329632 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.073116414 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076609267 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075416326 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07591804 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082338695 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.079900907 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.098320688 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.078968845 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089480769 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.073069526 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.082009194 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.073138041 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074511097 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072670799 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098724219 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077484492 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117768786 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.077279401 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07618553 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082766836 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.082409425 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.081937418 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074032954 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089480215 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083979946 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076865214 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.082759065 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076755997 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076609181 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103073968 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.076352462 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07597161 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.075103724 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079204294 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07667573 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074895643 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086510364 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.073652348 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076458742 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090321718 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073662864 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075530598 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078858431 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077876936 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.07314145 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084209019 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077259048 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.074343248 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.083319437 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073455348 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075906673 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085445132 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.080262489 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072611517 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077158419 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.079026117 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074189419 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.075170934 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075500342 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075237786 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082575878 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080365097 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077568932 seconds)
  done (took 11.315617847 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.17004366 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158781049 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.077594084 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152031149 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083954542 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.085177926 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153378279 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099252297 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.074429039 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.075342817 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074866383 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113668014 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109024512 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120154413 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084519945 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074091668 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096950448 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117899391 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154222608 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150192407 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.097029382 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082397442 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076298565 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.075572166 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075862197 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083890063 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091859146 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082576039 seconds)
  done (took 4.533269401 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085936399 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109013487 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080868085 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096698991 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095934733 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.074836009 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076620867 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07713814 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.091151721 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083863301 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073989311 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.079694763 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080181429 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076653767 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074787102 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080741852 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080445728 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075549947 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077274249 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.081159555 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.084536177 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097434686 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076796495 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072971811 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078609378 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073334574 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068640003 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089005245 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.074819546 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09868049 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.072060776 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.0788263 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087886557 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07514053 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.074019861 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073832218 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073765868 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07405151 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075859987 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072211542 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072725905 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063820048 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.073272224 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084022436 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.087415814 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063096313 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078875506 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078970806 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079414607 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071714339 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.077233636 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.077721592 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076899684 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081778613 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077976776 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.079460322 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.0754358 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.082021888 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082825385 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07399073 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.071031851 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.072830186 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078669501 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070691612 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.089379722 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078891535 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072667201 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.074322929 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075797476 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.087661902 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074134046 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078994105 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071400869 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.076168581 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.079079076 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075800767 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075684146 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072377841 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.074208698 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074181177 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.06199145 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.074097505 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.060237133 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076759302 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.072453608 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072689541 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.074062233 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078588501 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084779529 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.0750018 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079731565 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.075603172 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073304099 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076821163 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066408507 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076807592 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084569598 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.088045036 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.074430099 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.0718348 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086692998 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.079231841 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072994086 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063224392 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078080868 seconds)
  done (took 9.784968349 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098367213 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.077391987 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089045372 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095532901 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092609715 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.080634065 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.084742662 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.076855863 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.090263806 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.081015599 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.084006255 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074628816 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.085059001 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083684251 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.076242323 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.084836589 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078547783 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089217709 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088827863 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.07423189 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082856451 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086879124 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.095404424 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087312866 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085972934 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087116474 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095824306 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083386011 seconds)
  done (took 4.031492039 seconds)
done (took 39.700905359 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.694405562 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.855139451 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.670659635 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.995254715 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.752647196 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.847951652 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.761201802 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.665009299 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.966698413 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.705118057 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.908197608 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.749732574 seconds)
done (took 64.295989051 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.728085189 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.798883099 seconds)
    (2/2) benchmarking "String"...
    done (took 1.886719395 seconds)
  done (took 5.277244738 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.900772295 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.33842061 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.900221071 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.662371698 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.669778953 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.921457134 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.478954604 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.194670075 seconds)
  done (took 29.759348181 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.879496239 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.897540574 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.39887515 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.439126547 seconds)
  done (took 15.266170321 seconds)
done (took 61.620669262 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.673155649 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.713050942 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.675108537 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.652798786 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.727782582 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.679967469 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.950823101 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.693711833 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.666537638 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.657241919 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.668662657 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.103959793 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.676800993 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.889979953 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.667159947 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.677099712 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.675081576 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.277859045 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.881613698 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.690857049 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.693111866 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.692567507 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.672156701 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.67687394 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.675706114 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.671993169 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.072034955 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.679145607 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.29190497 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.672927009 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.699127532 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.094388269 seconds)
  done (took 200.484195623 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.668013905 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.712463923 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.819293413 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.702899916 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.213344717 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.850661734 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.770971684 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.241585139 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.676229903 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.691348502 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.939434694 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.669034912 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.951596661 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.612865658 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.696235775 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.676434864 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.862132102 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.953607338 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.703409219 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.838231888 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.676892638 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.734223607 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.701457063 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.917234619 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.708425966 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.697994449 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.676438347 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.676043816 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.861038355 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.845644386 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.713187513 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.676277334 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.836480817 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.542436205 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.69344727 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.687507886 seconds)
  done (took 166.493143344 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.860438536 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.67142028 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.669717438 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.669662649 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.675612753 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.669141803 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.791940982 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799816997 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.296179615 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.082947022 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.725250706 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.671791628 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.479621626 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.669143892 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.737117051 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.682025064 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.671293784 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.685561678 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.696124695 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.672779824 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.670637716 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797962648 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.682390105 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.67009306 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.676459811 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.671393711 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.67670625 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.042511676 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.670102521 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.89579929 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.67366496 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.678102775 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.913227809 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.673174671 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.672082076 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.529919359 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.787973403 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.755455238 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.675136006 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.679565905 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.673227762 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.889459436 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.672670936 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.671629393 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.67224692 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.674943558 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.819606726 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.674709414 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.794380131 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.674900405 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.147070062 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.672253394 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.671718225 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.575127728 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.499184128 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.676255111 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.676595839 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.672630383 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.67306847 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.686261339 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.681725735 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.752106491 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.675022919 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.675823073 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.677894471 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.672656633 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.833580512 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.672153582 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.974071504 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.733773799 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.790058156 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796064725 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.67559981 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.738945479 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.766435453 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.673285143 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.6730262 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.672476555 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.672112814 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.753400342 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.673737367 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.84075129 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.682266677 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.675265097 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.727603537 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.741807208 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.674359851 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.511734662 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.673516236 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.673205573 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.94482028 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.673881601 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.739174683 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.675969077 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.673726603 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.673695418 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.67356967 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.812039781 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797953232 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.386979587 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.674617514 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.550876558 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.829870795 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.675340266 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.818125696 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.67825604 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.755967525 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.679394113 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.675827562 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.706692055 seconds)
    (110/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.674608768 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.674977664 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.675080623 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.728319111 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.047090412 seconds)
  done (took 390.62961231 seconds)
done (took 761.124676033 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.285197614 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.262574463 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.35862313 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.275322259 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.251984676 seconds)
  done (took 13.038775956 seconds)
done (took 14.641930162 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.765527892 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.770129877 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.699990958 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.766300006 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.696701833 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.765100488 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.750275746 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.700939568 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.732083891 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.70037797 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.734222439 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.700742938 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.687799249 seconds)
  done (took 24.074988524 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.912591534 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.916041591 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.748964476 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.905769957 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.724857163 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.908109991 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.840304568 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.823975695 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.826700748 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.692164215 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.688683832 seconds)
  done (took 21.595048621 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.927715657 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.9147792 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.755708538 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.9098951 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.729739593 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.91719504 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.856541308 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.829938135 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.82662736 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.693326888 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.689021061 seconds)
  done (took 21.657348526 seconds)
done (took 68.931272622 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.683475476 seconds)
  done (took 3.289681853 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.71316837 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.883239147 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.691052603 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.687807521 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.68358703 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.685238758 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.687946242 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.683970943 seconds)
  done (took 15.323822014 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.681387945 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.681529502 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.683953828 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.681055204 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.682219527 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.683752617 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.681148395 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.684600986 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.684386136 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.682283076 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.683635085 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.681413084 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.688946425 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.687933158 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.684449226 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.684714866 seconds)
  done (took 28.545583417 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.683904306 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.682801734 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.683289119 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.682452061 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.682947428 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.683308006 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.683478139 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.682231174 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.681577761 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.682261988 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.68367319 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.683420355 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.682345569 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.685230101 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.682570769 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.68276804 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.68291762 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.682690643 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.687426438 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.683024758 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.68345263 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.68295509 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.682463485 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.683137752 seconds)
  done (took 42.007474477 seconds)
done (took 90.772365259 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.442449065 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.434371707 seconds)
  done (took 9.486429503 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.685955996 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.687004212 seconds)
  done (took 4.986629798 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.684580562 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.685376398 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.685014317 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.684611937 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.684958567 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.684427658 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.684227235 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.683524197 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.684396469 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.683708261 seconds)
  done (took 18.452947714 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.684399218 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.683302841 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.681188618 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.68727916 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.688010147 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.682749311 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.684644266 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.685063975 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.685597993 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.682314818 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.686284723 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.683651948 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.685818133 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.682350266 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.685334304 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.682656798 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.683089617 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.683675294 seconds)
  done (took 31.925560551 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.683069407 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.683412699 seconds)
  done (took 4.97309954 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.681121273 seconds)
    (2/7) benchmarking "second"...
    done (took 1.681464946 seconds)
    (3/7) benchmarking "month"...
    done (took 1.681454103 seconds)
    (4/7) benchmarking "year"...
    done (took 1.68213881 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.681578964 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.680685078 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.68108627 seconds)
  done (took 13.377553286 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.684517498 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.826686426 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.890386713 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.327662249 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.686323527 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.686684809 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.60422271 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.687132152 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.688934126 seconds)
  done (took 18.689664154 seconds)
done (took 103.499255354 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.547426426 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.681639749 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.897818921 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.734035936 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.728481276 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.96984154 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.680683608 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.957131661 seconds)
done (took 41.803415088 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.693926649 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.348499634 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.384292643 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.699926047 seconds)
  done (took 15.031084806 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.659162065 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.001938365 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.676745949 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.522612921 seconds)
  done (took 21.519144725 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.036793411 seconds)
    (2/2) benchmarking "read"...
    done (took 2.028177657 seconds)
  done (took 5.668867611 seconds)
done (took 50.512043213 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.675797217 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.676349613 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.673487073 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.677113796 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.672232936 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.672488003 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.675619501 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.675312137 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.6758457 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.676784875 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.675307888 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.675436489 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.672987363 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.673039199 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.672480623 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.677674609 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.673129474 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.673763411 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.673132584 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.675718797 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.672811122 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.676625669 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.673806545 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.673110113 seconds)
  done (took 41.789825916 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.676317909 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.67372855 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.677463659 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.676035688 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.67348431 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.676458123 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.676801305 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.672946944 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.67818069 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.677024203 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.673814576 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.674191744 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.676563123 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.673726262 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.678282949 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.672973667 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.676391569 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.672845734 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.676314202 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.674096009 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.677359563 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.673588062 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.673543679 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.67660185 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.673728314 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.673960265 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.685203975 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.676179714 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.67580304 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.674064615 seconds)
  done (took 51.867317693 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.680603155 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.684174554 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.67652561 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.676320623 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.674957749 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.674784955 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.67546975 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.675532257 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.671081228 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.671355286 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.670831359 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.671457821 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.670779753 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.671480338 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.669766761 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.670356836 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.670519582 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.670412101 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.670522404 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.670478645 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.671287584 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.670262316 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.670524093 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.670454583 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.671333531 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.671543403 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.670469115 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.670810417 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.670302115 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.670725756 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.671475583 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.671373665 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.669669165 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.67037309 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.66977796 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.670480502 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.676070296 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.67944785 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.670403544 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.670526537 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.670213526 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.67121487 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.67151469 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.671773205 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.670740199 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.670755336 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.669721814 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.671499519 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.670108962 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.671154375 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.672140891 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.671858903 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.670680517 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.670287459 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.670985673 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.672169899 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.671403572 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.67106782 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.67031648 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.670983138 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.671232343 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.670831942 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.670323085 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.671412452 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.670752297 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.67100674 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.670745796 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.67198267 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.672085571 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.672372769 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.671152635 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.671137639 seconds)
  done (took 121.971818069 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.672343387 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.668021708 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.668239136 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.668846824 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.668475052 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.670541436 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.668396813 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.670428805 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.668499794 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.671023831 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.670370912 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.669561382 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.669487824 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.669843171 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.669755795 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.667177846 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.669531754 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.667656966 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.669571014 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.669020716 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.668699724 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.667079777 seconds)
  done (took 38.316658106 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.669335272 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.670374846 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.665431207 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.668539403 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.665844621 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.669292949 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.668579207 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.66869225 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.667133737 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.665390486 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.665285316 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.667976456 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.665222517 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.667626038 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.66491442 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.664782679 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.667043576 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.664675499 seconds)
  done (took 31.598565725 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.665482995 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.663683303 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.665370232 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.66358843 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.664371945 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.667060814 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.6640075 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.666275238 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.666038277 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.662118928 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.665360147 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.664795123 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.665998354 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.661485542 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.663864577 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.660662052 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.66314176 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.66103041 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.663877247 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.660606201 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.660475997 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.662995319 seconds)
  done (took 38.191955473 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.662799506 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.663299596 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.66103056 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.6608716 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.660489057 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.66393533 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.663128495 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.661217787 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.662688266 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.664106635 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.661175235 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.663408336 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.660894559 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.661909233 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.661099892 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.66056857 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.663633383 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.661461612 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.664016046 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.660840707 seconds)
  done (took 34.829531018 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.662401315 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.663594312 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.664707321 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.664061233 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.664694365 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.664079402 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.662950386 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.664172936 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.664859488 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.663891976 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.66598414 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.664375404 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.664343483 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.663384799 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.663333703 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.662857307 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.664945811 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.665738 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.663645218 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.663769858 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.664430709 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.663378835 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.664378986 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.664123945 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.66339456 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.662711071 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.663871117 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.663490336 seconds)
  done (took 48.179181364 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.663391428 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.663585273 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.661457353 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.661146554 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.660374754 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.662069664 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.66079741 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.66058864 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.663459042 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.660623228 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.663462242 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.664652337 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.663161695 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.663943023 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.662738307 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.662582946 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.663194165 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.662098092 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.661537515 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.660650352 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.663885121 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.663680065 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.662887172 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.661241413 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.659953938 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.662828408 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.660793898 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.66084143 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.662867882 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.661771192 seconds)
  done (took 51.454433304 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.681610987 seconds)
    (2/2) benchmarking "in"...
    done (took 1.68249211 seconds)
  done (took 4.949972505 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.660920095 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.663991119 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.661590666 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.660416363 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.660131716 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.662317338 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.662265907 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.66081127 seconds)
  done (took 14.877993214 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.661537121 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.661513846 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.662408451 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.661893596 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.663695244 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.662902434 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.668703228 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.662552766 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.66281148 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.662067105 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.669226184 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.668056954 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.664106246 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.662014559 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.661337195 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.662708422 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.663037714 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.662130222 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.662991434 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.662877945 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.66269016 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.663984632 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.664616214 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.660170561 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.663522234 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.671611831 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.665436327 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.662478477 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.663560977 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.665484502 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.662272682 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.659753954 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.661960226 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.662226095 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.664393553 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.662013589 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.671269965 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.667961269 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.668309007 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.662258861 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.663900854 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.660028402 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.663533309 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.663018617 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.662586192 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.663958505 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.663733826 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.660535023 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.66280313 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.665364171 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.666625472 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.662557477 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.661353651 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.666003193 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.66264846 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.669427089 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.663918719 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.665840086 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.670543401 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.672664746 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.674679672 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.669117085 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.663249279 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.662599279 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.672580159 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.68289697 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.669540844 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.661127073 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.660118576 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.6624055 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.670265013 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.674191901 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.670206438 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.662850471 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.663274273 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.662900963 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.663549485 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.662434097 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.669440891 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.664824295 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.662020027 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.663407424 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.672726888 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.68050266 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.662333062 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.66299456 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.663226418 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.66274911 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.664389171 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.671787611 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.664442389 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.662952886 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.662486453 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.66236714 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.664741163 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.663153872 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.66160794 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.663468969 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.660772829 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.663041123 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.663436978 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.664371845 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.670640658 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.663469738 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.663275211 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.675356716 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.663660046 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.661818756 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.669156437 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.663734653 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.663922155 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.663940699 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.668439051 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.661508711 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.664663535 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.66957146 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.664335481 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.665522395 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.665351381 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.664123135 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.671843489 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.684382394 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.664588181 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.664526577 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.667348777 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.675151168 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.664856926 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.668427043 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.670879231 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.661232296 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.662295445 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.664540117 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.664853858 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.664045184 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.664047046 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.665066372 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.662124147 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.664003574 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.665544896 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.664394889 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.665140715 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.664581163 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.666070471 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.665700445 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.665267538 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.665504976 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.670523731 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.665632121 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.66598014 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.665591471 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.663196918 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.665667703 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.665528293 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.665652459 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.66467506 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.665021817 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.66443143 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.665810768 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.665367812 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.665892999 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.665746122 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.664983218 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.668084422 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.666533699 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.66899079 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.664801431 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.663242704 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.666955232 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.666600701 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.665420934 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.665636358 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.665894392 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.668506552 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.672307173 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.666072381 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.666052528 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.668683208 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.666705461 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.667008446 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.665870499 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.668931714 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.672357635 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.666543762 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.673305432 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.668179938 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.6675338 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.667475534 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.66701796 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.666839971 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.667206364 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.669778538 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.672304244 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.678279083 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.673834689 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.667121587 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.66953316 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.668234708 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.669746664 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.671412525 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.667596568 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.668692994 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.667311155 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.667661712 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.667875774 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.669393178 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.667365182 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.666596427 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.667915005 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.668657223 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.667882682 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.668332183 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.6686634 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.668206925 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.665550997 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.669538411 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.667996443 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.667383984 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.665623504 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.669479889 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.66765 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.668980861 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.668389026 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.674926894 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.665677684 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.669150031 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.668184268 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.668326624 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.667196083 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.668147487 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.669853808 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.668338472 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.675889298 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.669311016 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.669147271 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.67566379 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.668139678 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.668690365 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.672582128 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.671234749 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.666535183 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.670506581 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.674710155 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.66879928 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.669433266 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.670207814 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.66989284 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.669811244 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.676916548 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.667082129 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.668388536 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.671285199 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.670141639 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.667533581 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.670280539 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.66963028 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.669872027 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.672174771 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.670771802 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.670400515 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.670206309 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.669008705 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.66946306 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.670024404 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.67159653 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.675961833 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.673874684 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.66954924 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.673127402 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.6713247 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.673369398 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.670983365 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.670249429 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.669855313 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.681727594 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.678227303 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.676469855 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.671552674 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.671345065 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.676086414 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.670811174 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.674296982 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.670593293 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.670618295 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.670067318 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.670011617 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.668908974 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.67237905 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.671043161 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.671824931 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.672117571 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.674915494 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.672343864 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.672089914 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.671420631 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.671937592 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.672628287 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.671113992 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.672023399 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.674752694 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.672860988 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.670928401 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.671206157 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.678938284 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.671579242 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.673952314 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.671342534 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.672138961 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.671381361 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.672783531 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.678123529 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.676379155 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.677673949 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.674301131 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.679447568 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.672416004 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.680056101 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.673585345 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.673930646 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.678693128 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.670005247 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.671344621 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.672235092 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.672927957 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.679077523 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.673152773 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.673023665 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.67559526 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.673412885 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.674205079 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.673302032 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.672137335 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.673726528 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.673453454 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.68119627 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.675849747 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.675523404 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.675497515 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.670893745 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.674274217 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.673950967 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.673422286 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.676885813 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.673886896 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.673209919 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.674176994 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.673144354 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.673617592 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.674987145 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.674768911 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.671072599 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.673827506 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.681036461 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.674714634 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.677272123 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.67584234 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.681379365 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.67453921 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.680425801 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.676180417 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.674327701 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.674239087 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.674263839 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.6762513 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.674165112 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.676251307 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.676023841 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.676016961 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.677975928 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.675046412 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.676071584 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.675224993 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.674836908 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.674077466 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.682105786 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.694141343 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.675373932 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.679478698 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.672385404 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.676066761 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.678447788 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.675688494 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.673813057 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.677711133 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.682232577 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.682358499 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.675465344 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.674847446 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.675417746 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.677383223 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.675563765 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.675496588 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.675487979 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.676351444 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.676541102 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.677627292 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.678995703 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.676354993 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.676248633 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.676532081 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.683545125 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.689506999 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.676538918 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.677217558 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.676360132 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.67701472 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.675216403 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.677104639 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.676331704 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.677473499 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.677879001 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.678336275 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.683263637 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.682389807 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.678994398 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.676698046 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.676863448 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.676973249 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.678000827 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.679471876 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.677730884 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.677688885 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.678100747 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.67885037 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.677172522 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.676648588 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.677741963 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.678084009 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.678483996 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.679248063 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.683343817 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.678431771 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.675589102 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.67796384 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.678200776 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.676325033 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.678643244 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.685427948 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.679424545 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.685536069 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.683933805 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.681449395 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.678292496 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.67942009 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.684130232 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.677192324 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.678057247 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.678180661 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.680185826 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.678293511 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.680992803 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.678946569 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.684722507 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.677771255 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.679151631 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.685672296 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.680810314 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.679321156 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.679580818 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.680934096 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.678773111 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.677532028 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.679290338 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.679087141 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.686476898 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.680557498 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.680605788 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.680582386 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.676781781 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.67970762 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.682802749 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.679660522 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.680941662 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.677703323 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.678937761 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.679529876 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.682580895 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.677153101 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.68010237 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.679587059 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.681326668 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.684599596 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.677735791 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.681372184 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.682250375 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.680634937 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.680366242 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.68049326 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.678506696 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.678058236 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.682106691 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.679990592 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.679874397 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.682128611 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.679239749 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.680732324 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.681239849 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.681173548 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.682653239 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.687654598 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.686962176 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.67763683 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.680673036 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.679730957 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.682605907 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.681182137 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.679891239 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.680255331 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.682741238 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.680892722 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.680514949 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.680651466 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.683237905 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.695714729 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.683198252 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.681052642 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.681133341 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.683253579 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.681424058 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.680300625 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.682734786 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.682985159 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.683282967 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.686955097 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.681333204 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.68757294 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.682629826 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.681399515 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.684593436 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.683483099 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.687481081 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.685258709 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.683649502 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.681429899 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.685270055 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.695394054 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.682816958 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.69044405 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.707389953 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.682911824 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.683076055 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.683255329 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.682191075 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.682562094 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.684133158 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.683609701 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.68387574 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.682943621 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.683270545 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.684825477 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.687651377 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.685202373 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.682820575 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.683567542 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.682435889 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.685111612 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.681347875 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.683664973 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.683819654 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.683520286 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.683633886 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.685105261 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.683326053 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.694221342 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.691150412 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.683678027 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.68406965 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.683949485 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.686115125 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.685382491 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.691829977 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.690370373 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.683755367 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.683653373 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.684110322 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.683181255 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.681744881 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.683900517 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.682845968 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.683514266 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.683046302 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.694637543 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.690091907 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.688556821 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.684117673 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.684215894 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.684772614 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.684992662 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.684225843 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.686648172 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.686821924 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.684907787 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.688576762 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.685568836 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.685326497 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.687819322 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.69172455 seconds)
  done (took 999.108314308 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.683503633 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.682630059 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.682932708 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.682590684 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.683558046 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.683129891 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.683696861 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.683868313 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.682896901 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.684143918 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.683943461 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.683310072 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.683393241 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.683936685 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.683543228 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.683362845 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.68259325 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.683654737 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.682817073 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.68349305 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.68348223 seconds)
  done (took 36.95877595 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.686036023 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.68359714 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.683498566 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.686488129 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.683975845 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.685745649 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.683647877 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.685930247 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.687143452 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.683505883 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.686959682 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68608054 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.683823208 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.684230648 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.686556566 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.686472696 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.68699578 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.68430983 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.686868998 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.684811606 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.687673767 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.684742868 seconds)
  done (took 38.687674006 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.694108694 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.687486891 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.686704998 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.68494323 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.687760807 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.685139802 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.687950689 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.68823701 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.687780349 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.68826376 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.686178923 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.688319185 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.692460431 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.691952354 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.690006184 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.688504322 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.832978929 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.688762765 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.687760551 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.68817384 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.684806061 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.694048458 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.686078506 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.684930167 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.686470134 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.68817027 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.688489925 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.688930248 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.688637472 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.68959578 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.690690355 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.689038394 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.68744779 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.689468791 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.689167682 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.688706249 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.69231422 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.688446214 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.686136527 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.688904228 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.696443495 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.7044787 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.689338416 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.694980051 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.689688328 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.689442836 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.691205396 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.695648788 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.687684484 seconds)
  done (took 84.53432071 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.689743765 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.689824315 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.686713018 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.690122969 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.689670004 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.689204116 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.690268514 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.69027903 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.686910156 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.686672688 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.690390697 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.687193264 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.687898173 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.691119921 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.690308894 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.68901806 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.687425657 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.688241401 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.687942164 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.687736232 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.688002612 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.691356445 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.691249582 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.688250315 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.690482371 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.688687874 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.688904592 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.690697184 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.687914469 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.689537305 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.690686611 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.691029226 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.692011287 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.688405178 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.687596188 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.690686375 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.691465753 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.688316638 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.690784139 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.688642858 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.690646849 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.690720358 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.69088075 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.691156623 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.687999359 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.688926479 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.688696406 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.688361826 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.689528604 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.69178394 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.692241188 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.688973089 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.690963584 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.68846618 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.69110763 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.69220314 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.689764863 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.689971778 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.691896296 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.690255238 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.689233969 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.691160481 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.689105432 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.692273233 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.692497462 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.689920174 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.693823719 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.691829995 seconds)
  done (took 116.51994247 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.692071571 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.692139921 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.692067302 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.693012741 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.692141515 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.692854683 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.692828326 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.69206608 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.692912521 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.693918772 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.692876661 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.69250944 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.692815479 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.692748043 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.69350907 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.693304153 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.693424019 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.69313476 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.692735131 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.693549837 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.69386109 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.693692284 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.694539118 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.693485311 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.693753171 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.694511394 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.693945207 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.693885182 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.693171261 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.693355011 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.693933426 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.692926931 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.693861296 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.693750661 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.693492318 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.694306393 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.693924833 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.693407629 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.693522004 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.694507744 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.694611155 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.694189373 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.694441859 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.69387708 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.69440063 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.694837665 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.694561451 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.694694033 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.694319066 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.694069887 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.694154008 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.695202323 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.693973702 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.69458712 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.695107208 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.69540391 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.69465404 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.695039651 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.698353068 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.6974595 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.694352023 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.695121083 seconds)
  done (took 106.637141923 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.694695708 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.69523749 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.692969032 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.692658513 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.69498983 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.692783378 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.695286404 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.695489045 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.696361288 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.695299609 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695884275 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.693909107 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694316566 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.694983584 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.693013491 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.694219101 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693326168 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.694620737 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.696086966 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.694117635 seconds)
  done (took 35.507811996 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.693840986 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.696765688 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.69452265 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.694502896 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.696119962 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.693484118 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.696557402 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.696148265 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.692757472 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695938334 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.696150276 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.696381676 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.693123812 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.694203731 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.696703334 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.69379737 seconds)
  done (took 28.740035159 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.694315049 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.696518791 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.69609057 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.696792672 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.694360505 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.69380914 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.696345403 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.694087132 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.694527803 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.697090631 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.696732171 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.696932333 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.69645764 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.696669863 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.69396573 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.697311415 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.695280089 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.69486466 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.697693458 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.69711797 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.694702488 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.693599156 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.697567671 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.696736423 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.69435854 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.69520378 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.694046687 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.694949605 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.695762446 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.697915191 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.695321684 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.695997812 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.69510235 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.696389776 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.698435703 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.696402992 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.698262245 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.697148571 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.699316364 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.698994427 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.698816504 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.69693606 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.698870609 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.698660822 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.696790246 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.698189429 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.695710739 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.695809295 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.696459285 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.695997097 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.698813242 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.698926278 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.698927753 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.699620311 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.69858293 seconds)
  done (took 94.931248448 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.698532439 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.698217364 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.696262897 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.698774668 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.699231178 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.696213222 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.699377114 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.697058263 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.696181981 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.698665528 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.697341729 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.698760488 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.696759151 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.699912264 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.697477667 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.700201939 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.696805819 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.697449566 seconds)
  done (took 32.18489266 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.697456495 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.697016958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.699188114 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.696180396 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.696916217 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.700143199 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.697525256 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.700054785 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700086181 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.698283109 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.698341625 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.700541975 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701398756 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.701295905 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.698004305 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698758066 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.700811897 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.701031091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.698626995 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.697702729 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.701580475 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.700676314 seconds)
  done (took 39.003618563 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.699335935 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.699306668 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.713967657 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.715977217 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.719811407 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.729119642 seconds)
  done (took 11.900048367 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698447743 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700848739 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.698480671 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701935906 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700925752 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69828492 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697963077 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698459332 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701082441 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699406847 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699029328 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701472505 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701524329 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699017387 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702181912 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701575968 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698671205 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698952659 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699077476 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702405629 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698857994 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702010555 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699840664 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700237821 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699884863 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699617559 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701226556 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699627573 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70025149 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702166663 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702489795 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699577884 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702805025 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70070723 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702188972 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701837714 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700202313 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703185499 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701926678 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70077533 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.702455583 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702681679 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703420152 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700922416 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703365803 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700768728 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700533049 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700872409 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7005006 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703351597 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703690209 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701839328 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703602601 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704326538 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703319894 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703557512 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701824926 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701020006 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703650318 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706095832 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700226932 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703420465 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701298894 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701196524 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703767627 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702108698 seconds)
  done (took 113.908159191 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701644286 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.701635775 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700737181 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701689473 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701176701 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701420613 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701405242 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701688315 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702268523 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702133066 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704773569 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70175164 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701543103 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702481241 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701859368 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702045271 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702528355 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701989493 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702371112 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705451633 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701364464 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702136456 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702145009 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702671797 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702966156 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704311045 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703184789 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702570062 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702031008 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702844986 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703890273 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702488819 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70320476 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.702975201 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703688094 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70340403 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.703203806 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.703232382 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70389661 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706216755 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703921421 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70612656 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703679169 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703335242 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703467446 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704305146 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70386442 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70386922 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703746538 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7046178 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704686466 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.704422979 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704507562 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705185555 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703476504 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704003509 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704299641 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704059672 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703735616 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706635397 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703902153 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704427132 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707060712 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704755341 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704119933 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704376552 seconds)
  done (took 114.047942699 seconds)
done (took 2332.29879454 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.690877065 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.753680891 seconds)
  done (took 15.072302289 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.866810612 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.818768645 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.704263619 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.717440889 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.705342657 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.702353096 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.700846497 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.706917197 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.706565773 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.705311705 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.70645756 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.891933629 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.761135674 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.705295906 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.70579342 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.798677523 seconds)
  done (took 49.53851468 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.708642667 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.711181148 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.720150316 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.711746021 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.709289817 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.721448866 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.741089596 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.71234689 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.742887832 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.720486992 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.776700791 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.718962739 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.70897783 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.758292535 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.721388885 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.724429401 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.802498287 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.782178451 seconds)
  done (took 32.823353772 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.78478864 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.716342569 seconds)
  done (took 10.137492573 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.731558987 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.739028145 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.795351443 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.720048941 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.728913524 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.715698817 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.722015686 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.71197161 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.72668577 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.742233261 seconds)
  done (took 68.967011469 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.714611826 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.709582824 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.710515171 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.708453171 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.704155772 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.705783254 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.7089703 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.703918941 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.360473718 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.745481119 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.715890971 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.713677991 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.70975369 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.711938311 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.707884837 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.734030841 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.81403943 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.707624155 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.707661694 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.714835007 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.71060832 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.765051061 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.721719581 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.710458086 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.739949524 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.360247407 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.7185055 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.717197465 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.834524056 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.709208988 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.711045188 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.710803637 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.712717511 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.103821561 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.991506757 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.709947138 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.723940866 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.719107553 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.708627543 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.825019482 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.710572813 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.718377188 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.43848343 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.973012017 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.807153892 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.749959645 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.024287462 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.723617662 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.711840289 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.736950126 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.713265535 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.712669213 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.724144376 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.19875134 seconds)
  done (took 123.493171677 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.707058628 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.056863248 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.87655998 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.70690199 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99260114 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.918123955 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.70937386 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.755866989 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.708386454 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941733069 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.962945561 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.813552858 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.709457583 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.707437875 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.708035959 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.704965898 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.862384041 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.77998303 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.71001687 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.705360739 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.737297614 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949355801 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.833005247 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.710951924 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.737156905 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.919823815 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.832609485 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.814098052 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.494496668 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.705803737 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.773625291 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.711986803 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.707517076 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.705809053 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.863605656 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.805306255 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.794161488 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.715433421 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.706739167 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.707534934 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.458201471 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.909894023 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.808066237 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.842452536 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.961952997 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.920326112 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.496002723 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.706765085 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.47839292 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.874489112 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.938417171 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.944360092 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.830848806 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.710748715 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.982963747 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.7071237 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.707854289 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.95987623 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.935386003 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.807669256 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.712314454 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.70894187 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.707714909 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000085871 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.710031494 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.806851146 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71279901 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.707981289 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.80792926 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.810886947 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.941496164 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.926056306 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.743629901 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.053591071 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.229893688 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.957933136 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.778060543 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.964241958 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.714640084 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.708785421 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.788286419 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.558097818 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.962847285 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.995732022 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.957391249 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.747964346 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.435311835 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.709516349 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.93778986 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.936225829 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.970464745 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.959965892 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.94391976 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.047460183 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.709488266 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.709518423 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.013676824 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.837119008 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.714274583 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.062733265 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942338748 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.236858651 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.739739085 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.015870896 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.84168092 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.713427797 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.344076317 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.70911975 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.941866157 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.752791547 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.710638068 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.709125761 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.931451895 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.710724985 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.711781782 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.602597769 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.774402129 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.711717995 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945512251 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.712533562 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982717805 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.715329633 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945867754 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.567357746 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.744231702 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.88582742 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.961949717 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.71352974 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.954444213 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.956721637 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.826833947 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.984679838 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.619732348 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.713594369 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998208078 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.713443237 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.710032983 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.882847352 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.713449778 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.856174943 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.712864003 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.006526268 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735568022 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.943565936 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71583843 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971658038 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.746871684 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.762215866 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.716965143 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.836435797 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.713206315 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.545306356 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.870822811 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.713770744 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.71380221 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.280118515 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.713920895 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.276327182 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.940541229 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.736813306 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.786250729 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.382399828 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.712483728 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.798758029 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.738514461 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.104338152 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.713811564 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.966365102 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.714614402 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.712262911 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.712874294 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.000817231 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.951435574 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.714233266 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.714212857 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.624898831 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.712794299 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.714482039 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.897489786 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.069358236 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.714437932 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.916793352 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.718852095 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.842710137 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.715539064 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.796097072 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.05357278 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.717273879 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.714082561 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.71393648 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.714488771 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.713593535 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.923917714 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.741668205 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.21063815 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.852935958 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989403598 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.029412078 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.956953868 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.760531527 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.714844823 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.97343714 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.71717249 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.779373416 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.716836529 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.736875836 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.94360845 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.718657717 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.980373452 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.987746597 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.727140332 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.764047176 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.717104009 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71394203 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.715073176 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.861385236 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.803571023 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.716868034 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.715480998 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.832438641 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.838334811 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924587483 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.717113075 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.748279129 seconds)
  done (took 869.052064054 seconds)
done (took 1170.712094718 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.715552259 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.716790292 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.702859784 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.718958812 seconds)
  done (took 28.49661232 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.722774831 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.719592589 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.72252022 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.720276844 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.722434894 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.720378223 seconds)
  done (took 11.970385036 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.766799492 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.71474301 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.719781947 seconds)
  done (took 20.844612346 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.790876979 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.101268443 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.824787021 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.173900136 seconds)
  done (took 9.533204691 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.723401989 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.722193551 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.722358142 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.72280575 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.724948447 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.725034446 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.72286019 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.724361599 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.725311922 seconds)
  done (took 17.15903501 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.852029313 seconds)
done (took 93.497392336 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.804446346 seconds)
    (2/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.885670914 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.838520994 seconds)
    (4/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.175449602 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.100811281 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.994056293 seconds)
    (7/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.730394177 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.787376199 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.943759862 seconds)
    (10/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.739359638 seconds)
    (11/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.892040139 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.034348708 seconds)
    (13/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.017734122 seconds)
    (14/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.757978769 seconds)
    (15/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.72719819 seconds)
    (16/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.710657084 seconds)
    (17/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.773106996 seconds)
    (18/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.913425465 seconds)
    (19/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.818024813 seconds)
    (20/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.757562242 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.019484345 seconds)
    (22/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.730913697 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.042195612 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.883035537 seconds)
    (25/309) benchmarking ("sort", Float64, false)...
    done (took 5.500560922 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.873537998 seconds)
    (27/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.552673913 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.892452332 seconds)
    (29/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.865810546 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.836230892 seconds)
    (31/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.897017723 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.816417568 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.852015803 seconds)
    (34/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.841379174 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.400635115 seconds)
    (36/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.246419693 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.21596099 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.849203002 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.724862588 seconds)
    (40/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.820968655 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.713622168 seconds)
    (42/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.855337627 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 1.948951343 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.715478572 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.386016559 seconds)
    (46/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.734637156 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.158709727 seconds)
    (48/309) benchmarking ("sort", Int64, false)...
    done (took 5.420312931 seconds)
    (49/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.854920992 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.996235241 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.011355958 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.912351733 seconds)
    (53/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.895546397 seconds)
    (54/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.752763374 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.834788121 seconds)
    (56/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.912240742 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.827432658 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.628036252 seconds)
    (59/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.922388139 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.829240262 seconds)
    (61/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.728891879 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 3.247540535 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.854892845 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.135947261 seconds)
    (65/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.773950022 seconds)
    (66/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.748812368 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.793068614 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.611799314 seconds)
    (69/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.86436782 seconds)
    (70/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.82030858 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.755482028 seconds)
    (72/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.182425816 seconds)
    (73/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.719525548 seconds)
    (74/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.197110584 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.042216615 seconds)
    (76/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.748731088 seconds)
    (77/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.889151436 seconds)
    (78/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.917594742 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.736556675 seconds)
    (80/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.747350749 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.867752888 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.977255224 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.525868994 seconds)
    (84/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.679624709 seconds)
    (85/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.757757673 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.065441271 seconds)
    (87/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.734596982 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.742407419 seconds)
    (89/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.125002219 seconds)
    (90/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.75833978 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.967308108 seconds)
    (92/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.853454659 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.90004088 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.800224554 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.598909859 seconds)
    (96/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.762905448 seconds)
    (97/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.865239415 seconds)
    (98/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.7967115 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.423761768 seconds)
    (100/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.737306579 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 3.25945583 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.697420983 seconds)
    (103/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.743237969 seconds)
    (104/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.757053862 seconds)
    (105/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.179238822 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.923947791 seconds)
    (107/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.741666262 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.873457074 seconds)
    (109/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.817557334 seconds)
    (110/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.722751403 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.955861885 seconds)
    (112/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.797452566 seconds)
    (113/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.760812475 seconds)
    (114/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.767037098 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.100929383 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.722937156 seconds)
    (117/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.913602364 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.862094486 seconds)
    (119/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.624106416 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.229975163 seconds)
    (121/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.82318998 seconds)
    (122/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.113100545 seconds)
    (123/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.777502341 seconds)
    (124/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.146467059 seconds)
    (125/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.085738837 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.720014693 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.081364233 seconds)
    (128/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.730612615 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.82104654 seconds)
    (130/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.047425567 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.993623013 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.731659441 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.86709564 seconds)
    (134/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.842121541 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.757776987 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.894982727 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.737413852 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.952668764 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.088626854 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.723255001 seconds)
    (141/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.112437638 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.822501492 seconds)
    (143/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.759554889 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.733346186 seconds)
    (145/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.756456256 seconds)
    (146/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.733517321 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.938700374 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.085708846 seconds)
    (149/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.029131941 seconds)
    (150/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.893413885 seconds)
    (151/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.013653497 seconds)
    (152/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.877282897 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.763315756 seconds)
    (154/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.731857836 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.134670061 seconds)
    (156/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.976165527 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.737257828 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.138408952 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.139353722 seconds)
    (160/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.307425766 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.050793665 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.810844729 seconds)
    (163/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.756918463 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.911883457 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.737830204 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.203435753 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.875807892 seconds)
    (168/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.007288902 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.735111566 seconds)
    (170/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.734141811 seconds)
    (171/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 3.003358884 seconds)
    (172/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.257566029 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.740975757 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.01897623 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.725468035 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.812597801 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.37551258 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.111762973 seconds)
    (179/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.821025159 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.087518627 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.363253325 seconds)
    (182/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.846435141 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.721680665 seconds)
    (184/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.006782708 seconds)
    (185/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.869099557 seconds)
    (186/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.172211563 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.740012588 seconds)
    (188/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.835424806 seconds)
    (189/309) benchmarking ("sort", Float32, false)...
    done (took 5.468183634 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.737069012 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.865368389 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.844234974 seconds)
    (193/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.79554454 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.801553297 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.732885742 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 3.077466102 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.876500705 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.722304295 seconds)
    (199/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.25295456 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.750652959 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.746742094 seconds)
    (202/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.075440796 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.224796283 seconds)
    (204/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.825623455 seconds)
    (205/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.974473438 seconds)
    (206/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.749044412 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.97127502 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.043943527 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.369855164 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.986581643 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.735500187 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.815519652 seconds)
    (213/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.223261404 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.719773621 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.779989164 seconds)
    (216/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.719683086 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.898306828 seconds)
    (218/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.80932828 seconds)
    (219/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.806923064 seconds)
    (220/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.752880762 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.959314103 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.473789025 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.081431109 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.741450107 seconds)
    (225/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.306949175 seconds)
    (226/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.991861901 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.033211706 seconds)
    (228/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.742468043 seconds)
    (229/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.832918698 seconds)
    (230/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.399663373 seconds)
    (231/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.840395644 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.735419703 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.966136534 seconds)
    (234/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.861956265 seconds)
    (235/309) benchmarking ("sort", BigInt, false)...
    done (took 6.742473133 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.740526477 seconds)
    (237/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.82305171 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.843212373 seconds)
    (239/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.129599168 seconds)
    (240/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.125609691 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.001541121 seconds)
    (242/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.972305719 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.370666195 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.738260358 seconds)
    (245/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.821997884 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.935407253 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.894580687 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.903315599 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.935058782 seconds)
    (250/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.606946144 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.078630065 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.092993579 seconds)
    (253/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.921608434 seconds)
    (254/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.808871594 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.060153431 seconds)
    (256/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.834225729 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.80675026 seconds)
    (258/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.9106994 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.227372101 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.741612455 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.945906106 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.966509266 seconds)
    (263/309) benchmarking ("sort", Int8, false)...
    done (took 4.612907983 seconds)
    (264/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.424596232 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.088100256 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.739159363 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.753457717 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.146128634 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.749017458 seconds)
    (270/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.210726183 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.764434714 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.146291972 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.854147821 seconds)
    (274/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.872964463 seconds)
    (275/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.740658359 seconds)
    (276/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.83760038 seconds)
    (277/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.847771923 seconds)
    (278/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.247070489 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.430060985 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.725857386 seconds)
    (281/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 3.062653699 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.748131898 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.149229565 seconds)
    (284/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.742387934 seconds)
    (285/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.829130644 seconds)
    (286/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.843206081 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.023434457 seconds)
    (288/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.978601086 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.884350725 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.527817257 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.680356299 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.948651393 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.607515504 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.725597434 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.152578605 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.153130007 seconds)
    (297/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.993059817 seconds)
    (298/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.838707134 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.775159899 seconds)
    (300/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.75548649 seconds)
    (301/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.820720587 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.835485669 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.843491222 seconds)
    (304/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.0303205 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.067304352 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.96868647 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.967440606 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.898853951 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.419233764 seconds)
  done (took 964.675401653 seconds)
done (took 966.624377756 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.771566275 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.77073574 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.7501271 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.770915578 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.86163489 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.776498008 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.760405905 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.751446928 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.797752979 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.798259432 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.747192312 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.775849187 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.751251886 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.749972347 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.749899954 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.765621814 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.06560283 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.782934288 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.767963844 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.760510806 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.767173864 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.748493613 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.800910035 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.777414876 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.754600212 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.752982789 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.754711637 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.770785951 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.862994422 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.754320828 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.754306682 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.760300014 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.065124083 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.780358603 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.746990851 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.771242076 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.762264572 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.76017955 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.754637747 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.782465584 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.149896279 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.791342513 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.752676001 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.752132579 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.752092552 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.755433727 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.753167445 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.75810315 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.764462459 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.766455903 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.143211971 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.808166358 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.755031956 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.752407633 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.762739497 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.752383622 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.754884231 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.767834957 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.773007318 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.766608857 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.049478647 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.788109508 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.754853987 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.769582404 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.760482006 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.176597915 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.787177758 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.756889455 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.15136835 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.797630217 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.1775196 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.80119472 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.754348517 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.767428493 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.786046668 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.068090087 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.777501792 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.754031392 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.761353634 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.751107026 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.762157828 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.767050862 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.757730226 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.754076351 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.769627017 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.789667369 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.764017764 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.754355482 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.76219787 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.772851928 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.761109726 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.76557827 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.756689217 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.750154822 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.762541293 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.757298265 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.75585584 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.756223413 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.759026084 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.764969343 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.148850166 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.81108628 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.752313255 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.751511449 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.753964154 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.768529135 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.15003029 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.795664395 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.77619331 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.801198993 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.756665472 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.049773898 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.788030106 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.77173019 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.764012118 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.757472159 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.750514526 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.051641289 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.17669095 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.809125968 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.756813763 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.752486717 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.771764502 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.756798914 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.752320381 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.071349473 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.787165919 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.769322136 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.877257398 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.769128129 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.787905127 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.752162846 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.759224498 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.788183605 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.77270405 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.787054819 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.758056807 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.771927986 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.772999931 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.752582461 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.768094457 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.767136567 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.757574478 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.760983829 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.751363676 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.786729219 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.770593272 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.768142488 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.777683613 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.877577433 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.754442283 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.052658158 seconds)
done (took 276.091557291 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.824409646 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.745573551 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.847874859 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.753175446 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.833724269 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.839807474 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.752684128 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.750862451 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.751535442 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.1400917 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.750939314 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.75147993 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.752704107 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.750965642 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.836986059 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.753795613 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.750831341 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.09980982 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.754307732 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.826152853 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.753213821 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.751509544 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.754567818 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.145328209 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.746034504 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.752791836 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.826394628 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.754498269 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.099500845 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.74973805 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.75283678 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.098135084 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.843858642 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.772703794 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.764804662 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.761372365 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.835782131 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.759317989 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.835616166 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.834817175 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.850181125 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.794990777 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.752879346 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.751721554 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.758027633 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.75823258 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.753105827 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.783166969 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.75659822 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.753419822 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.100504345 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.764747625 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.753711592 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.754152599 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.752959379 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.786305751 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.753044914 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.756783809 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.846033639 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.758373175 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.817425041 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.136836926 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.143726411 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.756614505 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.757109911 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.754347377 seconds)
  done (took 176.639051049 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.827763235 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.83864829 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.821479498 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.761584418 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.805897351 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.825273253 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.760264993 seconds)
  done (took 14.315967496 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.761934632 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.758219518 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.807057127 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.810574826 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.756276059 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.907202422 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.756229694 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.766308437 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.755309466 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.807857132 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.756903753 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.757986573 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.764193845 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.752940142 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.80632891 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.767728841 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.874043012 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.760407848 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.757643972 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.905861572 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.755023688 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.764808978 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.791127704 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.768279498 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.757583258 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.763183431 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.350972666 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.758649882 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.756805943 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.757653255 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755340032 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.797363996 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.758703641 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.76070932 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.7543954 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.871258745 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.760889061 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.75601143 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.75843654 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.755447773 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.758183752 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.758481161 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.758101136 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.756080698 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.758378107 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.781870575 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.758510569 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.757917629 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.759291179 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.760091453 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.792787149 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.759265993 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.75621245 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.755986753 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.812205207 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.766085264 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.761346858 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.756431743 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.760291691 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.756096759 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.908059722 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.808215918 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.760409108 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.808656593 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.760769758 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.759428085 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.758539798 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.761462688 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.855586248 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.764468582 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.808732387 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.756351741 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.915311553 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.783244789 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.760268231 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.760781638 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.760915342 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.759298716 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.761852906 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.766158655 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.757073568 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.761407148 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.764929432 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.757750524 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.758090386 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.872134125 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.864365895 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.758597456 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.772462884 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.766652933 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.757287445 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.794498003 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.759741198 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.758343593 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.817498221 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.876675397 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.813501038 seconds)
  done (took 194.894989979 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.76585165 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.76801502 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.761784867 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.776247446 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.760188899 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.760309834 seconds)
  done (took 12.271661346 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.763409836 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.762120636 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.759932494 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.761373111 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.761136347 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.761582671 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.761286587 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.761977529 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.76467366 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.760555235 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.762066226 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.761454761 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.762271282 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.760668976 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.761679079 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.761134983 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.762849956 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.758686843 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.760836859 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.761580639 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.90459592 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.76298564 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.760853968 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.761797154 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.766402765 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.761747144 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.768910589 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.762079417 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.762909861 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.769440808 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.766708077 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.762435152 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.763657763 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.767617482 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.766694592 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.762752157 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.76709563 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.764285905 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.76038567 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.764022106 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.763906728 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.762853841 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.763251321 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.767334328 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.764985325 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.768123642 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.77072277 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.770397422 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.763909505 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.765446928 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.764265797 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.763141708 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.763476035 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.764658668 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.765867479 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.769152455 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.768802637 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.765004897 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.763101164 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.764586493 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.765656133 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.764667559 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.765840813 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.769296241 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.771662211 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.765321193 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.765633209 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.767828758 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.764798974 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.764286306 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.765532492 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.761409082 seconds)
  done (took 129.846529108 seconds)
done (took 529.659584808 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.942662614 seconds)
  done (took 8.6251404 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.786119524 seconds)
  done (took 8.511658243 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.193664681 seconds)
  done (took 9.878306241 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.804329953 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.772646408 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.772699217 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.759724438 seconds)
  done (took 28.814933359 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.919127514 seconds)
  done (took 8.601697177 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.782025417 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.758063929 seconds)
  done (took 15.25851446 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.781369594 seconds)
  done (took 8.463467452 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.853969627 seconds)
  done (took 8.559897991 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.763094562 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.788954286 seconds)
  done (took 15.24943858 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.742893921 seconds)
  done (took 8.425163686 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.459721634 seconds)
  done (took 11.242658317 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.779370122 seconds)
  done (took 8.572112417 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.826758565 seconds)
  done (took 8.510946359 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.822278858 seconds)
  done (took 8.506260223 seconds)
done (took 158.902959515 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.762480347 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.764974077 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.76144674 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.75923049 seconds)
  done (took 28.732363802 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.798996091 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.799940128 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.801361071 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.81176864 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.804903344 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.800097867 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.792442277 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.792122529 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.810834463 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.802910326 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.802730146 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.801920587 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.799201514 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.792405594 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.802327844 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.801886212 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.810733801 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.819560353 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.792363413 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.803210389 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.767882589 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.810794654 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.803330695 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.76739248 seconds)
  done (took 44.876578682 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.960930122 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.836519909 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.92248166 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.818610463 seconds)
  done (took 9.223621734 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.81885405 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.821010266 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.831180318 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.871435521 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.90781183 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.830235098 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.794441029 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.789287497 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.776122197 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.821183141 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.895990859 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.81524762 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.906963189 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.767705261 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.973273341 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.767155066 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.76697445 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.81975823 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.870988819 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.885554664 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.768063524 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.819245216 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.824538688 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.815678367 seconds)
  done (took 45.645385486 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.767214728 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.77486029 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.773326936 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.768468545 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.769530168 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.767866744 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.773809251 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.769216784 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.789143395 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.769740197 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.766709726 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.767470486 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.767655184 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.768202529 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.768371189 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.779539935 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.781781805 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.767021097 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.771741338 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.773522952 seconds)
  done (took 37.122490613 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.762762572 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.615244218 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.114026834 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.020079203 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.763378506 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.764555075 seconds)
  done (took 30.727026137 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.781844079 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.774877307 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.767756768 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.825908127 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.908553054 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.775567155 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.768189918 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.780791452 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.815811057 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.833618426 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.789931019 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.797706202 seconds)
  done (took 23.30854286 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.765023027 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.765484854 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.767742616 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.782442209 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.779640893 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.775967498 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.775743815 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.763019879 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.78202951 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.787820337 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.775900483 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.780097436 seconds)
  done (took 42.992860633 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853351469 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.652644673 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.41013284 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.488229701 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.299586705 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974884134 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.282937431 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.943237115 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.768613006 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03819897 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.381649691 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013291155 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.01838257 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766210883 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.838923352 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.231589427 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066211084 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003296265 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799540351 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457221682 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888642256 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.29958026 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.543469614 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.896499006 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.97529127 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.898887413 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.026742296 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.715493065 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902873631 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806072435 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776315888 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.766322906 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039590554 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98345185 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853484369 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776470183 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.420509151 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.485122377 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.758641816 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.464389365 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.483251179 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.904811238 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774574789 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767852457 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.699744189 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307032961 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947566045 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.77139731 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.469912778 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.766798736 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.776606753 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853382041 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.7717418 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.581885808 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718617818 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.045742157 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.765156888 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772614064 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.322276211 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86011931 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425875634 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.703065243 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.860243107 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.531733796 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248760094 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.926087016 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.772208152 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.771226634 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702434209 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.539937048 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894348284 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.911868076 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.787224663 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417451734 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089453557 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.445020185 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854905629 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068942907 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456146053 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.809691416 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995894877 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.71928729 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702923661 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.626300162 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.701427381 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047502295 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810473804 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.439655547 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814805657 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944511446 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.780519055 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790147176 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776993047 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991855446 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.652417328 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769534278 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.325199995 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.058532182 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792313832 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938750662 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703820427 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.773033838 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02344109 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.981124602 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.918057372 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.341225285 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936803082 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.771985432 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.856031368 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.601483308 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.884534367 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.0527445 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838084943 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.873668238 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907044137 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.729508475 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080693639 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803680726 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.94139901 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.39037659 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039184198 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.10498346 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028995136 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856194222 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.773984002 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.773035052 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.533474308 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.4006163 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.995051909 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.772037953 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.163680537 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886042972 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.773678286 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706264365 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.426435362 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.390081616 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.885465954 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.993582903 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.617577698 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154081197 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.704988493 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917061537 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.761764182 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.994283912 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.425916944 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.857425639 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030531578 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.162938216 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.006355618 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890337375 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796991754 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854290664 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795685502 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.097734838 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.130876419 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.776347236 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.777787757 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.536867486 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.853042748 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778691374 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.778551963 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.569373495 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069701123 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.81240872 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.774620682 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.682958329 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.787989321 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857528436 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.777778763 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.783008021 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.301350638 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.523352143 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.784914936 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.413841542 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997929105 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7836855 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.539098117 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97174775 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.860354245 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.056855924 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.845503442 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.708274458 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.478047958 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.479989118 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.775387388 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.706931122 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.775239246 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781900357 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784803621 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.967441568 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.062498329 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829578118 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.531775114 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.893957817 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784161706 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.779051865 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.775773749 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.273386873 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.890685952 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352214205 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.890250062 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913205007 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.789540367 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.708086954 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.778632149 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780972911 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.776098191 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.731082268 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828818546 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.530051955 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11609294 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034714897 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.422060468 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792763422 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.508986307 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.910900949 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.796522975 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.35192093 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767809304 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.884631914 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844016707 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.785914793 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.541388826 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.56244648 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.329036757 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106288707 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108440622 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239039998 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.165175638 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.101585047 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.942759405 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010102792 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.305380824 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.837813788 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95836233 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722112519 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861739897 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.432385075 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14024177 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797501466 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004103404 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174345254 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.425302409 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944661467 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.987944533 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811396601 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.59137123 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.808118419 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.299889237 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932204775 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.393002384 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006005896 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947461162 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.363293169 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.892257491 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.778281672 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.261999804 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868598905 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.489951412 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.140113228 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.213265538 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.532471859 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159596894 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.779833735 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.223955332 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141065564 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.013955959 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.987383535 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71383361 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.789689354 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.790167453 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.782307662 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.758985869 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.63036134 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.030942066 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789214405 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013204454 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.950285143 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158761404 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.693454777 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.784984022 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781443008 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089348155 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477892964 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019192027 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.117543032 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.353039566 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790196228 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.71399306 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712674459 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.48384318 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.784754461 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.753818389 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017079159 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.891785607 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.733223166 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.170899714 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095030313 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.034474402 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.795607131 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.065796514 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064834763 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.515856243 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809583082 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.881063182 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.344005112 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.532367443 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.003437488 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.013651223 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.578885319 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.008890887 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.432530579 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.762889467 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.780591454 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994137513 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.010278222 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.398989671 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038047814 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.507524364 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.789816407 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15862719 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846713358 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.411851044 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.00127475 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.88309071 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.7916266 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862269959 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790878333 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.792715353 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.792785294 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826510641 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.414588116 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.923248462 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.796599643 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873651547 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884168953 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.366604626 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.792601046 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070005029 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157357834 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.127422879 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85145312 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.784573059 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784302005 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715591059 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920378921 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.22786025 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056212649 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.911639654 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.922676534 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808595991 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.343882574 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.06584766 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096545106 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.058222353 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.677660651 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784896215 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.869921098 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.008023609 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794753839 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.99332482 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024157691 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116409452 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257984057 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.933018223 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.053419013 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.058337256 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.152740871 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.784416493 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372273117 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.796954233 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.325956001 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.831709267 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.415825166 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076424144 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794177308 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006413785 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.807499054 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.986832819 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.236825065 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.543586522 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150541692 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.785309994 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.851462151 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071266856 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.200704334 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106200027 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864941643 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796358665 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.484320551 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925243066 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.645909001 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.009400179 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.78748393 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995454645 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.498765906 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.795723644 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07370232 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104658895 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.785192486 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.676298699 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813512652 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.795589274 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.006449345 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065761065 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041460023 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796421846 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.795629871 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.606151297 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073614736 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854081245 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.720415845 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.790696102 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883835649 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033995968 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808066841 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.303756195 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.489592785 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096662676 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.70878691 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808393011 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.1982868 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23970288 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134551243 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.315525098 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028775418 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.349956635 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.656379574 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161184734 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.791684365 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.210584047 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165320039 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.792095722 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.30809492 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899661344 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.070094997 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120448643 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.810075913 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.559127626 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.838214972 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009648958 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381062278 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732262489 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.789269049 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.84886127 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.789493146 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.7876586 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.799600713 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.713616597 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.668543986 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.628383136 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280820104 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.792932946 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.836488211 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.361247272 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358305316 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896512484 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946347789 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79730863 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.49905001 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.081343475 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.042727811 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.304389965 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.862893538 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.793150929 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790227894 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.71653041 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994495275 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.981495929 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100990605 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.153670123 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.899309069 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.792716963 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.004002439 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000451933 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.413948272 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952968232 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.179412865 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902195459 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.718113385 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.502746717 seconds)
  done (took 1634.154231083 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.824220308 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.810398915 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.84769339 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.822798064 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.864735785 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.884154302 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.883774035 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.877829681 seconds)
  done (took 56.528886393 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.790290598 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.018334875 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.799932294 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.791906357 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.856163478 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.79166272 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.961856954 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.802836141 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.811416527 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.800795135 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.793162671 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.817016859 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.070601155 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.81655037 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.792574809 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.315436716 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.813113135 seconds)
  done (took 73.620552121 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.793007966 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.200669618 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.826535705 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.813857601 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.847032124 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.797834461 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.961794187 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.795066391 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.799485454 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.974910632 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.137673244 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.81290368 seconds)
  done (took 89.485845738 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.811121284 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.799437705 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.800196313 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.800190625 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.799745532 seconds)
  done (took 10.734474016 seconds)
done (took 2128.849724562 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.032404345 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.978573964 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.015181251 seconds)
  done (took 5.711075345 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.938466252 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.987834077 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.10657805 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.112233692 seconds)
  done (took 9.864721771 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.079957701 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.161446551 seconds)
  done (took 5.956403844 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.120668538 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.827773763 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.213302341 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.793486715 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.797511206 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.79927217 seconds)
  done (took 22.110283075 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.796947983 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.79943874 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.796032876 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.799049576 seconds)
  done (took 8.90794366 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.779305384 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.49841778 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.777659028 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.797223722 seconds)
  done (took 20.568943665 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.947070199 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.912528253 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.939835514 seconds)
  done (took 7.51580876 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.273888935 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.713892835 seconds)
  done (took 8.704326861 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.958598529 seconds)
  done (took 3.675320419 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.824754757 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.06786037 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.287385862 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.325741661 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.389058938 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.627679731 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.133915666 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.026084887 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.240983108 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.268495587 seconds)
  done (took 23.908666243 seconds)
done (took 131.834707059 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.147284715 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.825953487 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.994557489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.168440236 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.035293885 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.994849312 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.01616843 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.16659043 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.848418666 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.832101803 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.166707431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.034451182 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.962832972 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.815893422 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.970936575 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.815058681 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.030184679 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.172180666 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.848361155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.067559574 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.022559537 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.80548435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.999423285 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.821825018 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.033372614 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.946327062 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.35117701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.821716768 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.987522245 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.363517538 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.951193253 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.208240417 seconds)
  done (took 165.945127978 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.795800987 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.797384167 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.796176959 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.795443218 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.367977223 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.797348833 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.795987836 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.796255125 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.210422384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.203976294 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.79717318 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.348261163 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.797420392 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.795437806 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.798108928 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.795517964 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.39258594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.798062332 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.797406653 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.796113264 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.795707227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.177970714 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.798661626 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.187787794 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.382563576 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.7977618 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.796484292 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.797631408 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.800865591 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.79729251 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.799367042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.797408238 seconds)
  done (took 207.122699115 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.795161782 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.79949565 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.798761211 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.798530129 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.798925922 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.800317997 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.800273581 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.798102273 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.553366403 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.550606672 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.79874192 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.799672514 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.801861133 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.797999909 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.798523219 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.797162593 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.79666781 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.798201994 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.799023968 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.798147382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.79936711 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.5377334 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.797847914 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.543841677 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.797484645 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.79582532 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.793472991 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.794934319 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.792921601 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.793283929 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.79629181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.79149669 seconds)
  done (took 218.23436203 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.051002125 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.795770758 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.797163617 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.715118022 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.795546983 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.795188688 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.801131795 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.045067809 seconds)
  done (took 18.515491869 seconds)
done (took 611.542899375 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.273618502 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.120665099 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.973371836 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.816864477 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.098132749 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.84981692 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.811218982 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.876586701 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.436863071 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.88241921 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.485872125 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.833116813 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.565786208 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.836185056 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.932645746 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.867401788 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.375036429 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.462673337 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.99176249 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.882283439 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.9828799 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.737869602 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.887112463 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.456685813 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.585455639 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.788475145 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.889806732 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.377010029 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.815197843 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.962774222 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.542995307 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.120021862 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.813287747 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.792934423 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.852279485 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.828819341 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.077386597 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.809702398 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.914775769 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.524142048 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.879538356 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.328470426 seconds)
  done (took 99.052051367 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.762235218 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.760700803 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.75985491 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.761096288 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.760597563 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.759875222 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.760272751 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.759717944 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.760975589 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.760612869 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.760415146 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.760961189 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.761177826 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.76064182 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.76109594 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.761546502 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.761294777 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.763188025 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.760647523 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.761060959 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.762194484 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.760618583 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.775541868 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.760307388 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.761115781 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.76152662 seconds)
  done (took 47.504762085 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.775531491 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.923774135 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.01275715 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.797077534 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.774665067 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.777764413 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.793013647 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.780609164 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.776031832 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.777721963 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.880932529 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.781871298 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.794862854 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.012573006 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.794055313 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.775921018 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.776017932 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.775270631 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.930374934 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.792843765 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.794940186 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.78207737 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.799894549 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.789428472 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.776132511 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.775286757 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.778622388 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.213833426 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.785530402 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.878923948 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.823480656 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.800490639 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.153504215 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.025203965 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.835022108 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.786802542 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.777237377 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.883706218 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.782679697 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.776553179 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.794357511 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.782579212 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.010929595 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.270378554 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.793316896 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.77700884 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.225262529 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.894331602 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.818827326 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.78861004 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.016106682 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.796680238 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.778413656 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.778160598 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.814098185 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.783257709 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.776006395 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.077765148 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.789664811 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.795341229 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.784137061 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.777768034 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.93440852 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.7870971 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.927092055 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.787565102 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.78365352 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.778055452 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.017990828 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.797671291 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.268509466 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.792465653 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.778950779 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.881408851 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.932847607 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.255286141 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.792357054 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.937276242 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.171606882 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.806164175 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.785528199 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.211932641 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.807046586 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.785923727 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.780833193 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.780788399 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.779118944 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.822384954 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.794797026 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.206974927 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.276399564 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.09431996 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.80732355 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.793149234 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.77880512 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.077341197 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.790017374 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.780239629 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.01019058 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.287020669 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.794837835 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.787139677 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.263895249 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.797949361 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.799613761 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.789088185 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.019518797 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.798699216 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.822642377 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.780769244 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.785949599 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.781872213 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.79854897 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.787674481 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.779259175 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.253794233 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.904509133 seconds)
  done (took 220.969721813 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.776990123 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.779800133 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.774404785 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.780398815 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.774192206 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.78031794 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.773759132 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.773938926 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.779298814 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.774618515 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.773301111 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.776254619 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.776602764 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.781374029 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.787032262 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.781610936 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.381606813 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.776457285 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.777613035 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.77757214 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.453443559 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.783859053 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.780768071 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.77553634 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.776638017 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.778308513 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.782036564 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.781310527 seconds)
  done (took 164.771246219 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.784531453 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.897943126 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.802518501 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.812285075 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.792354054 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.781628422 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.806326912 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.798457543 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.788131255 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.780402325 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.780364279 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.842526988 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.793502079 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.880537609 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.813588297 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.814762254 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.885493566 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.789511857 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.780829652 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.780764704 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.812232195 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.776038297 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.844217668 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.911238879 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.802902987 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.899528698 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.789863351 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.784693562 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.780871277 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.899554665 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.8003686 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.844131129 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.812122863 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.801134855 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.904287375 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.901193467 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.890062481 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.812846456 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.789400374 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.78287665 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.781987014 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.770015833 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.899345153 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.804315088 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.784454178 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.889237935 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.805076803 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.785223377 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.794119102 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.782933836 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.79724164 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.804925663 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.849614562 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.914850706 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.818469153 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.808511685 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.806112077 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.069437958 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.791737786 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.881564519 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.775129218 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.899720117 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.803780362 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.766657508 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.779874288 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.78480648 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.815270583 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.811720193 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.884963076 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.787029824 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.87971746 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.816473482 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.787243249 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.778510718 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.781827323 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.895345986 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.899356143 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.8160485 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.818415645 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.812145899 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.774949088 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.780085425 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.768073363 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.797429393 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.784148995 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.897411787 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.89996564 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.788914016 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.782500214 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.78216777 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.782962875 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.806923487 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.906697074 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.817636933 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.874427242 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.848201274 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.857105948 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.797208291 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.794341401 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.785232039 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.845667712 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.798391141 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.792942466 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.112835977 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.853857238 seconds)
  done (took 193.313718563 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.27678893 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.834307766 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.83723213 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.108758486 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.148321467 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.758479637 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.830398892 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.828760036 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.850467445 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.030726242 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.904502068 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.848510343 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.815058799 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.802536144 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.827783086 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.8509544 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.838718156 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.169300928 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.938926795 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.960533004 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.812557852 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.137478134 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.107982368 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.231798171 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.863817501 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.176885182 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.503378495 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.975870283 seconds)
  done (took 58.979952908 seconds)
done (took 786.302508628 seconds)
SAVING RESULT...
DONE!
