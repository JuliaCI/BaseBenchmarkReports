cset: moving following pidspec: 26488
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.240356809 seconds)
loading group "string"... done (took 0.632859001 seconds)
loading group "linalg"... done (took 8.052064422 seconds)
loading group "parallel"... done (took 0.166554989 seconds)
loading group "find"... done (took 1.207939286 seconds)
loading group "tuple"... done (took 1.839851232 seconds)
loading group "dates"... done (took 1.321539208 seconds)
loading group "micro"... done (took 0.215769594 seconds)
loading group "io"... done (took 0.982601523 seconds)
loading group "scalar"... done (took 39.336467211 seconds)
loading group "sparse"... done (took 12.243033275 seconds)
loading group "broadcast"... done (took 0.946318571 seconds)
loading group "union"... done (took 13.189523449 seconds)
loading group "simd"... done (took 4.879806541 seconds)
loading group "random"... done (took 9.305264145 seconds)
loading group "problem"... done (took 1.717373852 seconds)
loading group "array"... done (took 21.16871524 seconds)
loading group "misc"... done (took 1.714717238 seconds)
loading group "sort"... done (took 3.350955116 seconds)
loading group "collection"... done (took 18.032325844 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.549547501 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137103163 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.145873463 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133321054 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.162968591 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131625269 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.137973434 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098492751 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.907381049 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.164820018 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12789341 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.422121253 seconds)
done (took 5.547558755 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.189572783 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093959919 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094975311 seconds)
  done (took 1.284920508 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.081470693 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14292056 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08300901 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.083404381 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.083108516 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083390106 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082784778 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.082665612 seconds)
  done (took 1.73901901 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087859039 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.084244179 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081692335 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.083950249 seconds)
  done (took 1.435415302 seconds)
done (took 5.838889177 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.791395908 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.226963754 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20244368 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.423250349 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148022202 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.195393441 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672260073 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329459845 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.205574789 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.091857589 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.126851191 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.362776833 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.142389338 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.660288178 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093791798 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109671816 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.15623978 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.422183349 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086878778 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100556774 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.108640095 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.146932979 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101168285 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092212088 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.165735109 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.086098442 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.157719724 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.099637687 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084593974 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.2334435 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190561806 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.674869178 seconds)
  done (took 10.82493874 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114419899 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114037346 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.084379323 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141357131 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.114485815 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085661663 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091472055 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083758367 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.10727841 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144007706 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.107021775 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.120959316 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081943084 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082527812 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097225849 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.224008524 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.095936406 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.097213254 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084292871 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.098969577 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123221257 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093583404 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09521922 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095377521 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.145226768 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197172469 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114351341 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113385419 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.080407321 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096938177 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130287245 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1432401 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.081897276 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079194272 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141443899 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110284709 seconds)
  done (took 5.146472056 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.989910869 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.163247739 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105584943 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146922192 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080816219 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124831124 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.085212691 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096544031 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.221390169 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.442909308 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.641079221 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.150953845 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127752099 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119779242 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084737961 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084838926 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.106438672 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083058721 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.518381884 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.113532006 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121860954 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097181526 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08583829 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084988964 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.080490008 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087109164 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079629615 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084322781 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.127532725 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08952019 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.66975794 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.138163785 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084283933 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.956767203 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.182100873 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084227892 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117252373 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.177155998 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108058472 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.15442873 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08356751 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.21803593 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178538294 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081474482 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087882218 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083163946 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100933013 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121622403 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135543463 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08149419 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081880357 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184100762 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080633123 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100818956 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.151215547 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.171806274 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084447908 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.081045305 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.311707651 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.107368345 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088050311 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081280371 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.181510504 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081745531 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134504073 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084675781 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083757151 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084985603 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084367336 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.378483262 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082085521 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.089407569 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088808988 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.096069132 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088779268 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08768394 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080464134 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08994451 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090256711 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.106030044 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08523161 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08990664 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082567217 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082341566 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082820832 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.09492736 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.405882061 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082809228 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088832046 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080660783 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10691555 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112342167 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084773539 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081348749 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115515672 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085001092 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081736714 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083675856 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.095195452 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086067285 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.229005031 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086869 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.105390456 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117003876 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086082697 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115403886 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.0941494 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084015191 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.482790181 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081331662 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.088702792 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081835473 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08445758 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082812653 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097309454 seconds)
  done (took 24.117115838 seconds)
done (took 42.176197932 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.262231561 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081488975 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082029566 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082185679 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081570669 seconds)
  done (took 1.771766601 seconds)
done (took 2.937154018 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.140903675 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114626264 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080108468 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112738741 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080270638 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11897641 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115649988 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092105873 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115030686 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080261419 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112939786 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080146877 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080554896 seconds)
  done (took 2.503571035 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095916612 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09690069 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083071895 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095519087 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076728369 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095229851 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094831363 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10194587 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094567749 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086194612 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077029691 seconds)
  done (took 2.156194242 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095058962 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.096815531 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083765886 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094965184 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079685248 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095110816 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094997499 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098495748 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094823152 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089042525 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078636588 seconds)
  done (took 2.154512588 seconds)
done (took 7.965759249 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090084413 seconds)
  done (took 1.233226111 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.547015084 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.676145457 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.092771148 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115348012 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.205248478 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123244741 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.252250217 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.097565091 seconds)
  done (took 8.424204413 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.119735662 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083729168 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082131144 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085519325 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082641012 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086003788 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086025665 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085595987 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084552784 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08415752 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082467556 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084639141 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084010396 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082546286 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085346444 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083582194 seconds)
  done (took 2.608788987 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.110398676 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.108413671 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.086999647 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088425282 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085628517 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.085616837 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.08779058 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.086976584 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084140198 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.085597116 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088487415 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.087202968 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.084896103 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077596421 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.086951671 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.089504509 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084290983 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.087272734 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.08810488 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089035147 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.088119608 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.077163062 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.084797153 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.086814564 seconds)
  done (took 3.364932586 seconds)
done (took 16.785757817 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.12082646 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083163292 seconds)
  done (took 1.356276518 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093627174 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.093699703 seconds)
  done (took 1.347921609 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.093498754 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.078512106 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.099730822 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.089333849 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078811698 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07810688 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.098381031 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078762219 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078470829 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078680494 seconds)
  done (took 2.013273818 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080635228 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088282382 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.081879421 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.092432585 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.085755917 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.077128897 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083958643 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.080554054 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.088015121 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076385098 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.083990746 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.095733308 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083588758 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097328881 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.083994545 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081135819 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.083245141 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.079852635 seconds)
  done (took 2.687588764 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078605256 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079632376 seconds)
  done (took 1.327339331 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079310642 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076984996 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079230394 seconds)
    (4/7) benchmarking "year"...
    done (took 0.07982899 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076007921 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075678094 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076150573 seconds)
  done (took 1.708300856 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.414968832 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.131526641 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330693309 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085422725 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.09422891 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.27157075 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.080191721 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085230247 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.084910315 seconds)
  done (took 2.78686421 seconds)
done (took 14.396944598 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095949226 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.10017253 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.108636673 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.389645408 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105383635 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.080760416 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.129057616 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193073997 seconds)
done (took 2.378660675 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.2257205 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.683396535 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.412685409 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218244546 seconds)
  done (took 2.482829163 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348079712 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100538686 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07274938 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080618063 seconds)
  done (took 1.779157813 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082499345 seconds)
    (2/2) benchmarking "read"...
    done (took 0.083394462 seconds)
  done (took 1.341432899 seconds)
done (took 7.004879177 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080214234 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.102158522 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07970984 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080377875 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077509806 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07984653 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077583673 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.191580146 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080062174 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079588782 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.079668079 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079763922 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079522255 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077735646 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077057226 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077399255 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079690911 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077755406 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079345394 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077585672 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077626291 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07994273 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077305865 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077848334 seconds)
  done (took 3.236039925 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.095677171 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.079722663 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083604821 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.083872942 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081841386 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084163405 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083463961 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079639816 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.083599332 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081813921 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081770862 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081347436 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08162119 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.081590399 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081910258 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081380228 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.083937117 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080035976 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081859379 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.081712086 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.083703761 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080264816 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.081578341 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083951909 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.081434904 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081558293 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081448531 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079865913 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08389196 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.081592759 seconds)
  done (took 3.657020091 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083821847 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076656933 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.076945144 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.085517466 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076661903 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077152732 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07619496 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076984292 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077078181 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077077699 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077180156 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076260836 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076499553 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.0771256 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077428057 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.080246127 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.0937145 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076769402 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076711379 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076995767 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082817723 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076345245 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076191882 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076398789 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076295602 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.075947627 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.076447663 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076385188 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077525895 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076781127 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080585774 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080967751 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.07669191 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084943751 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081073637 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076687768 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081711946 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076359115 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077604838 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076281235 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076509267 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076997448 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076388669 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085391783 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.076713881 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077986954 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076463531 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.077641334 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077159741 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.078503672 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076157544 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076351233 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078556465 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.077491095 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081773456 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076323123 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077455037 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075850841 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077817662 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07665712 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.07657048 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07603823 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.079680583 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077365662 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.093974945 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085115082 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.076671534 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078166274 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077322995 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080145148 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078429563 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092169928 seconds)
  done (took 6.848400031 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.10056049 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099713415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078821173 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.079496624 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07510104 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077409336 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082590644 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077552365 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079866272 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096471502 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077503133 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079334085 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079883896 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081499423 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077963882 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079468074 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085863002 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075287001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07735106 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081060682 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077540908 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082905895 seconds)
  done (took 3.003108652 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161012962 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083195958 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.117664559 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087911795 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083230978 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087438494 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083705668 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082912574 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083117021 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080830845 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080979272 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083274579 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083098943 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080906659 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081437663 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081209609 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083266438 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081095221 seconds)
  done (took 2.796480571 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090091491 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.079803469 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101292603 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.079254457 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079944817 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081741679 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083611117 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.086736117 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082079724 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.079653416 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087576594 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081957983 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.081655727 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079778089 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081777758 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0797089 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.081905469 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07959152 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086904652 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083695462 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083322434 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095599625 seconds)
  done (took 3.039057708 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093297034 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.081271057 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094481181 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.081309414 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074470578 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.076756369 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083276863 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080229281 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083230714 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081345004 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079612928 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077456674 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.081672515 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079269368 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.081956241 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079308681 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081157057 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079086908 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081475787 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074769858 seconds)
  done (took 2.819015615 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097002566 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080680875 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080424661 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086692734 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080122733 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081199783 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086804162 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080993105 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080361384 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101484201 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080778138 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080768544 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08744971 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087428593 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080855428 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086913868 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086971823 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087103586 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080823523 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081330958 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101479528 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081010325 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086982993 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080558262 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080971387 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080872278 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080784878 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08446892 seconds)
  done (took 3.567251931 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080932553 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079426584 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077710034 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.07847095 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077818792 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077807385 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077893371 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078841386 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08056355 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077732922 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079948859 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.080534297 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080497598 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.080051059 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079897325 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.080208354 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080221377 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077618258 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078047751 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078641791 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080236336 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080039353 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080055844 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078536626 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077992133 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.080013875 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078025107 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078510857 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080229741 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078214945 seconds)
  done (took 3.573294605 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088082007 seconds)
    (2/2) benchmarking "in"...
    done (took 0.085720233 seconds)
  done (took 1.373195997 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07625525 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094292453 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076646631 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085350841 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083041882 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.080809499 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.086736822 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083040778 seconds)
  done (took 1.860511201 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099281517 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.089179101 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.080533076 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.088845311 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08864024 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098228959 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142398136 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.079364921 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089610072 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081117415 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095985993 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081502753 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089677536 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084098155 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08987027 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09313394 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077194933 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.084175941 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.081434146 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.07794699 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080217734 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092540584 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088890191 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.075153605 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08449952 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106357262 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095134719 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.078925433 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086343021 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091698453 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089045247 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.073762757 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.079634227 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.079147967 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077257441 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.087930789 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097505895 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08567191 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091801673 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.079991405 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087425477 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.074627912 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088094595 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090011157 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094976457 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.079854224 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.079412019 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.074467517 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080478652 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085598467 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.075182977 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084231819 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.074065509 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092200423 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087092086 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094434883 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.07814674 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085586908 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086401743 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086551343 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090503593 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085654803 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089279461 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.078562798 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094263072 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089142979 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091513788 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074766794 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.073851348 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.07732633 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093072556 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107643971 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088628095 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.079306963 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079703432 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077230482 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086429346 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07941488 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088813294 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090912363 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.078893461 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083702639 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091337899 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083811757 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085500471 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.08489215 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.077658534 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081627722 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079935364 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098888168 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080810614 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.07730576 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08008118 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094418431 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085717135 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.078531939 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080744054 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090794108 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074275615 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.079619824 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.079803926 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084559131 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091924654 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082242929 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082550781 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091307199 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.085547651 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083501897 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084987449 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.075741155 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078854383 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.080658869 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088981555 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.072673576 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084911616 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081934271 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.07793091 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089068048 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.076239036 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.077466422 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090009038 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088770788 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.075861377 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.074753147 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084435384 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.077871963 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.079801711 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090571759 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.075929698 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.073225317 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.073107067 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085224214 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.077667117 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085118571 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.080739014 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084418415 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072673388 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.075723458 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.080835784 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.089623494 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080840915 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.0834258 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.087473775 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083732967 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.076858552 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089613645 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085079561 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080577479 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08755155 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081911501 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.073563144 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079979685 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085031877 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.077658298 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085027981 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.079803311 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084606647 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.077734582 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.076414868 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.082888032 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077988275 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.079839758 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082654979 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.076692901 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092287017 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084133372 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.073034508 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.075387306 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.083424832 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079086123 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.077710938 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.079674063 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.083873778 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.077791139 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.076165646 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.077417671 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084105264 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084199416 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080545909 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078713634 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086541582 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094320333 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.076864815 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084490667 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.077774984 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078089956 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.077541825 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090681263 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087136147 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080480304 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084006014 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.0748723 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085840458 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08854949 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.078476066 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.074651139 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.079482381 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07936871 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.087610632 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.079403795 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.076393208 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074882685 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081962975 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078281201 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.083217228 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.076492374 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.078817626 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.080660975 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.074904181 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.081007071 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077186929 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090222791 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083969832 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.071900159 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078612713 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.076530572 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.086835173 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.072707793 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078394533 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079217573 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.077296878 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.075897531 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0834649 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.072220463 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089120462 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088442817 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082723067 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.079557152 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.076567405 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088378877 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.082560349 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084899963 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084558757 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.086084081 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090551592 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079123528 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086408691 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.090779773 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.077087573 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.071524477 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.085784174 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.075198239 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.075186129 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.076190872 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.075235676 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.324273993 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092914503 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09510063 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077077317 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089420468 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080607584 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085443788 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078858224 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092131323 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090572401 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087105961 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096315132 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083255987 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083175372 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090801385 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081911139 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082549606 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083396569 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089126014 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.081784848 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088133777 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084110295 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087523288 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083593383 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079615921 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087395518 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.081502948 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087081914 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091107006 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081168447 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088249301 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088556326 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.081829305 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087490469 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084925708 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083822493 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089000891 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087872671 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086108088 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088068624 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.07715118 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092644712 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.080002901 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094026434 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085769475 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.077474277 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.086043541 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08695295 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.084642902 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.080733704 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.080554571 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085877392 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.079557899 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086767189 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092541548 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081764015 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095535097 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091011586 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085884894 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086856861 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085819222 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085733274 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082447913 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084322269 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.080814531 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086061037 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.079589053 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088550889 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087280799 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085177824 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086511854 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.080750866 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085545322 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.081120948 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.075125602 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082047014 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08255216 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.079701929 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092576922 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.079888673 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082840413 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.078648919 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.080820876 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.079797312 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.077069976 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.086555647 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08709499 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.080265344 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08996553 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082203803 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085824145 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094929709 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.074769973 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.078435283 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077830588 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080991043 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092509865 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.080570637 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.0928849 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085050763 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08171127 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.077734859 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.079371452 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.078189718 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074287041 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.077679032 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08750549 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082130214 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07899032 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.079200465 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085990913 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.079750948 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091619328 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.0783333 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08311082 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.079526825 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.076864166 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081804841 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081129947 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085996843 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.079473463 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080162061 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.076292681 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.07870384 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082789724 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085357239 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.078462801 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.223744349 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092897951 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079812056 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086515042 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081566063 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075321379 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086725829 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.079804571 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.079480585 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081674405 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090033476 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086921021 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079968217 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093879154 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.080625894 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087610434 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080913817 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.078076343 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.080061469 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.079715768 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.079514673 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082068382 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.080795939 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093115801 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078666776 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08558197 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084494182 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083441512 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089935344 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.080607183 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086186366 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084986664 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.081466219 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08591547 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092648369 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.083389699 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087024578 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079893128 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085687402 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089177943 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081581411 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091368429 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08558818 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08031468 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085474406 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081114377 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.079518029 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.079570024 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.078771487 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.08965249 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.079759925 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081740579 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081719744 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.07770109 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083527072 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082679284 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092601895 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086216098 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086806801 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.075763476 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.077152678 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080597571 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080562335 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085044731 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086873335 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088936214 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085876264 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082917117 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.078542604 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093198433 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089679762 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087604528 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08069888 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087482405 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.080191815 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086861057 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083732535 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084923611 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080452204 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087245807 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085411281 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081550874 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089523148 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08771073 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.080202346 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085247743 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085425128 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084738261 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.074737879 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.079467954 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085687864 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088149282 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086188513 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079279176 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094396835 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08019643 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084098194 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082322589 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078455084 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087635461 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.07469221 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085252765 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.079925175 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080034423 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.075017405 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081935328 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080290447 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085657411 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081612301 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.074575679 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094139778 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093379021 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084780354 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.078267352 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077744111 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.074579529 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.075082187 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081679434 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.079581522 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084810484 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092971533 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081240396 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08117402 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.074343598 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078758661 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086665634 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.086923274 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.215892231 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.075414119 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082509137 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085646422 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090620244 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079255522 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.079051581 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08694788 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086439823 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.077277871 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081874162 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077213565 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088004793 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096715279 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.081098598 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086652463 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089656525 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092665053 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.079914422 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.075453641 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.079915646 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08575833 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086024959 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.080757387 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.081123115 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099423364 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087040027 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08188835 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.079104113 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089297749 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082650483 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093156946 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.080701056 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.080445713 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088560801 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.0858119 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086693787 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09005964 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090379984 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08523498 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085358173 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.078913557 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084489427 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.078189244 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082058756 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.080321843 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.079835893 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083543435 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.085556411 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081794642 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094697524 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093495097 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.083975063 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.077086336 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08183983 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082204905 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.075190322 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.080773132 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.07798315 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.078189793 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.078789861 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.078542552 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085655434 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088788907 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.083635416 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.07978542 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.079713223 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.074570829 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088826222 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086168884 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085821384 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.077156003 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.079606149 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.079476222 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087441218 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082362504 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.078875891 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086005969 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085575816 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085645648 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.074878689 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090533226 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.078890824 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085908419 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082034562 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07972787 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.080205301 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086842667 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083388949 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080890104 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086566705 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.086078044 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081003177 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077404421 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.076744523 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088908921 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.077652381 seconds)
  done (took 51.442886606 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115269209 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077134433 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075871983 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076088685 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08540731 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076901389 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075664179 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07694025 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076933601 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079201688 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076451524 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07658736 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084101625 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090715294 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086074358 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080199915 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075906514 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076823652 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075475 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076766399 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083564781 seconds)
  done (took 3.041044379 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.086244569 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.09047096 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087156062 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095315129 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084758311 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083326142 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.088180504 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08347131 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091822948 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086328657 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091181342 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083580069 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.08592504 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.086097745 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086401548 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083537563 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091545178 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084566297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.08321831 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08779503 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083627797 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088340451 seconds)
  done (took 3.21659482 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.080508643 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.079582978 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086439556 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.075270557 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.078806299 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.07504427 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.081812629 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.077758985 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.082052254 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.08145051 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082504226 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.08116039 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085775126 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.075204235 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.082765006 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.07749892 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.120883624 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.082108663 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.079586648 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08042823 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.075093416 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086616432 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.075095379 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.075417186 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.081620722 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.082396358 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.079780138 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.07740853 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.079114546 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08177447 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.079353154 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.07739333 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08666673 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.085814492 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081612708 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.08296211 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084096405 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.080365926 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07640553 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.077974094 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085493115 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.075270066 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.079478295 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.08612918 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.078062047 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.077498938 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086090306 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.079988342 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.074876544 seconds)
  done (took 5.283634938 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.090363127 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.126235698 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.082173471 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106597024 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.092295717 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.085592802 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.084111028 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108198827 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.077281498 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.077484738 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.093706931 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.090982684 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.07878489 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.082690519 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.08559693 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.078572895 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.079660493 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077926521 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.081775399 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078843427 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.081889859 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.085456135 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.092611006 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.090272416 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.082646269 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.078112305 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.078242262 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.083007055 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.089680937 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.082747831 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.083193877 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.083478887 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.092920205 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.083607688 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078332728 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.081050552 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.093867407 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.079301758 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.081323696 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.076619553 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.081420964 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.082506633 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.085763783 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.093881248 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078799999 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.083628269 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.078681947 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076490625 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.0904374 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.081422613 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.086067984 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.091768891 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.082779334 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.079249789 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.082993195 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.09303045 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.078848299 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.077196536 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.081508308 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.089653413 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.076802143 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.082269968 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.090581586 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.080600695 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.084924779 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09115233 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.08379368 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.082594008 seconds)
  done (took 7.2312489 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088973537 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110565443 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09619969 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095481085 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089264694 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089526691 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08972907 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089683137 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089390455 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093429868 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08968292 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.129157716 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08531975 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.091895781 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.090014649 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090126452 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.089350004 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089889166 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090117149 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089857803 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.089037377 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095533612 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089348363 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09538315 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092590792 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085000685 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089370434 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089127251 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095687001 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08984505 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092278752 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.089179918 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089809345 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.096133824 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.092723926 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.08902986 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.079387839 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089255706 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.089380274 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.088845756 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085448259 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095602 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089085312 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085065119 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089881086 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088798187 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095558503 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.092431392 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.091463112 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108814428 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.088607903 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095148473 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088498229 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088633706 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095549148 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.097552933 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095305042 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095170826 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089431366 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095206445 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095491774 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.097660455 seconds)
  done (took 7.053609652 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093655056 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086347484 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097643495 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.075376688 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077507088 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085621079 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077914512 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.078204476 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08660422 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.086374236 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088387581 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085244221 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087826951 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088385292 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085660305 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087783166 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085376469 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08582228 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08644816 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085603141 seconds)
  done (took 3.06548126 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.089148485 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.095966203 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080925623 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084767428 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.083288751 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.084951646 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08243138 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083379292 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081838682 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083041896 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08903141 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089032233 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080718696 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08533482 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088676219 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.085639252 seconds)
  done (took 2.705575174 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095845064 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.086181834 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.092348288 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.07907037 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.080373328 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.075675624 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.078666656 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.075023937 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075753421 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.091421338 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.078666013 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090113931 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.07837594 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.078242074 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.075994169 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.085856448 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.07645999 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.076480016 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.078632049 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.09038796 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.082493638 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.077777825 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.082717385 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.079193996 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.081492745 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.083417863 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.077687867 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080380587 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.076201643 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.079172162 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.082338972 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.083056233 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.076905686 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.076936428 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.078387569 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.076412086 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.079197294 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.098123169 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.084646525 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.078748057 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.078173717 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.081552117 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.079750719 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.079881772 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075838646 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.079043376 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.076055195 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.081960067 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.07661086 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.081806419 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.079159339 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.081588101 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.079978115 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.086097954 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.082121409 seconds)
  done (took 5.792215862 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093505916 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.083584993 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075214045 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077397883 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082872681 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.081499803 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082604223 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.080576138 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081477265 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077784173 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081363577 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082810192 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081777014 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083147529 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081261566 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083162892 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074825657 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081237595 seconds)
  done (took 2.817976013 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08598764 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079694974 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.086888502 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080049102 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.07981093 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081859441 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075664935 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078059541 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077618963 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.080319753 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079958006 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082124025 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077648061 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.082351897 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080443493 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079835423 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082117208 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077646954 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079499121 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075403299 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081611135 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078282342 seconds)
  done (took 3.105663859 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.10846243 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.098853694 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.152415701 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.09461065 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.101232592 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.087256048 seconds)
  done (took 1.986789173 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10493545 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112868083 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079771151 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08275904 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088027393 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08318533 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083579092 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08382602 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090482908 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088042503 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086444181 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090991459 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090480137 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09021307 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088754131 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08892368 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083919837 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083656106 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080275541 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094911387 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083699617 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091300708 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083778183 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083642168 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083730084 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090131735 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09125678 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088441494 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083386735 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090824783 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088810182 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083764048 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091043752 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088591553 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083062431 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090433881 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083713643 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095457398 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088953298 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090152641 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082375455 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088686441 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090542458 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087455096 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090766896 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083834092 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087728401 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083724167 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083939757 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096564399 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088589809 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089765217 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089021442 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090990563 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090361142 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097015144 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088859168 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089944489 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089000992 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088770625 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090333065 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088986434 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090205453 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08848863 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088832886 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090296725 seconds)
  done (took 7.192026136 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118298733 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080501698 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083766897 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088219916 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089847839 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083959555 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083751793 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084111931 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084258211 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081162231 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121196595 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084390891 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090411036 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090596753 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085156519 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084205469 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084087387 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090249633 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08085821 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097568036 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083890013 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089922317 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090112284 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089999256 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088590375 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088600379 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083450488 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08392382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083318804 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083943589 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087355415 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083895127 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089879165 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.080959881 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089912724 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083580847 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083271304 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087679698 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0835379 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088306174 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089845108 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09570069 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083418345 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083606906 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088136611 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084203721 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083854357 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08081011 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083557726 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080825955 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088084191 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088495902 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088327173 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090302218 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083642761 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084126454 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08430276 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084099339 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084117398 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088214968 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090218476 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083651558 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096907824 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08422035 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083685376 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091917774 seconds)
  done (took 7.128211035 seconds)
done (took 148.012490502 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207393039 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183462058 seconds)
  done (took 1.726263045 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.090762512 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.116991031 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098037349 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.15026397 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087568289 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120992801 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120505555 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098661275 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087541946 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087350632 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086934754 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089984191 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153357636 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086891834 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087229285 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.089734459 seconds)
  done (took 3.006505418 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.120172377 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.180389112 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124554762 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.0848501 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.1202256 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.092829007 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087656048 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097626028 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092078929 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087074866 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.093314711 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090844232 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.087134751 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09115373 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.091482602 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092663545 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.087023971 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.093488644 seconds)
  done (took 3.169681041 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119534785 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.110229768 seconds)
  done (took 1.585953689 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.178040527 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.15191285 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.220485985 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.360271391 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168183308 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.158848273 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.158687369 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.15597204 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.131707495 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.151194859 seconds)
  done (took 3.187928863 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11950614 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169068281 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307308097 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.135569806 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091528531 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.10974175 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.13761626 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.097306134 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.099384501 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.098992627 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.098812224 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.093500012 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118294612 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092066171 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.089194134 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.093473659 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121628085 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.088143824 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.088618461 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09525347 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122016145 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085833717 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092194277 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.087781135 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.096702809 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.096685706 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087013086 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085597894 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.093951247 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088683373 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.095070832 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108468783 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096540384 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.121352719 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.090421913 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.123350686 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.094467049 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092310656 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.089032474 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09208484 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.095879045 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09632985 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.094121876 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093668618 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087506618 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.09442721 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087047518 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085986426 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.095958254 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.087181982 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095717697 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.094814217 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.121238138 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.087019793 seconds)
  done (took 6.97903521 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.124006712 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.122704672 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086639406 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.128025926 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119567346 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085943175 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.121083587 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114512353 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.12350741 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.086606742 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.084492833 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.086391738 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.095317575 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.097134575 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.131202886 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.123223146 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088774712 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.085636067 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123582731 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.123215343 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.085301784 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116998909 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113504144 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.122681491 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.084410606 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086398371 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.08488556 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.08608242 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.091410532 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093078449 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.084615954 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.094810713 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.098297222 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.092442463 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.083492699 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084386939 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08435143 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.093501999 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094328232 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.093231203 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.092098205 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084209977 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084999824 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.085578516 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085004596 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083614251 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.092559657 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.094150912 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.093054661 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084855222 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.086063807 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.084556105 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.085920641 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093981226 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09170347 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.094602124 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.094188079 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085132827 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085081988 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087347317 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094885676 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093925686 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093381032 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.08783663 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.093989536 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084568339 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.09501236 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.09820592 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084698636 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.08609942 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.08426579 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.084437019 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085573671 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.092144361 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.091912226 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085986947 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.084575506 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084378819 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.093762113 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092289212 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084303745 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.091831619 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.083835551 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0845365 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.085704364 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.085933174 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.091642246 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.093676237 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.086280323 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.084551298 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.084404293 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.084330983 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.083296343 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.09157535 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.093542563 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.093176186 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.092521135 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.085359463 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.092750486 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.091836331 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.08496923 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.092300078 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.08384925 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085193081 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084954389 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.091922578 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.09061793 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.093251966 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083861775 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.219198477 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.09404083 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095679296 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.085562334 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.09247179 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.095048163 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.092497192 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.084254142 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096344597 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085460628 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.093892768 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085231388 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.095258938 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08475493 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09263746 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.084769276 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.084838983 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.084879457 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.092987425 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085727903 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084945826 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085383899 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085209074 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.093031919 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.096317723 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.086885937 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.092850705 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.092487259 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.086620978 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.092610267 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084568891 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.094248874 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084418229 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.086005488 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084334513 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095329141 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.086128979 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.084225102 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.084761071 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.094402377 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085156088 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094573336 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091892029 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084511098 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.096521072 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094944738 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.091745403 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.094858459 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085961214 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.08558234 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.08477227 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.08461569 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.092107031 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.093807583 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08627808 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.084404927 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091531275 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.094245717 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.083594417 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.091752128 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.09213999 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.092750505 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.084626777 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.084568984 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095022268 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.094462401 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.092104138 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.092439459 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.092510717 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084542337 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092208058 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.092184822 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084603595 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098235917 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085082236 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.096456711 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.092752786 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.090942627 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.092670951 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.09403218 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.094136311 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.09411678 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.096380212 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083667524 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.084860742 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.093144888 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084460342 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.08442442 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.091739711 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.085672689 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.086103417 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.096234868 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084807592 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.093885477 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.0834663 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.093115238 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.083412829 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085379459 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097427928 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084297335 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.087809432 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092667508 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.084616765 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.091486116 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.09353786 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.091662734 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.083861237 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084924127 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.092833799 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.092381337 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.083755155 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.221142591 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087648339 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.092654937 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.091793003 seconds)
  done (took 22.093613322 seconds)
done (took 43.121368739 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213930593 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.165310104 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.174703803 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.128661068 seconds)
  done (took 2.139775914 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122103362 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.112536167 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.101606443 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.080952921 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108302366 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.081479706 seconds)
  done (took 1.998794118 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286384343 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203385247 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18743106 seconds)
  done (took 2.065146276 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.221776967 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.20392551 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.470868314 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.294705273 seconds)
  done (took 2.67512409 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.152781843 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097439595 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.080125005 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.097132103 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13807459 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165274752 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.108385601 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.132517663 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.092547866 seconds)
  done (took 2.508766982 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.157030146 seconds)
done (took 12.934344087 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.123076211 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.085282412 seconds)
    (3/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.093279043 seconds)
    (4/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.225910196 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.081837428 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.144555552 seconds)
    (7/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.181721971 seconds)
    (8/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.23958455 seconds)
    (9/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.20585735 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.193468742 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.140298515 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.088956743 seconds)
    (13/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.095388641 seconds)
    (14/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.089865357 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.25745567 seconds)
    (16/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.203964368 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.164810706 seconds)
    (18/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.094790199 seconds)
    (19/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.244399875 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.087563983 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.088559092 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.195311294 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.087846544 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.313845384 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065967651 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.112792681 seconds)
    (27/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.127961588 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.065879337 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.1181171 seconds)
    (30/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081970163 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.104178301 seconds)
    (32/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.121017525 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088153419 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.107448375 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10337245 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.102710793 seconds)
    (37/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.09880188 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.081611349 seconds)
    (39/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.190749419 seconds)
    (40/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.097601455 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.087890213 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.214833918 seconds)
    (43/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.089829993 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.087395307 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.213546137 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06462592 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.10282041 seconds)
    (48/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.179347888 seconds)
    (49/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.248373727 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078271548 seconds)
    (51/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.20140913 seconds)
    (52/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.21947122 seconds)
    (53/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088357403 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.146440825 seconds)
    (55/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.082424996 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.160136004 seconds)
    (57/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.102985014 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.082278696 seconds)
    (59/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088134513 seconds)
    (60/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.094260352 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 0.082928524 seconds)
    (62/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.190906058 seconds)
    (63/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.075861347 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.078425507 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.103065903 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085464381 seconds)
    (67/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.097743021 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169904879 seconds)
    (69/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.174895326 seconds)
    (70/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.222383199 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080626377 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080554353 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.086955944 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.125495952 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.189762704 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.182907471 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.077552987 seconds)
    (78/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.092767772 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111737559 seconds)
    (80/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.131518233 seconds)
    (81/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.216001863 seconds)
    (82/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.176989634 seconds)
    (83/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171568872 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.10621346 seconds)
    (85/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.075607499 seconds)
    (86/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08896671 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063643143 seconds)
    (88/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.10554254 seconds)
    (89/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064268789 seconds)
    (90/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.162739345 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.231847344 seconds)
    (92/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.095651603 seconds)
    (93/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.170037838 seconds)
    (94/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.090948525 seconds)
    (95/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.077969605 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.193813401 seconds)
    (97/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.132276 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.107555927 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.104945124 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.107533649 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.155917649 seconds)
    (102/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.064914114 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.103447309 seconds)
    (104/309) benchmarking ("sort", Float32, false)...
    done (took 0.147806937 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.124077684 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144850554 seconds)
    (107/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.186539832 seconds)
    (108/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.119519183 seconds)
    (109/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.195597547 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.188021176 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.090390206 seconds)
    (112/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.168390673 seconds)
    (113/309) benchmarking ("sort", Int8, false)...
    done (took 0.160999978 seconds)
    (114/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.085069321 seconds)
    (115/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.064313418 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.110687211 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102772062 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.194812369 seconds)
    (119/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.214557036 seconds)
    (120/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.075587711 seconds)
    (121/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.094565213 seconds)
    (122/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.104689189 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088537231 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.081409697 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.162964438 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.108241883 seconds)
    (127/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.083986053 seconds)
    (128/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.089647384 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086431259 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.081199304 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.153797599 seconds)
    (132/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.0879053 seconds)
    (133/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.092368673 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.083599069 seconds)
    (135/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064084644 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.167106748 seconds)
    (137/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078834179 seconds)
    (138/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080564451 seconds)
    (139/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.064087425 seconds)
    (140/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064118935 seconds)
    (141/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.065871533 seconds)
    (142/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.162581603 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.088302763 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12669275 seconds)
    (145/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.120056904 seconds)
    (146/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.064404079 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.096118389 seconds)
    (148/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.077317676 seconds)
    (149/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.106588962 seconds)
    (150/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.08302735 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064459732 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.08581246 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.086672161 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.086492046 seconds)
    (155/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.064350867 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.082942507 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.086875935 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.080774532 seconds)
    (159/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.086982655 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087730576 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077185266 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.063928617 seconds)
    (163/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.091506301 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.188089692 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.167287602 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.081646974 seconds)
    (167/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.134763075 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.081175603 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087918523 seconds)
    (170/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089281102 seconds)
    (171/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.09313471 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.064482766 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.065110967 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.192681888 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.160156764 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065215265 seconds)
    (177/309) benchmarking ("sort", Float64, false)...
    done (took 0.144777807 seconds)
    (178/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.06339121 seconds)
    (179/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080507356 seconds)
    (180/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.089901655 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.081126388 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139923033 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.103912331 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123050482 seconds)
    (185/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.063340584 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089361433 seconds)
    (187/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.081344739 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.064225921 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08082633 seconds)
    (190/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.088062355 seconds)
    (191/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.133523514 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06373427 seconds)
    (193/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.184135114 seconds)
    (194/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.063652357 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.106904858 seconds)
    (196/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.127867147 seconds)
    (197/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.18459941 seconds)
    (198/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.063707741 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.063786794 seconds)
    (200/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.093181705 seconds)
    (201/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.127227526 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.063757305 seconds)
    (203/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.089517866 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.063169588 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.063635958 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.092185549 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.241942944 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08497694 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066471781 seconds)
    (210/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.087501836 seconds)
    (211/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065847978 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.095041492 seconds)
    (213/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.118273012 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08255712 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089082809 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.135708095 seconds)
    (217/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.083331252 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105861623 seconds)
    (219/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.064704932 seconds)
    (220/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.104976154 seconds)
    (221/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.082803054 seconds)
    (222/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.075775388 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.086770078 seconds)
    (224/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.065827334 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.088912942 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.102084735 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.156078683 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.090492465 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.167040848 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.087663895 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.064702182 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.081994132 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.08530587 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.087090421 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.064238555 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.064890259 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.083976857 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.163449628 seconds)
    (239/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081758858 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.082977664 seconds)
    (241/309) benchmarking ("sort", BigInt, false)...
    done (took 0.206475792 seconds)
    (242/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.11367876 seconds)
    (243/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.088284814 seconds)
    (244/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.091181246 seconds)
    (245/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.076492873 seconds)
    (246/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064849965 seconds)
    (247/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.081611589 seconds)
    (248/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.088318243 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.157094144 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088178877 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.082435685 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.082688765 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.065564876 seconds)
    (254/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065020711 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.078748576 seconds)
    (256/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.078624883 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.083093494 seconds)
    (258/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.08639338 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.102794287 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.081909849 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.087334095 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08120222 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.082953443 seconds)
    (264/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.087913014 seconds)
    (265/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.185303838 seconds)
    (266/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19240151 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.087451226 seconds)
    (268/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082120748 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.102957233 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.085654509 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.151854506 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.081443586 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.064370587 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.082528251 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.065079736 seconds)
    (276/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.081947017 seconds)
    (277/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065222619 seconds)
    (278/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.064814509 seconds)
    (279/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.189108385 seconds)
    (280/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085201721 seconds)
    (281/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065153872 seconds)
    (282/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.086925415 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.081456694 seconds)
    (284/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06480382 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064614309 seconds)
    (286/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.065463893 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139329956 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134767262 seconds)
    (289/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.085241184 seconds)
    (290/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.065240423 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.086680823 seconds)
    (292/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.085757845 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.134862193 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.102801865 seconds)
    (295/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.083237294 seconds)
    (296/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.063929499 seconds)
    (297/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.063724941 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.085340621 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.064337814 seconds)
    (300/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.080431982 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126444303 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.080878743 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.080950333 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.103082181 seconds)
    (305/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081698848 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065427888 seconds)
    (307/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065046612 seconds)
    (308/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.064808496 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.081095943 seconds)
  done (took 35.48777308 seconds)
done (took 36.892046622 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09940526 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112048621 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.089590945 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.105478099 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.096721017 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.088710415 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.086625119 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.091954464 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.09437061 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.095884681 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095117366 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068200551 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.090786854 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.090813664 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.089339411 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11002633 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.095294119 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.089503928 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.089488348 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.078372777 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.089429274 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.081932237 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.081358854 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06838943 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.09324957 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.086418886 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.090743043 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.090582625 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.081976519 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.081644815 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.083796375 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090265691 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081272395 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.093898576 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.088128872 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.089582568 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.090809197 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.091512425 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.081062385 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.081817184 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.09082912 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.081376859 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.088843298 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.087879998 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.08640317 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.085368403 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.089229463 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.090813898 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109779155 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086111618 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091444304 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.091958444 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09301511 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.086705164 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.08385082 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.089012165 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.084844248 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109585661 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.089943429 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085671857 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.091036285 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.088270561 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.085206187 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.089303363 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.089326803 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.091606597 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.091002805 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.08558027 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.091776712 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.085959803 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.081692146 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.089476175 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.083521114 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084183806 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.092248587 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094622367 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.078401172 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.085538135 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.089130762 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.089398906 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.078585988 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086540213 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.08150138 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.086137232 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086130165 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067750158 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.083681339 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.088720743 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.078524007 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.089743964 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.088269625 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.08899199 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.080711688 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.091189027 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.078871537 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.085036136 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.081640275 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.081436002 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.081096684 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.083701047 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.081358891 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085470266 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.089580875 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.080488158 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.085711705 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.094083143 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081308055 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.088178477 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.07821743 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.078885716 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.092383087 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.091143902 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.081610009 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086188672 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.077949607 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.086782115 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.07851261 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.080918481 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081100262 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.080863966 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.085534624 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.081201537 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085738085 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.086501787 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.093015505 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.080504358 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.083017837 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085749557 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.081048533 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.084720863 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.081035877 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.080588246 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.080448422 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074642178 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085796927 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.081330253 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.225257836 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086910771 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.090395523 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.081331459 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.090225863 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.084770964 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.08560635 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.085084465 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.078673909 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.072930364 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086376973 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085934148 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.081064414 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.081506717 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.080819233 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08112357 seconds)
done (took 14.815166798 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.082068052 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145249055 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.107827704 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.107137114 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.099746239 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083268758 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.088910395 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.108570807 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.082442156 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.114072833 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.102391111 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.100829761 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.123429916 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.079213697 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082159667 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.083855435 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.081401502 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.095542432 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.108956496 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.105126636 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.126032405 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.079347047 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.103661572 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.104003046 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.100723327 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116388285 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.082889089 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.084030529 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085986624 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.105969194 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.105934475 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.085328146 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.082868567 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.108278819 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103718648 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.095232283 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.082781874 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094809015 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.082647162 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.081669474 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.084147812 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108519563 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094797134 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.094609064 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.083333255 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.090210646 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.081237919 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.094123858 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10161817 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.090544765 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099123829 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.109719603 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.081947098 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.096561358 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.078141483 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.096860162 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.089108786 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.082601152 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.08202003 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.087544798 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082423496 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.084943328 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.094271206 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.091607832 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086153753 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.096036119 seconds)
  done (took 7.706754933 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.099827698 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.113562234 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.099122675 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.099277308 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.081445238 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.081957619 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082292429 seconds)
  done (took 2.147856668 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.082438147 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.101344072 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.103611449 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.103642013 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.094206374 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.10629481 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089316463 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.082409844 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.104270309 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.083555371 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.100357054 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110629741 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.083372095 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.095779273 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105074364 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.082156332 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.104617501 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08256653 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.083091802 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104319248 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085908665 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.107950081 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090048196 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.082728708 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093327041 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.082635672 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127164918 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084045257 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082706758 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.083505558 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082050332 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.121305433 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092869117 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.090133514 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081469974 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096825509 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.09411983 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084375197 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.091492207 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.091820483 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.093882403 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.080762574 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.08211559 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.082164045 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.084990409 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.092097833 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.081286416 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.08480445 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.083538212 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.099857949 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.081253022 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09274672 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083824276 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.085609662 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.084378854 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.086067836 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.090736591 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.081501741 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.100271477 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082473705 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.097697132 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.096693974 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.094352301 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09710926 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082433958 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093085208 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.09373729 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.083634215 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084599931 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.084543721 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.097305141 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.079570084 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.084313894 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.092493269 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.082840643 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.1047255 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.104846709 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08238893 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.095238989 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.083553171 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.081428105 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.082344093 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.104554971 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085574936 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081259294 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.086833467 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085724492 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.084429621 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.081602618 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.08745026 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.078511584 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.089168259 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.083858281 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.083950294 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085041727 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.09723262 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.085399503 seconds)
  done (took 10.236792968 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085322539 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.084187921 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.085180775 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.083228822 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.083411802 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.083747926 seconds)
  done (took 2.019283094 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.10543467 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.082179981 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.093157126 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.084699161 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.116970648 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.098818018 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.099774144 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.092910142 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.097283125 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.092551805 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.099041813 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.100185885 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.104931127 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.086177925 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.099848172 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.085021696 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.099634178 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.087615549 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.09214078 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085991134 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100505362 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.086027658 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086090487 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.100862414 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.088488583 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.085132069 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09401977 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.092134271 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.091793953 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.092774736 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.08539599 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.088605487 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09046852 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.092297854 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.099039532 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09017996 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08717473 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.089666671 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08507825 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.088525333 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.099379212 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085896617 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.086844857 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.090354091 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.09261449 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.090342967 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.089734147 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093853794 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.09881252 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.08998708 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.090091251 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.084212527 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.089047221 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.089625376 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.090276956 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092171511 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.08959629 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.098704486 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.085943215 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.090250103 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.081776727 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.088644494 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.091943656 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.088728758 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.089950492 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.089661149 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.090253305 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085367153 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086155863 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.08454998 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.090112734 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.081826301 seconds)
  done (took 8.069831409 seconds)
done (took 31.6557783 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.549807382 seconds)
  done (took 2.018937335 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.621957839 seconds)
  done (took 2.119095319 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.558821406 seconds)
  done (took 8.053135601 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.381254383 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.457669598 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.749623215 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148640527 seconds)
  done (took 3.269985414 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.732351857 seconds)
  done (took 2.235430297 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.246354776 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23755765 seconds)
  done (took 1.993994997 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.393409879 seconds)
  done (took 1.88867571 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.08530502 seconds)
  done (took 2.583198634 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.250709902 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188532037 seconds)
  done (took 1.942361365 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.454178637 seconds)
  done (took 1.954047493 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.275796264 seconds)
  done (took 5.777191693 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237280484 seconds)
  done (took 1.769494652 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.252556592 seconds)
  done (took 1.754298977 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.754539698 seconds)
  done (took 3.252949253 seconds)
done (took 42.122319261 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098624542 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.10036446 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100296368 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096629933 seconds)
  done (took 1.875877884 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.090347731 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.085955426 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.089838066 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.086172496 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.0900774 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.086077696 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.087271204 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.08890132 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.085943964 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.086355721 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.086663835 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.085891451 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.089587526 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.087926183 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.084930605 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.088823309 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.089831296 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.086180621 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.088936582 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.086290603 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.084346339 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.088802519 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.088605402 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.085302779 seconds)
  done (took 3.601086706 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.093619341 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.087908744 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.091247217 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.086965023 seconds)
  done (took 1.868785136 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.091502065 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.102553497 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.100469683 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.092446602 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.103162493 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.098454031 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.082129446 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.082616239 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.084168132 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.091733565 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.081949633 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.107614504 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.101251855 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.091787324 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.093426279 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.078615517 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.08070665 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.100176889 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.092215628 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.092809949 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.084114119 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.092389668 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.081908019 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.101644287 seconds)
  done (took 3.7143852 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.093857188 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.113968709 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.093291868 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.103380793 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.104699098 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.079340685 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092359699 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.106024995 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139092912 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.079732129 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.084915161 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.079538273 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.087757073 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.082052975 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.093807587 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.121202897 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.125161862 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.082808834 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.111323398 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.07948748 seconds)
  done (took 3.467603188 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.087577525 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.085094067 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.085566755 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.081233068 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.093520798 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.088413285 seconds)
  done (took 2.036595425 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.083846115 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.083744501 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.08384061 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.082395118 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.087629491 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.08366793 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.081954353 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.083962208 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.083719495 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.082968313 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.082645542 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.082061166 seconds)
  done (took 2.513227213 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.196279265 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.084805779 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.083961596 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.082054247 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.085279327 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082601145 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.096697376 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.083499388 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.107968963 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.082245235 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.082603233 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.084434543 seconds)
  done (took 2.66562591 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211530185 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089861951 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246185775 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160494056 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119534861 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124078024 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125546685 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124577705 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.146205182 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109639567 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17086024 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174707093 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118687926 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147152888 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102568634 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.112750989 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160791618 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175024049 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116591145 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170980693 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15307625 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137261883 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155597879 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112142946 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1158001 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128039857 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.083902983 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091998903 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180236471 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140526968 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151333678 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12184446 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101803066 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192770106 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172107967 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149205943 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157739134 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096418257 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.112671312 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142443968 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208119888 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102023419 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169452573 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120559725 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092607998 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139102018 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125300718 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.270173114 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.115011285 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103797083 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152164151 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191709329 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.14163717 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098974948 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133624826 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121702801 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.12209791 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129293934 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188228193 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165864909 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137431351 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.084868844 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121542179 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156740912 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143811251 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.117024626 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.131646101 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102916356 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141399932 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162184063 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132186876 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149291544 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.124706079 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100149434 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131147179 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144737395 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136600798 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179582806 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135015038 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.085949149 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131732657 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110427814 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093190375 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.155591443 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088589527 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182819234 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113156401 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.11502511 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139756618 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120080263 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119821283 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164217286 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149325972 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114957828 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.078986032 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115741202 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.127888775 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14893355 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098675757 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117838623 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123351919 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.089352252 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287855407 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.089473848 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133571036 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.089456487 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13243309 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140180802 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.090671604 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132732623 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115427097 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.114354608 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139962279 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165008606 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100561974 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094244122 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170621676 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131437161 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.112207428 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150002436 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160719109 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.111817052 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10932043 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152255019 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174512655 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102265688 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168174232 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11483377 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096326733 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.098058155 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132530867 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121846354 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.132986375 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093974876 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.127027663 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169994298 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.087609766 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108124157 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143791909 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091419634 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093288838 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116277482 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114949897 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.108635942 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110167282 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.112922841 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144995194 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13662715 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11618299 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132950975 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10965618 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171784363 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100338386 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.113867833 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115090709 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.083113625 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.1392088 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159701159 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090921695 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16369149 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.128935133 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274604018 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131459834 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097010139 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145137698 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093095337 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.084002865 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14948051 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121745481 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120671834 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.154323657 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125579727 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.131857769 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.126955199 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139583118 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138382562 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.13707036 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117633537 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.101189445 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124555053 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135284035 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.086603744 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.101507771 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.092708161 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116797814 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107144229 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096889197 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151162834 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13238836 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121581988 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1247397 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10865477 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155962538 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.089136543 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136248255 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.128891259 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106945311 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.157265777 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157417225 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142090049 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111865014 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14468317 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.084487509 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087742532 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.098348112 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130824747 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097089559 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095938633 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124529144 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15461027 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136947647 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143406538 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132899911 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129107633 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161462345 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.083143864 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.128473497 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148677538 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128969861 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.115113805 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250062846 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.110649603 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149670074 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115953508 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188300807 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124872553 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135589725 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16362629 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.113103645 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091812431 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115143026 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139886485 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112482023 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148671474 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109707673 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100494915 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11783468 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.088965854 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107648518 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135223233 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127157949 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145687332 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122239415 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141606574 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091221189 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123916829 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133093658 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130953551 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.077864329 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128429924 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170537906 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107556321 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127749397 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156825674 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091601797 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.148260915 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177608196 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15393707 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09698149 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117290068 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130446545 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133279656 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127925004 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144359083 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115290484 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147600923 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120767627 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.096869611 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099459722 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107886109 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115089352 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104122577 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111225294 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.120527064 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.106279086 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137904517 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112544857 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119689361 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276226894 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.111834359 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.105245964 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109299574 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18123326 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12840445 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17919361 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.111369661 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145954203 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166216504 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088744234 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092122389 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.090755936 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144797316 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097617332 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13838969 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.122413532 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12627826 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132040995 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145530494 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108246331 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.082203768 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120014458 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141640358 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1333922 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109977326 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.112900794 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166518467 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11027402 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091981377 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122852796 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127305863 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115859135 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178776953 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.074905314 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120314727 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090821468 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092713589 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134387401 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160587347 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.09296809 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.111485176 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130909826 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121657152 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133582225 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108999963 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121724134 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13945876 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153085861 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136029019 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.101042241 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121148497 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138086788 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15911364 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112133838 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.108167366 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17580149 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305956049 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161890892 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.097736595 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126281362 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125405917 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119822705 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144637638 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09721323 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166045788 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094034594 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142389093 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111995152 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098816598 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136549914 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.122820305 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100658105 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149419399 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126825754 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095228052 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090543565 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125233497 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129134732 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11535344 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.088225667 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146564771 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.087119549 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141612401 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17891223 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093072095 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116222336 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10746602 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092686436 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1150561 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113459209 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09899069 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.111159596 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175624496 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.098018556 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153323682 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141410103 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122078019 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144193457 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113854673 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.650946072 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.089976887 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156574739 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124868822 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177327356 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110904447 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12792653 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120540967 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130019066 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148020015 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11132219 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.189125146 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287852397 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.127090322 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0923398 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113069656 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11510057 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.098703714 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118900488 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123970206 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125331667 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.103512025 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.124851934 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131998996 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.095233092 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107662779 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160994073 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125233849 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150463196 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145230549 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097033424 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127478794 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143742773 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093021406 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.126692301 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160799871 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116617245 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111095186 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.093312609 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.110332569 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179004605 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.087372572 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164477018 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13301448 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15753443 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124070349 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118898127 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139357319 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115055269 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131213377 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102331518 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11694116 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124355546 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093693705 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.089448509 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116892255 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12064216 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.109434067 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106606415 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.111354576 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155941001 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.085308641 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109212077 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124974114 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149956545 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17504631 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.097830792 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095930946 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128804758 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124562269 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.12014945 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280613365 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.092217321 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094666808 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.092199343 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.093969597 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114744097 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123777445 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128972069 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120528659 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165357671 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.095539609 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.236845999 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108128802 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116910759 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.082017866 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.091236741 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108170877 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10869848 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114992209 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120633633 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176918079 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.107973607 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.101429689 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102197995 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.088121707 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095826042 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133871989 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1222494 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128207072 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113140807 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.075373791 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117189477 seconds)
  done (took 63.552628552 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.118348203 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.09206221 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.112791609 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.158332793 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136643559 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214124164 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.164264678 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204165631 seconds)
  done (took 2.814144964 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.083924631 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.108416582 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.118922876 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.097240438 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.081943028 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.083686816 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.236681596 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.096183827 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.081697168 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.108262526 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.092442907 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.08422922 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.416561549 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.081841341 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.082856214 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073876943 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.082584794 seconds)
  done (took 3.609214418 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390972336 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.623135584 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.353184958 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.090071143 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.842111585 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.107086729 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.192909762 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.156921059 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09650686 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534474819 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.381308868 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.145878941 seconds)
  done (took 18.522045988 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.096732948 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.090826209 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.10371848 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.103576802 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.092810232 seconds)
  done (took 2.093576808 seconds)
done (took 113.85554967 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.094635679 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.433150593 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066698967 seconds)
  done (took 2.133679376 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.102005783 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.100081363 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.100332812 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.097676368 seconds)
  done (took 2.013594307 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.089288295 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.091225705 seconds)
  done (took 1.787740056 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234896073 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.186065415 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.110988517 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.095286464 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.092475364 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.093306471 seconds)
  done (took 1.89229066 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.08530158 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.087522689 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.086266472 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.088708149 seconds)
  done (took 1.955292485 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.087569988 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064530305 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.066802838 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069604239 seconds)
  done (took 1.896947703 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.099158385 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.096353428 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.091540811 seconds)
  done (took 1.89627833 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.11528879 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.104770285 seconds)
  done (took 1.829417724 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.093462909 seconds)
  done (took 1.702972879 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10145657 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.1118332 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.145038058 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.127562933 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.150633898 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.127738189 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.099862396 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.10011224 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.094166008 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.100967467 seconds)
  done (took 2.767971573 seconds)
done (took 22.108001417 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093946711 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.380192816 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.375304254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105114088 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.684853933 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.372762943 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.018687595 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.107944503 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155054449 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.083727225 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.100113935 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.663738707 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.010321402 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.338563621 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.997201658 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.341740083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.664892438 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.084702645 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.084311385 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.084667552 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.005187518 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08456423 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.084252682 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.085040703 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.666159679 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.388344176 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.08500979 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.34225965 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.085131173 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.086006245 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.371695232 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.084960208 seconds)
  done (took 16.706854979 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.086452945 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.135879665 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.088248248 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099583567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.086469825 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.08545588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.086861518 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.084407113 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.135848006 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.083759614 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.100868284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.084039416 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.088411557 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.084948343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.103764171 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087646368 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.085612084 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.085327085 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.084790092 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.085085263 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.10280901 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085529196 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.08521615 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.085049559 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.084472892 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.097089185 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.085063329 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.084460029 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08493353 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.086702068 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.087715984 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.085191769 seconds)
  done (took 4.539062524 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13110829 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.139484643 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.089362407 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.120758694 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.127114781 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.086705327 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.161064246 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.109483928 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142597652 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.085890881 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101327563 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.085203922 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119132081 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086469399 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.104754179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.084949823 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.085279141 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.085885316 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.084966139 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.085034273 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.103748167 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.084704623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.084671012 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.085565151 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.085024437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.098269966 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.085166828 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.084828886 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.084923348 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.086571742 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.088301519 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.085177441 seconds)
  done (took 4.795141434 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.08552805 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.088901352 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.095184834 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.0969833 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.082568167 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.086057459 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.086892368 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.082972901 seconds)
  done (took 2.331009829 seconds)
done (took 29.98881248 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.092660989 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.082450034 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.085838112 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101650601 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.088378906 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.093706948 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.080397473 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.089290475 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.087176598 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.08714501 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.088577428 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.083574894 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.085632589 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.080543646 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.088178097 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.081317789 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.095481602 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.08564796 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.094126021 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.095634847 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.083639501 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.087188095 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.089047423 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.094709777 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.094204262 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.093756254 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.089735838 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.086591613 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.081881188 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.084088638 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.089857687 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.096370134 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.083582371 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.094301928 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.08072415 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.08043354 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.08457603 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.083328897 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.094363794 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.08970114 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.082121828 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.089650766 seconds)
  done (took 5.299630094 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09926238 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.104552996 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.097681265 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.075150978 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.080282864 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078322969 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.101386539 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073271876 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073597647 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.100777735 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069538885 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.073828543 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075816687 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067462709 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.072838492 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070372047 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075233861 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068466381 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.072805042 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073376109 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.102006702 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067247354 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090918486 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.075388042 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069428078 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075078553 seconds)
  done (took 3.717933431 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.089111886 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101103106 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.106912511 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.156456936 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.125349805 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.094782014 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.096833201 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.106019206 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111047355 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.083068117 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.087931657 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.106684614 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106705838 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.088656978 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.082729556 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.098208792 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.098114837 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.085334945 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.089790952 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11362164 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.103460168 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.099938107 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.108058617 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.098804806 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.082657641 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.085368645 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.087580146 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.098428715 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.085655116 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.09430184 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.086203664 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.086884393 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.084144781 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.093671182 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.086042575 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.082637123 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107822981 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094409764 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.095830461 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.084068517 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.092836711 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.084362916 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.108258823 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.142487476 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.082064157 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.088317423 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.087311227 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.094307504 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.082857373 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110327655 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095160033 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.083029664 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.084076879 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.08238494 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.082589793 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085772093 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.085531778 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.085681703 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.093275278 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.089958056 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105258279 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.088514307 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.100603864 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.083004691 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.09335182 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.082584672 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.084676237 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.082110618 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.111430259 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084725859 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.126730975 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.084436779 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.082599283 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.094413975 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.093141201 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089005357 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.083347294 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.100611122 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094449539 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.087420338 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.091673916 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.086340575 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.086903347 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.113636346 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.083980206 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.083144563 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.082170499 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.08698509 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.086568089 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.084173794 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.094984728 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.082722402 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.086990013 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.100988202 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.083569162 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.084039549 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.086879893 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.0861771 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.082781218 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.093680994 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.08723918 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.084638986 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.092895936 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.083759993 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.086970366 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.095732196 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.08938749 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.082999383 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.085918991 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.086779532 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.084792872 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.084686431 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.086343923 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.085438616 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.089886153 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.089656452 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.089168464 seconds)
  done (took 12.457070618 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.175608572 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.166990418 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.085501978 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.158933552 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.092149027 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.09366085 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.161425855 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.108400473 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.084114104 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.085459306 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.084007526 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.122747018 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.118979167 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12936402 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.094332441 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.084614032 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.106090991 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.127346058 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.163855301 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.158448309 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.105890903 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.091738935 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.085980498 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.084936924 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.085311766 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.093193086 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.100465143 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.091906063 seconds)
  done (took 4.806926954 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.092678244 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.11800012 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.087478043 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.105484199 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.102717515 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.081585257 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.085435866 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.085703319 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.100350893 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.090389103 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.081707699 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.08900592 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.087987326 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.08486847 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.084756854 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.088130292 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.090880125 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.083401376 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.084866741 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.089503292 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.09391003 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10296716 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.087114604 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.083688613 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.086361243 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.083533619 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074618752 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.095816922 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.08450655 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.108040802 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.078870425 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.086143421 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.097622167 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.084758812 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.083862452 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.084057929 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.081683786 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.081335432 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.085545582 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.079858051 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.079978698 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070654889 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.082295448 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.091679085 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.09676742 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.068361681 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.086054729 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.086653668 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.086442349 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.078730369 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.086928479 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.086841686 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.086874325 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.091180739 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.085514109 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.086636127 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.084812856 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087791418 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.090168992 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.083029319 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.077907886 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.080280117 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.086421489 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07610453 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.096811112 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.086167882 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07992748 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.081766847 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085029459 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096144081 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.083052035 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.08601825 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.079314527 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.083482119 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.086535981 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.086508781 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.084714284 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.079829729 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.08352355 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.087305182 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067005753 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.083560052 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065749968 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.087230247 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.079946901 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.079826662 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.084366803 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.086138741 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.092335248 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.083268652 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.087997067 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.084828749 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.082635588 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.086742246 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072283937 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.086925956 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.094174525 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.095047035 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.08165586 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.080066793 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.096983638 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.086863134 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.081120554 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.070149893 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.088722002 seconds)
  done (took 10.681975372 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.106482504 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.082808883 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.100209044 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.106867814 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.101594879 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.088332887 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.093431044 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.082236179 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.099559289 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.087503374 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.090114485 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.08093633 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.094474306 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.093432745 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.082657031 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.093807934 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.085272843 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.100871562 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.098292177 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.081363765 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.093035746 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.095965648 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.104714966 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.097959581 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.097126796 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.098519479 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.104381303 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.091927808 seconds)
  done (took 4.311203989 seconds)
done (took 42.894771829 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.730222639 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.972676659 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.711209842 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.949324054 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.77176831 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.937846114 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.80616683 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.716103033 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.93214834 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.752855504 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.040131087 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.804449918 seconds)
done (took 64.89912775 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.745734628 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.842423782 seconds)
    (2/2) benchmarking "String"...
    done (took 1.940589597 seconds)
  done (took 5.415634815 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.925239312 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.384771359 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.952442543 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.709679325 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.71624778 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.972342904 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.516356626 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.158799265 seconds)
  done (took 30.045114486 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.901543102 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.941546216 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.438796997 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.469913909 seconds)
  done (took 15.431196004 seconds)
done (took 62.287417521 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.716008052 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.767649547 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.722801458 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.69302958 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.807790829 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.721610471 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.85891576 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.937605075 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.711205791 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.699206737 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.716340128 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.142646313 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.727399127 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.872984307 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.712495013 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.71145689 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.754796407 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.110457916 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.869671645 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.72686198 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.714650971 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.75647106 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.720209479 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.724007666 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.747423508 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.712929158 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.114718965 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.72936363 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.547844189 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.718264516 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.760120307 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.028659729 seconds)
  done (took 202.889724908 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.712340435 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.860862907 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.956920173 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.740008109 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.174536898 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.893903041 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.799531464 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.214291554 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.721503643 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.742133199 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.010194427 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.713651271 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.026574269 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.658156028 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.740808586 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.715890046 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.845864786 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.023347556 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.746612246 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.86387971 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.737536505 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.851554239 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.80935937 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.982024423 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.713124707 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.751027798 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.723000589 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.746030636 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.903472071 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.833082225 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.752635717 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.760804785 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.921717543 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.586283103 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.720556858 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.735959291 seconds)
  done (took 168.326195907 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.89839165 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.715364992 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.713019961 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.713774221 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.719376852 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.713693723 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.836452031 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.838467834 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.35376892 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.342921223 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.770418419 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.713598594 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.526818245 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.714826494 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.781025407 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.726883724 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.712620115 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.714025845 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.729401925 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.740292304 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.717568314 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.716720257 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.837004897 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.730450751 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.713406694 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.72269899 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.714006676 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.71953063 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.08231716 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.713819697 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.792295236 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.718701492 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.720470565 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.9557288 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.717007182 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.716394878 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.568722216 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.383784206 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.800385212 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.717715371 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.720945405 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.716203737 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.934998693 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.716425563 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.718632789 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.715572882 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.718027524 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.85197865 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.71791179 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.83791427 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.717356071 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.194094443 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.714286945 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.718150856 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.480886002 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.304038521 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.718629021 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.715994963 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.718255586 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.715520785 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.718927135 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.720969509 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.5146482 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.721151871 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.786670391 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.718131992 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.718389141 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.721159644 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.716765134 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.722153119 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.716222662 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.806955331 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.772595031 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.946058914 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.838704703 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.721012255 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.71611777 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.781258623 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808789506 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.716712775 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.716217359 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.715163639 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.71586099 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.796646141 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.716253154 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.837145673 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.727063515 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.717844399 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.770908736 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.785640012 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.71788426 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.560481824 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.718472617 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.717941417 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.982354665 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.783136596 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.717069815 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.719489286 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.838485102 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.841455853 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.432186113 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.719237645 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.598213018 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.857964527 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.716192151 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.862754831 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.718651283 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.797373051 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.724139147 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.71706537 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.749815704 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.715793485 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.775524032 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.716290255 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.087431662 seconds)
  done (took 395.305767284 seconds)
done (took 770.116768495 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.320215429 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.288032276 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.388238358 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.302307568 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.27719861 seconds)
  done (took 13.215374845 seconds)
done (took 14.855308231 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.79825666 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.807179044 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.742369928 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.806067279 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.737915033 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.804623943 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.788053986 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.742420685 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.772637564 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.744645474 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.773381955 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.743073345 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.731591849 seconds)
  done (took 24.632597353 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.950401965 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.949018184 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.782625316 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.943508186 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.75952013 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.947550594 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.873580072 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.862934918 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.865083635 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.731316787 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.727910531 seconds)
  done (took 22.034517156 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.950378403 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.957046903 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.790480622 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.954007534 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.76254629 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.949583445 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.877099911 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.872673044 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.863064055 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.732242415 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.72831924 seconds)
  done (took 22.079486566 seconds)
done (took 70.388307715 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.72713063 seconds)
  done (took 3.370219915 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.749836641 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.920422366 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.73301502 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.726358561 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.729094276 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.727533241 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.728164454 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.725079449 seconds)
  done (took 15.683335438 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.725098023 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.723699481 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.723288035 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.726870552 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.722934241 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.726173629 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.726085109 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.726417822 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.726266087 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.726894612 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.724699659 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.725841241 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.724232287 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.722969659 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.725836898 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.72278601 seconds)
  done (took 29.243135847 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.726231095 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.72328933 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.722752256 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.72490598 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.723175358 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.723584776 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.72421413 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.72417235 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.723379928 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.72237126 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.722569759 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.723289905 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.723672994 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.72261113 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.723789602 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.724962155 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.722518648 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.724065649 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.728745896 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.72420931 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.723864146 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.723535892 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.723717692 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.725564482 seconds)
  done (took 43.020738391 seconds)
done (took 92.96026454 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.452391913 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.702287329 seconds)
  done (took 9.798379078 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.727223963 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.728213599 seconds)
  done (took 5.104524758 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.726249827 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.727406586 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.727264221 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.726962307 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.728010742 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.728632127 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.727320139 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.72731084 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.726843661 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.728062176 seconds)
  done (took 18.918603918 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.72741844 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.728042778 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.725298049 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.729096236 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.727128171 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.725971496 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.727046432 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.728168066 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.727474493 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.726059758 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.727360461 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.726489636 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.729883643 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.725560216 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.728250334 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.725146065 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.726950019 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.725237081 seconds)
  done (took 32.732047997 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.728130029 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.728455033 seconds)
  done (took 5.102314081 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.725742135 seconds)
    (2/7) benchmarking "second"...
    done (took 1.726443831 seconds)
    (3/7) benchmarking "month"...
    done (took 1.725831753 seconds)
    (4/7) benchmarking "year"...
    done (took 1.726551475 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.726288862 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.726171564 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.724540762 seconds)
  done (took 13.726398763 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.729567604 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.873202843 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.940627826 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.340481808 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.730262027 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.733699872 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.603729027 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.732576025 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.735503107 seconds)
  done (took 19.065680985 seconds)
done (took 106.092850667 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.639237475 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.72340834 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.963649641 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.789921967 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.780029219 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.019443161 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.739122145 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.020553376 seconds)
done (took 42.322509444 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.799932607 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.368113155 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.405280263 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.757432254 seconds)
  done (took 15.179965118 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.70671675 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.027592955 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.731111188 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.542335859 seconds)
  done (took 21.663689016 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.094177613 seconds)
    (2/2) benchmarking "read"...
    done (took 2.07739611 seconds)
  done (took 5.823486636 seconds)
done (took 51.116686873 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.731890707 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.727895613 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.731873726 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.731386729 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.728021423 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.73096847 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.728460513 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.727662226 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.732921535 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.732801642 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.73174124 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.732228202 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.732953058 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.729336639 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728017373 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.728458845 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731803642 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.729508265 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.732870084 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730275037 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729443795 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.732932564 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.728861614 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.729331294 seconds)
  done (took 43.181000439 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.732014355 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.729802365 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.732697317 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.733119158 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.731520187 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.733888352 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.732971371 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.730558601 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.732658796 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.732295145 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.731084899 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.731470373 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.732766991 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.730155933 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.73389987 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.729393267 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.734448983 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731539948 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733324624 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.730806017 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.73429922 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7310692 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.730437548 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.732466346 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.729875001 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.730351664 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.736582518 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.732016396 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.733228923 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.731594583 seconds)
  done (took 53.611692291 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.739149385 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.741126212 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.734342282 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.734377371 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.734655995 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.733560673 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.734043722 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.734135328 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.734163904 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.734604856 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.733501244 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.735251799 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.735259773 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.733604782 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.733861421 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.735001328 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.734116853 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.736099381 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.733095684 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.734744951 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.73574519 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.735398158 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.734523597 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.73628933 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.735888638 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.735350264 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.737663631 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.735585306 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.736461958 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.734120387 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.736050152 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.735999199 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.735619892 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.735905669 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.734868434 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.735004156 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.740270457 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.743632969 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.736680519 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.736268754 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.736387118 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.735596386 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.736065539 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.735079939 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.73589187 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.736160691 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.735909459 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.735881117 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.736420937 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.736174783 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.736810311 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.735776221 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.736561785 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.736881167 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.737275203 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.73597741 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.737256876 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.73657427 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.737030989 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.737622434 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.736508901 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.736169106 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.737231936 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.737919733 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.737724809 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.737871528 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.736522273 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.736100537 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.737084615 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.738104099 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.737179139 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.738523196 seconds)
  done (took 126.653103949 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.738309332 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.735124352 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.735125052 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.734557212 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.736010267 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.736345144 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.736711411 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738503444 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734668329 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.738687933 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739106915 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.736697458 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735183684 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.739474009 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.738333782 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.735717489 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.740194503 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.734777306 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.738557852 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.74090589 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.738369929 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.735357972 seconds)
  done (took 39.871253231 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.738484014 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.738701206 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.736252719 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.739018862 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.73655034 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.737154155 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.738322339 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.73799715 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738838512 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736155955 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735769616 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738270214 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.736970096 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735768085 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736615102 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.73799978 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740012497 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.737294853 seconds)
  done (took 32.931048998 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.736288038 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.737765183 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.739595581 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.7360561 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.736381317 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.739765424 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73742305 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.739101381 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.739230901 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.736909041 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.740955157 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.739423588 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.738980707 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737424103 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740852206 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.736849721 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.739432986 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737230294 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.739514231 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.737917084 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.738859462 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.739755349 seconds)
  done (took 39.902591938 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740890967 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.741577246 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.737637024 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.738074831 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.737843357 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.740867577 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.74117516 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.738515603 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.741144164 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.741789778 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738801688 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.741058115 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.738538058 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.74020686 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.738949072 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.738947669 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.741657418 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.739232903 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741137676 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.737655643 seconds)
  done (took 36.453530363 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.743042008 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.745618889 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.744415156 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.744236588 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.744891985 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.744843146 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744943215 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.744203987 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.744948189 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.746501481 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.744467589 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.74474881 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743611546 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.74323714 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.743798291 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.744718147 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.744796601 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.745772934 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.744897108 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745695544 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.744495307 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.745708678 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.744985406 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.745096933 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.746174631 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.743252798 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74540922 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.745241835 seconds)
  done (took 50.513812911 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743465678 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.74329381 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.740629598 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.740681976 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.740903803 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.739657973 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.740750866 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.740814036 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.742401741 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.739859782 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.743145376 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.742957551 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.742641319 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.743892984 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.74440765 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.743902691 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7441371 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.7405521 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740877856 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74247954 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.744759152 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743058232 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.743618534 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.741886221 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742611211 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.744081677 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.742011337 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.743245571 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.745028171 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.741922568 seconds)
  done (took 53.933660329 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.761670953 seconds)
    (2/2) benchmarking "in"...
    done (took 1.76249238 seconds)
  done (took 5.185482227 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.740714448 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.744561974 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.743809938 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.742362382 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.741425367 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.745287648 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.744651301 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742374565 seconds)
  done (took 15.60755735 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.748332185 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.745638647 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.745893467 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.744653651 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.747192677 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.74678517 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.757456552 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.744968276 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.750552287 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.747199157 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.757660379 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.754942813 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.751401338 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.750936926 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.749388351 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.751452167 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.746826311 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.747868503 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.748887315 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.746077581 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.749259883 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752367073 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.751821213 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.743278059 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.751716515 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.761301777 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.755434274 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.748807361 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.750705359 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.755679441 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.749857746 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.743293618 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.749382684 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.750227935 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.746578945 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.749158782 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.76133644 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.752162366 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.758695669 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.749253361 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.745911174 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.744736568 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.751953987 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.752632992 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.753603669 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.749491254 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.747224608 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.744600858 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.747582184 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.756455748 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.753074045 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.750492074 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.743818803 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.755806565 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.754088134 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.75745767 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.751388294 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.755833774 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.761114877 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.763679485 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.765370628 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.760282309 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.75271337 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.749195793 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.763690848 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.776564234 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.76089035 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.744950549 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.743915608 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.748831645 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.761528524 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.766116849 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.762734841 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.751291394 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.749972328 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.748107051 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.753194579 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.748315789 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.76057594 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.756330778 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.751202212 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.751035785 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.763797177 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77560586 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.752893861 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.752039467 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.751586911 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.752275916 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.752070536 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.765907695 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.753207448 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.748949625 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.750613805 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.755137484 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.751636542 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.753556389 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.749352562 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.755540008 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.746453441 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.749279752 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.752197961 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.757582396 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.76369012 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.752936795 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.752359924 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.762092787 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.750184023 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.754313992 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.76265446 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.750490873 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.751974695 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.753649302 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.759756655 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.747410119 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.759262463 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.761067598 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.753738125 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.756954475 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.752897457 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.750412939 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.766635558 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.781942882 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.752344929 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.751797922 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.760547952 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.766652369 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.752401623 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.759567088 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.7517273 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.748301632 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.748751659 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.75795661 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.751227548 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.756806363 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.753196788 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.757798021 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.749685082 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.752399961 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.754602708 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.757295487 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.755155176 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.755438633 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.757744911 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.759085775 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.755287363 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.759158165 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.764160633 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.754582715 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.759526388 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.754602833 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.749327251 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.753984754 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.758066456 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.754728389 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.754660875 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.754734718 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.756782225 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.754589914 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.753092984 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.754200493 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.752715283 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.75562013 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.762671608 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.75510482 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.761918055 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.757654095 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.751138038 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.753911579 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.753030926 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.753199552 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.754455005 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.754593197 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.762098403 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.763036031 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.753375391 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.755145362 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.76084629 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.755667498 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.755976339 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.755640303 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.761551743 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.766178748 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.755028194 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.766389501 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.756505563 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.7564657 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.754709502 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.758315268 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.759427451 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.756621372 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.763150673 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.762295274 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.772037427 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.767957129 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.756450067 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.761316028 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.756829324 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.759316811 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.763147657 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.75695209 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.755710841 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.759316793 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.759658425 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.757426838 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.761123456 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.756431604 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.754149452 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.756016356 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.755668794 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.758697544 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.755732809 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.759559125 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.761100856 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.753877424 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.756200648 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.756494956 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.757920556 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.753476269 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.756481725 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.757378126 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.755700759 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.758527695 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.769182066 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.75262061 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.761151042 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.761020117 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.761243794 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.755940492 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.756459424 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.762894307 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.761043692 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.76823947 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.757757314 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.762715303 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.767719044 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.757924391 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.756749135 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.764052942 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.757517495 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.753921839 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.764477397 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.764415262 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.75705923 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.759595304 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.759475666 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.761934841 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.757089709 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.770357778 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.756865015 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.760625294 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.756626328 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.759016159 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.755192123 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.763302617 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.761599916 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.759947654 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765103138 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.758192739 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.757697507 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.762859032 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.760748373 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.760544054 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.761413655 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.765360292 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.768571806 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.76897881 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.75979517 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.760628898 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.762166907 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.763428639 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.762853238 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.760935175 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.762444745 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.773847723 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.769981592 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.768090696 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.765457777 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.758187467 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.769287138 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.761650827 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.763987275 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.762687526 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.763382557 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.762855023 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.763099406 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.756120571 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.763399303 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.759537391 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.765867092 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.76437896 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.762645448 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.757983361 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.762502754 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.760309329 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.762393422 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.761139766 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.762883018 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.759175054 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.765720206 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.765084276 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.759584115 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.76383923 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.772787608 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.764212895 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.764771818 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.762795573 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.763659057 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.759395212 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.761626016 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.762965451 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.767400908 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.770532835 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.76761664 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.774192827 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.766524428 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.775387554 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.761767565 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.768751484 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.769758008 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.758193668 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.760660008 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.762104585 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.76334901 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.774317635 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.76461445 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.763711354 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.767176715 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.762728604 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.763702292 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.761691448 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.763571814 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.761492297 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.763453257 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.774559045 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.764504796 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.771087087 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.769020896 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.760268686 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.76363397 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.762016304 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.762923748 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.770735045 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.76359253 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.76701247 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.765703186 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.764243647 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.762166782 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.764524588 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.762594043 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.759368243 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.762436804 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.775255439 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.764757654 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.768168982 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.763247326 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.777325895 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.764815105 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.775314571 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.766238858 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.76382642 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.765210113 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.762988303 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.764712021 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.764847783 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.766592861 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.765468486 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.764542118 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.767229152 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.765038788 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.767197986 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.76875507 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.767241377 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.768084391 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.778731464 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.790719397 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.769226286 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.768467485 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.76056997 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.769565155 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.770516587 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.76575181 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.763315903 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.772001252 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.779893283 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.774533379 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.767889642 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.76705174 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.76884265 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.767230679 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.763694403 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.764052304 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.766843641 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.765210871 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.764988944 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.766156534 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.772619945 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.764754058 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.766602805 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.770700625 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.766941063 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.780936273 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.766482466 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.765345109 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.766661023 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.763212358 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.76988439 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.768934173 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.766685659 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.769176867 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.765774049 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.770680872 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.777018312 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.774204003 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.771814355 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.76968593 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.766614834 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.76886189 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.766727325 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.768731614 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.767729889 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.767410711 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.770795474 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.769044919 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.773832388 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.765535685 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.765362971 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.767176452 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.766146826 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.774551633 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.779506523 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.769654723 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.763709792 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.766326351 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.767370233 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.766780188 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.770177571 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.781836749 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.774616473 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.783277421 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.776133295 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.773189292 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.77207446 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.77513596 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.778952594 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.766910433 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.771539848 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.768865002 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.772327619 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.769751454 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.77631716 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.768786033 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.780116458 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.770636726 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.767723763 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.781160818 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.773401806 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.769285707 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.773653643 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.77648431 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.770892906 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.765087862 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.767324871 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.770502702 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.780081811 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.773542158 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.769835884 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.774287852 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.767660594 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.773840724 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.773959302 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.767915975 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.772513779 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.765546138 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.773072744 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.768896507 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.771538529 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.764685832 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.770244077 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.769480035 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.776677888 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.776953828 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.766498582 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.775407757 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.77328942 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.770949927 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.768677491 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.770195721 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.766548395 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.766031802 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.769802917 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.770431374 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.77454659 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.777605237 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.769839694 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.772466862 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.772052974 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.770566926 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.77813596 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.785321912 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.778952771 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.76677535 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.771457294 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.770931657 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.776680769 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.772423131 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.771719868 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774524548 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.775123766 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.769388395 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771902915 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.770613268 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.778678764 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.791968241 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.771036159 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.775145124 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.775678859 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.777822797 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.772159401 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.767677649 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.770756284 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.772370574 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.776935916 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.780448893 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.772653633 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.780910772 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.775488133 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.774536597 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.775177845 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.778893149 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.781003598 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.778462811 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.772461903 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.773858564 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.781291697 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.795671585 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.772214042 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.787011524 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.809021981 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.773850345 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.77416786 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.774127286 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.775177762 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.77504143 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.773406662 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.775466792 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.771422312 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.772212357 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.774638216 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.774537059 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.783331236 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.77920151 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.774108402 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.771474134 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.772688827 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.773818222 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.769335205 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.774198505 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.771937049 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.775210559 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.776278494 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.77476246 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.776621563 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.788818589 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.783527557 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.77324976 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.775698144 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.769625228 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.780744985 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.779771372 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.787891291 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.780707605 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.774952609 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.774000285 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.778603157 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.774708652 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.769907151 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.778255614 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.776358624 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.776736636 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.769825921 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.790673895 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.784059584 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.784261381 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.774997746 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775715247 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.774541558 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.779497359 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.775417577 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.774354554 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.779035 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.775345987 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.780200535 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.780975592 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.77598907 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.782181148 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.781535348 seconds)
  done (took 1053.080851058 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.770987638 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771865333 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.772565114 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.773041707 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770986353 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772911108 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772562161 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.771855702 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.770993434 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.772637661 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.771618858 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.77174558 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.771950225 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.772245163 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772584815 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.773876189 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.773384235 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772369825 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.772802749 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773287113 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.774273278 seconds)
  done (took 38.910981782 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.77468599 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.772874118 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.773144189 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.776117064 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773323789 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.776277947 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.773709631 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776661082 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.775589027 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773517636 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.77586763 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776501054 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.773228839 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.773473033 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774744029 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776450925 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.776345643 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773047391 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.776266745 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.773921805 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775747188 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.773268614 seconds)
  done (took 40.736695223 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.779594036 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.779884076 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.780830115 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.773897282 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.777428583 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.773818345 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.778847345 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.776437852 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.777903046 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.77868764 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.77825184 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.779374578 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.788662578 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.783290175 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.78041293 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.778485591 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.920415356 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.77951913 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.780076299 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.77837905 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.774615504 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.788026598 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.775952328 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.776163233 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.777765102 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.780447191 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.777887584 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.776682588 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.780228182 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.781108907 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.784059934 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.777264444 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.782231001 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.783636409 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.778652641 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.781399426 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.782993067 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.782028605 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.776053666 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.777671049 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.79362594 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.799664518 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.780522313 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.78887011 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.77847169 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.777788881 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.785815796 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.788864916 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.775474327 seconds)
  done (took 89.082163041 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.777804516 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.779566038 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.776889725 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.779687525 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.779795168 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.779652174 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.779784426 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.77802275 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.778051132 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.777058035 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.780444198 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.776503569 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.777262729 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.780353586 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.779883732 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.777543695 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.777793951 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.779125169 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.776505727 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.778776061 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.777003918 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.779878789 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.781959034 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.777399999 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.781787001 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.777368555 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.7766272 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.780078163 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.776983598 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.777698809 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.780165597 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.779650237 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.781797999 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.778713527 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.779879518 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.780929368 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.780636295 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.77939939 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.780519336 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.77629735 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.780987537 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.782541051 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.780768938 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.782705547 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.778807566 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.778373997 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.777634281 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.777547955 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.779218108 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.780547479 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.781982729 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.778445213 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.782412355 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.779622147 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.780134799 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.78317606 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.777814676 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.779394502 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.781959372 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.780945722 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.779761121 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.781979618 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.778774649 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.781327573 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.781795758 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.779732983 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.779868436 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.782222821 seconds)
  done (took 122.702948976 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.78779389 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.783983285 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.783461659 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783296942 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.78472862 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.784790712 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.783715852 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.784033436 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.782852185 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.785349256 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.784159366 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.782565131 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.783989589 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.783945499 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.785797248 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.785103984 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.784266756 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.784334428 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.785680972 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.784504306 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.785056698 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.785905087 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.784317045 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.785188037 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.785622706 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.7853907 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.785387634 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.785245191 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.784529397 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.784340974 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.784816015 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.783880579 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.785903105 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.786036194 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.785457965 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.7854791 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.784354617 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785581398 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.786694887 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.78531773 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.785103397 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.785707255 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.785736647 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.78560406 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.784522724 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.784461707 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.78667341 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.787110581 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.784251612 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.786506951 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.786023598 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786155059 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787270014 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786277969 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.786210696 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.786283859 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786282987 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.787254901 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787263674 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.786379616 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787191217 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.785162295 seconds)
  done (took 112.385207772 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784566846 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.784708216 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.782752295 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.782738726 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.786015666 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.783373128 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.785373528 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.786434913 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.788173163 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.786520983 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786156446 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783470721 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783274521 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784820149 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.78327547 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785234392 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78455578 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.782629781 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784470965 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.783754331 seconds)
  done (took 37.393126629 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.78355459 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.785123385 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.783923504 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.783865842 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.786791199 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.783379765 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.786274923 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787269743 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783352068 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786033914 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.786624985 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.786528177 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783323094 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.783895458 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.787048599 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.783049499 seconds)
  done (took 30.260958075 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.785764486 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.786755269 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.788636915 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.787263179 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.785377995 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.784495827 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.787433059 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.784345167 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.784549823 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.786649 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.788190001 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.788150956 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.786636598 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.788589623 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.784997123 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.78665953 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.785322621 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.784737174 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.787423379 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.790303483 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.786347005 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.785226743 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.788164689 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.787706648 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.785139239 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.785505633 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.785778066 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.784761575 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.785773505 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.787122425 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.786695597 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.786629697 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.785245938 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.786118654 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.789610191 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.78534048 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.78829444 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.787703159 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.787863913 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.788257782 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.790117947 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.786416463 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.788386111 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.789297855 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.786555811 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.789078785 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.785553523 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.78622111 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.786352201 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.786796975 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.78938178 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.79037397 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.789372194 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.790739327 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.789531767 seconds)
  done (took 99.994659631 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788654173 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.788246885 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.785716626 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.789530065 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.788490729 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.786236979 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.789258427 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.785761619 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786447031 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.790263949 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.788399175 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.79027732 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787599982 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.789042766 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.789091991 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791070978 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.786868792 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.788737755 seconds)
  done (took 33.895322936 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.788634058 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.787250112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.790220315 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.787460835 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.78816576 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.79148295 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.787129428 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.793955406 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790769035 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.789369504 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787067524 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.790990465 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791371979 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.791798689 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.788662503 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787896938 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.790670448 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790508692 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.788082434 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.788431465 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.791635876 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.791326258 seconds)
  done (took 41.080019248 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.790833897 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.790820441 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.80838041 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.814824188 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.816042862 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.82791689 seconds)
  done (took 12.554374957 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788776877 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791637317 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.788184039 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791002367 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789930075 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788852591 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788753674 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788864019 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792274485 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788937828 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789363236 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790410569 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79322067 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788892239 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792864943 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79138878 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788026484 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788925096 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789672315 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793177515 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788332891 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79174008 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788176112 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789122464 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789547127 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790005145 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791773545 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788891758 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789660247 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792103897 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791335435 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787788442 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791120384 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787524722 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791979545 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792001969 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78937261 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791183882 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791002931 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7885777 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.791562055 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792850922 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791682967 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790314356 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793005922 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789037569 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790098264 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789512497 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789488454 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791732118 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791179011 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78884813 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791221795 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791378773 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79144039 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791997951 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789515428 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789678481 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792699823 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781879984 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781517494 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785087405 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783745828 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781481624 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785452541 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781183787 seconds)
  done (took 119.82044439 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781022187 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781262498 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78231035 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781448915 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781132689 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781629833 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780679518 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78165363 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782336738 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779918013 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782507851 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781187909 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781383644 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781861965 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78195668 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.780997318 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781855658 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781456854 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782122063 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784967438 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7814059 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782786152 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781935973 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781465361 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78349887 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78487424 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78253662 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782039929 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782187256 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781914439 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781571226 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783269751 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782691574 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.783190196 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783015512 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782486393 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78314513 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782490726 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782763499 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78403582 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782591591 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786179193 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782534468 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78292351 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782471327 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782409433 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781755932 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782493007 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782649168 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781585055 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781904698 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783330966 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782647613 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782846954 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781408701 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782273206 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781988257 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781928343 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782176109 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787547946 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782624378 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783171719 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785545198 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787503116 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784726446 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78333474 seconds)
  done (took 119.351730586 seconds)
done (took 2450.747309798 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.826988249 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.791933296 seconds)
  done (took 15.319203287 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.949026415 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.901920289 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.786197169 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.814021215 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.787625043 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.80939643 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.806682457 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.787536055 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.784602976 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.785319865 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.784801138 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.968392168 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.838688343 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.780738836 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.77927079 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.871845557 seconds)
  done (took 50.942649008 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.781984715 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.781679492 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.793110478 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.783773213 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.782507347 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.793726357 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.815177832 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.786854083 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.816264872 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.795651043 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.851220582 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.795296798 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.780884847 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.830298089 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.797203223 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.796576188 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.877001161 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.858605544 seconds)
  done (took 34.210883251 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.860990183 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.786949902 seconds)
  done (took 10.348186377 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.80364316 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.770562646 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.851575486 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.788442113 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.785099395 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.769707152 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.810381645 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.818817238 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.776475572 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.773309554 seconds)
  done (took 69.640737716 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.779740333 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.775271146 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.777566215 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.773027033 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.766897875 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.77269639 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.772943972 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.772644323 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.445078936 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.810815117 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.78152831 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.777588708 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.772678738 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.774754732 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.768514721 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.797431963 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.880351145 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.767512233 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.766059907 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.777368734 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.772948561 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.830269793 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.787155617 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.773848425 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.802567611 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.446251157 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.78341371 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.778200627 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.894937463 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.767463707 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.772869704 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.773950558 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.775453968 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.153280378 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.043573576 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.774376368 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.78762706 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.781340191 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.767932917 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.895918693 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.77368603 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.781570456 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.512299658 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.043033279 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.86782177 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.816019399 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.111530733 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.795705071 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.77555729 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.803026701 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.777470356 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.775847081 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.788208041 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.254248571 seconds)
  done (took 127.038387962 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.76761779 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.120974895 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.94076374 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.772530178 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058281357 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98326324 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.771908787 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.822271827 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.772193391 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.003010387 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.028780363 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.880242101 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.772879743 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.770926955 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.769822966 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.76892391 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.929157601 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.846872423 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.772750788 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.76906555 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802962232 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.015679498 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.898920328 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.774326258 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.800368918 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.986644145 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.898131439 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.88073867 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.503760536 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.768929516 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.837091195 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.772966436 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.770692939 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.77049981 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.930962147 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.869536419 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.858238103 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.77378134 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.769969744 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.769832549 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.526352797 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.974827817 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.871647057 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.906729885 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.027965596 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.981430786 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.557395857 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.770804666 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.517560621 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.941312442 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.004316096 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.005420168 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.898036896 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.775377183 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.034894759 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.770934222 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.772151151 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026111371 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006463704 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.875499113 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.777057449 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.773394072 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.771324705 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.066668803 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.776756049 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.87162676 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.776398024 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.774939125 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.872580223 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.877222401 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.011208639 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.991791301 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.810062409 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.104621706 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.288429799 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.024754733 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.846165835 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030680678 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.776909391 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.773188248 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.856382395 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.625474132 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.032242819 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.060576634 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.02668173 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813874024 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.500513717 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.773233482 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.002973531 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.001127961 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.037824937 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.022533258 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.016698593 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.105536442 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.773220922 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.772546863 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.027444429 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.901888201 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.777132882 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.126956415 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008359346 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.308265555 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.804593633 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.081719943 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.911626165 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.776816169 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.417434769 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.774686909 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.00848394 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.818830033 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.77603184 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.774382265 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.99821796 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.769836443 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.775283345 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.666901918 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.841102579 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.777018616 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.013658653 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.778990211 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.048128651 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.779521048 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.013705737 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.198964681 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.809125696 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.952607592 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.025751437 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.778488689 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.019496511 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.024708366 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.896914741 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.055340268 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.684028161 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.775967843 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.066912954 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.781500329 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.775572249 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.949454243 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.777014257 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.922705712 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.778178037 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.074189297 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.803172377 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.011854287 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.779718168 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.038656812 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.814407625 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.831700878 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.783260523 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.91014141 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.77800502 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.613181624 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.937176938 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.779839601 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.775619855 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.32763169 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.778930984 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.92950106 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.009820724 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804688558 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.855223932 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.446154459 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.776919794 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.860898511 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.806900139 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.161461617 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.780107455 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.032559219 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.780138009 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.777536709 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.777042759 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.070080013 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.020277421 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.781172082 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.777974402 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 3.146045884 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.776355226 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.777830275 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.962859656 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.207940575 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.777200738 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.983750606 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.784274262 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.909213284 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.782507739 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.851292258 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.115591975 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.778951964 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.776988643 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.77823419 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.776112227 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.775368163 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.990230413 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.807693797 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.272858635 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.917334276 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054208394 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.092803927 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.021708375 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.823713253 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.778424887 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.038606641 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.780801329 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.843862079 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.781039106 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.801896863 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010237212 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.781117362 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.99364361 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.052872955 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.629012876 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.828641934 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.782151248 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.778260679 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.77578376 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.926741631 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.864359313 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.779729998 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.775614561 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.895800249 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.905571809 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990853978 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.779283248 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.824823369 seconds)
  done (took 882.993526789 seconds)
done (took 1192.194017038 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.781357343 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.774885992 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.762085432 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.779351649 seconds)
  done (took 28.794010534 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.782760111 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.781781529 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.784016985 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.781704696 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.784913704 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.781831176 seconds)
  done (took 12.393475598 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.802736852 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.77656004 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.77846159 seconds)
  done (took 21.054199855 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.853936614 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.172792348 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.919099232 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.208411183 seconds)
  done (took 9.851190607 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.78434156 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.783596766 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.783697293 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.786684295 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.785735292 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.785338242 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.786751493 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.788407826 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.785432132 seconds)
  done (took 17.767574853 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.962057149 seconds)
done (took 95.518778719 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.042174367 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.851894844 seconds)
    (3/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.919422357 seconds)
    (4/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.004000843 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.923639248 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.408814225 seconds)
    (7/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.847984708 seconds)
    (8/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.068241498 seconds)
    (9/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.874226221 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.981999289 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.790865235 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.816750495 seconds)
    (13/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.78187402 seconds)
    (14/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.021394161 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.762371575 seconds)
    (16/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.032055683 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.892738132 seconds)
    (18/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.781473691 seconds)
    (19/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.83743648 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.036202744 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.922042718 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.954330506 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.865470416 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.805965677 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.762354181 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.200347875 seconds)
    (27/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.801383304 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.761450087 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.49959097 seconds)
    (30/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.788340387 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.857856652 seconds)
    (32/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.659991824 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.881268734 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.785596376 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.203743121 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.094657718 seconds)
    (37/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.025243247 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.049154999 seconds)
    (39/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.282668909 seconds)
    (40/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.597477444 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.811712236 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.096269536 seconds)
    (43/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.943432319 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.952464817 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.762180048 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.180390147 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.736191419 seconds)
    (48/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.984190593 seconds)
    (49/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.768029569 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.045815934 seconds)
    (51/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.758755865 seconds)
    (52/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.991760292 seconds)
    (53/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.937059912 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.819743029 seconds)
    (55/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.776336187 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 2.084854534 seconds)
    (57/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.795114369 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.777317167 seconds)
    (59/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.243723895 seconds)
    (60/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.457467237 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 5.441852791 seconds)
    (62/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.929977572 seconds)
    (63/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.848904699 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.876143738 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.899556593 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.038691558 seconds)
    (67/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.593060965 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.912184744 seconds)
    (69/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.899643768 seconds)
    (70/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.765371938 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.02040477 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.487199407 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.798977897 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.758861428 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.141226244 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.78249087 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.873705115 seconds)
    (78/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.774741505 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.267713689 seconds)
    (80/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.979392199 seconds)
    (81/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.218731453 seconds)
    (82/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.87243527 seconds)
    (83/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.879940018 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.420057456 seconds)
    (85/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.765357992 seconds)
    (86/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.836909506 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.124581536 seconds)
    (88/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.825875491 seconds)
    (89/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.839522909 seconds)
    (90/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.950921607 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.470774704 seconds)
    (92/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.916035304 seconds)
    (93/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.862931718 seconds)
    (94/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.863959699 seconds)
    (95/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.013597837 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.122293916 seconds)
    (97/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.000611123 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.571357599 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.680109164 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.576586958 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.780044917 seconds)
    (102/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.8836752 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.704529782 seconds)
    (104/309) benchmarking ("sort", Float32, false)...
    done (took 5.519897317 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.762029733 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.908378504 seconds)
    (107/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.102935135 seconds)
    (108/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.871550219 seconds)
    (109/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.559276349 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.778939354 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.876558717 seconds)
    (112/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.640799822 seconds)
    (113/309) benchmarking ("sort", Int8, false)...
    done (took 4.685965059 seconds)
    (114/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.796446328 seconds)
    (115/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.90443151 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.766586833 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.07797478 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.779822874 seconds)
    (119/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.213168798 seconds)
    (120/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.901125421 seconds)
    (121/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.281391492 seconds)
    (122/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.812492753 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.91715593 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.117012432 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.780577368 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.458152043 seconds)
    (127/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.931303176 seconds)
    (128/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.775280105 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 3.584373355 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.894552059 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.778159451 seconds)
    (132/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.801896419 seconds)
    (133/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.778191134 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.876267467 seconds)
    (135/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.464946782 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.9019502 seconds)
    (137/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.861907592 seconds)
    (138/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.911861751 seconds)
    (139/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.008445547 seconds)
    (140/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.910139591 seconds)
    (141/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.762094008 seconds)
    (142/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.575834393 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.812093281 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.88466169 seconds)
    (145/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.869042766 seconds)
    (146/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.680262682 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.033995244 seconds)
    (148/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.006338025 seconds)
    (149/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.782793604 seconds)
    (150/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.91203552 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.933430567 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.038667578 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.801794074 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.801162863 seconds)
    (155/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.065949738 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.845711625 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.801363119 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.96364966 seconds)
    (159/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.808013906 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.045874597 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.800459347 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.502586389 seconds)
    (163/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.782080442 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.054498874 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.956073526 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.107537806 seconds)
    (167/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.781889368 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.136722941 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.022344132 seconds)
    (170/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.780478461 seconds)
    (171/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.579034551 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.971531366 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.558712908 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.779772054 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.781361423 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.761977927 seconds)
    (177/309) benchmarking ("sort", Float64, false)...
    done (took 6.201070607 seconds)
    (178/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.217596719 seconds)
    (179/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.789141487 seconds)
    (180/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.786828724 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.082564421 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.888305627 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.127856296 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.764624451 seconds)
    (185/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 3.257152272 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.888022863 seconds)
    (187/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.860003867 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.504151312 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.466148745 seconds)
    (190/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.801344601 seconds)
    (191/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.760434802 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 3.439319951 seconds)
    (193/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.137956789 seconds)
    (194/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.018336466 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.900027894 seconds)
    (196/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.220380469 seconds)
    (197/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.150534787 seconds)
    (198/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.983536176 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.877636622 seconds)
    (200/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.465060557 seconds)
    (201/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.237920116 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.151761052 seconds)
    (203/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.785591205 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.707108233 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.096071269 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.198084971 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.850117769 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.132188743 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.765564384 seconds)
    (210/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.975933145 seconds)
    (211/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.855328443 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.28220504 seconds)
    (213/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.854905563 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.186049042 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.021918189 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.783949076 seconds)
    (217/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.128780018 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.808268072 seconds)
    (219/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.266190682 seconds)
    (220/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.783148407 seconds)
    (221/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.307337597 seconds)
    (222/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.929107628 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.98214791 seconds)
    (224/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.761141494 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.644468195 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.740773109 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.784223393 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.803527093 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.960040039 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.813261634 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.802503176 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.191567957 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.798384528 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.803023505 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.865329022 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.077069126 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.170796814 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.782088581 seconds)
    (239/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.784458164 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.954252383 seconds)
    (241/309) benchmarking ("sort", BigInt, false)...
    done (took 6.782510169 seconds)
    (242/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.731711061 seconds)
    (243/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.811618476 seconds)
    (244/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.788597486 seconds)
    (245/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.923164909 seconds)
    (246/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.964993322 seconds)
    (247/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.78296132 seconds)
    (248/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.908510201 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.780471937 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.79188362 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.779363676 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.910096938 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.838371134 seconds)
    (254/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.982865481 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.920332335 seconds)
    (256/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.714950574 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.787066325 seconds)
    (258/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.081868801 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.732083457 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.203289383 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.810798647 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.864134046 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.781907327 seconds)
    (264/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.992461538 seconds)
    (265/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.941977693 seconds)
    (266/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.784337446 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.114541469 seconds)
    (268/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.917884822 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.92297176 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.810446826 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.92192488 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.123177449 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.961632005 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.786959509 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 3.320785817 seconds)
    (276/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.785456955 seconds)
    (277/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.504726252 seconds)
    (278/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.003384443 seconds)
    (279/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.082042588 seconds)
    (280/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.109613352 seconds)
    (281/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.163047864 seconds)
    (282/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.813809725 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.045108259 seconds)
    (284/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.987238403 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.058505668 seconds)
    (286/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.764702056 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.541327121 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.888819174 seconds)
    (289/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.801193804 seconds)
    (290/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.817898751 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.70924451 seconds)
    (292/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.86435915 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.782713805 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.998376271 seconds)
    (295/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.878658032 seconds)
    (296/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.068428716 seconds)
    (297/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.023597321 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.820305047 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.115863897 seconds)
    (300/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.946371491 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.890369257 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.999271504 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.003521317 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.697833686 seconds)
    (305/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.968873421 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.073559493 seconds)
    (307/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.081737647 seconds)
    (308/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.115296977 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.140293157 seconds)
  done (took 977.401364842 seconds)
done (took 979.167283009 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.813984814 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.807965239 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.789014696 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.811994518 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.902159485 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.814831749 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.801219511 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.791760937 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.838113907 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.838291176 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.788957694 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.812941463 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.791756266 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.790348952 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.791262402 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.806238108 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.101893786 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.817579795 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.806103938 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.798398232 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.808875723 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.787780041 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.840111168 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.814306431 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.794511431 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.792388618 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.794383255 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.809557961 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.902216654 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.795353653 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.793821577 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.802624033 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.102440441 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.816578881 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.786260437 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.811871284 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.802785017 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.801474899 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.794952353 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.823681023 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.186393886 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.826181286 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.793779668 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.79198373 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.791593255 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.794247785 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.792915002 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.796488862 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.807086196 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.808592667 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.179521854 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.843008928 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.795597505 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.792495172 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.802110499 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.792021319 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.794232851 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.809263642 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.812437936 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.810415557 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.085874554 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.822176946 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.794004684 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.808668764 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.800617798 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.213508109 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.823858346 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.796504978 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.186851674 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.836482278 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.216111028 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.837783575 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.792866911 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.808458787 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.824373322 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.105349497 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.814531272 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.79201692 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.80110523 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.790144443 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.802211529 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.806380188 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.797970297 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.793274091 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.809424192 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.818703257 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.804443136 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.794794058 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.80438467 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.81412987 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.801787211 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.80539604 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.796216477 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.787987668 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.803283431 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.79665627 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.797403502 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.799318895 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.798326654 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.804041797 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.185064372 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846434351 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.791267465 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.791435688 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.793359714 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.807871259 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.184107463 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.831299638 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.816613542 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.840261543 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.795566255 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.087566606 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.82391374 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.8127514 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.802885843 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.79613071 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.790528784 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.088355108 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.208961836 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.844171677 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.796357235 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.792931113 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.812924384 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.796340833 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.792003062 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.105014076 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.823309073 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.811028521 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.91730645 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.809843356 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.827629609 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.793235608 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.796305769 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.824961684 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.812260294 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.830664393 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.797016353 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.811585706 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.812727284 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.792126372 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.807880877 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.805633039 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.795767267 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.799470998 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.790020843 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.824883043 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.810996558 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.809259448 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.816458132 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.917836995 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.793700103 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.089427687 seconds)
done (took 282.066509564 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.868713934 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.796956492 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.891861003 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.794041977 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.875618657 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.882519586 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.792104047 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.792340347 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.791319359 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.175529583 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.792402206 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.79742711 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.793724182 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.796632667 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.878907738 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.795269765 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.793181079 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.136933379 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.797926542 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.872519404 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.796770303 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.794827873 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.796005559 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.186975246 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.798178017 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.788864345 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.875753332 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.797023542 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.143563364 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.797114331 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.798192133 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.151328398 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.897559509 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.814031632 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.805562341 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.803282027 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.881754957 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.799959572 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.879976564 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.879643427 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.895344676 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.837620184 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.793975465 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.797247464 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.799044793 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.799526124 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.793801122 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.824952208 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.800619535 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.794437654 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.143543399 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.809190042 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.796144598 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.795867395 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.795288699 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.82894814 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.796604972 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.800283482 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.894537399 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.800541496 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.863784288 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.183233495 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.179680669 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.797976833 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.792421315 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.794576194 seconds)
  done (took 179.522236774 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.864452464 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.87531377 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.863429219 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.804503153 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.847502147 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.864861456 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.802291486 seconds)
  done (took 14.634637421 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.806739675 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.801455333 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.848930971 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.850993194 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.802013845 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.955488978 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.8017204 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.811025383 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.806882626 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.852775758 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.800390513 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.801552119 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.796922146 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.796166947 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.851592676 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.810541965 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.91597435 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.801674347 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.800161716 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.949701629 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.796140747 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.804324933 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.831863003 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.810466617 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.799695202 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.809251121 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.364010406 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.801577923 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.797112764 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.799690385 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.799696326 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.841511857 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.79985257 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.795494703 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.796850025 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.913446761 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.80315763 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.796849304 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.801708941 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.800031866 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.800459724 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.80207972 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.801807943 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.798254894 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.800800846 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.824182488 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.800366038 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.800836234 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.800846749 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.800381497 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.834266361 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.801275757 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.798471044 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.79879664 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.854170517 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.807872559 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.803334542 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.798032921 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.800641273 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.79933558 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.950715272 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.850779172 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.800900907 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.851664983 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.80146965 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.801170842 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.801038389 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.801226558 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.893597253 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.801339449 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.850001715 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.799273533 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.959790841 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.825281004 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.802623665 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.805115755 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.806380791 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.803035471 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.796966657 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.810034836 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.79944798 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.803514828 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.809183712 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.800847859 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.799558118 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.914200401 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.90884848 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.799839408 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.815939993 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.811073276 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.800812986 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.83875007 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.802526033 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.800068433 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.859741095 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.920316692 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.857820047 seconds)
  done (took 199.021880579 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.808346182 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.811613703 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.8047743 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.822216929 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.803934414 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.803326566 seconds)
  done (took 12.571581496 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.806733518 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.80292637 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.801857785 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.803464978 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.804228478 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.803405908 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.805450661 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.805291865 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.808054802 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.80329708 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.803020021 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.804853633 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.807593274 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.80464604 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.80653602 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.803714862 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.807135965 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.80133691 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.802020849 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.805913337 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.950414931 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.806447598 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.803737884 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.807901513 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.806685944 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.8041366 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.814304038 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.803711708 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.803345557 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.812683511 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.808474727 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.805435898 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.80873506 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.809382863 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.809081895 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.807303149 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.808231846 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.806727134 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.802244677 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.8043461 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.805373921 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.807069942 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.804394623 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.806200954 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.807090668 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.811823082 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.80828904 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.813937983 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.807666995 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.806712721 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.806533823 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.805581125 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.806768652 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.806395604 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.809362635 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.811086268 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.809833476 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.808959822 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.807205141 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.809699173 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.805672429 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.805215433 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.807455584 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.812411056 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.81287882 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.806985681 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.808464636 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.810121221 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.806739907 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.806243737 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.806398934 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.803749666 seconds)
  done (took 132.947376586 seconds)
done (took 540.421390462 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.07469254 seconds)
  done (took 8.794001075 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.873687769 seconds)
  done (took 8.653360533 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.142714223 seconds)
  done (took 9.871027624 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.81044873 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.831035003 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.814384515 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.801227471 seconds)
  done (took 28.998725133 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.904466036 seconds)
  done (took 8.62585722 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.819699485 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.797840676 seconds)
  done (took 15.372279025 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.956779047 seconds)
  done (took 8.677153899 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.840589831 seconds)
  done (took 8.610391949 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.824685603 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.837872166 seconds)
  done (took 15.408188393 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.784019787 seconds)
  done (took 8.50355152 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.024698175 seconds)
  done (took 9.84924263 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.820910763 seconds)
  done (took 8.60717758 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.880282109 seconds)
  done (took 8.602471846 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.886906939 seconds)
  done (took 9.606949598 seconds)
done (took 159.900115256 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.817539187 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.804802925 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.801198998 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.803717751 seconds)
  done (took 28.94768126 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.841404198 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.841368282 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.843912496 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.852382291 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.844722107 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.841983517 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.835137751 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.840121775 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.852942176 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.845740589 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.844014953 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.843948516 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.841413614 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.833304783 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.845216135 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.843923963 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.852067734 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.842300186 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.836214355 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.845709057 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.809317401 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.852525418 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.845496946 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.810007384 seconds)
  done (took 45.907976859 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.003804692 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.879329127 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.963584746 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.861196154 seconds)
  done (took 9.430587766 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.860790138 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.863956528 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.874257682 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.912369261 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.938832623 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.872396553 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.836434088 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.830797847 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.817442429 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.863746793 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.938628266 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.85703299 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.949320873 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.810638974 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.004904574 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.810343764 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.809425074 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.860404291 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.912789746 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.936122289 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.809860567 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.860425335 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.867037257 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.857448495 seconds)
  done (took 46.679373453 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.8096687 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.817434579 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.816072916 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.809173676 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.811311532 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.810260441 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.815356784 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.809558276 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.831969664 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.812010845 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.809276341 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.809443057 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.808448981 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.80919372 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.810109094 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.823315359 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.824001755 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.809234751 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.813112634 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.816737005 seconds)
  done (took 38.000271559 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.804907654 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.658444607 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.157383919 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.061535175 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.807578494 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.80902511 seconds)
  done (took 31.023913848 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.823760114 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.816453588 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.811843355 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.868284416 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.949090207 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.817194883 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.812847184 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.822687523 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.857084647 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.877628991 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.830617247 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.839616476 seconds)
  done (took 23.852312963 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.807381916 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.808822545 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.808570007 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.824659799 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.8231386 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.81884271 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.819317712 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.806614572 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.824703654 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.829184865 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.820530571 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.822962229 seconds)
  done (took 43.542838641 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890447706 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.696584804 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251635285 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272931308 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.338718575 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.016942291 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.807620509 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.898779565 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.810994021 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.081570361 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.141230012 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321746446 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.070669855 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937416864 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.821409589 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.279381203 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113064831 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034934632 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845152722 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.440185341 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930575762 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412645402 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.503192791 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.930038192 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.028343475 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.951302024 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.079090967 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.776990412 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872936897 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828456308 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827788618 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.820304979 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092896743 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944686413 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894336745 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830035053 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.241060161 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.531847797 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.804750115 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.510214787 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.376057428 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.939685447 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827469419 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82135306 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.753230638 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419225323 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922532954 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.824587247 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.522233039 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.821090792 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.830715698 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900363969 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.82339731 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.636064628 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.510859408 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.094676403 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.8175429 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826858398 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386823193 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832652036 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.513210077 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.765375727 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.917379797 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.447309448 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283552881 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.976437261 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.824179957 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824430767 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755376102 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.511252015 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934468843 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965034203 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.840462364 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469479883 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130717552 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.232564155 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.879817264 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095918933 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.693455616 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.764943485 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046465245 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.776542597 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754448583 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.683363131 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.754878828 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045282604 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857818219 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.415398818 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859101799 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.911858081 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.832816702 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844021462 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829642807 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.044606645 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.700142698 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823772819 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.13609857 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.08590564 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844542229 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.915652609 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758112856 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.82670645 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077294114 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.032253929 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.146362464 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.288109075 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914206917 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824301048 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.843015194 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.824115971 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.84154216 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.094083487 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887247238 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.8231124 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942980749 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.778345136 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073216115 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857123971 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.924805132 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.18433967 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063907851 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.159178504 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.075771716 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891805263 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.825420688 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.825961612 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.517775514 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.44342639 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.04704836 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.821115516 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405070378 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.842126798 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.828064391 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75916535 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.63831696 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.173461074 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.906936029 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.045125298 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.83323043 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101674726 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758538566 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.969675578 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.824969449 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.045639955 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.46968636 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.900574371 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083582485 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.158122326 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.143016621 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843628087 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843975171 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923060882 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846005 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.344079329 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.086749156 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.829159102 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.829033497 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.522071801 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.882696406 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831930486 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.830428061 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.359418905 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103276638 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.854012536 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.831177146 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.715591655 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.839187294 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893569155 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.830686545 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.835749044 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.382764125 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.33985832 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.83481408 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.567785614 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053179775 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836324962 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.448735501 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00015525 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.847717557 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097295758 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89145914 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.760098094 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.530509183 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.530418347 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828939356 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.763530607 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.8286901 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835672147 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840515001 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.024468165 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.104760742 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877017435 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.503349158 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.932064185 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839407218 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.831286065 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829179071 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.352594952 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.836007847 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.518937668 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.843686832 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963602094 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.843197531 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.761572068 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.831813633 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.831618149 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.83042699 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.784795687 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882389873 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.495941346 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033320758 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087037547 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.245011132 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843814464 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.501975418 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.942559651 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.850811505 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.113868625 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.547153308 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.840789654 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912944616 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.84145516 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.45513994 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.566680306 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.395819875 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123329897 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147351314 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173384938 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.396164456 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.051231342 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.919674575 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061197332 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.356260584 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888999297 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.923776402 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770454494 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84920253 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.473671765 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222898859 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842017358 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052704714 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115692687 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.171585301 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963115228 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040349094 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863641415 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.836184166 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.757861245 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.34912557 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852477781 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.264696767 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030809546 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919844657 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.104765596 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.903281368 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.830504186 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161625924 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871598861 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.538909044 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.189215312 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.282890917 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.314182617 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055346987 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.836278627 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.275278632 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178202618 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.084572857 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.981041076 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763970313 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.840146647 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.839983922 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.827410867 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.807987583 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.742623807 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.086191827 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845261146 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067354205 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.015789519 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205621091 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.736264479 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.83828707 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83517647 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084452701 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.636421637 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001550011 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.20249682 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.422707902 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843861343 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.768450762 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767596521 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.536592173 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.841922468 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.80837597 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043201022 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.942554705 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.521632276 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271348981 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157534277 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.08866257 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.847861071 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.108451928 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113652672 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.335925855 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860998017 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.934411045 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.119908518 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.505757438 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.058258969 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.072977272 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378377329 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.063993807 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288741438 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.792105242 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.838228891 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051156555 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.061853886 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.177729834 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014908859 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.550009384 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.849872986 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214912189 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900282181 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.182371338 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.025074694 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.931516564 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854258461 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92065763 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848583295 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.849785849 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.849583492 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852527363 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.187621963 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.952793899 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.852945159 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921928366 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840400227 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.41421341 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.851479311 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111101765 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189691375 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166895986 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903655324 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.83953252 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840915825 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772729023 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970825227 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.283893428 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113386735 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.9630144 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.98259615 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862655107 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.120520444 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.152212501 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159566351 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114447119 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.734772177 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.596596925 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.971402166 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.062160892 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850162436 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.049893028 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064180062 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143723147 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30835864 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.042024874 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.045426038 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115630901 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.212610086 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.840273982 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.431153596 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.850705144 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.248170582 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.874214903 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.186892707 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098131691 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849391584 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965557883 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.849465367 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.038122371 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.293464257 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.7712698 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194212367 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.693540444 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.848654875 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115901363 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.16846249 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150510989 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923419617 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850396366 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.538007386 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977700114 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.732049961 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.080688309 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.840875192 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051252957 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.553706924 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.850031933 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113515363 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151255689 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.839818138 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.765743658 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880479365 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.852859371 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.062665745 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056525779 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091934076 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851373697 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.84862597 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.657393001 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119277152 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904171112 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775587722 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.84454125 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891559087 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075555459 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864245465 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.359275967 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.545605326 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123114611 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.759726288 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864596338 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299310526 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.22586266 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1728635 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.373369718 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063937959 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.399157232 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.745782048 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22885964 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.849247459 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.340827236 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231362494 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.847371796 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399629633 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965780532 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.116771538 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172665623 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.862436617 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.591269351 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.879141209 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066227758 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210770734 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781749648 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849010577 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.874831946 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.846663403 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.836889131 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856569979 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.802545784 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342285133 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.691493216 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337098744 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.850864428 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.836622466 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.151427569 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41805821 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961257447 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8707135 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850376179 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.565243101 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.135385112 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.098612088 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.406624317 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.922406086 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.847286937 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848012355 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.772281779 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.03653844 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.041086666 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130659625 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.253670825 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.964182844 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848753416 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.060989078 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057398162 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.195491135 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9783799 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.027479877 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965183863 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.768629886 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.559704407 seconds)
  done (took 1647.483442482 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.863043572 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.867095671 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.848428644 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.890605868 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.866790393 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.865094375 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.90709658 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.852475478 seconds)
  done (took 56.723807204 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.842406763 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.002061918 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.848643379 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.843265679 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.852549925 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.842237606 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.032486917 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.856508343 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.851018117 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.851649727 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.843904717 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.842805088 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.10834667 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.870102118 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.84383124 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.83046806 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.852347001 seconds)
  done (took 73.780348953 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.848071464 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.06988895 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.875452263 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.841603841 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.036963371 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.843720152 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.845974723 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.854893382 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.852977122 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.267095786 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.140447827 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.858402154 seconds)
  done (took 90.094335025 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.861383212 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.849295909 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.847431214 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.847963184 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.849011333 seconds)
  done (took 11.019840798 seconds)
done (took 2148.298887211 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.074582625 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.045838769 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.076953216 seconds)
  done (took 5.881489096 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.990810228 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.039564231 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.159070268 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.162432854 seconds)
  done (took 10.114681655 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.135014572 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.215449879 seconds)
  done (took 6.110347137 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.166582089 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.869247948 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.264946965 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.84182138 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.841774944 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.842296755 seconds)
  done (took 22.290595562 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.848466086 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.846132348 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.848234437 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.84995854 seconds)
  done (took 9.152663982 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.824172096 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.555191084 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.825978109 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.840828084 seconds)
  done (took 20.803854796 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.997158481 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.986644223 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.988015741 seconds)
  done (took 7.72968621 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.068046856 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.074509004 seconds)
  done (took 6.901644277 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.010743302 seconds)
  done (took 3.769799575 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.872587929 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.116293671 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.354229685 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.402164525 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.463799522 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.689056324 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.16277825 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.077704487 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.311947064 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.312533635 seconds)
  done (took 24.521236797 seconds)
done (took 132.411079221 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.186553094 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.865368988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.045865215 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.204687265 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.070502323 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.048733133 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.065193063 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.19051763 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.877718297 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.869905843 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.205367446 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.070385911 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.009932042 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.856243865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.019158032 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.859372612 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.064394785 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.203139774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.8891396 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.129622439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.075416114 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.851588473 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.046781307 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.865554644 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.070459343 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.002326522 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.394003827 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.863099353 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.030826924 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.406951384 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.043410476 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.272287522 seconds)
  done (took 167.414363607 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.848182823 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.847826123 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.849490866 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.848161014 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.380121173 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.848644949 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.847424765 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.846731295 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.260438381 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.248407996 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.849063388 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.373455176 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.849663666 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.845082911 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.84494461 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.847980406 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.404019182 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.84775193 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.849639183 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.849723244 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.847764216 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.233655892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.848515541 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.235217016 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.392687703 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.851346929 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.849924134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.848520815 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.848214831 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.848183509 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.852019479 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.84794645 seconds)
  done (took 208.653931804 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.849192424 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.848408937 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.850042149 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.849756816 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.850290981 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.851131092 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.853274755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.849911398 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.459040782 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.454831045 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.869359233 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.850227187 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.853054514 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85191125 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.848586654 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.848495074 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.847934645 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.851523639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.848930553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.848387436 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.855042141 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.416140447 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.851700534 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.424942125 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.851533244 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.850286137 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.85159709 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.851027997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.851659144 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.849928804 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.851242937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.850323413 seconds)
  done (took 219.352395031 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.102778498 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.854358954 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.857946452 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.765511195 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.856411805 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.855129342 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.863516168 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.10793166 seconds)
  done (took 19.035881461 seconds)
done (took 616.22635639 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.361828684 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.221660111 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.03800446 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.879163389 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.219470547 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.934892107 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.871985923 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.942348767 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.493079442 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.945539508 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.533584137 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.898220294 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.608643742 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.899866534 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.998662086 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.933728882 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.46313246 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.551288958 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.053047109 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.046217061 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.065024669 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.802458786 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.958829697 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.52980368 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.636101377 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.852548029 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.932382759 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.465320367 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.884423255 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.034758575 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.635193893 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.184729436 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.890787417 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.876558926 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.930250428 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.906732893 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.134209567 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.889802129 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.005962124 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.614027093 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.04064202 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.417641988 seconds)
  done (took 102.347062484 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.844540588 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.841035398 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.841599841 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.842840801 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.843223457 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.839734348 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.83978151 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.842239153 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.84032371 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.843736492 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.842968303 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.845029798 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.84309229 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.845369214 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.842694977 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.841662963 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.841822526 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.845006352 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.842440733 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.84398795 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.842277668 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.843715747 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.861493973 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.844012177 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.843701837 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.842581182 seconds)
  done (took 49.705552981 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.859437378 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.027169604 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.104013697 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.881932562 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.859643135 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.862876054 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.879934639 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.864947481 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.86052185 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.86194993 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.962755165 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.867036236 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.878068725 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.098382604 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.875880144 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.860327671 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.85757659 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.856404119 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.033901604 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.875586361 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.876523122 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.863705245 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.878025498 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.871662987 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.857987319 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.859026718 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.863457319 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.352550553 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.87149816 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.963833256 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.903434951 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.882753924 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.300579853 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.114030149 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.917383006 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.867768666 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.859718614 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.963892892 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.867122434 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.857497386 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.876100714 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.863593779 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.097890027 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.372520244 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.87740796 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.859634242 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.360864049 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.978513608 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.899043817 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.871372391 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.099288064 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.875642294 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.857808182 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.858182 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.895074146 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.863585553 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.859599847 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.211480567 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.877581224 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.87506829 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.867381393 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.860512282 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.035107159 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.871857025 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.029736164 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.872298192 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.865887021 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.861144199 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.10468012 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.879508394 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.374122256 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.876073816 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.858732103 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.963338155 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.033709248 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.396070035 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.875101872 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.035900339 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.31957505 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.887646345 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.866957589 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.344651718 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.896020504 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.870666684 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.861911353 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.863101047 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.859447141 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.900882926 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.879118801 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.297489747 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.382708872 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.234571894 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.889431834 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.8775456 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.863444122 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.213746236 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.87317898 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.862983139 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.097054442 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.383830864 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.878291051 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.870485309 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.360746155 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.881011541 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.881734684 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.870481714 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.107562243 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.879681205 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.904443004 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.861541863 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.869416141 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.863975624 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.881162463 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.870670833 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.864500668 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.35074947 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.986891541 seconds)
  done (took 231.496453977 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.858932128 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.864699776 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.857407649 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.863822546 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.858985415 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.860162303 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.85894213 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.859701765 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.86341137 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.857529059 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.856652953 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.860542139 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.860526179 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.857671357 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.868179297 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.865280268 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.465704824 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.857924166 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.861376103 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.859573867 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.519489041 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.864045933 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.857973877 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.858613484 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.857820231 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.86055514 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.858769547 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.862002507 seconds)
  done (took 167.132538868 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.866173164 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.978751276 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.883859687 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.894461358 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.874069615 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.86183357 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.887893373 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.87863265 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.871182086 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.861984909 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.861227919 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.927308773 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.876368915 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.96349922 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.898124337 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.895373863 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.969194288 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.872513596 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.861529374 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.862788855 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.894948553 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.85620986 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.925515811 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.991216377 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.884069402 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.980393905 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.86516827 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.86675898 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.864783436 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.983138212 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.881437059 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.922978638 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.896516 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.886562916 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.988419273 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.982612924 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.969049139 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.895258365 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.866468379 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.861764233 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.861301925 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.847027424 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.981840461 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.886965593 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.86839746 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.965098659 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.886686643 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.865897009 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.873902167 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.863564454 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.878941755 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.886326334 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.93449706 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.998010143 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.898571116 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.890266428 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.891251276 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.136800124 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.875067307 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.965792806 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.855030917 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.983681458 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.889735278 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.848392531 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.865950145 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.869446776 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.89476661 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.898311897 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.971050232 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.874725013 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.966404116 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.897700011 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.873782789 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.861826416 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.868881816 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.985570488 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.986135945 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.902498737 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.904754255 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.903016638 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.858434818 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.86594132 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.849025201 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.883065045 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.86990469 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.981359195 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.986842303 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.875889767 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.866436048 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.869484822 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.868732906 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.894671998 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.995449667 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.90520237 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.957098099 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.936563244 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.945632768 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.883512973 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.880605096 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.871124948 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.932844494 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.882449823 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.883166486 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.187194863 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.940205518 seconds)
  done (took 202.118315148 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.259079864 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.915299481 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.924272934 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.180165279 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.213685401 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.788574273 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.917590317 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.915233718 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.939053873 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.101515133 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.976122621 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.93193623 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.908278658 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.89195936 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.916438255 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.938725943 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.924986854 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.251843496 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.014793763 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.057230135 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.907740033 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.187607287 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.189492433 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.329757515 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.954209272 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.328180814 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.495466197 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.057954135 seconds)
  done (took 61.20088569 seconds)
done (took 815.766966257 seconds)
SAVING RESULT...
DONE!
