cset: moving following pidspec: 3981
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.242310045 seconds)
loading group "string"... done (took 0.554692206 seconds)
loading group "linalg"... done (took 7.770542792 seconds)
loading group "parallel"... done (took 0.173053777 seconds)
loading group "find"... done (took 1.171557677 seconds)
loading group "tuple"... done (took 1.832812299 seconds)
loading group "dates"... done (took 1.256712731 seconds)
loading group "micro"... done (took 0.233347718 seconds)
loading group "io"... done (took 0.768519384 seconds)
loading group "scalar"... done (took 41.164121269 seconds)
loading group "sparse"... done (took 12.884266663 seconds)
loading group "broadcast"... done (took 1.154693475 seconds)
loading group "union"... done (took 13.54688436 seconds)
loading group "simd"... done (took 4.818195449 seconds)
loading group "random"... done (took 9.76633675 seconds)
loading group "problem"... done (took 2.152967749 seconds)
loading group "array"... done (took 22.759245904 seconds)
loading group "misc"... done (took 2.135095494 seconds)
loading group "sort"... done (took 3.476345529 seconds)
loading group "collection"... done (took 19.665214152 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.590368788 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146063923 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.15623126 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.153498193 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.196526264 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158660528 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163025406 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09937603 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.005960269 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175147244 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155978249 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.532646063 seconds)
done (took 5.329424477 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.287138579 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094215176 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106063446 seconds)
  done (took 0.942507735 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078600188 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145786444 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096722282 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.081386574 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097388446 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078989628 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096921191 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078418193 seconds)
  done (took 1.422422225 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087940228 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098080877 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083382842 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098300683 seconds)
  done (took 1.113243608 seconds)
done (took 4.598690376 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.748452046 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.27923346 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.207262338 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.479146121 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198783697 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.221292865 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673551861 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.351023621 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.260669822 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10316384 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147137922 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395824453 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140822066 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677973908 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093524759 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127057111 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181629828 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.451229183 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083053058 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112539727 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.121463218 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143923578 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.133081361 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093003254 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187345674 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082242926 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.199439899 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111940723 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083073026 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.295621442 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203050507 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68429678 seconds)
  done (took 11.057088493 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110169169 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13627119 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101554683 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140367085 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138046726 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103008333 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08586537 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09904744 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124849088 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181082955 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11604994 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139832536 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098651043 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083586069 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118315857 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24908636 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121546804 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101178566 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103046515 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089471556 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141954571 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115837536 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111118198 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09505527 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169927183 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.227036146 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113744967 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129835781 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100312092 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.116413669 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145470027 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145959897 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097189167 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081532549 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176026446 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127245193 seconds)
  done (took 5.293222821 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.099008551 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191467557 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124090911 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171746983 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080781456 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142732331 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096454346 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11656386 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.264299316 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.210492509 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179280703 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145803479 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.111430878 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120966911 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101730482 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083744462 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.101710534 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.672630944 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158714676 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118115731 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119016955 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105341753 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102232815 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.35072262 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106175509 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.102854556 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08321307 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08411582 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16441956 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08352183 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.163833019 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.103952181 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103565956 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136158419 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108679195 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21681443 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112668406 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138382608 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09847399 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080316135 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17965244 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10462626 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079862942 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123261288 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136271498 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138743198 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099337717 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082553196 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.210307554 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.100496089 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115963764 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.937483944 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18348136 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091540192 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098374168 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32934973 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09934801 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098373603 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081660207 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.275673018 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.195616609 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099236656 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078795274 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097241985 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080652595 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.401205978 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080414453 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.639849236 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084353296 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109782419 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084563531 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099862587 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106085993 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089834559 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118395005 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080680394 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10241044 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080159127 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.1009015 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082758461 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111858865 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101647182 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08044821 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165898538 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081017961 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118327295 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128769151 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08615203 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098504526 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132161451 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085781111 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100660057 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136073692 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082763893 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097622099 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111184098 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08450546 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143433705 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100351032 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.143812683 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096860798 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126702821 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103109133 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116992939 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097358452 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117124774 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083079047 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102719025 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076803287 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096195932 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148473141 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098744351 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082162775 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10218632 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111253345 seconds)
  done (took 22.795544067 seconds)
done (took 40.987526488 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.329716868 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108409506 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107756353 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10809981 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105301316 seconds)
  done (took 1.580755813 seconds)
done (took 2.374165967 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291430867 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.177861624 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097653971 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.174820247 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096729525 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.180586778 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167528992 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.115308921 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208028266 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098972737 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.169997201 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097465762 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07845883 seconds)
  done (took 2.776155952 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095213423 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117678168 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083652552 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114630076 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077348879 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117156564 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094031596 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121499413 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113273052 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086361461 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096090875 seconds)
  done (took 1.91068502 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093864093 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116342359 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084652402 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113265881 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077469413 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113708509 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094028294 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120122398 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112650772 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087343668 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096762382 seconds)
  done (took 1.899918673 seconds)
done (took 7.369473103 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092328851 seconds)
  done (took 0.881577764 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.943264987 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.025650416 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113940648 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.152026585 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.29862727 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194143318 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.488285948 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127398514 seconds)
  done (took 11.340684366 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.115759328 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104975514 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.118500047 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084806412 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.108891708 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084860215 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.104515427 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103652294 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088725887 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.103301585 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087475706 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.102515662 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105933 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087473743 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10605152 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08633004 seconds)
  done (took 2.444520207 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119617771 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119571705 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111515398 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112903802 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088706594 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.110797897 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110295614 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090040272 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.106310649 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10715038 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092662428 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109588888 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107782468 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081872538 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110522137 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.111776944 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087252486 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110561088 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109927397 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09234778 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.1110321 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09917527 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08919322 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110495256 seconds)
  done (took 3.404528729 seconds)
done (took 18.863850273 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162667528 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111103052 seconds)
  done (took 1.070113614 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096379987 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114666974 seconds)
  done (took 1.010960082 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098453671 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097799401 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12548333 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114408744 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082797021 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.101054972 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124137376 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081978786 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.10092475 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081644645 seconds)
  done (took 1.811053237 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083718346 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111981418 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104160136 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097010126 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10935172 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097911049 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090792392 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.103557501 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113558822 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079208294 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105920627 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118224489 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088227175 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119891268 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.109203086 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084453772 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107038258 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102650507 seconds)
  done (took 2.631559114 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08035786 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098129564 seconds)
  done (took 0.977971874 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082381337 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095006761 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082987999 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102004736 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09689708 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.080174904 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097172556 seconds)
  done (took 1.435880699 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.491176943 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140660263 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.268064712 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107306284 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105921213 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.308991339 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.102753572 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086458258 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107780937 seconds)
  done (took 2.582382086 seconds)
done (took 12.316648746 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094139544 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117557587 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114891171 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.482490722 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.11019538 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.102758303 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.150330061 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.258955945 seconds)
done (took 2.23643197 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.144808697 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.407585263 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099544227 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085781751 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083804315 seconds)
  done (took 1.485258867 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080457084 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100625803 seconds)
  done (took 0.989437836 seconds)
done (took 3.432758068 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081404637 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097653399 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.111307028 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.100194838 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081015372 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.101248558 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078412222 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.102188522 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081216352 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.101269395 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098961726 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.082866445 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.099695805 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082652947 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097977367 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080587855 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100802311 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080587879 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09728092 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081738695 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101591263 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080627295 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.098591531 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081880739 seconds)
  done (took 3.04517925 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100760859 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099880178 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103446196 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087524539 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103279253 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085000081 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.106682179 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09855574 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086119829 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10070714 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101017967 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085627972 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101208199 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084155787 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102982957 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103100101 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088666312 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102167602 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084009911 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105094767 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105970115 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082272315 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104598083 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105858477 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087592061 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104910042 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084846165 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101634146 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105531591 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086584791 seconds)
  done (took 3.710780736 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08608899 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094255893 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078621108 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.1027091 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077607451 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098607689 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07871451 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096968881 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078949583 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096120188 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079687841 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096393049 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0782589 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099655276 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079590346 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.104115681 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110651278 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080626943 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097929175 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081108155 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101098548 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079844395 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098232183 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079337256 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098540431 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079560894 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098680496 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07999601 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099547758 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078769187 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10318559 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082940436 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.099917004 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086197886 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103038736 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078597993 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.103635454 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078768375 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100812768 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096378992 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08042116 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096980535 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078856494 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102701198 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078973897 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098172022 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078237424 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098346978 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07865694 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099890966 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077060833 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096989933 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078839382 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09719097 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081658246 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096358262 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097346537 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.0818803 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09936946 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080854677 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.098050572 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080476656 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100803292 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081040937 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.115260359 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086678258 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.099214715 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082076329 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100355815 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081415818 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101354607 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111775706 seconds)
  done (took 7.356511744 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084609847 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107134746 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079766619 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09891549 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075743445 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098361771 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099415242 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078709882 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098663318 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085604645 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097591235 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081143431 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101661302 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111453415 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082033539 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100665888 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087186138 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097972823 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080143604 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104628126 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08015782 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102317896 seconds)
  done (took 2.853319591 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212302919 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106545165 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144229538 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10752714 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083130694 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108149548 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103295545 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087712133 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104149453 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08421615 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103295256 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103680176 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084303557 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101810261 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101037771 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08598299 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103075501 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084398152 seconds)
  done (took 2.729379153 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093856421 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100260336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102141913 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100390042 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09957116 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084331214 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105377244 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108694198 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083741102 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098913664 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090452963 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10259666 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10096987 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081628406 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101873258 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081592394 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102706089 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080894389 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10972619 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105121223 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104611352 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091941124 seconds)
  done (took 2.955038635 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097961175 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102233424 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118575342 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085018687 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096190667 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079740317 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107122538 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081170528 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109672292 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101265202 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082551011 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101128057 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090265706 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103367661 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108084641 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083668417 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10472709 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083856971 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105142372 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077867433 seconds)
  done (took 2.747062627 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.212819739 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101417386 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099630295 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09290014 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102101557 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082126796 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111724786 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100939344 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082171087 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126748305 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102290033 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081597534 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113102004 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107856105 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100224701 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092884713 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111372183 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110212108 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082472195 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102140939 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127393286 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084427596 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110827707 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101606982 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0828323 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101425317 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10121594 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089455876 seconds)
  done (took 3.74211604 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082732509 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099214958 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080507192 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097483775 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080433768 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096953174 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079234243 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097135745 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081880871 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096656146 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082047277 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099217039 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083635996 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100110501 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081460562 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099927427 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081420897 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097299735 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078365368 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097659607 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081606244 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100379089 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081132297 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097318111 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078098466 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100929077 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077893548 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097476208 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08089882 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098602286 seconds)
  done (took 3.516788029 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092180819 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107679651 seconds)
  done (took 1.030074781 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.08018368 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11599732 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078841058 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104134417 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086556084 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102125881 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109313033 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086576258 seconds)
  done (took 1.592273628 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097534764 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112306631 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082487381 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114330531 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110645463 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097418175 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171223077 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10254439 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105473216 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080962126 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113853428 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081086903 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107625733 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081049761 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10694865 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08770884 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099234143 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105872599 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085713683 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099031668 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084007548 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110814204 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102742779 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.079782259 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101609192 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091461428 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113228236 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10169586 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08685174 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108249562 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087249655 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094928388 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081303556 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101861448 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079004756 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110162089 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116665567 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084431741 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110587201 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101190278 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093372691 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096378169 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086332648 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107429265 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11035957 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083829351 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101609802 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076948824 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098381377 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083869205 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096102562 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08173162 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096187524 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106503893 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086340386 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111710243 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080349117 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103397818 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083889826 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105088292 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106236784 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085399461 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103190522 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081479676 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108134522 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086500328 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111103835 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095985572 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076910148 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098675338 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093408323 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126112146 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106426319 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084288067 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104798893 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081052142 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104832546 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083205036 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10747209 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106551738 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083107039 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10861369 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090024758 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102118971 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102603024 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090701298 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099229988 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084317162 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099225848 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118034641 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081347125 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098718788 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081209198 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11268941 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084729089 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101860056 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078346128 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109090394 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094869345 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084210351 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102708342 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083184698 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113239743 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107184376 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088897264 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110731344 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107147319 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083086678 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104296563 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.07957145 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102863293 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08413627 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10872477 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07559582 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104326013 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082698409 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102724965 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110404543 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080116835 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101713554 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090342953 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108527254 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098812073 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079521232 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103583038 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082320461 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10479184 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089663442 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10095417 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095048289 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078861686 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103737692 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083722323 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105603981 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088113254 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106087695 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093997459 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081914745 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106156948 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091816773 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10233975 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083055749 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10881326 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102405758 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083354263 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107907826 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084956405 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101250942 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087893612 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102287054 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095965945 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087477171 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104137369 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080799133 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105125583 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085707609 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104986545 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101341107 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081514894 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107132153 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083013538 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101469452 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082271541 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101105323 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111569022 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085166112 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096421482 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079799716 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109994348 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080090857 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101881129 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081474731 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105228417 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101925394 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080690566 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100649423 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084462571 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114810037 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105486529 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084135604 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.1072636 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093694691 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101422778 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083646295 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102320204 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102016696 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083844954 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111249393 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087227465 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107931464 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104069318 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079644078 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108821514 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089861381 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101728459 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079473887 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101329582 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104547936 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088882679 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105381904 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083227012 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100617103 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082002148 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106137274 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104338562 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082515714 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10090772 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087688428 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101924623 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107811101 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084494118 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112580486 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085605762 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097625739 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085436821 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100432377 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107254453 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078022092 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098857976 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081595572 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103210442 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081599604 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105112368 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076095902 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109787065 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109102239 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083153276 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101092405 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083051847 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109092019 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08391761 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106447982 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085419164 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107978666 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112821831 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081629656 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105619083 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.0929231 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102548325 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095533862 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088448938 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100203513 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081606228 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100918891 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080913695 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105381489 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110400501 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090145623 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096032262 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084782001 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101597049 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081274141 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098659425 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086482183 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106282841 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102736817 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090609563 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103523339 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083854602 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106734849 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082569865 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104923783 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103253635 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085910101 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103983741 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085517069 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10188612 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085005372 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10412627 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080139201 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104486078 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102044766 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083718629 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107916154 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081697272 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102708551 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085509042 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104465546 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101984968 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083334334 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101204415 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08577686 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102849393 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082530901 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105878293 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077199794 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11085595 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100603078 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092300739 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101875388 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079536962 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107653141 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084975803 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.1085658 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102120297 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083802825 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103165508 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.08237604 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105503211 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088953332 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100679181 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112072631 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091432204 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103668036 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085552974 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103262874 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084011418 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102988947 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101832087 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083971463 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101591857 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082086461 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10753015 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085419192 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103915146 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083741486 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104909289 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101996775 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084514989 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096418718 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082729009 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101824922 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083577517 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114013469 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102862482 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086468485 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100680431 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084367657 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102142178 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079728323 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110791758 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111725201 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08322863 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110406784 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081681486 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105098305 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112794325 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077460295 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100213298 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081240543 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100147195 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090954649 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103935962 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110286654 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08415738 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.102253237 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080547115 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103568978 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081688981 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09706022 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081367424 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107435988 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084644372 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101956082 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082326641 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107136406 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103725459 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093119429 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.111269818 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084273305 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105033547 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078456271 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102479687 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101025697 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086234621 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103208383 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080393391 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100292935 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082469018 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103879684 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083805278 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103238834 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08308117 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111919091 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101672255 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086123714 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107870096 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077535979 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10638908 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081894975 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102770954 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104136123 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087579677 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106371742 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084301148 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112197236 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08129854 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104263282 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102638764 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081513421 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102642 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083141654 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102742999 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081930517 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.1038647 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111319217 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08168073 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106265819 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082793452 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103724686 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089864889 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104600647 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085478253 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111562894 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105492312 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085211156 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111978784 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086308283 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107157523 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103279094 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084933641 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108934205 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082041785 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10993334 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.081406925 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104856406 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10349162 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081373973 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10254693 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084485057 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102525689 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088439451 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104943368 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081332444 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10309601 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100233684 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084812727 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10640463 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091123278 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105884515 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085498395 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099417822 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079037364 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104759952 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100453671 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08501092 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105629555 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088987356 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106794684 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083302432 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102454047 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111482398 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089324341 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107369573 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080143596 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.1077273 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083650348 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106088052 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10387426 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084305953 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103933984 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087974229 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104538018 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082354518 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111675182 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086070657 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105166761 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104324777 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084726781 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.103202571 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078600377 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104393199 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084592213 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109499642 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105361468 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084645406 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114001234 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082395791 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103577507 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086731922 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103359041 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106888771 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.07950903 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103552603 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085632019 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104674053 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078038836 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103979406 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081059688 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106383002 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081339792 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099059054 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113339085 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093422484 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10881354 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081921145 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103524592 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078428837 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100367846 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102234334 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085961156 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105745137 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094334081 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104126861 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083021952 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099938391 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082489858 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107561824 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107253939 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081085653 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099233275 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083409312 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107489606 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088495662 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103468744 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082241233 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107551916 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105530335 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082454204 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107517466 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080489976 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108189992 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116681722 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08614488 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103878294 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09024351 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112792524 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083727096 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099745417 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103313163 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087781645 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103931744 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085417953 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106010577 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119029863 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087134903 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102149602 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083164681 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106779068 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082784001 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.1125823 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103853186 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085024039 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107430129 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085473529 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112993064 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084651719 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112459556 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106870117 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086371793 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103190338 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083281607 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102759985 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08129484 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106837987 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103940024 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09016783 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112714203 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082294162 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11487465 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112741352 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088096133 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.10122065 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082488616 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103843068 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078015686 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105800972 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080973644 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102761388 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100671769 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083526553 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10496517 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089877978 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104805132 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084961001 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104365786 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079215157 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105951421 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085704157 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10543394 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099957602 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084722478 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10440866 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088048841 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109160476 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083188161 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106399685 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.083887379 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105448759 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098830057 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090708611 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102590723 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087035706 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103502345 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084181681 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105608856 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086279155 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110879451 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106042764 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086314047 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117213057 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085443656 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102197269 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100211731 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089844489 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102168368 seconds)
  done (took 58.201682294 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14907863 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081306772 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099865948 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079689736 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114328252 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100384993 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080596165 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100627488 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080737455 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103015457 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079276679 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100563547 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109183902 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125252096 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093749283 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104748711 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078257767 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101997945 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099227732 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082304648 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110542864 seconds)
  done (took 2.955280852 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106021073 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118863202 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116569398 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120102639 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089580997 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116661703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115173186 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115921219 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100280669 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112340981 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120655627 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116208654 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091597244 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112553398 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111273338 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093698525 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120474031 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11117732 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117787945 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095063052 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114074587 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116554184 seconds)
  done (took 3.313149992 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084865759 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102797906 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084722227 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099294639 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083433293 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09921898 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087426673 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102801799 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087132816 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104141432 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081524859 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10416626 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105073756 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080037432 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103537505 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082020523 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152561592 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109416806 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082688223 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107051606 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.07921149 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108468071 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098966769 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080712845 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103669551 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088700715 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10648126 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081182302 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104846597 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082713705 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10468287 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081163228 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106232623 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103496204 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083100767 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10240301 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084533667 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104524815 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079977563 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102978367 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084200171 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100794106 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084077443 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105950417 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081572005 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103701598 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084578312 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104680923 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097655533 seconds)
  done (took 5.562298905 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104983656 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162211 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086113725 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144330598 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122177999 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113842027 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088366383 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14424464 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10467149 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081619813 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125074219 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122609382 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104689742 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089932431 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112231117 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105143705 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085749421 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105053362 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10802488 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084462421 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109992825 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090522937 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122505887 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119507792 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108925135 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083053501 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104934206 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109454026 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098248315 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111949706 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111170505 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089624098 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122019819 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106761493 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083029396 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108458207 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124114509 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104003603 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08841572 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102988281 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087070011 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109903038 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111495366 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103370579 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106543947 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110230988 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084198408 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102621601 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118911426 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08725563 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114517061 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120868896 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087595215 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105960675 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110637999 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121595776 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085595323 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103615267 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088343622 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119943346 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.104653093 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090074758 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120587852 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107476255 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112921226 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099970633 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111153618 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108784856 seconds)
  done (took 8.253800547 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09435739 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113197127 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123054969 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122401433 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091302517 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112928327 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112333638 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091649808 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112812537 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118706971 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111886936 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13555818 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08653908 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116889918 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111796537 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092145703 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112651153 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113245086 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090571392 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111890506 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11266204 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121843633 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090728131 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122076915 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142564987 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107593037 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090423651 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112089534 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123195426 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112295569 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124273163 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092482307 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112957117 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122627704 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12490806 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091543218 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10478736 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111641986 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09171891 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113046464 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106431355 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100841237 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113716463 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106906506 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091229651 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113410948 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12111944 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124990556 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115294552 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098018254 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113249629 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122358006 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112385027 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091846529 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123251764 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148718098 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121690423 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122635289 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112263048 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100571075 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122038469 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12924365 seconds)
  done (took 7.801959145 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107473944 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116567877 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119430008 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100235792 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083330168 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110584475 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082423829 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104184205 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114740972 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094804638 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118713687 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109531642 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091787889 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118231166 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110444512 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114270589 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089374217 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110810947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115141581 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108627249 seconds)
  done (took 3.013561616 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094055707 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125661506 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084458672 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114244608 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109553748 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09121193 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10913698 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107846991 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086451879 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109516304 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095805971 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118378889 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107087759 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09086925 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118951611 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112661536 seconds)
  done (took 2.56881844 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096864627 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118720559 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121079119 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084132592 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105612833 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080270289 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10819296 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101720456 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082192162 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.125066701 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084131003 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.11028801 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105852625 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08380859 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102870434 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087888139 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103330785 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082070601 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107527325 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120307286 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095797207 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105604422 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106291333 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087174535 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.1068079 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090546173 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108450539 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10337706 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084071998 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106594355 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08521674 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115000717 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101705764 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085333183 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103794337 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083468246 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105853122 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085409895 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109957527 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105962575 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08455449 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105701136 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084511493 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107652104 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080321054 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106968468 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101328243 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092471822 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104591542 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085062149 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106500932 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086339758 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107483936 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117566394 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088741907 seconds)
  done (took 6.345698976 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099555274 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110727498 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079882522 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105070499 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088531616 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109972741 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108977345 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088866516 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108061478 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082561107 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10945483 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089146524 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109243592 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109658537 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087113796 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109613954 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080336118 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108098309 seconds)
  done (took 2.687734237 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091574746 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106550347 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092723741 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107810254 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084567193 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110742758 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079815418 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107331231 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10517428 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086652633 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10554814 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087713004 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105647641 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08764218 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108248232 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08553504 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110645659 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103645781 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086572482 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102327713 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087789535 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104576454 seconds)
  done (took 3.050235618 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119249695 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127107551 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092339936 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.233561169 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103592309 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134083936 seconds)
  done (took 1.711888147 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110235388 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12300181 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106956431 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10699207 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11645697 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087059144 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109236942 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108903489 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118702959 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102830658 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109574732 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11954245 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118129441 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096631642 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116154539 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116986594 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108640828 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088127666 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107577318 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129864073 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088041433 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119187399 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109436885 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087105483 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109816166 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118909701 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118204805 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123185134 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088670328 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119047167 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115645108 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08729453 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119670429 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124701298 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109141751 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099053786 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109990834 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130392808 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115188189 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097406646 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110739269 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116226312 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097750276 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114965387 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119021324 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10894501 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093840446 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109772408 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108870938 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137519065 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094969082 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119544445 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116899777 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119708329 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096781328 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158175711 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10279918 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118801491 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116402197 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123679938 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118534483 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094242772 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118513101 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125263068 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116714374 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117894488 seconds)
  done (took 8.27495717 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103444255 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128313482 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109986543 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123650892 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098247659 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110173495 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109342191 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087066109 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109507579 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10777181 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154329371 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089581737 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119461728 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11950612 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08706782 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110381708 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109601485 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119144704 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087688067 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137254147 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109444967 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119469955 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119232694 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097799265 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125050955 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11616002 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10845643 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088526472 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109891727 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107660532 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094430763 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110569645 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118134351 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086433046 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119845044 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109890062 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087761426 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11573125 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109351697 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115543861 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09735377 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129839132 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110143399 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10974306 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102819546 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111230458 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10977388 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086455855 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110400018 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108282512 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102006588 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125220442 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124503799 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119164133 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109680276 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087453583 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110212898 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109427519 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08893149 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11634938 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118851517 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087486977 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137516832 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11091217 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110159998 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118707242 seconds)
  done (took 8.153539718 seconds)
done (took 157.977301221 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.241688878 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.233918572 seconds)
  done (took 1.382733668 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098171397 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137188786 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096138053 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171215952 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107243748 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119871348 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139318168 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098280062 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108583567 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085162554 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109401573 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086293755 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17249606 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084826255 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108401629 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108638425 seconds)
  done (took 2.745944778 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201320517 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.257741158 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102196269 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108554167 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088366529 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111860964 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104718972 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09194559 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110354693 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085636385 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110217815 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086610058 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.107097777 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086042947 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111708228 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087860773 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108496628 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086909707 seconds)
  done (took 2.963644758 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113099581 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150614609 seconds)
  done (took 1.185902022 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118936883 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18135545 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31919498 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156321936 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106422172 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128497446 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158162376 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131850709 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198089804 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124110409 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123479019 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097830319 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142150161 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116769276 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094198687 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120367144 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142568708 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092184332 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116928027 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116821147 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116386753 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108145654 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116058722 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094372608 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182875585 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121299386 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084255593 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107857771 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117401368 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095173091 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114743878 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125609882 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097923193 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179147924 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101680176 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177580162 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097918485 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114309989 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115568483 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092368452 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119866008 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118416562 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105654959 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120850145 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084611002 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120174512 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10658734 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085492649 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115354416 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097138097 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11616557 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114508179 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157197697 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119190148 seconds)
  done (took 7.644763268 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.796359294 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156544449 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089776091 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.888888773 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136194165 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104571247 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.780073782 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11100557 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255533128 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758977448 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133576977 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12018548 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20586855 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258547885 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955392705 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290385512 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.692794843 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102911111 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15163702 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153172107 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118577376 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135393707 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108475845 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431328611 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116765557 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111736876 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0952627 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119350917 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160427616 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125679341 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113382992 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177271814 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248201798 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205508388 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114663939 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090664467 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111056779 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.16968578 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265471775 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191107273 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178902792 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109813572 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11033444 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101161524 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13247111 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10812614 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162847918 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173701858 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167728498 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116242354 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120012486 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097063381 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121033256 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163574932 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12212295 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.321652863 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309830195 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088401809 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122529069 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127254947 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260154427 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101336783 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22568055 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139128306 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210253419 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089807597 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786886487 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167924162 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112128551 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094076828 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120629362 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116063823 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09899221 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167974326 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39184698 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123954883 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114618029 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089057773 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242937112 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124095183 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090191444 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160562401 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118088924 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120635935 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102647575 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123179065 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169804407 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.252749361 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100611334 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120163115 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115223991 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102124804 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117541816 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21088563 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218876394 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162445791 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232161684 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099518955 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186149112 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169060433 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119843571 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173619124 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119707228 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101545781 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122471677 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218347202 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145826998 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123832266 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09359346 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119102548 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149218845 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127849559 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096423029 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192492008 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458058109 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167675003 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109901216 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127047582 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097107233 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183102653 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095038199 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259622256 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122595102 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169937987 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120189424 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086882224 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121329503 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162525617 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123186586 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120658218 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100118401 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119942812 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233576271 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216960543 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122435686 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219240106 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183469463 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119488557 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171022908 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123153286 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167451418 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121218194 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120171724 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094980527 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784174798 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123636279 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097725818 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117640503 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189868108 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110840169 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102775303 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125403821 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108833595 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752283493 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128364047 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121873626 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102767171 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118937881 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12050678 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096448673 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11707833 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160585419 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229359711 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120862493 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119261501 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103203161 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181754858 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095758956 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125881611 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124480242 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103247407 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123536896 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115824405 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102623334 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193031304 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163995234 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220041534 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567983368 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112812286 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125232443 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226442469 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091369848 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287914123 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119906897 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202028224 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185784294 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09939703 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.307728422 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186702073 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188162456 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105821514 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194910594 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089149294 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118558956 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164604958 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11250567 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095965647 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.184847723 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10341126 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124164714 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.961775965 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089066273 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247075563 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087962717 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171028165 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120576298 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120419043 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29257977 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090790553 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128888912 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164853038 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117075888 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124836771 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.709781223 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126094379 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120911683 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097260214 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222519699 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163150368 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122028127 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119434561 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097182841 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.186072336 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207092392 seconds)
  done (took 44.015779533 seconds)
done (took 60.84982481 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280664609 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219018656 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.2663074 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170775657 seconds)
  done (took 1.959522107 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172804377 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150680191 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121819577 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109421516 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151969306 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084597117 seconds)
  done (took 1.734462655 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361624057 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277085724 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243086455 seconds)
  done (took 1.832317977 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.318991926 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248470689 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.477090477 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.327106219 seconds)
  done (took 2.414761656 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211436752 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13380533 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112315911 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104176361 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.200570036 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249731503 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14366596 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203769175 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098950329 seconds)
  done (took 2.450329387 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199404229 seconds)
done (took 11.537656876 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", BigInt, false)...
    done (took 0.26043947 seconds)
    (2/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.122002705 seconds)
    (3/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.09637514 seconds)
    (4/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.252602558 seconds)
    (5/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.092683772 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.227443985 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.117639288 seconds)
    (8/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.225196561 seconds)
    (9/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.232906435 seconds)
    (10/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.122508401 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.125419843 seconds)
    (12/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.12954031 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122068953 seconds)
    (14/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.217392964 seconds)
    (15/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.165210838 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118325061 seconds)
    (17/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.132793547 seconds)
    (18/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.185054277 seconds)
    (19/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.251182384 seconds)
    (20/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09268311 seconds)
    (21/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.152947949 seconds)
    (22/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.14836969 seconds)
    (23/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.097744683 seconds)
    (24/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.210824939 seconds)
    (25/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.217404742 seconds)
    (26/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138886053 seconds)
    (27/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.222086653 seconds)
    (28/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089727076 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.218346981 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.140093186 seconds)
    (31/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.235297492 seconds)
    (32/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141016404 seconds)
    (33/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.199033243 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09561225 seconds)
    (35/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.222017988 seconds)
    (36/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.147421096 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.08696289 seconds)
    (38/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173284396 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.16049728 seconds)
    (40/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066680181 seconds)
    (41/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.185965702 seconds)
    (42/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.185114951 seconds)
    (43/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.126903174 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118416671 seconds)
    (45/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067156684 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108577964 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.111487053 seconds)
    (48/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121668632 seconds)
    (49/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.226333938 seconds)
    (50/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.232963452 seconds)
    (51/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.17277204 seconds)
    (52/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067959873 seconds)
    (53/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.139632313 seconds)
    (54/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.078696477 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112275331 seconds)
    (56/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066594242 seconds)
    (57/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.191660951 seconds)
    (58/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.123759426 seconds)
    (59/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118110582 seconds)
    (60/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.094724932 seconds)
    (61/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.126435292 seconds)
    (62/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115578211 seconds)
    (63/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088386125 seconds)
    (64/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116279327 seconds)
    (65/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097523322 seconds)
    (66/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.187460008 seconds)
    (67/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066236968 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.121505958 seconds)
    (69/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065385264 seconds)
    (70/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173043718 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.140161337 seconds)
    (72/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.072728088 seconds)
    (73/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.13775263 seconds)
    (74/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.124563086 seconds)
    (75/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.140494153 seconds)
    (76/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.225775541 seconds)
    (77/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.123636929 seconds)
    (78/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094952633 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.140205032 seconds)
    (80/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135594119 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 0.088536472 seconds)
    (82/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.173277957 seconds)
    (83/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.150193343 seconds)
    (84/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.114580747 seconds)
    (85/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.14282209 seconds)
    (86/286) benchmarking ("sort", BigInt, true)...
    done (took 0.194209624 seconds)
    (87/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115833282 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109681672 seconds)
    (89/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.083403178 seconds)
    (90/286) benchmarking ("sort", Float64, true)...
    done (took 0.225213712 seconds)
    (91/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091283196 seconds)
    (92/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118634566 seconds)
    (93/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.123020128 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.09314034 seconds)
    (95/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111712543 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.140961273 seconds)
    (97/286) benchmarking ("sort", Float32, true)...
    done (took 0.223321978 seconds)
    (98/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.092508409 seconds)
    (99/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.085804878 seconds)
    (100/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.09215501 seconds)
    (101/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.186446393 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.11916862 seconds)
    (103/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093984851 seconds)
    (104/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.092294986 seconds)
    (105/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087012537 seconds)
    (106/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.11646852 seconds)
    (107/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089341827 seconds)
    (108/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111425342 seconds)
    (109/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068540262 seconds)
    (110/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066129209 seconds)
    (111/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.175619025 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109830507 seconds)
    (113/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.148355499 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.138697215 seconds)
    (115/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075159193 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.182177991 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.121004239 seconds)
    (118/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127586625 seconds)
    (119/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094316177 seconds)
    (120/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.090969422 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095500334 seconds)
    (122/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109735994 seconds)
    (123/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112989397 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.118149313 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091827971 seconds)
    (126/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.091255466 seconds)
    (127/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.114592499 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119200061 seconds)
    (129/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066252281 seconds)
    (130/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.191343914 seconds)
    (131/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.088959934 seconds)
    (132/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.098554509 seconds)
    (133/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.12125242 seconds)
    (134/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.074017008 seconds)
    (135/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.086924078 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119101049 seconds)
    (137/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067614451 seconds)
    (138/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.113519786 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085385937 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110574214 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093452162 seconds)
    (142/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125660391 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109199373 seconds)
    (144/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.115903548 seconds)
    (145/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12244883 seconds)
    (146/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098477925 seconds)
    (147/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.16717244 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.111797957 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088908379 seconds)
    (150/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119944555 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095668949 seconds)
    (152/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.121148222 seconds)
    (153/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.114308774 seconds)
    (154/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.11491841 seconds)
    (155/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066328251 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.112285553 seconds)
    (157/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.10929449 seconds)
    (158/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.113283226 seconds)
    (159/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136349915 seconds)
    (160/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115147627 seconds)
    (161/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.167248626 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111007977 seconds)
    (163/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093424226 seconds)
    (164/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.192798995 seconds)
    (165/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.173614365 seconds)
    (166/286) benchmarking ("sort", Float32, false)...
    done (took 0.149488016 seconds)
    (167/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.177464456 seconds)
    (168/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.113142947 seconds)
    (169/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068079896 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110584587 seconds)
    (171/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069547964 seconds)
    (172/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110481415 seconds)
    (173/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095663915 seconds)
    (174/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.075272178 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117810971 seconds)
    (176/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067615507 seconds)
    (177/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090917135 seconds)
    (178/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.078314668 seconds)
    (179/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086925817 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120735658 seconds)
    (181/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123650946 seconds)
    (182/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085977655 seconds)
    (183/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123699199 seconds)
    (184/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.324051974 seconds)
    (185/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.185704423 seconds)
    (186/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066691085 seconds)
    (187/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.092896357 seconds)
    (188/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088603366 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.188207529 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 0.213748692 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084514932 seconds)
    (192/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119978078 seconds)
    (193/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093503596 seconds)
    (194/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.147124044 seconds)
    (195/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068421635 seconds)
    (196/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.188112931 seconds)
    (197/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.118212923 seconds)
    (198/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093568419 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109741542 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086569528 seconds)
    (201/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.075748139 seconds)
    (202/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182203982 seconds)
    (203/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.215385711 seconds)
    (204/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.162703417 seconds)
    (205/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.120531015 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120221981 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09420524 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111871828 seconds)
    (209/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066359383 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116911863 seconds)
    (211/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.089533975 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109610581 seconds)
    (213/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066685312 seconds)
    (214/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.10024357 seconds)
    (215/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067962613 seconds)
    (216/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.134476266 seconds)
    (217/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.09677727 seconds)
    (218/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091227875 seconds)
    (219/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.131382619 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065339882 seconds)
    (221/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130031478 seconds)
    (222/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.076176501 seconds)
    (223/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175963866 seconds)
    (224/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.104856923 seconds)
    (225/286) benchmarking ("sort", Int8, true)...
    done (took 0.188235218 seconds)
    (226/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.093603816 seconds)
    (227/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.09469783 seconds)
    (228/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119273898 seconds)
    (229/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075605 seconds)
    (230/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.090278259 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.0887497 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.1094989 seconds)
    (233/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.115176951 seconds)
    (234/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.12048467 seconds)
    (235/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086870036 seconds)
    (236/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110696355 seconds)
    (237/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095460887 seconds)
    (238/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091101947 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093864502 seconds)
    (240/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.186583621 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085205144 seconds)
    (242/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.094371847 seconds)
    (243/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.08637103 seconds)
    (244/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.092690065 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09576929 seconds)
    (246/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.18797456 seconds)
    (247/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067091883 seconds)
    (248/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.138211125 seconds)
    (249/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136313717 seconds)
    (250/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.088994735 seconds)
    (251/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.138642517 seconds)
    (252/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.090565551 seconds)
    (253/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.092009424 seconds)
    (254/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067469412 seconds)
    (255/286) benchmarking ("sort", Float64, false)...
    done (took 0.173370536 seconds)
    (256/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.067337404 seconds)
    (257/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.090816532 seconds)
    (258/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088416335 seconds)
    (259/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129565652 seconds)
    (260/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088082486 seconds)
    (261/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.092595882 seconds)
    (262/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077108026 seconds)
    (263/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067701684 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120996771 seconds)
    (265/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086890775 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.111901827 seconds)
    (267/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085005749 seconds)
    (268/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.116292839 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084546621 seconds)
    (270/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.096319052 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085416455 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120058237 seconds)
    (273/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077807969 seconds)
    (274/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118375942 seconds)
    (275/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068315918 seconds)
    (276/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145619002 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092276546 seconds)
    (278/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.10245483 seconds)
    (279/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093541662 seconds)
    (280/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164590567 seconds)
    (281/286) benchmarking ("sort", Int8, false)...
    done (took 0.19035692 seconds)
    (282/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066274863 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.118205407 seconds)
    (284/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113273917 seconds)
    (285/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.101201144 seconds)
    (286/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066456529 seconds)
  done (took 36.242826829 seconds)
done (took 37.193693771 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100949581 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14945829 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095525101 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137070613 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125050681 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091133521 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120222863 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098276202 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125263746 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12518066 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098627406 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094732579 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099368719 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122021198 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096180653 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140705609 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124032127 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093852157 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120122669 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085262369 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120668661 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085313317 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113875448 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069857684 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123211741 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093854466 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118138972 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122747774 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087724563 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110820412 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090408241 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11812998 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086627409 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125178719 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09307627 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119668909 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096244304 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121928493 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08735495 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112180367 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117398195 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087673143 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117562101 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095569144 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116097973 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092599284 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120892352 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098329551 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140634191 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116010291 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095417088 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120631444 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096427265 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118434116 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089836935 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119933618 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091076327 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140303883 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11914833 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092119875 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119027379 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095219186 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117191214 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094395789 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.12043081 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121249888 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098923169 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116312523 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097678831 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117111634 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086315266 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120666286 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089954075 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112109236 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095669159 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123520694 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085477848 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.11763119 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093084948 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117415696 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109930485 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090097913 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113074846 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093799045 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113798557 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071132847 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090043581 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.119454247 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.084937701 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121486777 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117098287 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094375022 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113103299 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098891815 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11167833 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091564586 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111910288 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08698902 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114285646 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090781816 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111963832 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089823218 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121236644 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087658193 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118773557 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098110787 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111821456 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116924913 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087414036 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110058909 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101607583 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122219323 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087089956 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117234027 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085706363 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119451529 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085678737 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112502039 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087066724 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112922203 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092110527 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113103168 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089427236 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119342633 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124647999 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087708249 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114830773 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091319342 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111029855 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093367487 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111804576 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087279106 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113157351 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078045021 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113445036 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088083095 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118675375 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090015316 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119949778 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08964484 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121033863 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091931372 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118371045 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092278013 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111248264 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074451216 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116671208 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089815506 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113713117 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086978069 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114020926 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086385574 seconds)
done (took 17.057951938 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088014988 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184726545 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151832428 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14259867 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106915976 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114230743 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121414184 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118629223 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11469391 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143283847 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110173507 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133282976 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149007271 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086141575 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113421905 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090930453 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114510516 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.126984627 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.121458279 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134794443 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164391896 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.111375936 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122288657 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136245464 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121412156 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104943501 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113983063 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090960802 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116654503 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.140141349 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108420747 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.117568299 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088047999 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135993227 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.128148086 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.097385548 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111675764 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094962871 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.11174366 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087648662 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141766525 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134068784 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092360355 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119255758 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09034366 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116131632 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088174452 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122456464 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.121951649 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.092328746 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127684287 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156582531 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090313069 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122823217 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.111710586 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098919818 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122447515 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089786311 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113216444 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090893369 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113063408 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090354069 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128844317 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14250203 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091079948 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123009471 seconds)
  done (took 8.703882351 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105849732 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14100358 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104471912 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131983827 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.1129685 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087888468 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113603661 seconds)
  done (took 1.81309272 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089594039 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134772442 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111303936 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137829601 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132489659 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110432548 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123899154 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088557495 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132227294 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088278017 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135967785 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152746225 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089972323 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122575394 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137811932 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088508393 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138425538 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088088088 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118163255 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111932286 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118258033 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135614259 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09136576 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114744472 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102220546 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115210582 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162098863 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094368072 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11612189 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091927928 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112836677 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165947585 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102112825 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12702219 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087130818 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130585673 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128439337 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087229258 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130423006 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093792393 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129229993 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088657987 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116733586 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.10344572 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119889708 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124035801 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091328487 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114621477 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092859186 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133879375 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090275844 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12819488 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087869568 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119225967 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089126578 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120781631 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124002927 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091592715 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134377673 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090414568 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13188897 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104920761 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129214104 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130580364 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091937412 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129431226 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10289577 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119270995 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089525811 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119697958 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130216684 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087443842 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11536611 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100390861 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116232978 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112659886 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139029672 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114876079 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101004956 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113720356 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090062648 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114162255 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112816291 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12110187 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088881914 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119482438 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09104127 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113655231 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08655903 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11870082 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086044939 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11748446 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116338696 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091180692 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115695544 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10697456 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115779516 seconds)
  done (took 11.934484259 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091358454 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114386633 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092522517 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114359858 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092775409 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116121333 seconds)
  done (took 1.64630583 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11499339 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11849851 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102813778 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12153333 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157169269 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102595331 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131867048 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124715042 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107352815 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128459707 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129677741 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104654352 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137609163 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121172759 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103637788 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121598522 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103205986 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127062341 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127891714 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097138279 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137699414 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121087281 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09676246 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133868637 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117679923 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096541229 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125771917 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102228111 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129612869 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123937778 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097436054 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118668193 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094875066 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124146026 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130356834 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096063987 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122668161 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118882631 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101250217 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119018665 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104724216 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123215835 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127441691 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094539204 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124848368 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121173562 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09439532 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125580032 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103874342 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121791418 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120167889 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095259873 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119209616 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094257255 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121868465 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123350611 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093707216 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130926063 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095255914 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123333119 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118642879 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093138075 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125032789 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116936301 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10511846 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120485506 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095334872 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123132656 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121775183 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096768098 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119200705 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093129048 seconds)
  done (took 9.307109114 seconds)
done (took 34.412123609 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.703621607 seconds)
  done (took 1.727399255 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.846642198 seconds)
  done (took 1.871880657 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.462582093 seconds)
  done (took 18.516410764 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.507846304 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.594529524 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.008880042 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181963779 seconds)
  done (took 3.317707242 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.977262955 seconds)
  done (took 2.020367567 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296087162 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260000416 seconds)
  done (took 1.585489658 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.800419594 seconds)
  done (took 1.835293166 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.436372581 seconds)
  done (took 2.466393851 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.332567267 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184928734 seconds)
  done (took 1.55959818 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548666544 seconds)
  done (took 1.589180492 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.302046517 seconds)
  done (took 8.346747637 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271369343 seconds)
  done (took 1.32357083 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303583951 seconds)
  done (took 1.347952043 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.60808507 seconds)
  done (took 4.652698763 seconds)
done (took 53.194357259 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099510556 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127051266 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102297714 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125283351 seconds)
  done (took 1.493188754 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101905469 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121612096 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10103226 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121861077 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126645087 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097547442 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124415336 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101368113 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122528763 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095977849 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122150256 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.1199676 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100279502 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123987119 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093655225 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12581717 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099105775 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122920545 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12494777 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09687323 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120130216 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098130345 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127195936 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094066408 seconds)
  done (took 3.731202326 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101505389 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119188615 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097536037 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118944307 seconds)
  done (took 1.488685506 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100959322 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143909321 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139966452 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100272451 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143331427 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135631866 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092487213 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118044349 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094380084 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125315089 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090837361 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150531168 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13808835 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099199396 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129367098 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087628394 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118567159 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137811905 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099654875 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.1274751 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092804825 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128136934 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090293929 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141139278 seconds)
  done (took 3.873571058 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171359985 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129047116 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139702268 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094829411 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160917902 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.14086948 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088651761 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141546141 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086880702 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13210934 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117347569 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.1341352 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129954178 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087605692 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115817529 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087721047 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130456216 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129150275 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091248496 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128527205 seconds)
  done (took 3.489594317 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098021671 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117980817 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089229366 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116862804 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099979945 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121991828 seconds)
  done (took 1.697560364 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092269824 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114222941 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091368085 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115225917 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094946729 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116104392 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090057514 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115106293 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090053112 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118580423 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090217048 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114043995 seconds)
  done (took 2.295724142 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.501426603 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120105847 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119740021 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089718376 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121997257 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089516078 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129403147 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093753844 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.143234626 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08866793 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117568602 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090095034 seconds)
  done (took 2.758937117 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233690426 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127409362 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28845571 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372323512 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158304834 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178467468 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282231567 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165128918 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226017362 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167306586 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20361235 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225463967 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152476106 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19036088 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139244915 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.118259235 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232998982 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247912994 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15449032 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207832507 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229212857 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167973536 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180716294 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151499576 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139157284 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17311977 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094196229 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131647229 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235335434 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176382497 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215598107 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163672404 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146284117 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210722843 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253958303 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222396309 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285134217 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138090683 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149739156 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170504506 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267565999 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140039339 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204307399 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156817884 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132472695 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218632544 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168295872 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17756253 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153767459 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138826932 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195542007 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242243241 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193130652 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139582267 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306827328 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152608537 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.202070059 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194515984 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253251998 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201536534 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188173968 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12277105 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189047756 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222647271 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186096136 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.175581655 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208666026 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122683321 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227517651 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190371329 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165353867 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221939803 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187761505 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142599563 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171481951 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173949197 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172637011 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259254541 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213025843 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096754155 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169534135 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150796355 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134674716 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195677667 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098371089 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241887009 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144315358 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.136153952 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2434328 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161758659 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161810261 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203632785 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230879664 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149120646 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083713684 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155699586 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156894643 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192531629 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142008856 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161563098 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163564834 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131525819 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183094542 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125573305 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184375009 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118771014 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174906459 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183684299 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127730335 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161683023 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151938318 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126492131 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20311386 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200806231 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143344802 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10579815 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23838941 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177799908 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.152086565 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178784167 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229027936 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118276395 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151401134 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228420025 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21702683 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141460925 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229836468 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157479943 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10863146 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133369492 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182611703 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156047284 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163369549 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134409234 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184058154 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233793676 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099248395 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139569229 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194371891 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135349576 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133774202 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164384373 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148275187 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111664593 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15340328 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154711279 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209527809 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180650657 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154985698 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166454136 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153471147 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254806125 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141582758 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.125331936 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150467017 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120847552 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194141689 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198119573 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132371152 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23180796 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174959388 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204303018 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171783043 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136305859 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179065655 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130535151 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093288057 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223465818 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169121864 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162121846 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197788587 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228643629 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184377339 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183906856 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200339957 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17549718 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165330724 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158229053 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111354577 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161028663 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1725913 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125154067 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145651118 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135371711 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121101559 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143237929 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135022042 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196773959 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199516912 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190512075 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162744292 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151048244 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182628962 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129598334 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176052423 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178294945 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150025761 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198958221 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223661895 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187958177 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144810227 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200896631 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122496092 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096436764 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142839112 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169976228 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13566157 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136876377 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164663075 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182080728 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181361091 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203605773 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212178356 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174416816 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219781948 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096102175 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169043748 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18601882 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177518764 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.195091431 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145714938 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15162381 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181045377 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158835009 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257274384 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169047085 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177810507 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234444331 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.12394901 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132796553 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152659186 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194889289 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155290514 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205771844 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12149813 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143000714 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162855894 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134591343 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161838124 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183755348 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163896413 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219388885 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151034165 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187746689 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12780699 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164616887 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160162246 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165372775 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081862002 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175932707 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234577019 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149382125 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170299381 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190307741 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133865328 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310034563 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244945399 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198449094 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137912763 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157128206 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161764635 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164612577 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172669095 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180480897 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160270495 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189844876 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160919185 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138265692 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113245407 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149277803 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151400144 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132787604 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14898451 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179077656 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141027251 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188110653 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164743173 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160085348 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174322641 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152586281 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145572999 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123702929 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245661606 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185438977 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241493399 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151764035 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181560689 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23413855 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099928744 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133680384 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105934105 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179464475 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138202707 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221001927 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188480821 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235227018 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185709788 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195305109 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140997864 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092077172 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159074951 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202332967 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209743319 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155216775 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161395917 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231195093 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119902762 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133253665 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179233513 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296336084 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147993249 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22597535 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081351427 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283680112 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130548497 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104783171 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164530502 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238171507 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137670443 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.165217986 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197729731 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172978671 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164939946 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149910284 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192863911 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218153126 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231307675 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181302008 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.1352195 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157115666 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177650466 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220386915 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131782502 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142288535 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232699349 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198200046 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.199175599 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143945647 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170783793 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16962145 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15892025 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21594966 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107393388 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236550564 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106466039 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226102934 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154854595 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145663125 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177305666 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.190158594 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144603152 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215906758 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187125926 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136163611 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106983989 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169580158 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209501984 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158249684 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100462304 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181290954 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127151995 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195627097 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261476335 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137299559 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156675954 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149315297 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108080778 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155724327 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159426104 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142828901 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16716965 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208020054 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136647195 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192481999 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233390897 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171047874 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174988694 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147823548 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694709848 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.13296805 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196691305 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161046433 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236229011 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121716805 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202702034 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159505298 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168961547 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197474076 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162568847 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232356778 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194226084 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.208642589 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106618317 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159330261 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164869184 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145737836 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152907908 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169457642 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160550325 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155471557 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178364996 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20186364 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107820598 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142692589 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200610545 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16143457 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212311444 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181677102 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111479381 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175313015 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219921472 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134156578 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181703577 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237846658 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115278437 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153699994 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136254274 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.159111416 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266415051 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097092021 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236238372 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187662956 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160692368 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170836777 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149253571 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22220685 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159742492 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189650125 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149629817 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161889255 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156718813 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109855102 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131847682 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157880591 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169398265 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151500539 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161240975 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.14112124 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223733831 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096299859 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146150991 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319175918 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197711438 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245277578 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.109120384 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13702156 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164067775 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152262726 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178019889 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180734125 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137497708 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136873078 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.111139587 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.161139409 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112674452 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158795521 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19874222 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167750172 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238926995 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137021623 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251249443 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143473736 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15748237 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087659934 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135185372 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152877628 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146823992 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161278961 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195336589 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270031829 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149742043 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134591015 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122963275 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128143776 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137943944 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165856938 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166493168 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179876567 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147011397 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081313892 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159178997 seconds)
  done (took 84.030475239 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177389095 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.136142056 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149294388 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205428622 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179199844 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270426147 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213598697 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255733821 seconds)
  done (took 2.733826364 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094974833 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148608552 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159096893 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134783039 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091935052 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119689664 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.351789718 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133865138 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118394612 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122036344 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175835554 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095380986 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.558359715 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09115256 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119407754 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.110228622 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092382471 seconds)
  done (took 3.859754114 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.478933959 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.73947859 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.520880654 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098096791 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.310519279 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113045439 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.995801805 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.202794709 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117693215 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.494358455 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.773594638 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.163223138 seconds)
  done (took 19.163274632 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116130829 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.138006586 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.12406125 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.154353065 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.143065802 seconds)
  done (took 1.834100028 seconds)
done (took 133.487279394 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105224322 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404413508 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071390731 seconds)
  done (took 1.664921143 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108363885 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137766667 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108538515 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137295537 seconds)
  done (took 1.656845491 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098752843 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126906006 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110301099 seconds)
  done (took 1.496258424 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.327009706 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191414952 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.171291551 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108767352 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129490777 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103384007 seconds)
  done (took 1.500710759 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098960353 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128222211 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097978813 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130934312 seconds)
  done (took 1.615632397 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095215655 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070413472 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101111413 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075361544 seconds)
  done (took 1.497104211 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114388915 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132543231 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103434119 seconds)
  done (took 1.51153951 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.13042607 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140894004 seconds)
  done (took 1.432270624 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107465279 seconds)
  done (took 1.264305331 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118177988 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169397311 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.191235149 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165674789 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.239342953 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166677879 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142944288 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.117569656 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132600744 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145797547 seconds)
  done (took 2.751352926 seconds)
done (took 18.338959444 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103652798 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.518162738 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412417624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117354252 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722385812 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379245094 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.070922526 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147262284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165802177 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093269052 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140203033 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672411133 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024809913 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.469035914 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982726812 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.374811782 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67603697 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122457705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122007074 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094083126 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.053690763 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09188716 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123099058 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092847672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703418156 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425748408 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095484523 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376471826 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092813726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127018072 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383632618 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12426634 seconds)
  done (took 17.250194727 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097205119 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174863821 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097647014 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138646585 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124063251 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095249051 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125021677 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093517618 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180473845 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123305734 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110542793 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123323533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126065097 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095967 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142924435 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09277922 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126074215 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091873258 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123468322 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121631921 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112266611 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120588729 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094935996 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122615982 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094022757 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136798467 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093960264 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122381839 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120821719 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098464953 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128009514 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094624514 seconds)
  done (took 4.907406911 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142088871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183774373 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129649934 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126814923 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169686753 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124962415 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198790633 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117614737 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183901273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12378606 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140386923 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093879691 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157463978 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12225025 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115901559 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12201323 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096908279 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122909535 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09178489 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124878018 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140041428 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093977313 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122412367 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093976296 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124044519 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108690153 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126121829 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121423606 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094588295 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12740059 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099565767 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124618335 seconds)
  done (took 5.238293488 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099441614 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126566657 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109689706 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138999677 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09472073 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126324509 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097039818 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125169336 seconds)
  done (took 2.088608782 seconds)
done (took 30.639737506 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111730026 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127247636 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107448728 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135716868 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102888915 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13273553 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091302287 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136333679 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133402257 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103632328 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137742713 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093051591 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123092616 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092263434 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136284014 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098447495 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134659521 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102004354 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135200422 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133503843 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095217896 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133479839 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103953046 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134786033 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104310671 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134399658 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137762446 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100529936 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124107604 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094375831 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124785896 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104468371 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125019234 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106346543 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128020471 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096646702 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124921552 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094046063 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13465893 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133471448 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100009103 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134335222 seconds)
  done (took 6.097993486 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.1085412 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139785962 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105565664 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081165006 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119877329 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080920124 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138614161 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079146775 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110589216 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108192481 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073897499 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10765902 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078476855 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101441572 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078018524 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07572771 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108763928 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077395743 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076913211 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106953477 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080961725 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072366857 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109176833 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078992092 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074100644 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111200579 seconds)
  done (took 3.65811531 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101568434 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136067213 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113611368 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185087041 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161348132 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099497462 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134247369 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13956676 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110204116 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120793075 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096818861 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150561499 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110505737 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131170724 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091165831 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138130112 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135867032 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094309992 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.1293355 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11309638 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138533309 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102029996 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144073067 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132479962 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092421902 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12343933 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096523286 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135691 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098189845 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132569981 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095587129 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12693187 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.1228683 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106052785 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126471979 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095654455 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142776758 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102516205 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132049567 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092214481 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.127072765 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121780977 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114266046 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170493699 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091240993 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130872092 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.09899796 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133527977 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121305801 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112139724 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132134453 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092046878 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125890812 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091356366 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122651665 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106841471 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125799571 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094765241 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132539228 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124304907 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105837667 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125469638 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10953172 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122814422 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10032993 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122602795 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09241416 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121882726 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.1435864 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095777912 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164435399 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102561254 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124964057 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130104382 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10147026 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128504807 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094011608 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138488631 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102888386 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12687891 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101351035 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127225285 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123359806 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.113495288 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124512448 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095517048 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122411215 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100092279 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125197649 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094222471 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137941529 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092211142 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127142683 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139396152 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093401098 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122898621 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.102147291 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127426057 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092487205 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13666684 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097282631 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123618428 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131966057 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094106926 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124518092 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103674889 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127254793 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092651559 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127985246 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098979438 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125021478 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093246831 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12674091 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093510875 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132899144 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128425357 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098703121 seconds)
  done (took 14.958576786 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.22889346 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21610123 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206929029 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.295385076 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136459029 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114556009 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211464811 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157426295 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124311876 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160803709 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176440201 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181171438 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169227784 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183765815 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171182367 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09333564 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142783685 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.132992344 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.246109454 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258362506 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144220366 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100302499 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162281373 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160639501 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137302948 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.101811552 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142081809 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136586907 seconds)
  done (took 5.884671963 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108699399 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158053093 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097658273 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146930426 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149405294 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092612302 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128995906 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093696391 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13733984 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13640293 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09287077 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12987289 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099269162 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133039999 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12393271 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104730539 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132069316 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095102885 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127153411 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097342912 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130614449 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101011088 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129028786 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.1216123 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10404496 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121643899 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086337878 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142806371 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121841016 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11687548 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121632991 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099507498 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133499477 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093775004 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123519801 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094751791 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12630374 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095344091 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125518213 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091849355 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123029666 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077785178 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122239871 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136440269 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101025408 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07949266 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130865812 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128155686 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095193955 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121200397 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096958152 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126403239 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09782858 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131618556 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099081437 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124441359 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.0975496 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116709838 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100926301 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125757744 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.08523426 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120787516 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100596578 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118894797 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102252096 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129228309 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092375134 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126561006 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097926564 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13025667 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095497513 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.12804682 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091228769 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127320097 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096334819 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.1290108 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095614364 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12429798 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121899479 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095507152 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07501652 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124848495 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074025848 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127706079 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091607108 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122644735 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09518868 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130865579 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138769642 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09536015 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13289315 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094403312 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123059493 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096624682 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113980797 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097183536 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139958615 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142336553 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093889659 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122143204 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107215073 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126462543 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093014921 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106580681 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101299613 seconds)
  done (took 13.070403826 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128763797 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154069749 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094872695 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143835896 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15647074 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157652961 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102264474 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130833993 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096750895 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143354064 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094489403 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133533135 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097786814 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139446621 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157100031 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104922977 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127243485 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108617635 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133637226 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171596252 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111717371 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143833724 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107496593 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126172499 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098393125 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.142613531 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162771308 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107367131 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138146782 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142243978 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10932544 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162532362 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111474195 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129547798 seconds)
  done (took 5.577138466 seconds)
done (took 50.411727108 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.273704272 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.533640468 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.267445511 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.284404668 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.319767407 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.282478536 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.278406715 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.265434389 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.344110235 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.267987692 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.508972036 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.002270319 seconds)
done (took 59.821813274 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.292327343 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.40751053 seconds)
    (2/2) benchmarking "String"...
    done (took 1.532575037 seconds)
  done (took 4.1334788 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.63866196 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.23918137 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.534139682 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.267196088 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.269985538 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.55830449 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.052975869 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.630387194 seconds)
  done (took 28.745145434 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.278081352 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.35982285 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.300725676 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.275051832 seconds)
  done (took 6.408741335 seconds)
done (took 49.418603176 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.261710999 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.286622623 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.280734988 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.265276581 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.387422605 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.300543201 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.597412156 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.303859478 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.290182356 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.249016226 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.305660511 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.269556961 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.281732988 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.662037191 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.278616095 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.2723723 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.348351083 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.846625948 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.709937725 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.272538922 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.304040635 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.304773685 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.273198731 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.294230021 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.323173127 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.26938795 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.269414407 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.284672827 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.985031016 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.270528417 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.296754985 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.885212766 seconds)
  done (took 193.425790157 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.270159798 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.313151283 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.434150616 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.308023248 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.778653357 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.471134199 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.396375383 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.877501522 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.293968063 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.277975177 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.506742902 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.272750552 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.584716518 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.288485401 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.300453626 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.359241686 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.528157973 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.614419104 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.326490847 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.453168745 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.277130988 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.472762996 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.398358657 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.485640773 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.283354102 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.377632744 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.310329951 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.28361561 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.481481315 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.457714673 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.307143278 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.324619608 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.929212512 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.132107945 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.294168734 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.301012448 seconds)
  done (took 152.968403302 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.340735567 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.270942323 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.270776242 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.271433992 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.30426388 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.27129559 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.882259548 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.886917533 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.783896354 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.715634792 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.758605424 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.619280856 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.276465668 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.274724768 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.368843963 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.285938393 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.273420445 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.288400407 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.319113417 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.27362515 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.272746463 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.889416107 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.287940081 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.461666466 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.453952392 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.292810544 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30669638 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.666429878 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.273090272 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306783359 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.609959767 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.327848616 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.273323021 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.713840166 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.277004084 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.497064537 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.38898852 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.276521489 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307444502 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.27348988 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.558404681 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.274136607 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.274928353 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.277456392 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.992050298 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.277538358 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.879464829 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.277788439 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.26068759 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.273807284 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.274594833 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.70352176 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.060577969 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.297540431 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.2752447 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.277125494 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.274989639 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.274701573 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.307371314 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.674053463 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.371883764 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.296349052 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.279279278 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309578427 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.27566483 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.384929827 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.295432401 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.544192283 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.355923408 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.49228617 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.888194728 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.279200555 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37721276 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399199025 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.275446846 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.276315993 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.276027354 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.275517097 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.388786302 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.275414746 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.721616491 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.457260676 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.296869806 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.768543842 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.378343088 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.275815663 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.716333263 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.279362636 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.27665468 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.12353056 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.377983226 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.276749543 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.276291446 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.276086524 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.275950402 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.722989167 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.891031614 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.585105914 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.281378889 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.719221475 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.281582074 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.738374329 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.861453695 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.021462058 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.280905428 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.27828141 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.390576722 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.459159613 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.298319802 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.277605215 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.770600918 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.281839358 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.337182334 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.277050589 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.676818386 seconds)
  done (took 376.048145423 seconds)
done (took 724.982041849 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.939092079 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.934605245 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.055272854 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.924320532 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.8870885 seconds)
  done (took 10.943418354 seconds)
done (took 12.151537227 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.486973106 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.488960742 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.347926418 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.490634698 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.311551079 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.506730342 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.466837101 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.301720671 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.388355481 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.371243825 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.3909373 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339493368 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.308094691 seconds)
  done (took 19.402917036 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.609790269 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.614110887 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.343371285 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.627784362 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.318823839 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.607721472 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.489022775 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.498180657 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.493066807 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.316254173 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.293001084 seconds)
  done (took 17.416009616 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.672688378 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.623043253 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.346418992 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.617083683 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.32129368 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.615493072 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.488260544 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.504259474 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.508942395 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.315809991 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.294220652 seconds)
  done (took 17.512089585 seconds)
done (took 55.539041917 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.289361301 seconds)
  done (took 2.495835821 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.326490345 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.492346248 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.311407576 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.293475016 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.290935896 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.291379871 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.295142628 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.29080265 seconds)
  done (took 11.798686503 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.286629886 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.286964183 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.289099002 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.286491777 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.289468117 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.28851151 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.286990592 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.287441907 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.29005346 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.286969477 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.290888935 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.288005267 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.289895298 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.290081411 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.290632316 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.291246337 seconds)
  done (took 21.826449778 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.289349907 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.28776041 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.287515197 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.28692866 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.287221529 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.288320216 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.289071443 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.287906766 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.288233855 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.287288826 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.288601385 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.288335541 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.288551019 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.288046838 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.289146476 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.290157713 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.287859223 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.287987445 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.292277518 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.2892265 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.289691714 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.288597781 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.290343925 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.28905249 seconds)
  done (took 32.136953986 seconds)
done (took 69.469748035 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.51353367 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.018631086 seconds)
  done (took 9.740793105 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.291557992 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.290643166 seconds)
  done (took 3.791522374 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.290771928 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.292081377 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.291148364 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.289954045 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.291233151 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.289831341 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.291319295 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.2911341 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.291232902 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.291720061 seconds)
  done (took 14.118597793 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.292362271 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.292478405 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.289325008 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.292152119 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.291766788 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.29040227 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.292718046 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.292032985 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.292127265 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.289659559 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.292236376 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.290656628 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.292662365 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.290284121 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.292534258 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.290337558 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.290832679 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.291016605 seconds)
  done (took 24.455715431 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.294218236 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.293402824 seconds)
  done (took 3.797109246 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.292872857 seconds)
    (2/7) benchmarking "second"...
    done (took 1.290202686 seconds)
    (3/7) benchmarking "month"...
    done (took 1.290537331 seconds)
    (4/7) benchmarking "year"...
    done (took 1.290610313 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.290720763 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.290162744 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.291164437 seconds)
  done (took 10.246911395 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.29453108 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.478937423 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.556436279 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.916242871 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.294308853 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.29712379 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.194592442 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.296731521 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.299662789 seconds)
  done (took 14.839156685 seconds)
done (took 82.203918132 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.350955431 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.310118427 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.498819311 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.303850916 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.307835944 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.631057241 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.316282261 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.419951164 seconds)
done (took 38.355257751 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.294914666 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.278418527 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.297747704 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.290459821 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.383151024 seconds)
  done (took 18.462358548 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.361448497 seconds)
    (2/2) benchmarking "read"...
    done (took 1.627347331 seconds)
  done (took 5.200880766 seconds)
done (took 31.175966892 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296538648 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.295037463 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.29442291 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.293589628 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.295665859 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.292967687 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.293504114 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.294078076 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.297076697 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.296521388 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.296827556 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.294982527 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.295658265 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295328318 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293435986 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29343009 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296777161 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.294154148 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293086906 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293088707 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296008137 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.293937138 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.293816256 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.295871603 seconds)
  done (took 32.288474148 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.297347147 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.293662244 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.297741833 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.297382991 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.293827767 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.296340595 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.297788815 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.29507043 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.29618117 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.295335794 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294374223 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.293843781 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.295655493 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.293552777 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296325548 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.295084165 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.296962429 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29324489 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29613257 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.294133083 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.296701188 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293249191 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.295298411 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296588176 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.293613842 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294502351 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.295266369 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.295334808 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29735248 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.29413747 seconds)
  done (took 40.076387782 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.301872941 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.30511218 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.298085756 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.296834461 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.296811247 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.296791803 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.29765149 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.298233147 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.297156024 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.297704387 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.297774019 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.296734075 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.297751694 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.297807304 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.297671533 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.298707453 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.297975349 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.297219425 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.296871636 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.297520883 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.298157986 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.297644503 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.300240734 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.297106462 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.297079449 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.29722813 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.298862016 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.297638718 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.299068429 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.297345177 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.297738917 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.295484323 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.29562286 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.294769739 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.295113826 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.295356483 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.301296503 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.303794535 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.296130253 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.294225146 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.295835575 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.294970636 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.296013507 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.295080495 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.295143194 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.299762238 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.292094795 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.291698707 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.291837039 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.291369204 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.291556394 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.292093188 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.291581388 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.293710782 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.291967178 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.293380308 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.292929133 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.291619795 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.292429913 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.291918945 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.292139448 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.294853602 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.293179335 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.292648566 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.293326465 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.292127101 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.292189255 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.292290098 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.292439057 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.297270977 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.291925151 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.293480453 seconds)
  done (took 94.514850231 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.293178374 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.290004429 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.289830876 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.294130084 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290875897 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.29171556 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.291129117 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293289705 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290363582 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.29265151 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292501331 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293551996 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28963412 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29275931 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292998255 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.288934914 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.292287082 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291138519 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.292411314 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29437575 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29167924 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.289676876 seconds)
  done (took 29.628693783 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293469952 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293851979 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.2907054 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.292973034 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.291389785 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.293259839 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.2929925 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2957333 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293753046 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291751003 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290959175 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294787612 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.291516241 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291821688 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291572593 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292793726 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293314264 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293048797 seconds)
  done (took 24.47931668 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.292248914 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.291984705 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.293720138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.291086011 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.291679105 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.293255098 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291411065 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.295275974 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.295218228 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.292859951 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.294467167 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293458041 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.294835208 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291919267 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294483312 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.292279727 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.294772153 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293017348 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293571422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29248388 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.291405152 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295137871 seconds)
  done (took 29.661630499 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29642141 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295942571 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.293243348 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.293026326 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.2921393 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.295015671 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.294448336 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.292785191 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.295993565 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.294955385 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292040279 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.295547614 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.294385713 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293395375 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.292966046 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292723304 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296338257 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294433447 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296399636 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.293726737 seconds)
  done (took 27.097376476 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296375225 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296697272 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298051812 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298308205 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297522252 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.298606955 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297638164 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.298205529 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299018967 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.297944284 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.298022719 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.298834643 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297357199 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.298402756 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.298919652 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298326538 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.299015253 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298729892 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.300062961 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299058861 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.298387031 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299091667 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299317209 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.298532626 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.300014711 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.299770495 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29961641 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.298985415 seconds)
  done (took 37.57251278 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298613541 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.299397401 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.296391806 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.296261849 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.295466323 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.296138798 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.296359439 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.297618581 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.299068871 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.296906965 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.299828566 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.299033327 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.299555129 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.300096807 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.298102469 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.299335058 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29940133 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.296468443 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297288338 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296678561 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.299946742 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299698649 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.299525306 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.297089442 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29699551 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.300721809 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297440797 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.297051324 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301416042 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.297572947 seconds)
  done (took 40.160947857 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.319087017 seconds)
    (2/2) benchmarking "in"...
    done (took 1.318190358 seconds)
  done (took 3.854145535 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.297583195 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300946843 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.30069345 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.29809172 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.298135407 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.300348369 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.300842067 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29716217 seconds)
  done (took 11.610598797 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.30114509 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.301534835 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.301084373 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.30070569 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.303083359 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.300819563 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.307979669 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.322524986 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.304325872 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.303250707 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.309090495 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.309223183 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.303077087 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.300983749 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.299754021 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.303389454 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.304927174 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.302941186 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.304546067 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.302333838 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.302257306 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.3032237 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.304112919 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.303104076 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.303620715 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.311009602 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.325347073 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.302078407 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.301444442 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.305806227 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.301117549 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.302416492 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.303037367 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.303374101 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.302699171 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.303455446 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.310044782 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.321774536 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.308411328 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.324441474 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.303221606 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.299927983 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.308214698 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.303617965 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.304139504 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.303942949 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.306584612 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.300834713 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.301050794 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.305593209 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.309243285 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.30128714 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.299954453 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.305791269 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.305762368 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.308375779 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.323147635 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.306616897 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.312581868 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.312732931 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.335194087 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.328111455 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.312887356 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.303667876 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.312888388 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.325808435 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.308957725 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.321163865 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.302240261 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.306488415 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.308444259 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.334714933 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.327967751 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.302198475 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.303977718 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.30338084 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.301782097 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.304299857 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.309789642 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.326417332 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.304163771 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.303918777 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.313066087 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.326177981 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.301681107 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.304557062 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.305420277 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.304379757 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.30607925 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.31465642 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.325241814 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.305329486 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.303168726 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.303691345 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.304591963 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.30554225 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.303658979 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.304607914 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.302444086 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.305416534 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.304808172 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30887381 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.313539342 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.305796353 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.305485752 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.310695062 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.325979762 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.304171455 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.310518278 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.305029121 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.306671243 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.307214632 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.310758174 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.302645245 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.308267 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.31313823 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.305577321 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.305913797 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.305487181 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.306438928 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.315102494 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.330509555 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.306200657 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.306159618 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.311194775 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.316664444 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.306380601 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.308682119 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.306147244 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.303923981 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.304818401 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.306743591 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.307197177 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.30616089 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307106529 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.305923405 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.304110838 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.306545712 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.308947946 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.306828648 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.306299367 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.306509951 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.306142843 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.308332219 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.305884967 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.307073233 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.315937157 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.325928165 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.307580083 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.30794486 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.303157728 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.306253384 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.305927507 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.30982459 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.307653694 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307108415 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.305456442 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.307461897 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307629175 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.308902832 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.309187446 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.309973059 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.311250714 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.308687456 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.3112525 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.3064112 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.305319434 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.309134531 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.309177478 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.308357335 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.30815812 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.306264428 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.311483748 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.316566584 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.308854405 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.309564415 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.309333212 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.308366362 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30951434 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.309437486 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.311049013 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.315769417 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.309111344 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.315334848 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.330619025 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.310495111 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.310039736 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.307917499 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.308433544 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.310019354 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.311753323 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.317694492 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.321103232 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.334542196 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.310200889 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.313483521 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.310581391 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.314082825 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.312838973 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.312997405 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.309890778 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.309520478 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.309238226 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.310168983 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.30968759 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.309923541 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.307872299 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.31172932 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.310006677 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.31001569 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.310858876 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.309161358 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309846402 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.307140946 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.310020133 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.310660888 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.309689236 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.30859048 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.30988223 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.309996367 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.309762529 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.311216101 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.315626607 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.309300772 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310856304 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.311690105 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.309400932 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.309854843 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.310355742 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.312236495 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.310711462 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.316874964 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.331339192 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.311506697 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.316865677 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.33074726 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.310164192 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.314030596 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.311990936 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.310263289 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.314867631 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.321297674 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.311698703 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.312596778 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.31201984 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310984639 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.3127953 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.318042872 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.330517205 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.311783792 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.312380585 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.313007303 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.31019843 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.312765167 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.312967117 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.312464594 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.313313128 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.31428394 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.31368192 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.314675519 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.316002684 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.313691563 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.31428804 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.317263841 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.323170477 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.316540887 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.313015343 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.314557976 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.315052581 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.318039428 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.313979018 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.314609727 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.312571547 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.325201606 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.339983199 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.319052316 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.334821591 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.314569408 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.31876112 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.336298531 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.316143558 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.313469013 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.314086229 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.313649388 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.313063809 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.312704764 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.31493947 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.314052611 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31475319 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.316489137 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.319481115 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.315935907 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.31483375 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.315472882 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.315406946 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.315984166 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.31432273 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.316955697 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.31816726 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.317374142 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.313627742 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.314611538 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.320866193 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.33495742 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.315451711 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.314964422 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.315409575 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.313861488 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.316281594 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.317130644 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.320104153 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.323974898 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.319910598 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.324461442 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.318086044 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.324985422 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.3167441 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.320395074 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.324691342 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.313940364 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.316005566 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.317077778 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.317124788 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.323432679 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.338389101 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.318647159 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.322819704 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.316806442 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.318380249 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.31730942 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.317036357 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.318967776 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.318074139 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.324933719 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.339190267 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.320536515 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.318323285 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.314373891 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.319686027 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.318012181 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.316062153 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.318925969 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.318474885 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.31814855 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.318291356 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.317941427 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.318304965 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.319270987 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.319080728 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.317428306 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.318124918 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.324038761 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.341301945 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323857326 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.319948476 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.325527311 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.339868194 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.323966592 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.341883883 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.319819566 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.320111772 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.319268857 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.3204636 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.318836151 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.319091841 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.32115504 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.321785599 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.324033765 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.320804064 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.321492208 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.31946485 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.319536773 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.319511365 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.330484197 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.344236988 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.321227018 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.325012365 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.318274864 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.321396475 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.325737338 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.320593164 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.319112767 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.322464865 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.330136808 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.329373013 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.321004688 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.322046892 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.320778392 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.321512955 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.321757097 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.321436294 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.320898805 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.321897871 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.321141604 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.322176592 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.322418809 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.322560711 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.321626796 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.322554092 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.322325417 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.332003717 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.342658788 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.323415348 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.322788993 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.322976679 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.32147121 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.321750069 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.323272722 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.321931627 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.322332518 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.322829014 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.329294677 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.328787382 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.323953762 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.322147963 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.322350928 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.322131369 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.323377456 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.323392865 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.322805564 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.324340884 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.323784971 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.322538092 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.32304603 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.321918538 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.322412981 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.322377639 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.323399214 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.32666731 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.330089107 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.322066687 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.320076465 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.323073837 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.324085108 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.322538058 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.3224525 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.329810289 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.346372017 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.334270521 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.331824627 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.328762294 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.323806798 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.326080211 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.33214127 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.322292867 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.323775511 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.324769396 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.325444709 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.325281166 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.328324051 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.32513826 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.330250795 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.343941707 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.323847439 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.331148265 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.34575267 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.325331267 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.326963587 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.329374156 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.324228499 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.322908881 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.325599877 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.324082254 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.329657501 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.346682698 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.327564156 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.326714089 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.325202052 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.327898289 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.329784756 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.326996499 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.325618451 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.323504844 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.326635075 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.326365468 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.327886106 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.324028284 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.325152351 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.326164062 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.330071162 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.333019866 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.324679318 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.328609523 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.326363251 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.327254238 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.328532888 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.327350276 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.324990311 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.32482642 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.327455105 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.327795527 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.327900344 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.328698078 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.326868701 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.328372461 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.329029031 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.3284068 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.330430782 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.338471031 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.335120859 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.325866595 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.32752171 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.326622774 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.330209992 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.329052767 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.3298157 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.328354952 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.328946481 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.328915779 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.329577252 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.329132983 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.33191869 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.343077711 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.349749707 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.327536551 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.328594269 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.33043356 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.329328506 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.327083859 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.328913015 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.330524007 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.332276255 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.337407642 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.330094746 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.334743053 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.349241844 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.329433441 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.33411959 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.331929948 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.337144777 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.330699276 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.329005535 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.331064446 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.334922066 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.346091256 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.329660974 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.340423598 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.359602889 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.349811835 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.33106275 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.331313166 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.328921793 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.331868048 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.330644057 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.331841173 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.331648537 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.331171956 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.331634065 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.332541017 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.336370158 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.332219878 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.332876556 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.33130156 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.32949747 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.331990424 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.328655129 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.331521435 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.332245563 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.333624125 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.332488397 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.331994379 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.332303517 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.343241798 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.35779233 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.331926049 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.332192976 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.32991165 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.334390345 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.335262503 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.342480464 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.340396334 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.332410302 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.331882905 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.332237688 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.332543539 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.331963035 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.331958192 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.332021766 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.331722219 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.330277468 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.343533394 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.359714587 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.335223422 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.330978382 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.333906201 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.334609764 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.333671194 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.333784108 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.333495179 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.334651007 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.336069434 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.338308387 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.333738363 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.334165443 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.33781054 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.342754646 seconds)
  done (took 787.387836854 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.332399045 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.330775548 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.332377743 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.332088572 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.332649837 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.331954523 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.331148724 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.331940518 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.332723828 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.331613932 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.332048878 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.331922543 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.33198415 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.332086161 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332611335 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.332474598 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.331891021 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.332735891 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.33276417 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332325637 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.333186054 seconds)
  done (took 29.224019542 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.337379351 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.33514314 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.334094497 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.335892816 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332551516 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.335142547 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.332225552 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335937236 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.336542553 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33191507 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.336826712 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335428056 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.333405195 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.333153015 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333547529 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336788816 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.336917185 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.333826444 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.335943816 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.335279648 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.336697706 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.334745886 seconds)
  done (took 30.618666322 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.337782279 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.337960877 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.334837216 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.333096095 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.336732427 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.335428215 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.337545833 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.336815107 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.336426005 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.336502659 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.334992692 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.337658542 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.34504329 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.343095274 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.338798991 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.337392643 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.480534711 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.339417999 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.338224553 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.339229182 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.335789071 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.342653726 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.355665707 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.335246179 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.336303329 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.338215718 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.338215761 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.338368556 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.337711729 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.338532589 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.343572463 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.33845052 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.337469956 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.338986477 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.338107955 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.340005872 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.343260585 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.340136735 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.335527042 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.338243972 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.348512078 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.360075722 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.339890951 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.344679538 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.358582272 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.339174868 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.343463055 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.347640693 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.336967856 seconds)
  done (took 67.057838276 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.340304261 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.340160496 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.337740032 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.339363325 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.34043735 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.340071467 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.340617631 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.340138461 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.337230714 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.338152683 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.341650888 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.337741108 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.338094157 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.340183209 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.34193749 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.338301248 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.338058906 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.337355703 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.338409805 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.338240288 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.339146768 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.340500674 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.342065786 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.338624888 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.342417933 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.338157217 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.338248105 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.340982755 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.338671369 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.338523686 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.341695194 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.340794829 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.341567357 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.340403706 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.338435317 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.341810053 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.34253703 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.339422645 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.342597426 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.340190594 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.341532047 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.342324136 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.34252907 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.342683667 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.340411997 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.340223589 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.340488477 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.340529013 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.339625719 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.342995174 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.342967778 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.340966853 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.342354066 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.340827552 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.342491635 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.343013099 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.339840193 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.341497923 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.344012835 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.342150819 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.341695783 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.344278309 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.341451034 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.343628903 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.342876922 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.342150285 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.341684979 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.34405188 seconds)
  done (took 92.421501545 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.345368277 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.343366552 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.343480219 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.34464449 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.344749709 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.344356323 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.345609317 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.344315547 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.345257007 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.34489886 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.346527127 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.34519134 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.344566512 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.344488059 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.344474408 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.345986578 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.344406895 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.346239976 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.34531396 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.346269001 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.345860493 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.34579919 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.346027068 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.346285792 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.345582509 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.346276611 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.345251811 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.3455601 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.346107264 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.345718433 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.346067271 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.344178206 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.345481529 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.34643246 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.345930568 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.346183781 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.346289753 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.346518714 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.346508918 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.346597476 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.346182388 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.346774191 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.346599787 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.346006431 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.346510573 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.345905022 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.346498258 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.346651151 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.346312447 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.345884353 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.346534333 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.347183284 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.346841167 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.347232888 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.346653781 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.345830937 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34720318 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.347889303 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.346937911 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.346513857 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.347449065 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.347227594 seconds)
  done (took 84.705005501 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348089634 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.347402823 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.345054742 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.344773909 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.347105042 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.344607919 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.346722943 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.34849694 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.347916292 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.347518525 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348185166 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.344074338 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345373919 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348666931 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.345327372 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345407847 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.345867548 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.345237796 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.348798375 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.345130343 seconds)
  done (took 28.190228851 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.347056853 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.348826172 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.346366004 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.34568747 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.349032908 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.346515214 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.34949908 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349274142 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346845924 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34833722 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.349404699 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.349538276 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347700734 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.347678542 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.349317473 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.347873358 seconds)
  done (took 22.829677561 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.34725163 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.350301819 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.350886551 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.349947581 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.347702164 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.348231771 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.350539962 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.347597058 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.348472472 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.349680741 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.35097189 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.3508194 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.350112116 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.35072991 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.348117128 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.350733386 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.34834103 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.348454167 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.351569199 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.351209398 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.348301975 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.348578068 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.351116871 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.35086567 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.348752728 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.349542957 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.348843198 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.34868993 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.350187962 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.351173314 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.349539109 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.349281042 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.349163968 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.349003892 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.352147714 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.349519684 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.351093905 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.35213506 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.351957397 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.353402943 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.352538622 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.348386741 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.352545248 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.353172728 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.35058873 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.352079144 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.350183626 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.350607202 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.35014663 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.349462193 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.351773398 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.35243018 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.352951546 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.353851426 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.352497273 seconds)
  done (took 75.532661716 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354172371 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.353203877 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.35133384 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.354671259 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.353695939 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.351728641 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.353663601 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.353120704 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351816584 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.354387159 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.352571123 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.356343663 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.350908554 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.354612839 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.353939489 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354575023 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.351691809 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.352410421 seconds)
  done (took 25.624837036 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.353416859 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.351852619 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.355859369 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.352073122 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.35295407 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.355836583 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.352466532 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.354743039 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353958279 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.352090518 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.3521305 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.354242269 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354782319 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.357002042 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.352682268 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35213158 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.355457911 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.35459473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.353874368 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.351554406 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.35548358 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.355828977 seconds)
  done (took 31.051632348 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.354856827 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.353818101 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.354220071 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.371609979 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.373617109 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.37768152 seconds)
  done (took 9.452682712 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36283912 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355751871 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.353000095 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356817578 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356210732 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352816614 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354166195 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353680199 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355813144 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353579622 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352557799 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356059461 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356506779 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35342198 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356865032 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356239627 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353081079 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353473252 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355112157 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357173231 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354096927 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357430614 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354806459 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355744435 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355113616 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354643955 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357505246 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355375977 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355478068 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357170034 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358769438 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355609076 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357555815 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355773297 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359095376 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358174504 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355835918 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358202193 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358251511 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356445456 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.35771502 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359486487 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358534312 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354704754 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358074901 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357120059 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356072165 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356683252 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35732892 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358843086 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35821569 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355869501 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358920702 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359971754 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358609497 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359309387 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35666174 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357461604 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359822345 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357667708 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357043257 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360229494 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356720584 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357397157 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360491721 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356841037 seconds)
  done (took 90.835550869 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358584059 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.357355361 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357861139 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359226736 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358093914 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357617411 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358374834 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358581547 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35767984 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357588559 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359902341 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358153192 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359133991 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358682624 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358074652 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358589179 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357980518 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359128061 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358534605 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361478926 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358405885 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357747441 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359304936 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359320652 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359498623 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362473343 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358767188 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358897978 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358511952 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359046886 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360585244 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360538122 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359776058 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.35998562 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360446228 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35914242 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359875345 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361052858 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359572168 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361484932 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360370785 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362762529 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359704591 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361300205 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361161161 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360313731 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360126579 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359757479 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36049147 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360385137 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360436952 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360780081 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361429338 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362140963 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360894708 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36096908 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361461417 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362088746 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361231128 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36427431 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360135517 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36110492 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363888415 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361597219 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362083455 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361876613 seconds)
  done (took 91.031726529 seconds)
done (took 1838.12710942 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.373960645 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.468383065 seconds)
  done (took 14.117056135 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.530572188 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.480838771 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.362262353 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.403329461 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.363005002 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.379024798 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.368213041 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.362775273 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.362863657 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.363962012 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.362261136 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.552347055 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.409528117 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.364719799 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.363161752 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.457361847 seconds)
  done (took 43.77000267 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.391546675 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.368814082 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.486983428 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.388881319 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.390982843 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.56239217 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.425540139 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.369375161 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.551047064 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.41371271 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.005360464 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.390602668 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.368662226 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.530974248 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.387897832 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.561908322 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.630494888 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.01473728 seconds)
  done (took 31.517460669 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.850996637 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.397939414 seconds)
  done (took 9.526646543 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.388867858 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.369518738 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.368818216 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.367655582 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.359255697 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.361648251 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.367972021 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.364270957 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.300749568 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.505193462 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.370549597 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.375566007 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.387681745 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.36853426 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.366130116 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.404476577 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.521200582 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.366481738 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.367491513 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.374457197 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.368181926 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.457307117 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.412354168 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.367763274 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.502931671 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.283420648 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.377285343 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.375000543 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.55275587 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.369528461 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.368757975 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.370029445 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.370229877 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.989072955 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.920389429 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.381199863 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.412568829 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.378736246 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.36796609 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.527861094 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.371755117 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.373969516 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.373505998 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.907216424 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.510743824 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.492046503 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.71527441 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.39132936 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.372414087 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.434682754 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.370812112 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.37167198 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.400670998 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.1584425 seconds)
  done (took 114.341863771 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.407002695 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.752098469 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.535677163 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.387700552 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.203790787 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.178800161 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.384304023 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.676325646 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.427136282 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.365488249 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.658212941 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.895650537 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.383515935 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.421435596 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.85715836 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.427111511 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.364842687 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.092596348 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.383043228 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.369979652 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872672445 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.366123659 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.367687919 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.562539509 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.404896632 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.838390992 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.849166952 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.813053258 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.386166974 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.365389829 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.853743138 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.383811847 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.378329534 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.368954448 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.64289789 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.745780263 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.73286816 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.383676551 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.367380609 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.368444956 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.380172775 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.83498373 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.743381545 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.384148439 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.366794244 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.83992694 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.384596324 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.367571305 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.368831969 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.578347993 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.018065122 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.368217737 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.875137348 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.370401949 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.668022908 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.452092071 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.445782973 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.867950618 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.385642461 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.483272965 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.430051364 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.369607886 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.376742551 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.371958421 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.372710996 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.73241137 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.692684972 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.370316972 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.729750092 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.866546207 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.386248004 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.916307606 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.252394915 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.378638077 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.43327901 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.369379824 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.944101876 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.878222903 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.428190566 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.36858943 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.71850664 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.389845626 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.656555925 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.386384259 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.369026548 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.889616688 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.374254095 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.411886448 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.36962956 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.370460154 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.134812262 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.369107088 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.666153274 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.391218976 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.369504422 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.369130662 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.412409292 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.371255475 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.369904938 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.370331577 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.915429199 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.395009762 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.35807771 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.39063858 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.374286756 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.373746579 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.37047126 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.371171572 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.600220659 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.842871134 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.392721516 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.3702635 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.371704896 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.379415728 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.557862521 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.370946875 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.695737877 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.392108305 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.371273096 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.375109182 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.181374194 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.42024438 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.371777582 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.390837932 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.293831105 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.580057377 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.39165194 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.371501926 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.370554192 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.402504211 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.671470638 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.394125805 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.454301708 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.374652683 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094696103 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.399513978 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.405906128 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.676595973 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.381035254 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.371843212 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.394246498 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.372253203 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.666540096 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.647386694 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.551060308 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.373387331 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.389958177 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.07446173 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.404891291 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.521090069 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.392677202 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.362738174 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.573176604 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.512856717 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.375671123 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.961140631 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.372944853 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595596187 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.373800903 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.694690861 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.884321733 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.392100037 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.375366554 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.10086358 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.079410655 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.140146101 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.375565038 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.657471153 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.34905042 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.858640443 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.374099861 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.375520443 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.945391658 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.377165813 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.38304452 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.374971329 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.374358584 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.435155153 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.550550112 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.572980911 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.375623379 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.845289559 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.42723578 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.376287114 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.385020654 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.377598114 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.725006126 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.444587355 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.376239628 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.401089232 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.376010292 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.376927683 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.866001627 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.33648752 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.376671819 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.529505952 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028853356 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.394777885 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.375564393 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.946854603 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.602258772 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.93900231 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.436361468 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.70263991 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.397222731 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.415889253 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.08487696 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.398780199 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.868541478 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.398804589 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.378189128 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.992250523 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.395758399 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.481323149 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.379168874 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.378594577 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935549671 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.395011414 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.378373877 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.730228975 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.399151222 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.635724783 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.378307388 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.415458694 seconds)
  done (took 1120.838887697 seconds)
done (took 1335.392851142 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.378711737 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.381597687 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.362102046 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.382889931 seconds)
  done (took 26.79982932 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.390711185 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.387990533 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.389165738 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.386391305 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.38988568 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.387049307 seconds)
  done (took 9.628902577 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.436880001 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.385407171 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.384339462 seconds)
  done (took 19.50456902 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.604994663 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.758420791 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.763553501 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.774786128 seconds)
  done (took 11.199908805 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.390247047 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.389269905 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.38966884 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.39031124 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.392072341 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.393087676 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.389695435 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.389707892 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.392094492 seconds)
  done (took 13.811897711 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.391315146 seconds)
done (took 83.636268883 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", BigInt, false)...
    done (took 6.386937501 seconds)
    (2/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.525096741 seconds)
    (3/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.38092875 seconds)
    (4/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.172307768 seconds)
    (5/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.364146754 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.820322375 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.683344148 seconds)
    (8/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.081652064 seconds)
    (9/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.3650007 seconds)
    (10/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.484747443 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.987938711 seconds)
    (12/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.383196868 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.42701334 seconds)
    (14/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.363653148 seconds)
    (15/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.681122538 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.413482251 seconds)
    (17/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.431570766 seconds)
    (18/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.370097735 seconds)
    (19/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.490433317 seconds)
    (20/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.486200514 seconds)
    (21/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.384185439 seconds)
    (22/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.403492059 seconds)
    (23/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.383996969 seconds)
    (24/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.726859767 seconds)
    (25/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.848072694 seconds)
    (26/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.47034261 seconds)
    (27/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.116790388 seconds)
    (28/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.450751023 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.383181796 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.373129134 seconds)
    (31/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.37379228 seconds)
    (32/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.281397453 seconds)
    (33/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.364999336 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.51607509 seconds)
    (35/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.477490475 seconds)
    (36/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.06383385 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.805463038 seconds)
    (38/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.172783222 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.839390175 seconds)
    (40/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.366756951 seconds)
    (41/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.381403147 seconds)
    (42/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.373048545 seconds)
    (43/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.187547189 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.498423797 seconds)
    (45/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.62270316 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.07362598 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.665092011 seconds)
    (48/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.395230014 seconds)
    (49/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.365278717 seconds)
    (50/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.706778702 seconds)
    (51/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.500377491 seconds)
    (52/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.322609702 seconds)
    (53/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.249981408 seconds)
    (54/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.398185622 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.44840893 seconds)
    (56/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.204229118 seconds)
    (57/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.930759097 seconds)
    (58/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.761677323 seconds)
    (59/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.512845679 seconds)
    (60/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.384866624 seconds)
    (61/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.532396969 seconds)
    (62/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.883344865 seconds)
    (63/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.39348844 seconds)
    (64/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.250055447 seconds)
    (65/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.474124687 seconds)
    (66/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.315095363 seconds)
    (67/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.369515857 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.750160591 seconds)
    (69/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.676533189 seconds)
    (70/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.370140567 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.07787049 seconds)
    (72/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.368214275 seconds)
    (73/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.432858698 seconds)
    (74/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.190806851 seconds)
    (75/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.050784197 seconds)
    (76/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.389572928 seconds)
    (77/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.477073535 seconds)
    (78/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.414265133 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.387187049 seconds)
    (80/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.407881859 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 5.608409546 seconds)
    (82/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.386712346 seconds)
    (83/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.387521795 seconds)
    (84/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.211117645 seconds)
    (85/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.806954355 seconds)
    (86/286) benchmarking ("sort", BigInt, true)...
    done (took 6.387433948 seconds)
    (87/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.45086768 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.148793539 seconds)
    (89/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.941349906 seconds)
    (90/286) benchmarking ("sort", Float64, true)...
    done (took 6.388035163 seconds)
    (91/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.530346425 seconds)
    (92/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.403840179 seconds)
    (93/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.473761519 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.89356767 seconds)
    (95/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.470824982 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.407338216 seconds)
    (97/286) benchmarking ("sort", Float32, true)...
    done (took 6.386800302 seconds)
    (98/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.367921689 seconds)
    (99/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.115236744 seconds)
    (100/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.519193736 seconds)
    (101/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.479177806 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.588010038 seconds)
    (103/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.388197883 seconds)
    (104/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.80920916 seconds)
    (105/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.20498708 seconds)
    (106/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.196694059 seconds)
    (107/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.507380606 seconds)
    (108/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.387932193 seconds)
    (109/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.155393311 seconds)
    (110/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.373135615 seconds)
    (111/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.369658308 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.75287208 seconds)
    (113/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.669861355 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.406111036 seconds)
    (115/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.926661541 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.933827539 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.432766896 seconds)
    (118/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.942404 seconds)
    (119/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.232113268 seconds)
    (120/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.784026108 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.665178148 seconds)
    (122/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.88991269 seconds)
    (123/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.425788095 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.611512554 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.239134872 seconds)
    (126/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.211659838 seconds)
    (127/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.975915984 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.671143205 seconds)
    (129/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.807305892 seconds)
    (130/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.962735589 seconds)
    (131/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.690973226 seconds)
    (132/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.45316631 seconds)
    (133/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.399085063 seconds)
    (134/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.3709808 seconds)
    (135/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.518262839 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.518532365 seconds)
    (137/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.38294468 seconds)
    (138/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.549067314 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.870242314 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.2033292 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.418635198 seconds)
    (142/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.119955768 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.677383928 seconds)
    (144/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.622851991 seconds)
    (145/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.49656596 seconds)
    (146/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.416531615 seconds)
    (147/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.372102199 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.394243944 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.403233357 seconds)
    (150/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.418873665 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.413719522 seconds)
    (152/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.436575137 seconds)
    (153/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.580829113 seconds)
    (154/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.446200322 seconds)
    (155/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.373376026 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.054567711 seconds)
    (157/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.029501961 seconds)
    (158/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.391756534 seconds)
    (159/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.903611065 seconds)
    (160/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.398781542 seconds)
    (161/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.395378402 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.173736878 seconds)
    (163/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.419339239 seconds)
    (164/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.373805424 seconds)
    (165/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.677507614 seconds)
    (166/286) benchmarking ("sort", Float32, false)...
    done (took 5.424274179 seconds)
    (167/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.387630547 seconds)
    (168/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.531392217 seconds)
    (169/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.57926583 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.233547148 seconds)
    (171/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.374574295 seconds)
    (172/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.446843778 seconds)
    (173/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.424057119 seconds)
    (174/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.793695238 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.423486808 seconds)
    (176/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.085128955 seconds)
    (177/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.986004729 seconds)
    (178/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.336804899 seconds)
    (179/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.396779215 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.439305388 seconds)
    (181/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.857792872 seconds)
    (182/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.425792123 seconds)
    (183/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.811308158 seconds)
    (184/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.420538042 seconds)
    (185/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.374229196 seconds)
    (186/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.07701071 seconds)
    (187/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.380177337 seconds)
    (188/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.395160376 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.42803689 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 5.562446382 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.468460287 seconds)
    (192/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.419896958 seconds)
    (193/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.404772512 seconds)
    (194/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.763117695 seconds)
    (195/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.374489229 seconds)
    (196/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.389578483 seconds)
    (197/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.43976008 seconds)
    (198/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.503755329 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.807395764 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.335593802 seconds)
    (201/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.800011862 seconds)
    (202/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.496698723 seconds)
    (203/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.393847462 seconds)
    (204/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.395845152 seconds)
    (205/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.769755416 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.607804006 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.035116414 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.311871517 seconds)
    (209/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.37599085 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.417121854 seconds)
    (211/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.480457952 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.436534582 seconds)
    (213/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.376029551 seconds)
    (214/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.798341824 seconds)
    (215/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.022823581 seconds)
    (216/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.997873501 seconds)
    (217/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.400208735 seconds)
    (218/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.41114734 seconds)
    (219/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.439873963 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.92107132 seconds)
    (221/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.719422758 seconds)
    (222/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.880413183 seconds)
    (223/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.73611514 seconds)
    (224/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.999603821 seconds)
    (225/286) benchmarking ("sort", Int8, true)...
    done (took 6.393958658 seconds)
    (226/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.961698373 seconds)
    (227/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.501037742 seconds)
    (228/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.402616298 seconds)
    (229/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.768366679 seconds)
    (230/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.387340174 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.410315599 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.655215205 seconds)
    (233/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.307832164 seconds)
    (234/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.481497441 seconds)
    (235/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.476487007 seconds)
    (236/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.30861966 seconds)
    (237/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.422219781 seconds)
    (238/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.374302564 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.423712925 seconds)
    (240/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.381480423 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.821259069 seconds)
    (242/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.392158012 seconds)
    (243/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.446482344 seconds)
    (244/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.378006884 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.776057783 seconds)
    (246/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.499006604 seconds)
    (247/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.374777928 seconds)
    (248/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.411756985 seconds)
    (249/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.267390469 seconds)
    (250/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.481821178 seconds)
    (251/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.131774605 seconds)
    (252/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.424886305 seconds)
    (253/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.415312404 seconds)
    (254/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.585022127 seconds)
    (255/286) benchmarking ("sort", Float64, false)...
    done (took 5.804044735 seconds)
    (256/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.586632298 seconds)
    (257/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.281633035 seconds)
    (258/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.497634947 seconds)
    (259/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.952141382 seconds)
    (260/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.503429827 seconds)
    (261/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.379518914 seconds)
    (262/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.018802516 seconds)
    (263/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.399575491 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.500530739 seconds)
    (265/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.402708944 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.482464728 seconds)
    (267/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.478565967 seconds)
    (268/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.396951029 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.54434126 seconds)
    (270/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.375429229 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.391822899 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.221686611 seconds)
    (273/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.078998823 seconds)
    (274/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.440599855 seconds)
    (275/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.380797609 seconds)
    (276/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.399474701 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.441546162 seconds)
    (278/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.38871991 seconds)
    (279/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.426308293 seconds)
    (280/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.385446376 seconds)
    (281/286) benchmarking ("sort", Int8, false)...
    done (took 4.49590711 seconds)
    (282/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.384211411 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.42025225 seconds)
    (284/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.460931916 seconds)
    (285/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.132896141 seconds)
    (286/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.39877563 seconds)
  done (took 964.513363916 seconds)
done (took 965.818879246 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.431698713 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.426827089 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.408024915 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.430213543 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.520831036 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.435586227 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.419585527 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.410968668 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.455827235 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.458773348 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.406858275 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.435622061 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.411580304 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.408795338 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.408587448 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.424791263 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.559502597 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.413083991 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.425940999 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.418922484 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.426409206 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.409159286 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.460322346 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.43676957 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.412890415 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.412281256 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.412875112 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.429481145 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.521623094 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.414289972 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.414220515 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.420569195 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.56766 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.411999118 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.405127981 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.431050033 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.422138478 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.419521834 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.413577053 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.442087453 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.956739621 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.428841025 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.413328728 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.41281941 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.412398162 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.415289855 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.412901647 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.417122704 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.424843677 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.427055643 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.945743999 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.444688086 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.415979583 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.411391755 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.423697945 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.413507446 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.415725468 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.431068079 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.430748219 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.431435749 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.55674136 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.419568043 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.414950877 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.430021553 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.421488114 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.983156405 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.426728975 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.418021088 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.960428603 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.438232168 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.983133676 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.441102457 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.414719574 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.427717062 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.44471671 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.560089469 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.410805478 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.413435619 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.421480904 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.413396532 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.423744351 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.428977326 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.420345022 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.414375622 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.428029234 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.440288402 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.425214914 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.415810474 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.422564011 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.433990532 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.422622408 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.425524987 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.418319862 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.41060024 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.423542866 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.418682229 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.41802668 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.41977352 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.419261982 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.425919416 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.960554564 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.452006968 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.412538961 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.41311279 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.415508514 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.429521208 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.959665599 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.434791185 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.438488606 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.463345398 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.418012221 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.511899941 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.419768415 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.433712381 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.426198876 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.419561961 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.411370317 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.515362973 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.954241998 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.449711155 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.419062765 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.415079091 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.433928953 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.41835533 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.412896444 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.531788982 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.417966915 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.432909923 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.53890234 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.427477355 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.450512647 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.416828267 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.421791754 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.440226505 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.436070011 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.45008807 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.421001034 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.435742435 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.434726202 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.414684406 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.4281765 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.428993161 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.421226431 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.423939458 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.411679483 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.440322761 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.431958175 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.432587534 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.439831645 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.53894474 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.415835648 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.517408713 seconds)
done (took 239.503192278 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.477050219 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.410746037 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.505062304 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.414664781 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.51516517 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.525125149 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.412201889 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.412709917 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.411643368 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.789646754 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.412883886 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.412160013 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.41519476 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.412793391 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.496605688 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.415454693 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.4114969 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.754046919 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.41577604 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.49060203 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.412462388 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.413691251 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.415543426 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.79670011 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.410733076 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.411395944 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.492752121 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.415438226 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.7625109 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.409041009 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.411883753 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.763324454 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.51285234 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.433847157 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.426246217 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.422866436 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.522985063 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.436054378 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.502850897 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.496723597 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.510810499 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.455168465 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.410241551 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.411208471 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.417734305 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.417606465 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.414378411 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.443203691 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.412404236 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.415029655 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.755194638 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.426951356 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.414601097 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.414608171 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.41576275 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.447431855 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.415606987 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.417607988 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.51362593 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.419120054 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.48591383 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.820516281 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.794000308 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.41747857 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.413487379 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.416318145 seconds)
  done (took 154.000101812 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.484883767 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.493235955 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.534437796 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.436041235 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.467980601 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.541110118 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.437193684 seconds)
  done (took 11.719674638 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.424552318 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.419281407 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.468033683 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.467884756 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.419605667 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.566601746 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.418954151 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.430074305 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.418228559 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.471754539 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.419345532 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.420673082 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.424934653 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.413528458 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.467263524 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.430317821 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.533457735 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.42109654 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.420620856 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.576480771 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.417498861 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.426543674 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.470701199 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.431142222 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.420790809 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.425709511 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.98935116 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421085325 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.418006851 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.420341514 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.418849341 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.457591164 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.420298874 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.411897241 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.41856208 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.536351273 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.420552571 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.417469729 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.420010362 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.418658626 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.420639029 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.421881337 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.421166724 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.418291155 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.421281689 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.444450904 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.421396574 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.421906709 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.421517565 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.421606283 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.47154084 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.423422461 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.419343999 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.420598578 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.475679399 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.428728885 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.42575865 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.420274496 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.42294485 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.419476851 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.579031983 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.470088611 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.422346193 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.469655954 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423777816 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.42243441 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.423668835 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.42227256 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.476797156 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.422956821 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.469958678 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.421934949 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.57691093 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.44454617 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.424011187 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.424523957 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.426198245 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.423331745 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.419015847 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.428723622 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.422363694 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.42449957 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.42776104 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.420864937 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.421552892 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.524657299 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.532792781 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.422425503 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.436041936 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.431129256 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.422110639 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.478305969 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.424275678 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.421666012 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.475291662 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.538182961 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.47785186 seconds)
  done (took 161.798831356 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.429493612 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.432596779 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.426233756 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.441127143 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.425540521 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.425035887 seconds)
  done (took 9.911249179 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.427278544 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.42609363 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.425864767 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.424782197 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.425081392 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.424612377 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.426723864 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.427354316 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.429402848 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.42591792 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.425213162 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.426646456 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.42647051 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.426517076 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.42739628 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.4254211 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.426035407 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.423683745 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.424971361 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.426493994 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.520160338 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.426617063 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.427532707 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.428783159 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.431134283 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.425921087 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.434325769 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.4268985 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.427693453 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.434345489 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.447605186 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.428019581 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.427814359 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.432501351 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.432244055 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.427854998 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.430849391 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.428137803 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.425043687 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.427274397 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.429325356 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.429294966 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.428169663 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.428824237 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.430104899 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.432711531 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.431770738 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.435320512 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.428330141 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.426816443 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.428582429 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.427954318 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.428176792 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.429029657 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.429796645 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.450828146 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.433824403 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.429025531 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.429904415 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.430866655 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.430659669 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.428773969 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.431270783 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.432930384 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.435868507 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.429764465 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.429353236 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.435830302 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.430170695 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.429229293 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.428572249 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.427239797 seconds)
  done (took 105.33553106 seconds)
done (took 444.094531907 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.527656389 seconds)
  done (took 7.86246314 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.658007856 seconds)
  done (took 7.995213916 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.541114314 seconds)
  done (took 24.882463515 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.441882573 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.479851401 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.451668898 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.441370176 seconds)
  done (took 27.152855261 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.636215032 seconds)
  done (took 7.971407424 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.424673973 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.441457518 seconds)
  done (took 14.202392181 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.660683863 seconds)
  done (took 7.996053066 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.677811759 seconds)
  done (took 8.01916722 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.426082225 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.443192655 seconds)
  done (took 14.216289398 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.404029398 seconds)
  done (took 7.739593017 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.803472256 seconds)
  done (took 9.139484126 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.426267932 seconds)
  done (took 7.763340332 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.466431846 seconds)
  done (took 7.802660465 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.283503413 seconds)
  done (took 10.620695568 seconds)
done (took 164.70602245 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.422634894 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.425827859 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.425160791 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.42433535 seconds)
  done (took 27.035133963 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.46502651 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.463804327 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.465326512 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.474614995 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.467873767 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.464816467 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.457132293 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.456927338 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.476330939 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.466968814 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.466847664 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.467537922 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.465072147 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.457135111 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.466977853 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.467589342 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.476349605 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.466289284 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.4583736 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.46820011 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.433552014 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.477061493 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.468382168 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.432797927 seconds)
  done (took 36.468442888 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.953853489 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.503885128 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.586465767 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.485545803 seconds)
  done (took 7.868316381 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.484254442 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.486053184 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.496913041 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.537345432 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.563222413 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.496002155 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.459508711 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.4557034 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.441400802 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.486074913 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.56156651 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.502814495 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.568675303 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.434397324 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.619335139 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.433840147 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.433550188 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.486892332 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.537525372 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.551124911 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.434048651 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.486212365 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.489560477 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.503384076 seconds)
  done (took 37.288367796 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.434469017 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.452526149 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.432447611 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.432665404 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.441298336 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.432316796 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.433620652 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.433822211 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.434119993 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.440391188 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.433152627 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.447084277 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.433593913 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.437706065 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.440309993 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.435001025 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.4400807 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.432707676 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.434216457 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.440706435 seconds)
  done (took 30.082689497 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.426321081 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.282993143 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.781006462 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.683512485 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.428585416 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.431742272 seconds)
  done (took 28.374647228 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.513942792 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.674571612 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.436898671 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.829032347 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.922431137 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.45604662 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.437151568 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.699460453 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.053924768 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.053782826 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.498811488 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.509686567 seconds)
  done (took 21.427756443 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.443769617 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.433406388 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.443409895 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.449000392 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.495855167 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.459146303 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.443068154 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.429858885 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.499798709 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.519475455 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.458538428 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.497713574 seconds)
  done (took 38.916578345 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517824177 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477047158 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.427293803 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445162876 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.1705937 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.644280259 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.515619406 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.929332841 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.435518231 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707120344 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447155822 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522391248 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.688838453 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447742376 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.433498047 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.501172175 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677758399 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979243736 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436715037 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.876284675 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46100812 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.436345917 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.90248655 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.468421667 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.64437145 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.575029306 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.692824863 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.21009124 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76070735 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.447977959 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444105974 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434295548 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706700835 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131990315 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550138 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446148147 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436973333 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.002170776 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.420090649 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.789801446 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45065364 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.439237136 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444477694 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435492939 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.36904075 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449906915 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914518209 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.438989101 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.144618243 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435053588 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446780118 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529379592 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.438304629 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.004905147 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.492128956 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.461655129 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.433018039 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528770068 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022530699 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.21824761 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447737807 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.372834057 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.436085944 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.905971956 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121556947 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.557612613 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.440168425 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.439366447 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370908888 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.847345644 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455602344 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.568626212 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.458193763 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.101705383 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208846486 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.458592317 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.367143611 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031542775 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437076652 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.372025636 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663956585 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.211937907 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376417016 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.381209195 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.370270776 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201430697 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444351147 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.903720369 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455424403 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.937007291 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.448298574 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456342048 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460907387 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.66119022 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.318410336 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436832658 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.442199943 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546716734 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461088759 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.911720935 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372384996 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.44199076 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697563904 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.649425328 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.455606599 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.51482155 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692803972 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451147037 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.455666298 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.453728972 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.451766077 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.071571693 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.47172257 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.34845463 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456860468 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.216843181 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233273902 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447813917 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.5401211 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.449303445 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703899998 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.263195537 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.789941922 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508071698 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445243561 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.439255985 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.891763517 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.036790208 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.336361922 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.435659538 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.450831126 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.456224271 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.439030263 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388809323 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.450914541 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451449378 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.219922814 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.662374465 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453599249 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717850277 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374358687 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.572342925 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.459318382 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.663109436 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.751349162 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.458816704 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699078557 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445307894 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.457055015 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.454638181 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458992647 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541723458 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462839702 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.446576078 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.700427794 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.443882283 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.444713841 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.881781671 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.221978402 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442307287 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.445764763 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454499815 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07313971 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430216418 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.445420646 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330279154 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.455125182 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509338128 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.44700372 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.453583859 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.4505352 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.466368666 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.466526813 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.445838298 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667713482 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452302993 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.787266043 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525665846 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.667944193 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073102703 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475423259 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.376926369 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.154296364 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.135199871 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441879792 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.634734177 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.442709929 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452358527 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452745752 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.451386478 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.079803891 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46572312 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.79285111 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.45360489 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.454207666 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.448758832 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443982596 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.417840247 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.240599077 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459120992 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.456963348 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587120773 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.457427853 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.37673914 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.960406916 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.449834593 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444617554 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.223390999 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479510757 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.791285575 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950862991 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703364665 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.443295823 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.456060748 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.919689824 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.482855658 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.444799483 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446367942 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461428937 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.450958034 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455912964 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.456431879 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.889632117 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.824729309 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010191906 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203323785 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057695115 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448865986 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.447786555 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.330164637 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.926030649 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379157705 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.101882211 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656673846 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.944009947 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391253485 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676715085 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.740239207 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.314179419 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.461487287 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673255324 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426765476 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.448627175 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47770915 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.658684436 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480756017 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.449591285 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.379599521 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.72733546 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.738551715 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446605301 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52731682 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928201233 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446517256 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.243817318 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.50596762 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.853619028 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661038406 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.994978048 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.833573468 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.450682402 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.457738119 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967553958 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.452139994 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.974207009 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120833216 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.47901082 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.686635356 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388830732 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.458690554 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.45924502 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.445564839 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.97670599 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.449955453 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.724659027 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.459005629 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383036739 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.448871971 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030889694 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.322939214 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.454591982 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449569326 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255973459 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44752021 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.779624031 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.454011462 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.414251807 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472051744 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.38515262 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385482916 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.144676646 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.460044623 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416621457 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00755439 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.458143066 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488894952 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453837667 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298911762 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.706621376 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.463880482 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.087217584 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.695515526 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457593552 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474739805 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.549751743 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453907529 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.434824015 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.362002079 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686914613 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462017585 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.69539726 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.467256395 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.350583459 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.468081124 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.662201691 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.348692266 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.456799631 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735719741 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.18476382 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.462620155 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189634566 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496337111 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.454595907 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.472669348 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.462028141 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4725803 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543073263 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.461963422 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.461377345 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.462871174 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.6454422 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.467484169 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455124996 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.46631041 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545945829 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.393145167 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.459428852 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.230434988 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09460906 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28053411 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116786592 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485821773 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.452982244 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453977857 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389033543 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60508371 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.980196165 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.72715603 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567866568 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.464344429 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476991931 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452724391 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477655733 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690412702 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.728711398 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.424265915 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461699095 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.244379494 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.336025296 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.463109389 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.66512481 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002907241 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068245964 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.572244589 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.466430616 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.932710576 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.728721864 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.545651351 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455495774 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.044991841 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.47624524 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.866884076 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.480826012 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465730462 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602901505 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.464950537 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151679857 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.485626364 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.615940193 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.229883025 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.933059085 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.718827997 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.033252604 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.469244697 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100900574 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.242834193 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.721770134 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527178348 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.467086737 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.559270075 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607412128 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.464816094 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.339198453 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.456183194 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300397085 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.16693012 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.466354356 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109779645 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744888079 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.454038732 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.465643571 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480382203 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.467202958 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.680430518 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223329746 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.68169285 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.469030339 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.456897696 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.44916286 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106436566 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49381856 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394148549 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.460713544 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741514231 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.718544693 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481979011 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.911308552 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.169157979 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059782909 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.431511205 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480559966 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464512187 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.228031698 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116042884 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.455909927 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011456357 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.115302665 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459907552 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736051253 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.464539768 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.471758585 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738316428 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.46320378 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.460425251 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475043981 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.10179214 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.334796585 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.481563109 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.954539807 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.39980286 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.68533514 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.556796195 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396014868 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462676148 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.657801218 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.460242068 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.575057591 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471718143 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.468467515 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471084851 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.218103058 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.755861097 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.466959839 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.455239312 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.480892102 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.47094704 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560714013 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.748508437 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464741279 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.136949619 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.81332373 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.716650223 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.46815324 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.442460203 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.466031634 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462593511 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.179646736 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.471316711 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.481309227 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077152119 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.468408966 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.47454189 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.46552795 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.67742442 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673678924 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.472670766 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476879292 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471019199 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47946604 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.363266565 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.237410862 seconds)
  done (took 1708.224686394 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.473314211 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.502682632 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.512342833 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.476732182 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.477236084 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.551211097 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.569090003 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.569373011 seconds)
  done (took 53.504174361 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.467656653 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.619677939 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.495841136 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.475922809 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.471677969 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.479271536 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.977012395 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.484803963 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.472353146 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.474329999 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.470569934 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.476435764 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.196479979 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.476626535 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.466251701 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.459304978 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.472200853 seconds)
  done (took 67.817405008 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.463829631 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.925199616 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.491655961 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.466219963 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.041812528 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.500225868 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.971118301 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.517459606 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.465120765 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.860813812 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.136381505 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.491207853 seconds)
  done (took 82.705227974 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.482468499 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.481620275 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.482509568 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.482633516 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.483290169 seconds)
  done (took 8.786949542 seconds)
done (took 2149.845856717 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.472036143 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.249898039 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.159978232 seconds)
  done (took 5.783469827 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.616483987 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.664827623 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.785323736 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.791772714 seconds)
  done (took 8.236848962 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.752499047 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.839405996 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.667921623 seconds)
  done (took 6.63696094 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.782022524 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.476886566 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.487064458 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.467335801 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.47269669 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.470292778 seconds)
  done (took 20.789636696 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.472801959 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.475666303 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.474098488 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.475392972 seconds)
  done (took 7.277040358 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.449610096 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.179749275 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.449981218 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.465085473 seconds)
  done (took 18.92330463 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.22466097 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.232807341 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.217212501 seconds)
  done (took 8.052912326 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.50087425 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.495797129 seconds)
  done (took 4.376140234 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.781245046 seconds)
  done (took 3.160132577 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.486389497 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.525789656 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.612688161 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.564639375 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.979740892 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.464126015 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.299761152 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.863379974 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.541197905 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.940133752 seconds)
  done (took 33.657500965 seconds)
done (took 134.493944647 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.627509498 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.845679603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.675003022 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.600321748 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.701387719 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.675522929 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.889893317 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.565139451 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.107584817 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.096216991 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.643000289 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.703353676 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.629370721 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.846382203 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.630431824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.471555298 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.723859266 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.676604951 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.320427194 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.477223446 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.889826123 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.239358523 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.47092923 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.401388073 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.770100315 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.628840469 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.823024332 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.473612844 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.470356478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.074003544 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.632212452 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.471991475 seconds)
  done (took 200.632476079 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.486793821 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.473944795 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.472657036 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.489809534 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.479108692 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.473133788 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.497562563 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.475167205 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.506924412 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.475212412 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.473836468 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.484133617 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.473979616 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.473091989 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.476500773 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.472503352 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.472989113 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.48240465 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.48272803 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.477865579 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.47510661 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.473905885 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.492168412 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.489634355 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.48685381 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.472408079 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.494352343 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.472978376 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.473898536 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.480952026 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.477362849 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.490614545 seconds)
  done (took 208.764563486 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.473171383 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.47455134 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.474237951 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.486055752 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.474318762 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.495225568 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.493925981 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.472091201 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.481611897 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.474794289 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.49266413 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.492683765 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.476993101 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.493785043 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.476905578 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.493965049 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.493121695 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.477832123 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.476401923 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.493919633 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.494701422 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.476679883 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.475880967 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.474972386 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.493679547 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.480326175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.48377899 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.489850707 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.476602023 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.480255921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.480177346 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.501721319 seconds)
  done (took 208.861679282 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.671753871 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.483113743 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.484534073 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.416869686 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.484020831 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.481998208 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.476724686 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.680579959 seconds)
  done (took 15.564919061 seconds)
done (took 635.210620394 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.903970717 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.60367671 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.694735154 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.502559186 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.36763976 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.523424053 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.502559326 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.687046651 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.456640795 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.699260241 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.837500068 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.521251935 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.984957361 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.503374203 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.77591375 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.607299467 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.580070091 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.709224964 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.836189722 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.15416758 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.783416489 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.025120721 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.710416943 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.445915229 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.004002483 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.02977428 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.287836589 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.569676222 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.523937399 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.845552848 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.312967117 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.552775889 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.573475564 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.573538866 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.631384407 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.610070813 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.522662463 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.570603802 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.714498609 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.786715148 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.144485245 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.266887645 seconds)
  done (took 100.324339592 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.46952836 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.470166924 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.468478767 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.468835055 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.471204011 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.470130157 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.469122088 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.468997696 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.469348824 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.469442938 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.468102647 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.470569051 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.47073911 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.471200579 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.469360605 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.470630223 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.46978017 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.472167665 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.470225616 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.469045251 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.471983946 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.469267572 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.470702848 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.470634966 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.471376302 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.472009204 seconds)
  done (took 39.611914863 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.488424661 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.750976934 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.923485051 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.494528484 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.486815706 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.491465818 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.575394402 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.490925823 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.491538328 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.491563775 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.666830382 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.494052509 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.52557699 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.954834246 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.491817214 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.495023095 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.491065352 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.489045746 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.76134256 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.49754786 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.601680398 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.493887954 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.577280839 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.506129523 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.514538175 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.49085773 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.494012674 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.02041969 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.516179419 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.66925907 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.394233068 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.578711168 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.970346456 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.954933947 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.395108615 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.497127445 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.49081146 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.671117891 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.493026424 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.49126128 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.575781882 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.492997205 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.936276759 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.135758069 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.511376151 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.491641634 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.041076219 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.6915524 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.770362105 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.505505174 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.96282938 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.495466647 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.493242924 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.492991213 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.767272684 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.499221711 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.490913484 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.044904003 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.519921066 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.577931603 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.494465863 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.493340984 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.768756907 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.492681165 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.757483931 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.495584971 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.500113703 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.51512874 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.935856567 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.495260868 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.153740383 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.522507555 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.493514804 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.669886169 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.76132043 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.077210236 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.517287439 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.773911898 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.984098033 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.597844148 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.498787019 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.010008628 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.60187768 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.499499329 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.496597798 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.497807735 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.49433517 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.544487854 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.578220747 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.086024075 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.168455379 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.068064412 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.603672562 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.50788449 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.494881896 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.048175522 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.517998099 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.495497707 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.933711137 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.156353831 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.515701772 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.503167158 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.161089216 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.51812133 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.582490736 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.501304448 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.949346797 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.49760862 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.545471734 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.495994057 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.501738357 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.519242606 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.582077817 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.499442022 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.498362213 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.127378418 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.700042164 seconds)
  done (took 195.76606938 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.490143565 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.508896655 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.490855449 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.489447325 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.489216757 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.497964681 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.490305698 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.489622318 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.495934419 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.489317492 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.490709492 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.492640062 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.49253235 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.505870176 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.500631364 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.496203935 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.100940785 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.491254017 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.492435717 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.510888706 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.313570205 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.497484497 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.491900046 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.509564563 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.492930044 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.493105229 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.501598588 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.493827797 seconds)
  done (took 156.698542458 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.498528637 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.120302739 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.520352054 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.644549523 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.521644481 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.497360203 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.641434208 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.562833076 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.518718299 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.495511605 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.496343381 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.831088538 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.501649797 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.066595046 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.715528489 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.668064609 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.066446342 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.51975336 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.496567042 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.496706734 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.64595271 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.506829403 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.831770468 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.121976083 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.52071089 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.119695267 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.483720111 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.50058272 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.498088476 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.122384653 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.518818663 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.836051115 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.585729726 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.566402196 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.144144495 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.087350878 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.089163564 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.666143079 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.49951254 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.498196779 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.49912714 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.484142988 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.124210274 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.523455035 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.500369213 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.115317038 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.522861597 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.502072525 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.508341271 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.500791052 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.566003063 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.58629967 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.857613865 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.132303167 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.607134758 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.513601452 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.645779496 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.894808508 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.502818205 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.069383986 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.48548988 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.131143751 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.523687347 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.484703302 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.501114596 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.506064484 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.666641031 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.647691536 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.071079117 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.522808848 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.069110188 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.687966249 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.500137644 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.50061055 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.504679411 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.131488249 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.092039541 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.68872964 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.651385585 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.71859728 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.488540564 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.501280962 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.486245819 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.586851026 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.501796847 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.132024655 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.092881159 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.523135073 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.504405535 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.504863333 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.505532716 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.700516249 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.151317551 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.609202152 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.062379497 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.860638686 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.841329819 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.507208151 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.569547803 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.523892887 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.84213203 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.506273696 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.568243736 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.961613397 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.844089891 seconds)
  done (took 179.244312722 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.767266731 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.776813397 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.601517448 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.645930948 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.136187633 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.095556877 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.832987817 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.653090163 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.62189725 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.780645557 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.728452675 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.593299804 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.688374825 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.585161498 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.273314503 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.598031511 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.621800067 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.66266263 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.628578093 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.555931792 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.172473708 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.814674934 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.687157013 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.486116576 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.602776069 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.32744509 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.091549605 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.185251873 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.685289065 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.866571595 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.066327111 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.678530527 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.514818142 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.241649915 seconds)
  done (took 71.674768125 seconds)
done (took 744.713284164 seconds)
SAVING RESULT...
DONE!
