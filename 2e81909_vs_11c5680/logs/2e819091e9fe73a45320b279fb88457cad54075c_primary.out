cset: moving following pidspec: 10598
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.240578663 seconds)
loading group "string"... done (took 0.561803251 seconds)
loading group "linalg"... done (took 7.749891077 seconds)
loading group "parallel"... done (took 0.175250067 seconds)
loading group "find"... done (took 1.180420495 seconds)
loading group "tuple"... done (took 1.849506027 seconds)
loading group "dates"... done (took 1.261399672 seconds)
loading group "micro"... done (took 0.233881958 seconds)
loading group "io"... done (took 0.770563865 seconds)
loading group "scalar"... done (took 41.203665948 seconds)
loading group "sparse"... done (took 12.971488319 seconds)
loading group "broadcast"... done (took 1.161732971 seconds)
loading group "union"... done (took 13.581125309 seconds)
loading group "simd"... done (took 4.827362452 seconds)
loading group "random"... done (took 9.76725802 seconds)
loading group "problem"... done (took 2.155256935 seconds)
loading group "array"... done (took 22.765877805 seconds)
loading group "misc"... done (took 2.091017488 seconds)
loading group "sort"... done (took 3.482025215 seconds)
loading group "collection"... done (took 19.686465993 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.584246403 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145235186 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.152148411 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.150240251 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.190877426 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15716304 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159978749 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098194298 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.006513438 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180633133 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153067731 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525657366 seconds)
done (took 5.300630296 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.264317628 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09480355 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104902713 seconds)
  done (took 0.950062565 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076853799 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145194144 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095199388 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.080886376 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096019752 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077553704 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095485364 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077770952 seconds)
  done (took 1.41567442 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086696041 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097792163 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081785054 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096371597 seconds)
  done (took 1.110197638 seconds)
done (took 4.56972031 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.740407803 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.286600908 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204013272 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.466625658 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.192994645 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217778405 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.753885616 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.377320253 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254981916 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099855621 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143837601 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387825744 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138309349 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.736489887 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09041691 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12457243 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.189478623 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.49091126 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082655692 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110111539 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.120221713 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144381152 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130710867 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092045144 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186853587 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085108465 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.196754915 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109258024 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080290477 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289065403 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202035312 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.755586995 seconds)
  done (took 11.266731267 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110673795 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135359006 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09860805 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138774425 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134693951 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100287234 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084464599 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097403683 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122952783 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17641942 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113884748 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137953346 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095813027 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083061253 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115878593 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245693399 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120462693 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099631803 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10090627 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088164326 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139370322 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113389244 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110269275 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093383241 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168532125 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.225246251 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114648015 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127762075 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096882172 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112608725 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145676649 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143190807 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095643703 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080110889 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172640317 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125497366 seconds)
  done (took 5.22424258 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.095121364 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192825232 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123072367 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172740066 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080367808 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143954461 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.09615891 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115738682 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.261459961 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.195605344 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175652563 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14360539 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155354182 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100576881 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100617 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082361252 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097636984 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079609368 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.673578323 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.124038351 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15246049 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11622195 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103479544 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088667111 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.72594646 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104234126 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080640683 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099283486 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066164865 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160988472 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100302089 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.152407402 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122904715 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082650057 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136151965 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.217993584 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110023013 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135322614 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097292383 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080716176 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176736471 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105880176 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080328141 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122069289 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134809323 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137231658 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098088828 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081204444 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.206252299 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098159891 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115279531 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.960850604 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.184133654 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092794466 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097487026 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078559242 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32886055 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118403312 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085773782 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097867221 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283186998 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.213002014 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098221444 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081435008 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097538877 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083141035 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.740693268 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101809887 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.196056624 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085765566 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10859602 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083108151 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098778361 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104999613 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088150148 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118179076 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079902246 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100762493 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081919001 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098372718 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082027512 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11048066 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102736129 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080529042 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166943555 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079855386 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118244037 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127857907 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084717996 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09792369 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131181987 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083997685 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099328679 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134128571 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081842286 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110473206 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100546516 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144057235 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082021325 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.173047795 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081497395 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096509682 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.109645664 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102290284 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132459785 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114637706 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100065507 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086672651 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097168102 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078555092 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16631322 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081196792 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100017825 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080917846 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112188615 seconds)
  done (took 24.027489459 seconds)
done (took 42.357725333 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.322769689 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105270436 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105782876 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105109353 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102977632 seconds)
  done (took 1.563902716 seconds)
done (took 2.357764123 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.294261441 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.174668166 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097102175 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169424015 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096157119 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.175750309 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162501348 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113736233 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.203490859 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096543168 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.166738819 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095988094 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07819288 seconds)
  done (took 2.749068619 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097667859 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116690585 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083844771 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112931329 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077178573 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116803096 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093280049 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119074662 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111669183 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085820872 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095786545 seconds)
  done (took 1.904259073 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095893172 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114983526 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083499109 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112881101 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077251852 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113187634 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093829181 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118331215 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111562688 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086659389 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094800246 seconds)
  done (took 1.893734985 seconds)
done (took 7.332653751 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09309782 seconds)
  done (took 0.880440454 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.941198052 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.05495712 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.115267788 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.153660102 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.301847501 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.196094645 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.488585268 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127246661 seconds)
  done (took 11.374806674 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.11501792 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.116786854 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106614418 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086436364 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104724567 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084351172 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.10388251 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101380517 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083664269 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102307759 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086659306 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102888048 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104208238 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086856993 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104187039 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086887775 seconds)
  done (took 2.428779197 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120330482 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118658817 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.109774653 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110362629 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087008972 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108693102 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108694398 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090481096 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105532444 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106442676 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090773037 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10899467 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10597564 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081095843 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108906214 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109718185 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086810065 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109242701 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109103006 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090662132 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109017119 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097600772 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088034996 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109169994 seconds)
  done (took 3.374373442 seconds)
done (took 18.848218875 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162421852 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109985649 seconds)
  done (took 1.067546483 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09748806 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115196416 seconds)
  done (took 1.012808143 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099377295 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098173059 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125046246 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112596621 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080436904 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09880926 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122888434 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081131342 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098931588 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080762027 seconds)
  done (took 1.801779775 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084709243 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.112324895 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103205797 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096679222 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107882057 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096751799 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089607441 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101949377 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111024585 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078379287 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104479244 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116948406 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086889473 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11802157 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106838479 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083783635 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105698374 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100100532 seconds)
  done (took 2.611405297 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082205943 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098916425 seconds)
  done (took 0.985825193 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083816208 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097162629 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082033071 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099790324 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095678756 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078819732 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095807199 seconds)
  done (took 1.437549149 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.490439607 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138166591 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.263821533 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10315596 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104750793 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.307417506 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100977821 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085258016 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106729424 seconds)
  done (took 2.560366069 seconds)
done (took 12.274649453 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095511417 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118093819 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114215793 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.475600257 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109302476 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.101875642 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148734863 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.255839893 seconds)
done (took 2.225320138 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.146366647 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.413808385 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100388444 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085269037 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082631313 seconds)
  done (took 1.494480362 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081606775 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101545635 seconds)
  done (took 0.995326587 seconds)
done (took 3.448298253 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082999761 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.134095245 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080908861 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098983756 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080269329 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.099474394 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078297472 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.102148107 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079138173 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099961895 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098409458 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082193961 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098320709 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080030252 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095992492 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079764093 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099414049 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079895365 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096606224 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080033706 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098856446 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078828494 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09680496 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080975095 seconds)
  done (took 3.029451341 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101705148 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101488698 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105075835 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087763737 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103972335 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085968008 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.106834328 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098912843 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086860486 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101639906 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101901261 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086386527 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102527518 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086322673 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102456677 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103234495 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088262343 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100610494 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084032255 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103298321 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104821417 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081537204 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103755122 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103637923 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08605794 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103379506 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084092801 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100511878 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103791193 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08619561 seconds)
  done (took 3.712298149 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087601848 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095511252 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08023565 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104536799 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07895207 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099386544 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078980433 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098609286 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079911897 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098155216 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079937077 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097548842 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078034711 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099892591 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079392592 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10288888 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109342668 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079478529 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096893557 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079563566 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100189589 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079937953 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097393717 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079218932 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096932401 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078377519 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097455313 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079268485 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097566096 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078831204 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101199714 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08227657 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097988636 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085168605 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100872497 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078377431 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102344221 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077401253 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099149944 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095430612 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080702536 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095789302 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079838941 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104130144 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080128669 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098715511 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080460951 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098657246 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079729068 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101150035 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078998149 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097663344 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080015561 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09936426 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082730113 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098055522 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097619541 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08002329 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09754766 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079540143 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096401345 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079512555 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099428909 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080642867 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113669619 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085851098 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097396249 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080895224 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099035739 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081125515 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100499022 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110481624 seconds)
  done (took 7.345638488 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085314542 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107997316 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081170609 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100366256 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077136967 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099458776 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101038016 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08036649 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100030615 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086372452 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099126506 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081128434 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100058766 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109287992 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080403918 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099218684 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085993697 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095972417 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07929335 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102239862 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079401414 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10268945 seconds)
  done (took 2.851164444 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.21416659 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108374045 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14473098 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109908288 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083553385 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11005389 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104049045 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08875151 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10517501 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085344674 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103939859 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104535737 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083986125 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103482528 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101997145 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087124265 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105072224 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085083572 seconds)
  done (took 2.749863729 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09463569 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100971685 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103107631 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102408766 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10033206 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085066146 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107879394 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109413462 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085499431 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101708385 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091739182 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104277334 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103220949 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083231095 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102910381 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082432814 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104301731 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082152054 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111314186 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106627097 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105648575 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092462252 seconds)
  done (took 2.985218741 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098533157 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102993256 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119927841 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085985583 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096538872 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080704004 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108541703 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080881379 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110605681 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.10256678 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082454139 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099808227 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089226833 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100968177 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105644868 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082823232 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102294175 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082340606 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103249041 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.192170437 seconds)
  done (took 2.853153119 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104697007 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103218331 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101214604 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093833037 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103433659 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083156526 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111729763 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102732574 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083312315 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12809672 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102775283 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083026153 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11331029 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108746062 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101040906 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093971777 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112079211 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111711175 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082788659 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102421183 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128006075 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083217647 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11223139 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102492691 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083710649 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103802926 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102297128 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089168111 seconds)
  done (took 3.659780888 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083521923 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100300519 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080541048 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098195667 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080363229 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098198585 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080436383 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098364605 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08311366 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098796323 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083507913 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100245185 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085024008 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101133603 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082409317 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101636143 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082086327 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09871343 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080039953 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09929571 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081748539 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10112804 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081851012 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099617431 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079101563 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102017224 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079704477 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099709146 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0819565 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099374659 seconds)
  done (took 3.552385629 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093088366 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109368763 seconds)
  done (took 1.031183005 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081507068 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116925099 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080587844 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105593945 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087658813 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103106217 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109691048 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087140412 seconds)
  done (took 1.600967985 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098168547 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11319384 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084521404 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114981218 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111988711 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099054326 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172659055 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103638554 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088468158 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.10104115 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115189495 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082210524 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108314102 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082609997 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10767279 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089042155 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100511526 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108026473 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085564746 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100307095 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084041293 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111376581 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084203939 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099281096 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102732917 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092946892 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115230626 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083448702 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107060538 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109037885 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089168053 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095583295 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082870218 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103691422 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080921628 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11241875 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118487715 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085491691 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111857928 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082802762 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11371761 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097528629 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086917649 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108155731 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111525996 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085051593 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102871346 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078043758 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099395511 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085584184 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097423076 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082776877 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096715563 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089633108 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106869422 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112469056 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082187974 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104008176 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08516904 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105919789 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088906369 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105381227 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103783133 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083080771 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108870734 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08717151 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113100692 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077552408 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096779011 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099199021 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093976024 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126647202 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088854553 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.107679976 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10344212 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081644854 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105436538 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084424248 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108789601 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107194138 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08431733 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109629477 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089789621 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103354889 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084881282 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110763944 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100370727 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085628277 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100369462 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119517351 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082532019 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100054402 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08101833 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113774775 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085657799 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102165922 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079942566 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110509573 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095233462 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084813912 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103679562 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084002147 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114178952 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107820663 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090006739 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11246518 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089069756 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104250117 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105031229 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079851641 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103957718 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086185202 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110411986 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075999554 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106064666 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083101838 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104257505 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111324296 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082249658 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102795791 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09081411 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108858655 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08111559 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.100113716 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105215169 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084704837 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106876542 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091687692 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101670524 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078067074 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099526242 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105454067 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083508348 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106248366 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088127073 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10650135 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077131443 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101679098 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10634614 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092940956 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103570191 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08338072 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110410324 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10294486 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083210717 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109235843 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085999538 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101909475 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089676388 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104424576 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076864083 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107475799 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104852245 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082203623 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106475839 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087009489 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106277401 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083555635 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102025514 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108094188 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084256208 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102152598 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08287295 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102695423 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112701292 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086886201 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097810519 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081055615 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.111096259 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081043781 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103504664 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081076704 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106793285 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103492985 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082673214 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102170903 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08567853 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11584867 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107252068 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085017104 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108574009 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09443648 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103039933 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085229839 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103880312 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103437576 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086316566 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112577505 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.08875082 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109763322 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104613419 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081014261 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109294681 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091806614 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102390716 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080499819 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102414002 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086618887 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109524424 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106484531 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085115388 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102155121 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083874234 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108076786 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105152423 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084007529 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101386115 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089091034 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103194225 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089455692 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104423122 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113601092 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087357296 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098392082 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087284642 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101629551 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109173501 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07960516 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100086594 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082980164 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10432974 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082210635 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106509892 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077215131 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111330548 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111144116 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084730462 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102112404 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085018569 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110464701 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086219122 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108139364 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087127193 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111134686 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114293641 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082600198 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106863776 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094648843 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104615931 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076339784 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109105438 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101571493 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084041711 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102086877 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081027846 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106579889 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111588809 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092073701 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097858603 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086278991 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103079711 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083139032 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099539514 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088211435 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106747067 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103679889 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091632992 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104244705 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085099656 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107197201 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082375311 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107361695 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103440273 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087645217 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104311281 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08623279 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.1028795 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085730545 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105281097 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081923095 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105709859 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102690488 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08426032 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109311556 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083858685 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103649511 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085836651 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.1048481 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083180379 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10520349 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102255298 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088419725 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104061008 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08390683 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106825411 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079319246 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111779059 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083165767 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112731368 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103445261 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081336033 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109497431 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08593504 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109503759 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102986909 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08550623 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104276377 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083879629 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106589732 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090773301 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102197411 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114324919 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092460926 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104487079 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086228304 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104375036 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08463707 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102954588 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083436116 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10630094 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102644992 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084984034 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108013967 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086266155 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104800326 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085415804 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105775012 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083332181 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105829053 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097407162 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084076369 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103135355 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084393117 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115087522 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084370541 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107893755 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101638103 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085613933 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102366284 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080304787 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.113651786 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113793332 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085141323 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111726818 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082316959 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106892831 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114602903 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078834815 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102453399 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083122312 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.10127419 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092950344 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104921381 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093879255 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104849203 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083178962 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102542858 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10403959 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083801804 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097848695 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082862376 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108297679 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085898562 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103545641 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083276726 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107979405 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104591608 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095054624 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.112632432 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08433351 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106051348 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080015852 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103994384 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.0836421 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109203225 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104421707 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082150575 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100299905 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083783192 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105575105 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085157633 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105349091 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085511735 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11283391 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102923613 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088088923 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108579683 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078657174 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107882049 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084207704 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104042215 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081943542 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.110525438 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108204344 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085813454 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114038392 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082907025 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105432301 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104624442 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.0833997 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104456037 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084162803 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104817691 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084140463 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10595935 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092377454 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103348421 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106659094 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084130623 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104157585 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091868209 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106330697 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085787406 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113436224 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107359792 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086536135 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112399764 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086768082 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108654998 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105111199 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086671219 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110288146 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084094601 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111102784 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083490509 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106116151 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085279544 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103343232 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103371539 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085870733 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103345982 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090749807 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105923828 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082379463 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104282736 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081934366 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106745156 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107479478 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092237176 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107252016 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087368623 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100695268 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081560828 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106661809 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081117647 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.1062633 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107364058 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091228875 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10746308 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084633653 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103675817 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093515585 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112296527 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108943738 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082033869 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108641862 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086164296 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.108338066 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084885567 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106633155 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105060822 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090003239 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106744344 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084169171 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112534354 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086945386 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107533325 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105067739 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085888814 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104560597 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080841632 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106162035 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086285576 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111122131 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085851469 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105395101 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115515203 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08397761 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105105484 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087809544 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104767729 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088086204 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.100935839 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104660803 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087557057 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105592637 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07964577 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10491581 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082289227 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108028632 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084130342 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101090612 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115273399 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094450033 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108752805 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083262899 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104596453 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079323007 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100774817 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084573983 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107533829 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106673977 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095951764 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104912003 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083545308 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101232569 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083632541 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108832669 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108008028 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082878889 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100287169 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084278524 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107530781 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089508475 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104647903 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083883935 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109003703 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105878834 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083993886 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107821683 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081868078 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109280959 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097447738 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106855313 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104112509 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092979441 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113738723 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085558391 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.10128152 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085061138 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.109324679 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104801938 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086208082 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10541866 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099994541 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109606889 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103294725 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085101854 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107895793 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083968799 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114919385 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085248506 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107467571 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10875281 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087214374 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114670658 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087716107 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115074334 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107890688 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088272919 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104064083 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085242298 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102940842 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082813768 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107100476 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085633763 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111194939 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113731352 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083585065 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117015896 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114522312 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089895097 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101727174 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084307264 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105448016 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080276924 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107324642 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082806429 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104796561 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081472195 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10592339 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105636149 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092691432 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106259295 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086773836 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105350345 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081596827 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.1074589 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086850536 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10692673 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080974481 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.106936272 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105741797 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089072703 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110107632 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084836279 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107275469 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086291107 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106505268 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079785269 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113095054 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103941389 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08803179 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105348291 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085792408 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106840675 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08774335 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111554746 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106617916 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087516802 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118585341 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087229896 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103810027 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.08110049 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111674045 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102357407 seconds)
  done (took 58.976569211 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151276103 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08259368 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10087627 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080579972 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116859641 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100856058 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080982453 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102385323 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081756257 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104916888 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080150556 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102601999 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111106463 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128609817 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095045488 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106971537 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07975364 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103103652 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100077393 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082866933 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111624665 seconds)
  done (took 2.984653256 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106148701 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121527623 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117616044 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121578589 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090558388 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118809466 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117537955 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11741892 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101518732 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113793295 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122403897 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117510239 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092181374 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114034785 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113070224 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09487052 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121533057 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111811034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119207822 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095374647 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115347346 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117614132 seconds)
  done (took 3.341833282 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086275068 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104339041 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086222015 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100503078 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084273353 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100578238 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088567866 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.1039232 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086683643 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10549639 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081782209 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.105475142 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.106385059 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080668092 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104938414 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082673455 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154160842 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110365724 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083270913 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108908918 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078818351 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109403263 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099711981 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080648554 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103467524 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089395327 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107147143 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082108288 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106051695 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083201485 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105503773 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081793403 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107311009 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104771696 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084135165 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10347198 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085056915 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105201866 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080281578 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.103346503 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084841072 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.101982418 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084630146 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107421577 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082877424 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.104391597 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085209349 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107083678 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098937128 seconds)
  done (took 5.606347814 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105039093 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165081387 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087213301 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146902025 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12314428 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115198204 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088270125 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.146314926 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105534721 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082465975 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126581758 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123095663 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10633518 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090763294 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109985086 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104982164 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087492839 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105064383 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088931807 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107808854 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110679809 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.0912798 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.12250998 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120762436 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110321458 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084488688 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106996395 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110399306 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099725433 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.113106421 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112193476 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091624074 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122833733 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107862842 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084050074 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109951336 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124528994 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084864363 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110196479 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103205552 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087949391 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11266652 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112053172 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104282652 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108046863 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110708965 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086537286 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10344357 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119911201 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088403992 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115613988 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122511778 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089225836 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108763419 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111302487 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121789198 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086648743 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104688181 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08930871 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120621235 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103418239 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088652532 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121510584 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108637514 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093423067 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121945327 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111721605 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109733456 seconds)
  done (took 8.328536173 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094429831 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113758583 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123290516 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123893665 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092367395 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113305407 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113491978 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091970596 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113422866 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119234225 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113236884 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.136311341 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087186801 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118680664 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112613529 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092990861 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114822201 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114007876 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091928166 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114407716 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113558554 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122984356 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092066321 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123394581 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146045982 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107948223 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092205861 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114402339 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123860644 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112742403 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125648442 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093159945 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113507171 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124396322 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126850449 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091484336 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106227901 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113111034 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092281024 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114781438 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107844098 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101523487 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114488507 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108386531 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092516838 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115086848 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122756455 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127564588 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116195429 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097293091 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.115743137 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123769875 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113119761 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091986953 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124650605 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.150166236 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124171658 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123133916 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114267629 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102383128 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122950408 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131112021 seconds)
  done (took 7.878533417 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108732885 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.118031151 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.120775962 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102112735 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084168388 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111634162 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08294728 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.105827108 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115722338 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095841986 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12015953 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111022294 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093080979 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120253382 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111965472 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114395012 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089632272 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111914924 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116450583 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110467242 seconds)
  done (took 3.041062313 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095100817 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127005685 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085056398 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115015851 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110679069 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092299228 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110069969 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109937603 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087774115 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111001848 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097237914 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120173428 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108870084 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092754913 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119847832 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114685774 seconds)
  done (took 2.593830557 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097075153 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120772867 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122889652 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084191066 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107300386 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081233536 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107890253 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.103142512 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082795467 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.126296665 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085373236 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112212367 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107351299 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084097136 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103445397 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088876388 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104328273 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082477521 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108149064 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.122743474 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097644017 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106697605 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107464418 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089178059 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107762698 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090337013 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109570785 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10449496 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084628697 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107488007 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086263139 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116274327 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103200544 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085258247 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104933593 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08335336 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108064776 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085207284 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111201229 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105692876 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084163763 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107321416 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086541938 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10942547 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081057183 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108567718 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10236475 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093391244 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105618461 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084652784 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107593985 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086622962 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108697343 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118680175 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089835078 seconds)
  done (took 6.402306142 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100168092 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112350258 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081643971 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10580413 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087628533 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110314444 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110732039 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089313088 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109180398 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084137908 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109863338 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089219173 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110290141 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110386978 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087838078 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112252977 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081409998 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109393898 seconds)
  done (took 2.707985632 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091584168 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108080159 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094113444 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108193065 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08449434 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11143494 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081103905 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108144301 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105309725 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08696618 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107066781 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088203857 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106788443 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088632997 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108191257 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085460021 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.11104068 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105279617 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086873916 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103653344 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089557817 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10671203 seconds)
  done (took 3.071715339 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.120049568 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128351269 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093496464 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.235454212 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104058381 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134815242 seconds)
  done (took 1.721842579 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110816558 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124202194 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108101347 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108703396 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118378674 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08618097 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110021991 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111104375 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120022545 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103473708 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11058838 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121096635 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120744025 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097903282 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117562813 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117106375 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108846555 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088631445 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109134887 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131103595 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089477652 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12145232 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111029652 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087158271 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111159289 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119726062 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121272827 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123936078 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089101957 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121317491 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115971328 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088598261 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121078093 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12558479 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11013557 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099536713 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111600931 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130822959 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116370582 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09837614 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112576837 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115950021 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097635656 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117126041 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120018542 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110323011 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094102442 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111975508 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109535285 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13929277 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095662758 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120415025 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118057986 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121092594 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097997454 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.159503144 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10330811 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120098089 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117490567 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124682427 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119634338 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095677174 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119715735 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125405484 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116932413 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118880865 seconds)
  done (took 8.351251944 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103414004 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129619572 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110998915 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124585956 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098665293 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111168517 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10994326 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088819255 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111225107 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109102168 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155203671 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089522644 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121126142 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120505655 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088511905 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11192611 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11056216 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120140674 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088402613 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138068323 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111659588 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119682114 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119249709 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09857459 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12570581 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117917318 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110562527 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089320189 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111691079 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109425507 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09543018 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110842646 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121336416 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087392215 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121033136 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111852536 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087440005 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117486298 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111813894 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116824209 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099008175 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130544466 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111117334 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109781472 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103205097 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112065025 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111790037 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087762741 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112271166 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109253312 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103760307 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12548611 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124724268 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121785922 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111200748 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089614695 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111587139 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110393229 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089356312 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117475048 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120145033 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088071082 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139370601 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11160475 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112156589 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120677589 seconds)
  done (took 8.234441511 seconds)
done (took 159.4202416 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.236505397 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.245427108 seconds)
  done (took 1.393105437 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.10000265 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138923485 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096528326 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173940446 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108894693 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12679055 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140068627 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09792642 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109871174 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085601196 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109877424 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087081552 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.209796641 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085175872 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.110005442 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109412153 seconds)
  done (took 2.809969855 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.202432334 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.259728679 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102700904 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108580472 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089230115 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.114380989 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105949712 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09207178 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.111617988 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08629786 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111751807 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087097294 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.108405708 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086247903 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.113310584 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08912749 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10975679 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087876901 seconds)
  done (took 2.98475542 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114551007 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.160348817 seconds)
  done (took 1.197935237 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119843461 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182464343 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320299302 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158138762 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107381425 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129356467 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159433932 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132735241 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.200641673 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125952111 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123600947 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099204317 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143021158 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11838295 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094636173 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.12053796 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144162322 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092764606 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11838067 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117995498 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116637464 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.109334347 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116978288 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094950909 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184660915 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.122226877 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086390705 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109650795 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118373515 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095716753 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11605497 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127362793 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.09796336 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182192477 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102521927 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.180836917 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097579807 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115340443 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116586868 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093039627 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120553863 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120301332 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105630376 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120554289 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085008251 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121275433 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107936949 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087357008 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117250447 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098306455 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117070504 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116313671 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157785444 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120904479 seconds)
  done (took 7.710783945 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.803861389 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.158655198 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090589871 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.901746928 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138000689 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104757965 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.791993604 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112284517 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255933985 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.765910418 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135406058 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12136555 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207988054 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.2614273 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956307823 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292593286 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.697147165 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103329055 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152697315 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155454916 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119893432 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138328765 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109812762 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43322595 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118053993 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113532115 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095524946 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121346581 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160508981 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126624918 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115426411 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178614079 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249221762 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207296259 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115464511 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091327914 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112186477 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170567588 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268145295 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192639003 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180471667 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110907692 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110865558 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100927342 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133337314 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108810307 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163534973 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175681788 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170142475 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116743577 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120544171 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097956239 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122865259 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.1640574 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123389612 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.320510493 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.3125033 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089351743 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124023242 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12808487 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264650804 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101937918 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227718681 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140299218 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213558327 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09037453 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788427852 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169965934 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113258297 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095728171 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122246389 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118203026 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09858401 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168928952 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393466866 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124773872 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116630883 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089949233 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.239240805 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125433892 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091318661 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163497976 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119381735 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121675225 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103112133 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123675623 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16888297 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258520767 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10171196 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122241369 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117493727 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102942185 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118396286 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212061745 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221324894 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163166735 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233916513 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099863058 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187995155 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170813231 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120802128 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173974515 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121243237 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101630512 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12437726 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219869838 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146586344 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125657401 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094098856 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120265212 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150066936 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128350982 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096189304 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.194992078 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461328887 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168607584 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111807422 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129457194 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098952727 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185319339 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096298284 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261064274 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12420123 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169950301 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121415317 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08824761 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122201502 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164467695 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124043197 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122487199 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100760914 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120632046 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236665464 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219368051 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122593979 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220342964 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183406434 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120492184 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171614083 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123476935 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168134684 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122029191 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121884108 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094919697 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781302653 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125728182 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099017951 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117232955 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191044631 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112668276 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103093356 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.127570062 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109374764 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754149641 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128504447 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123289582 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103225812 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119903164 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122699533 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096507976 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118794502 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162502304 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232628323 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121521966 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120213495 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103530864 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183119169 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096651632 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127496022 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126408422 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10370087 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123798519 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116697282 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102917205 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.195141643 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164932546 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221709734 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568949982 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114615064 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.127294985 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228135713 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091496541 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289583417 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120953082 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.204203873 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18774789 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099821241 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310724518 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188442676 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190045417 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106919076 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19720226 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088922725 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119941319 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166762894 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113870948 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096111672 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.18621019 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103601833 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125139244 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962735145 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090178448 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248611379 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088122094 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172130576 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120107388 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121535819 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297205955 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090652612 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131030513 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165303707 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117570297 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126190073 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.709384408 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127810369 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123357135 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097421948 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225350668 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164539431 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121812698 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121766631 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098079296 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.186172651 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208216831 seconds)
  done (took 44.331490021 seconds)
done (took 61.341745153 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282038937 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.220011777 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268302407 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172932327 seconds)
  done (took 1.970713063 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175225108 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.152731639 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121864986 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.11110304 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153316126 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085123311 seconds)
  done (took 1.750939107 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.365891124 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.284307704 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.246848034 seconds)
  done (took 1.852491114 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.322466318 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250756321 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.481423216 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.330311789 seconds)
  done (took 2.435647095 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212244669 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.135661171 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.114032436 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105467906 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.202055744 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252013707 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.1442978 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.205550203 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.0999749 seconds)
  done (took 2.469220363 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.20148517 seconds)
done (took 11.632086876 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.234316394 seconds)
    (2/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.249621031 seconds)
    (3/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.235501776 seconds)
    (4/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.23665001 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.164540316 seconds)
    (6/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.22191469 seconds)
    (7/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.164638575 seconds)
    (8/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.243713215 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.222354241 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.092732969 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125618097 seconds)
    (12/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.174124681 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.153190438 seconds)
    (14/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.108800291 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.149797532 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.120143011 seconds)
    (17/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.207928242 seconds)
    (18/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.218378606 seconds)
    (19/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.102857116 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.113260881 seconds)
    (21/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.122218391 seconds)
    (22/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.254674002 seconds)
    (23/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.08799233 seconds)
    (24/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.184922956 seconds)
    (25/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.203007118 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.170715299 seconds)
    (27/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.186867533 seconds)
    (28/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.151452984 seconds)
    (29/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.257346862 seconds)
    (30/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067765541 seconds)
    (31/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118644767 seconds)
    (32/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.09605383 seconds)
    (33/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.144683149 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 0.218982867 seconds)
    (35/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067211378 seconds)
    (36/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.208604036 seconds)
    (37/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.143408007 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.14062023 seconds)
    (39/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.225247925 seconds)
    (40/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.177848369 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122339224 seconds)
    (42/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132683486 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066605137 seconds)
    (44/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.19105438 seconds)
    (45/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092283243 seconds)
    (46/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.176385401 seconds)
    (47/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066298718 seconds)
    (48/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.119596039 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138923088 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094994877 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.11949998 seconds)
    (52/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.100275879 seconds)
    (53/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.155214645 seconds)
    (54/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.150006777 seconds)
    (55/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119736643 seconds)
    (56/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121661571 seconds)
    (57/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104593648 seconds)
    (58/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.112447328 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088336661 seconds)
    (60/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.200804384 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.144288251 seconds)
    (62/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.149715481 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.115023401 seconds)
    (64/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.17380863 seconds)
    (65/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114512951 seconds)
    (66/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.162278799 seconds)
    (67/286) benchmarking ("sort", Float64, true)...
    done (took 0.225517933 seconds)
    (68/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.151927185 seconds)
    (69/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094071396 seconds)
    (70/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.196242794 seconds)
    (71/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.147657629 seconds)
    (72/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066464477 seconds)
    (73/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.125162215 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 0.086683285 seconds)
    (75/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.118768547 seconds)
    (76/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.202163908 seconds)
    (77/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.226613776 seconds)
    (78/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.112739531 seconds)
    (79/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.18921887 seconds)
    (80/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.113381584 seconds)
    (81/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100345152 seconds)
    (82/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.098623589 seconds)
    (83/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066278403 seconds)
    (84/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.142307708 seconds)
    (85/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.162169116 seconds)
    (86/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.118532748 seconds)
    (87/286) benchmarking ("sort", BigInt, true)...
    done (took 0.221481869 seconds)
    (88/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.172604766 seconds)
    (89/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088132603 seconds)
    (90/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.13768555 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087024629 seconds)
    (92/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.112462512 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086358383 seconds)
    (94/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.101356021 seconds)
    (95/286) benchmarking ("sort", Int8, true)...
    done (took 0.214418766 seconds)
    (96/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.169211718 seconds)
    (97/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.093211802 seconds)
    (98/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094824074 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120518351 seconds)
    (100/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067999692 seconds)
    (101/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118551176 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086655488 seconds)
    (103/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114890527 seconds)
    (104/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097534758 seconds)
    (105/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120319397 seconds)
    (106/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.129718906 seconds)
    (107/286) benchmarking ("sort", BigInt, false)...
    done (took 0.246970449 seconds)
    (108/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.126763674 seconds)
    (109/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138400919 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086177316 seconds)
    (111/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.186133793 seconds)
    (112/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.189398965 seconds)
    (113/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.13699875 seconds)
    (114/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098195926 seconds)
    (115/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.122190221 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.183166254 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09586371 seconds)
    (118/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.139014543 seconds)
    (119/286) benchmarking ("sort", Float64, false)...
    done (took 0.173868407 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094299977 seconds)
    (121/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.200700568 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118532835 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.110762465 seconds)
    (124/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.092253707 seconds)
    (125/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066743796 seconds)
    (126/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119320949 seconds)
    (127/286) benchmarking ("sort", Float32, true)...
    done (took 0.22543335 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095611957 seconds)
    (129/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12848927 seconds)
    (130/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068220644 seconds)
    (131/286) benchmarking ("sort", Int8, false)...
    done (took 0.192182895 seconds)
    (132/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118083497 seconds)
    (133/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.140265642 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168826909 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112029756 seconds)
    (136/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088146629 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.121049697 seconds)
    (138/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092926507 seconds)
    (139/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.14058712 seconds)
    (140/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.125478349 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.168486018 seconds)
    (142/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091556313 seconds)
    (143/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.089241365 seconds)
    (144/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.118230172 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.09634072 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11729659 seconds)
    (147/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.118985529 seconds)
    (148/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.104797341 seconds)
    (149/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102162459 seconds)
    (150/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.115134661 seconds)
    (151/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.175824696 seconds)
    (152/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.078590543 seconds)
    (153/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093214426 seconds)
    (154/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114528198 seconds)
    (155/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120839644 seconds)
    (156/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.12176921 seconds)
    (157/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.092628398 seconds)
    (158/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114726088 seconds)
    (159/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.22024999 seconds)
    (160/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066596029 seconds)
    (161/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.11356521 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086512947 seconds)
    (163/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.122981911 seconds)
    (164/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.112011227 seconds)
    (165/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068950169 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093318563 seconds)
    (167/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.186007403 seconds)
    (168/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.093315038 seconds)
    (169/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069880245 seconds)
    (170/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.145390074 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097720394 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135886361 seconds)
    (173/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.302699977 seconds)
    (174/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.100342893 seconds)
    (175/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068213963 seconds)
    (176/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087292446 seconds)
    (177/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.151348475 seconds)
    (178/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113902829 seconds)
    (179/286) benchmarking ("sort", Bool, true)...
    done (took 0.219226685 seconds)
    (180/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.069094985 seconds)
    (181/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078332875 seconds)
    (182/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111680949 seconds)
    (183/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094155429 seconds)
    (184/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.127699992 seconds)
    (185/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091168479 seconds)
    (186/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092994463 seconds)
    (187/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068859177 seconds)
    (188/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113631996 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08829733 seconds)
    (190/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118907278 seconds)
    (191/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087876565 seconds)
    (192/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078254585 seconds)
    (193/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120702756 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118522477 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097895203 seconds)
    (196/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.110924919 seconds)
    (197/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112784723 seconds)
    (198/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.12443284 seconds)
    (199/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.122591122 seconds)
    (200/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068952796 seconds)
    (201/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.08705336 seconds)
    (202/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.093730835 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092937205 seconds)
    (204/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.090964801 seconds)
    (205/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087970731 seconds)
    (206/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.111105581 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.097389574 seconds)
    (208/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.139073921 seconds)
    (209/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067603242 seconds)
    (210/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.175118423 seconds)
    (211/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092150322 seconds)
    (212/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.093276911 seconds)
    (213/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098056505 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112437266 seconds)
    (215/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067568911 seconds)
    (216/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.066836469 seconds)
    (217/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190510978 seconds)
    (218/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.092553919 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087339343 seconds)
    (220/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.075490469 seconds)
    (221/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13951592 seconds)
    (222/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118070101 seconds)
    (223/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088885021 seconds)
    (224/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.112017106 seconds)
    (225/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067749966 seconds)
    (226/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125578511 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087615014 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111012106 seconds)
    (229/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069802282 seconds)
    (230/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077488598 seconds)
    (231/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.115904383 seconds)
    (232/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067135686 seconds)
    (233/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.120211083 seconds)
    (234/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087644445 seconds)
    (235/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.122396075 seconds)
    (236/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094809445 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.121090856 seconds)
    (238/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067141499 seconds)
    (239/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11983033 seconds)
    (240/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068302071 seconds)
    (241/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139645962 seconds)
    (242/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.067326763 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141902428 seconds)
    (244/286) benchmarking ("sort", Float32, false)...
    done (took 0.177816756 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096565394 seconds)
    (246/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.092992492 seconds)
    (247/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069863242 seconds)
    (248/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088068259 seconds)
    (249/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.188152282 seconds)
    (250/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066727201 seconds)
    (251/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.12000223 seconds)
    (252/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118059395 seconds)
    (253/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090419922 seconds)
    (254/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111162655 seconds)
    (255/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069393128 seconds)
    (256/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068889358 seconds)
    (257/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.092494835 seconds)
    (258/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094645303 seconds)
    (259/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092848608 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097430589 seconds)
    (261/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067089559 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.111836438 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.08553317 seconds)
    (264/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121610176 seconds)
    (265/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.07789483 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121367372 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086398772 seconds)
    (268/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.094222203 seconds)
    (269/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068707104 seconds)
    (270/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125615289 seconds)
    (271/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.068050253 seconds)
    (272/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.112954457 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088276938 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118105701 seconds)
    (275/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.087009074 seconds)
    (276/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.113291844 seconds)
    (277/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.141218676 seconds)
    (278/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.119359715 seconds)
    (279/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138594465 seconds)
    (280/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06806629 seconds)
    (281/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068694571 seconds)
    (282/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.094700122 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093701455 seconds)
    (284/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.112056226 seconds)
    (285/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069121503 seconds)
    (286/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075882898 seconds)
  done (took 36.556035666 seconds)
done (took 37.511729313 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101650162 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151142868 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097102453 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138385418 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126025311 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092125485 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121527867 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098567241 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.127015411 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126943795 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098734928 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095441143 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099883256 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123499534 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096767854 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142286536 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126027458 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094480906 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120634875 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08598937 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121572006 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086625101 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114984253 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069585322 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12497964 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094143466 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.120754507 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122134902 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087633027 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112424429 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091649864 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120108626 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088031859 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127024184 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093659309 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.121235936 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097212711 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.124362572 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087701826 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.114090215 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119354838 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087966378 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119780027 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095297008 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118028085 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093896597 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121369695 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099228229 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142291566 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117756022 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096041187 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122812946 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096921114 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120539621 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09108239 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121786841 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091553613 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143189564 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121423513 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092883515 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120472624 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096075013 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118742821 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095294613 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.12286678 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122132718 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099664488 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11794004 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098041245 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118624336 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087217824 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121169599 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090228835 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113260675 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096232084 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.124847571 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085892263 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.119801887 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093322589 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.118480731 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110910411 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091357474 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112916424 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094562305 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115065871 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07085728 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089598135 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.120671846 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085409331 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.122330124 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11820065 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094919915 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114386988 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099789966 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11296353 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092545892 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112837371 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087765856 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115318876 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091482417 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113268785 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089358249 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121877428 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088350772 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.120070421 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.099453316 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.114186723 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11855654 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08790614 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11155216 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102887606 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123253722 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086816271 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118682684 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086498431 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12077858 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086450276 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113311322 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087406048 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113126569 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093056844 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113569398 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089500567 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.12048616 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125805079 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088364658 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115823051 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091216685 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111962017 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094264843 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112524832 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088199062 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114804674 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07889664 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11491844 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088244224 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11955706 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09153147 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121553234 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088879421 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121509875 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092846234 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119885478 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092811833 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112493057 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075206163 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11824083 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090421242 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.115754731 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087910357 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11464771 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087775924 seconds)
done (took 17.219587236 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088964446 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18584757 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153162117 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14439076 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107434573 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114098745 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123491833 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118593095 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11614804 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144028206 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110575424 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134809884 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149445845 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087500174 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114259627 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091461289 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115141453 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102664573 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14816099 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135186432 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165549115 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086167435 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148889782 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137878702 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121340293 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114921206 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114692984 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092044195 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.120735911 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103380238 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.136635805 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.118653679 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088754104 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136140066 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104573037 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122057195 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086392319 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121681566 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112498481 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.089249374 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142167044 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134594643 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09370331 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11944618 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091951981 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116696876 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089776043 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123521319 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098342695 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118881869 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12826284 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157825515 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090752527 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123649955 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087089399 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124272028 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122833164 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090826949 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.115076559 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090045311 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113582434 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091020313 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129004434 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142408028 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092370232 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124649031 seconds)
  done (took 8.769424039 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106007481 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141469191 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106137716 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.133252263 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112738174 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089278727 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114716163 seconds)
  done (took 1.825855644 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08984964 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136644032 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111623644 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138960759 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133462196 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110508384 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125765765 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088997409 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13396443 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08846367 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137157455 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153272129 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090456965 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.124614157 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139937327 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088972838 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.140254908 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089191886 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118887488 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112169805 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120106191 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137200481 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091228365 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115880651 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103198233 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11643855 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163492253 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094278882 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116771412 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09326709 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113941257 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.169099853 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103253468 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127664392 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087713659 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13109191 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130108585 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087875888 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132126778 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094196493 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130815054 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088657288 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117394191 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.105059023 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120885481 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125254131 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091841973 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116184703 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091952747 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135805916 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090419071 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129916118 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088827545 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120591589 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090668318 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122796318 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124692058 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091975994 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135327652 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09112369 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132609773 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105678472 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130697621 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132090366 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092499885 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129779335 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102706096 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119801951 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089620318 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120351679 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131204296 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088495068 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117526309 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101116481 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117162596 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113306296 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139515393 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116680677 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101108762 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114847512 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090824991 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115178954 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112860594 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122775267 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089080352 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12111514 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091735889 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114944768 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087565065 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.120138854 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086545839 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11865681 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116905894 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091463121 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117216547 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107131086 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116645055 seconds)
  done (took 12.036399541 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092335112 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115543584 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093248698 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115664453 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091511216 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.118918994 seconds)
  done (took 1.661417694 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.1145683 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119998305 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104031611 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12317576 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158356479 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10357258 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13197814 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124466272 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108267031 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129722765 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131108679 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105123463 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13859938 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123131452 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104594313 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122530571 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104021141 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127727034 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128743086 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096655264 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139623561 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122201759 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097839539 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134477896 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119445184 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097391109 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127037129 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10294837 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129480586 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124010375 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096988297 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119649117 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095830866 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12611522 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132341858 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095683737 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124255665 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119318165 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101896722 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119499715 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105000427 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124791746 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128488798 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094853547 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126517637 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122280779 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095478367 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12684752 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103054958 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122866151 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120377688 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09632547 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119869589 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093285457 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123934549 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124212981 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09428272 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131450427 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096020975 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124974677 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119777043 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094437908 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126264646 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118307787 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106359482 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121906404 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095835758 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123633591 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122777767 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096809892 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121054574 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093258357 seconds)
  done (took 9.377643107 seconds)
done (took 34.686985951 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.704878303 seconds)
  done (took 1.736570859 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.851172715 seconds)
  done (took 1.884020605 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.852684001 seconds)
  done (took 18.916668877 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.51392823 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.600903042 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.016608775 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180955315 seconds)
  done (took 3.347133012 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.985476006 seconds)
  done (took 2.038729069 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.298845498 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.262080746 seconds)
  done (took 1.600315766 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.810005906 seconds)
  done (took 1.856389271 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.375578264 seconds)
  done (took 2.418003051 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333613658 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187400944 seconds)
  done (took 1.566685001 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.555059381 seconds)
  done (took 1.599720519 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.11688404 seconds)
  done (took 8.165865478 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271831319 seconds)
  done (took 1.331840644 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303329504 seconds)
  done (took 1.350534376 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.717709024 seconds)
  done (took 4.769450249 seconds)
done (took 53.623721665 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100558019 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128825804 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103020879 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126489648 seconds)
  done (took 1.503735414 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102916053 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122933565 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101326044 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124151767 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127883166 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097875249 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125227421 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101865589 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.1237282 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096900056 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123511053 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121495908 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101373059 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124760138 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093627343 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126479542 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100029773 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.124316616 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.127118622 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096945133 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121336259 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098136659 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127510882 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09366014 seconds)
  done (took 3.759116442 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101184117 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120562652 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097291768 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120147629 seconds)
  done (took 1.497299042 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10262202 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144120752 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.140529209 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100976871 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144759778 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13764076 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093556048 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11975003 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095614022 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127402868 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091146115 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151837971 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.140023798 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099880887 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.130618165 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.08840982 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119830061 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138716369 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101002525 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128585339 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093276352 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127746191 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090310186 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141946477 seconds)
  done (took 3.903398769 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172490461 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130203497 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141418635 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096667112 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16333953 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142286141 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089488946 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14452604 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087674175 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134107353 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119220043 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135245949 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131878492 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087506204 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116465407 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087494925 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131149811 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131234707 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091642332 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.130323914 seconds)
  done (took 3.525603926 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100021871 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119066255 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089802814 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118353655 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100981015 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.124041107 seconds)
  done (took 1.710947262 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092656207 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115492836 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092366453 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116544511 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096196417 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116642615 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089874473 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117271236 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09138026 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118668531 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090660051 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115497967 seconds)
  done (took 2.312097923 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.505557168 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121859795 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120855954 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090005129 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123307424 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090352538 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131611972 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093344281 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14419157 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088928229 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118361829 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091778922 seconds)
  done (took 2.778727262 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237093003 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128056219 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290898311 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282523465 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160935563 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173787687 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285464301 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16690441 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.229280678 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161696542 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205236432 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227295646 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154276999 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192958145 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14037374 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119782968 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230987993 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243265747 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155786756 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204760893 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228185228 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169370678 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1836164 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153518007 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113279942 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200526016 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096715376 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133068066 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23601523 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180592934 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189648293 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163846663 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149498616 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240913821 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257327435 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195169283 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.3168212 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11113307 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173435302 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173846109 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271662899 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112706085 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235430695 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157805881 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133780299 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195465746 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169430347 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176774204 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152546444 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142540118 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225914641 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214227667 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.223357292 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111116989 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238893473 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160779857 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170952819 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224087961 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226853581 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229472878 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181795081 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122959256 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190600243 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195267844 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215137107 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172600087 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184153096 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150137951 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192557723 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218255711 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168107826 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188927141 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.217258532 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114807906 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197659273 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175170375 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17522015 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259923964 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181707626 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095346548 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169517937 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151294343 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135729712 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196663947 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098903464 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243556862 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150049414 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16541616 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216588077 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163163134 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162113865 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229290414 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196319424 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150485633 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084078605 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156993028 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157846263 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190489228 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142188275 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160915642 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163390058 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133185386 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179521204 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126149909 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179276214 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090923422 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203071382 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185500031 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099225055 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163095905 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153070086 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.155043749 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175471609 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228995473 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143315821 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108122516 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239170596 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181504609 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151920875 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180106652 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203190029 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147332752 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151890868 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228799093 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219557766 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142267365 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203492302 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158359163 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137952223 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134116685 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184307637 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156994183 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163818329 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108410049 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.214860333 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206830765 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128874467 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139145446 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187693494 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135577144 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105698767 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163269815 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149726348 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142069352 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149329754 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153499615 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183596154 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179907222 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157444313 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168033129 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153987552 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256678721 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145445365 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152790882 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150144843 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095208146 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.221658436 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203583391 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13196292 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209048526 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173703086 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233009574 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174783092 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136391028 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179782332 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103800066 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122286345 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196059256 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168993782 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162777194 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.226885346 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203965312 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.211022602 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186697644 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174747444 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175104838 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168265782 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158512284 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141034165 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162326676 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170379399 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096693791 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145574088 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136917262 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151459432 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14513296 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106488705 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228314658 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172419286 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191873311 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162405553 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151587992 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183223058 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131682105 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175031132 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.207885716 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121639155 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.231111996 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197777068 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186074328 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146122318 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233918645 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093892694 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128051644 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144216696 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172677869 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134197806 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111320114 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167423852 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183024749 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213414163 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179290749 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241682885 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17753367 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193465258 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.124365018 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142546271 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216361323 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181275418 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.188644508 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116962714 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152962992 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181867472 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16157355 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258902854 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171081246 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177741727 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24015826 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.15423404 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104502282 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154321444 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217147279 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15514315 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180996933 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149738046 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115439773 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16337727 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136184784 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161240746 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21405791 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164405146 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192846259 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153355877 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187114203 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130185391 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167568771 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163208201 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166864178 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081388241 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204215102 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208146762 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1512558 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170836603 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219473047 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106231151 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311464142 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244065713 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192267031 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140258725 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161059084 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163993309 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167529855 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173648054 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180815624 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160887413 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189926386 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162004537 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139936232 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142572926 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151038721 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123599075 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133765861 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151630315 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179715265 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142658022 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187847727 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163406263 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162724317 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173984044 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15270472 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146196567 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152849765 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218044206 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178586216 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242418675 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153739028 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183764018 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236520973 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100428386 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134652589 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134109197 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179816071 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11035647 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222570075 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190413168 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236383739 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18687298 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188082462 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142132767 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092202026 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160208571 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174375185 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238388478 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156924187 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.162180577 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233603873 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.116432979 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134866546 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175106527 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204014746 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151883094 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226540772 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082302647 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.286012613 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130307814 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10571433 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166364604 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241251587 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137112871 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.160213045 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198587133 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171663412 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16619788 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150948991 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193874882 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221172433 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234603901 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183989916 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.1348297 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157936166 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180159962 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194209232 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159693049 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.14428229 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204914802 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227110006 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198809809 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144141233 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173398323 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170582889 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161224849 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188990828 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13839998 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236265089 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108405225 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225680179 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155597173 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145522275 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180180878 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192692993 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14565526 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191191071 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206541442 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109527677 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135421505 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172347744 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184009693 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159807431 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.13035413 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183457182 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126446778 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195188596 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264079407 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137085232 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128149633 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150538744 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139385453 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159171709 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160546918 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143894927 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140588375 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235074806 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136425775 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194574825 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235361199 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173380086 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177133942 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146559237 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695518364 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131517086 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199761306 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157422042 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210116644 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152225773 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176730515 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162585881 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170769195 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227511349 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16453069 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232993228 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197192938 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.18056397 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135788229 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161677784 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165528695 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146622383 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154129906 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171513403 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161744528 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155901805 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181044951 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171341257 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.138274682 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113183686 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233823835 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15759828 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185112796 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182242628 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141197556 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177252734 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189767495 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136939089 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180613936 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242381364 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144467103 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154083719 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106586562 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158366047 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265037514 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127716244 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202449236 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179206285 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161367059 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170121347 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149024245 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224865219 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160351195 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182182589 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148534372 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162887716 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159670408 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139903269 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103132482 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15913104 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169499606 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152749581 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161520059 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168977296 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200345184 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095991271 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147534532 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230718844 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196663845 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249118957 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107758795 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139203116 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165027902 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153433905 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17972455 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180891591 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138701469 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1390409 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108100331 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.163567355 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113984218 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159911246 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231278236 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1700157 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211313047 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.139787378 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280869658 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112130303 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158782284 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.119429739 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10506594 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153164061 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149464649 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162862086 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.225214352 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241731464 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.151187893 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13713904 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152541853 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099294077 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139221789 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16860475 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167386288 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180469239 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149099794 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080735002 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16160248 seconds)
  done (took 83.976720748 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176973364 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.156385931 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165004134 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224301416 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192964644 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.293782053 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.235084446 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.273254913 seconds)
  done (took 2.869267577 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09539892 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.150756943 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159706757 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.136051989 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093539104 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121684086 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.352561807 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.136824374 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.12144218 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.123049862 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.176774687 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096402243 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.563962394 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.092212754 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120845513 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.11128738 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093178497 seconds)
  done (took 3.897434764 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.484755887 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.76724015 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.524616881 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.099140221 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.33110516 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114414632 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.021803757 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.206962398 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.119794395 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.508997777 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.777874321 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.170480496 seconds)
  done (took 19.280973935 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.117189132 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.139686407 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124690068 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.156257005 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.143369065 seconds)
  done (took 1.839157982 seconds)
done (took 133.899348807 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105365965 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409417515 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072077985 seconds)
  done (took 1.671058094 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.109342918 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.140159475 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109939139 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.138614381 seconds)
  done (took 1.662570614 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100444956 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13003751 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109966303 seconds)
  done (took 1.499093334 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.331322186 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.193767146 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.173499858 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108246492 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131906251 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103954312 seconds)
  done (took 1.507176543 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099037057 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130017817 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099139269 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132965324 seconds)
  done (took 1.625849122 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096107458 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070987613 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102505871 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076045024 seconds)
  done (took 1.50468758 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11622569 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134021231 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103888018 seconds)
  done (took 1.517949475 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130364684 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.142449761 seconds)
  done (took 1.438423129 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106805668 seconds)
  done (took 1.268205312 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119696142 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.172788077 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.192643869 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.167748056 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.241317304 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.169394158 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.143703148 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115419003 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.134647656 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.147327547 seconds)
  done (took 2.770017808 seconds)
done (took 18.421328681 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104902903 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.52052483 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414051912 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119132515 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724624469 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380075044 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.038753609 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148227091 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.168001826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094649303 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14148062 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672759666 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028780488 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.475178295 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983030002 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.379456841 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677754496 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12362869 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123748912 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094908009 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.022124262 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092340654 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125017935 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092560919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70862045 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426832689 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095710245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37758525 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093297863 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12851555 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383083333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125437664 seconds)
  done (took 17.239043114 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096879254 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176713176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09813122 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140480395 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.126208943 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09543771 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126782728 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095403275 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181633826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12570362 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111276033 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123416721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127544 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096695922 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143942367 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092751441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127647205 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092079623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124681749 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121936166 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11288378 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122557178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094870528 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123472498 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09445331 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137631048 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094438897 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123983626 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122527876 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100620356 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129453583 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095671063 seconds)
  done (took 4.943244451 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142610657 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185612826 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129984716 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128140337 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1713779 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126532558 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201919216 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118564534 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185827193 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126536449 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141645722 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094587539 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159540391 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124253817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116706516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123908245 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097703506 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124150918 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093017637 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125673184 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141783082 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094548113 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12463863 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09467598 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125219273 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109422928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127243582 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122115945 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095978605 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128118266 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100899783 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126519688 seconds)
  done (took 5.281347339 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099013972 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127951007 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109954591 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141485757 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095334568 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128386801 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09702847 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127681834 seconds)
  done (took 2.096992461 seconds)
done (took 30.721220706 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113592872 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128935019 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108196404 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.137492763 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103905554 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13505239 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091175407 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136486763 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135490064 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104188225 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138646363 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092909446 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124753796 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092947249 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136983115 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09861572 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134409559 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10226238 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136320803 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133583217 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0962476 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135888321 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103923078 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135583902 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104475229 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135907074 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138745313 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100785404 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124470026 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095091773 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126529748 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.105532157 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126654156 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105938886 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129003347 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097877157 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125791687 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094892801 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.136442211 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133901853 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100725201 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135680757 seconds)
  done (took 6.138351956 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109050753 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141462993 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106523883 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081663828 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119270925 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081457915 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140579569 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079895522 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112078748 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109432883 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073786438 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108959048 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078979803 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10247022 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078727416 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076458184 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110098466 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077176605 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077232011 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107441779 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080502008 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072900558 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.110849417 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079995772 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075005484 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.112299738 seconds)
  done (took 3.684270462 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102796335 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137089717 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114504621 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187156843 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.173267089 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100341347 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.135443614 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141743543 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109447742 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122441474 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096284653 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152859287 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111791275 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.132026339 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122029889 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.109898222 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138837245 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094786641 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130456651 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114150371 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141030286 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102801584 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.145505403 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.136044754 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093218155 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12521446 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097050317 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.138356093 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097594402 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.134096546 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126479781 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.098271879 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125043457 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105404807 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12882414 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094634196 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.145120495 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133820656 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103300811 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123691883 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.09739298 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123912525 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114424193 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171646006 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091598266 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131680328 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129981643 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104576573 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.123532503 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112178111 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133964988 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091815687 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.128063312 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092169019 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124599225 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106674633 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.127564476 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125137194 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103891064 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126053469 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106844782 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127725348 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109272633 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.124482624 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099687561 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.124480018 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093217771 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123849273 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146370331 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095690366 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166072667 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093919369 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126286821 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132654797 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10315976 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130751309 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093980891 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139824131 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103231926 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12827733 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102237874 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12906265 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.125024579 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.113197087 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125494424 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096468035 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124452877 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100210282 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.127482647 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094526421 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139040205 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092934452 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127735476 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141207258 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094474218 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124394283 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.103620334 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129146825 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093182123 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13801371 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.0975864 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12517382 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133772382 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094892048 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.126076091 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104369487 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128770587 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092679137 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129470335 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100544415 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125656863 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09488404 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.128368149 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09457669 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135826717 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130333887 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098859483 seconds)
  done (took 15.10122474 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231723924 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.219553424 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.238480686 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.266687811 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.138213145 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11506365 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21392822 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.158973848 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.126180036 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.162144597 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176921866 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183696507 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.17119564 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.186541547 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.174092663 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09399818 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.145086321 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165971365 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.218038177 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.262237794 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146920586 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100360265 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164735796 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163085789 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.140067227 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134018554 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111705008 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.13977448 seconds)
  done (took 5.94350853 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110247198 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.159439892 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09904165 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.148105005 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.152054074 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09317077 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.131551448 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094864133 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.138620225 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139185636 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093608812 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131841335 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100405552 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134880566 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124273552 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105168087 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134122555 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095964686 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128373281 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098169541 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132305651 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101523686 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129880173 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122635483 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105182419 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123235864 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087751061 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145648044 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123252129 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11754828 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123444697 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100164404 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135494877 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094506555 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.125821069 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096447063 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127641302 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095341665 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126617967 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092609195 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.125308566 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078103788 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124143106 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137233804 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10138225 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080743584 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.132474806 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129896175 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096233231 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122070131 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097746137 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127243155 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097632583 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132201297 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.100124824 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126585872 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096882724 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118529717 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101710279 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12787005 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085549891 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122289993 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100119238 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.121281437 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102666 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130249586 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093004894 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127954269 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098229126 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.132428862 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096131336 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129493261 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091224831 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.128047954 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096399257 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130252096 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096499881 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125370182 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123754614 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096026106 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075185684 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125622553 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074182254 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.128609563 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092383144 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.124802256 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095428761 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132079064 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139676047 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096626321 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133364143 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095285424 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124287122 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097339917 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.116087021 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09732444 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141876353 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143824057 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094621827 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.124194467 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108354597 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128055206 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093036139 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107902868 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101121579 seconds)
  done (took 13.19037034 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129602037 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.157068986 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095722318 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.145977255 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158713472 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159681593 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103101175 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133381796 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096181948 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144841656 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095057213 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13485284 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09746907 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140368117 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158319657 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105580917 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127458847 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108974469 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.134274164 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.173040992 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112891189 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.145308342 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108158477 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12737358 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.099414576 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.143648714 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164489092 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108068667 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139949646 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14408747 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10998339 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16320988 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112728464 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.130643763 seconds)
  done (took 5.618440188 seconds)
done (took 50.843976753 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.293169163 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.540887153 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.273319865 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.305357554 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.32945399 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.277575732 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.308354964 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.273079336 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.62722992 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.274830598 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.538381399 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.994310751 seconds)
done (took 60.236664769 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.315895883 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.406092985 seconds)
    (2/2) benchmarking "String"...
    done (took 1.536930185 seconds)
  done (took 4.148589635 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.642247157 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.252934152 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.535126245 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.271752564 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.27197053 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.558342927 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.111041231 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.706916922 seconds)
  done (took 28.905924887 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.280897445 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.366632271 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.302453177 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.279598179 seconds)
  done (took 6.428769583 seconds)
done (took 49.644901165 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.278001499 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.288952774 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.295524082 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.254089715 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.394966533 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.300011096 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.404420807 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.409633956 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.296244916 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.278793057 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.296432818 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.273900059 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.285305562 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.471003902 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.277841147 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.273462782 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.393409812 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.984926927 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.714931587 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.29661244 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.279831278 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.291136115 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.286463083 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.275872974 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.273918104 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.277708946 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.287610051 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.275011199 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.193712259 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.27706006 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.316287812 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.6057562 seconds)
  done (took 193.307715293 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.273997825 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.313159543 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.419815351 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.339717936 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.650796359 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.47601358 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.410494001 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.919942488 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.302543514 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.304799831 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.506353824 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.276153468 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.606597219 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.250980733 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.305665785 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.378270259 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.494353282 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.624501722 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.327530252 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.454031145 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.28568976 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.490885759 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.396255612 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.470046863 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.278232424 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.408106102 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.281406486 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.290928251 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.467027642 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.378268937 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.308964739 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.289292932 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.973513002 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.138547787 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.283664867 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.310122473 seconds)
  done (took 152.890446433 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.326949835 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.276819692 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.276169834 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276607598 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.313023202 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.276479105 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.897353104 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.897061049 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.817392301 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.61168613 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.906787833 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620769845 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.279049261 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.27656262 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.376246955 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.291977992 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.277998858 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.278253098 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.293015391 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.323646704 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.282288838 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.278545767 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.898642685 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.289211775 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.260498039 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.465772799 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.298743952 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314737299 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.672411815 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.278135076 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314157889 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.620769003 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.336790401 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.278243613 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.763876578 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.319780447 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.396610275 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.280652181 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315300481 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.278615896 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.567465466 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.278465641 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.280083316 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.282719397 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.043306807 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.283549036 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.900888302 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.2800376 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.306355419 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.279280788 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.279743297 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.307952686 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.220793172 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.303893244 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.279603614 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.279330673 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.282393976 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.279348532 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.280726287 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.31667393 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.180312355 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.381521836 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.30150239 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.283306635 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31582667 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.280033352 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.654097287 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.284206829 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.655099227 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.359562128 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.498485519 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.906017752 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.282061555 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.38392593 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.405434839 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.282530105 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.280319544 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.282008679 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.283540981 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.396916999 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.282786901 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.75891596 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.467399153 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.303087611 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.925590104 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.387758735 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.283411018 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.770735523 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.285850508 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.282040132 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.106670299 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383904652 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.282281625 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.282445324 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.28177973 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.763591076 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.906649886 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.628481936 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.28623454 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.299502903 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.289537852 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.282317704 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.778887874 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.901395086 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.058844582 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.288682451 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399681328 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.470178305 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.304787592 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.283510415 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.939556516 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.286281398 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.342045613 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.284027933 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.683540891 seconds)
  done (took 379.308997348 seconds)
done (took 728.035614603 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.951556411 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.939432883 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.060430616 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.937991113 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.890556235 seconds)
  done (took 10.986485829 seconds)
done (took 12.199378466 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.499832298 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.500664082 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.354038449 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.501039769 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.315515879 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.521061916 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.47683345 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.306012572 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.39840928 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.376935699 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.401352458 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.343770665 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.314428697 seconds)
  done (took 19.517702043 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.638503969 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.612888608 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.34820434 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.670350221 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.323819351 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.619356459 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.503912269 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.505181967 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.521385386 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.321025596 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.298430742 seconds)
  done (took 17.572320267 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.668570817 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.63314621 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.351671183 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.627047356 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325808361 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.637227103 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.496576728 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.51235037 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.53405339 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.322051135 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.299372877 seconds)
  done (took 17.617233227 seconds)
done (took 55.920147053 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.296625398 seconds)
  done (took 2.506396306 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.331531291 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.50242664 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.315883943 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.29825244 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.294937963 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.295390147 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.299389296 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.295663615 seconds)
  done (took 11.844574362 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.292341682 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.293916391 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.294685397 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.295034643 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.292278624 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.291924196 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.292017285 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.292193896 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.291746546 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.292626906 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.296490107 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.293291736 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.294768685 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.294668485 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.295945293 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.296529444 seconds)
  done (took 21.911264293 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.29561254 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.29317304 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.293646315 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.294505993 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.292757457 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.294194546 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.293936638 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.293485238 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.292818853 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.293047705 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.294885252 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.29275052 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.294797072 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.293857721 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.293575095 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.294186101 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.293011522 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.293194187 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.29839737 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.293323668 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.294168117 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.294235865 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.294324735 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.295772682 seconds)
  done (took 32.271650755 seconds)
done (took 69.747935895 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.711634687 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.11731284 seconds)
  done (took 10.042008745 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.296584732 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.295687542 seconds)
  done (took 3.806060482 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.297215676 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.297597325 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.296866349 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.296798325 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.296685588 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.297145628 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.297397736 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.29632975 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.29663589 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.297421585 seconds)
  done (took 14.182229064 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.296777828 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.297100745 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.293585059 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.297711636 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.297506545 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.295074837 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.297533796 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.297012923 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.297122699 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.2950458 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.298652513 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.295475214 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.297796222 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.295683685 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.297055674 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.295914694 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.295853354 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.296453296 seconds)
  done (took 24.551021857 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.297740312 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.298139472 seconds)
  done (took 3.810343464 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.295745244 seconds)
    (2/7) benchmarking "second"...
    done (took 1.294818956 seconds)
    (3/7) benchmarking "month"...
    done (took 1.295247787 seconds)
    (4/7) benchmarking "year"...
    done (took 1.296131017 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.296903009 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.295919187 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.295625243 seconds)
  done (took 10.284321722 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.300295689 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.493651 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.577846006 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.918579657 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.302161426 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.302344643 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.200480902 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.302945138 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.30625201 seconds)
  done (took 14.919782949 seconds)
done (took 82.813294164 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.355329954 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.311653723 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.588628518 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.315519361 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.311851935 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.636863444 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.316510229 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.427425455 seconds)
done (took 38.484066181 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.299603788 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.280549516 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.312798051 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.286384785 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.410740725 seconds)
  done (took 18.507505619 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.446080336 seconds)
    (2/2) benchmarking "read"...
    done (took 1.636889895 seconds)
  done (took 5.299027559 seconds)
done (took 31.327621685 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30217681 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.301813835 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.301468506 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.299879224 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.301501335 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.299600855 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.299926243 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.302956732 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.299294786 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.30220441 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.301865785 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.300891629 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30234172 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.297839372 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298829104 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299653567 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302006262 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.299089266 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298198404 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299625255 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301908591 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.299917679 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.300200047 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.301087477 seconds)
  done (took 32.43222351 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.302872132 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.300288328 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.30223347 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.30248086 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.299494996 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.304435613 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.303550608 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.299186383 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.303452205 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.302679545 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.299841773 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.300730745 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.302887872 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.301108352 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303396027 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.299245079 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.303864272 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301258723 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30319947 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.300305619 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.302813804 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300740509 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.301785018 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303481615 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.300786601 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.300880729 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.303805061 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.300994423 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302939529 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.300347801 seconds)
  done (took 40.274050139 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.309939941 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.31182037 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.304212385 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.304436443 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.303091678 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.303914829 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.303776095 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.304725322 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.304820352 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.304199365 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.303575525 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.304754838 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.303815778 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.304813436 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.304875464 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.304233915 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.306438349 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.305680415 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.304004887 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.30546176 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.305711738 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.305740522 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.306368827 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.306186705 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.306116536 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.306347543 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.306271547 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.306058232 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.306466019 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.305968388 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.306072519 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.306698342 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.306643822 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.305728833 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.306425332 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.307265796 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.310880768 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.314111154 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.306382556 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.304832226 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.305777586 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.306563875 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.304701825 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.305816745 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.305925522 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.306738694 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.307070744 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.304555491 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.307107412 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.306790485 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.306603946 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.306868192 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.306989353 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.306243364 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.307110773 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.307501036 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.306961922 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.307432608 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.308187903 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.307373212 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.307368535 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.307510955 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.307300175 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.306557763 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.307240426 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.308147657 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.307180453 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.306933631 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.308944739 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.307757166 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.308519146 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.309419479 seconds)
  done (took 95.286701424 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.309284803 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.30622581 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.305354723 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.306621069 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.306617002 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.307659472 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.304383145 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309518193 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306852044 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.308358793 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308840682 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.306279566 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305521736 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30843115 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309495511 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.306138473 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.308785539 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.307129593 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.309987754 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.309260708 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.308923187 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.306718714 seconds)
  done (took 29.990123457 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309383006 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.31067434 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.306687933 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.309451261 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305456231 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.309887201 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.310678892 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.311597798 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310259985 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308233961 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308578872 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310279747 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.308732053 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307996774 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30760479 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.308705933 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.309562531 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.310126454 seconds)
  done (took 24.788189155 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.309458059 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.308181877 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.311174136 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.308664399 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.308108934 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.310747435 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.308962333 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.31123978 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.309470065 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.308946106 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.31008246 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311711263 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.312000839 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308253019 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311977651 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.310703406 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.311427005 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30978495 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311758129 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308693583 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.308855468 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31059892 seconds)
  done (took 30.047948695 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312631264 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.312312321 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.308313479 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.309128615 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.310236656 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.311301833 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.312267508 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.310622077 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.314441355 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.311311702 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.3088862 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.312429444 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.311089938 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.311103476 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.310158368 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310156074 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314042145 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310503542 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312764603 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.310655937 seconds)
  done (took 27.45258538 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314722971 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314897639 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.31482515 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.315835297 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315275041 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.315138807 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.314766625 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.315296357 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.315666842 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.315433652 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.316283801 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.317279852 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315816629 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.316072929 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.315356748 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315936834 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316415324 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.316951959 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.315867571 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315120059 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.317146649 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.315644236 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316510787 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.316882343 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.316762402 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.31734286 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317588177 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.315970268 seconds)
  done (took 38.075963253 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316778795 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.316239031 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.313809566 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.314008414 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.313108027 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.314397625 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.314098678 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.313965399 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.315304758 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.313369803 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.316087155 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.317032991 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.316460606 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.316207235 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.315788371 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.316667199 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316586916 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.314179224 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314622851 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314521324 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.316255303 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316972347 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.316079381 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.313716145 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314106069 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.317321888 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315182493 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.315266353 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.316642337 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.315241194 seconds)
  done (took 40.691731492 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.337411836 seconds)
    (2/2) benchmarking "in"...
    done (took 1.33517669 seconds)
  done (took 3.905110857 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.316060321 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318243163 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.316642296 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.315116365 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.314477918 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.317647873 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.317234703 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.315606567 seconds)
  done (took 11.763448835 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.318532869 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.316689393 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.318420451 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.31779841 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.31836248 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.31779886 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.324859376 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.340857061 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.317977627 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.318696597 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.325432113 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.326256349 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.3206034 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.318304532 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.318239526 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.319590676 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.319720202 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.320425576 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.321005032 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.319503604 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.319399602 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.319751055 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.321043832 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.317090562 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.321422167 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.330210831 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.344478584 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.320372315 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.317799832 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.322023731 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.31922398 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.316593359 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.320194893 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.321487343 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.321045238 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.31934209 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.32774504 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.341377366 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.325319203 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.34410047 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.321254856 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.317695541 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.321355595 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.321993503 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.328899309 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.321810098 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.321393542 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.31929432 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.319532937 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.323785404 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.327061223 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.320215278 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.318260534 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.323359652 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.321867341 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.325691427 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.344308325 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.325019497 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.331553016 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.332210139 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.35660983 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.349379202 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.322573982 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.32268354 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.333427518 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.34760918 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.329387875 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.341461955 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.319597797 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.322509135 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.327685906 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.357991727 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.349762266 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.32265721 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.323291137 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.322568878 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.322267901 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.322782073 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.330044918 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.347317041 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.323368465 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.324336652 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.334126683 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.347303448 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.321374539 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.324886003 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.323869216 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.325266949 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.325518225 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.334440119 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.347433811 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.324380034 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.322497246 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.323896484 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.325357943 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.325213477 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.322444732 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.324108067 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.321842484 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.324227944 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.325718669 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.328513123 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.333519942 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.325250945 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.325867192 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.330780993 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.347470826 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.324316934 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.329776735 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.326339098 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.325969796 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.326430699 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.331622654 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.32332632 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.329293879 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.33341767 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.326679295 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.326610841 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.326067499 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.325961325 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.336456671 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.353510222 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.325474079 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.325100016 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.331157362 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.339720848 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.327266351 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.328269602 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.326155226 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.324090627 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.324059128 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.326619379 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.327001467 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.326008432 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.326659781 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.326812111 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.324812663 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.327099286 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.326654499 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.327424658 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.328249654 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.326104453 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.326781001 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.328420307 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.327429115 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.328380936 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.33167086 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.348850824 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.327856388 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.328211955 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.324591447 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.327955213 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.328111592 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.328767332 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.327437039 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.330045924 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.327996659 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.328844194 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.328468406 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.328028065 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.327935953 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.330009006 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.332949863 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.329708141 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.33199585 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.328888517 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.327561927 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.329172358 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.330237108 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.327967698 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.330231091 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.32701636 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.334428447 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.33847917 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.330846619 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.331369539 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.330608997 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.329991839 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.331022968 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.33044892 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.333601074 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.339336662 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.330495949 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.335929503 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.352393362 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.330514617 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.330766278 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.329784847 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.328705488 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.33093286 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.334154817 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.338863929 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.342760977 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.358654701 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.331537105 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.334763084 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.332352618 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.336329643 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.333630766 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.331534378 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.332085666 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.332677673 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.330062674 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.33133392 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.331836322 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.330828603 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.330374855 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.331199026 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.331964699 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.331890246 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.332711523 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.331772564 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.33097361 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.330328681 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.332428842 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.330832216 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.331429101 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.329488863 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.33196234 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.331261963 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.331654719 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.332760039 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.336640268 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.329602576 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.333894083 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.33281783 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.331918015 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.331056057 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.332921045 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.332141226 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.330500825 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.338923961 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.355009218 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.331808891 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.338316669 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.354974442 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.332159769 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.334781977 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.333730662 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.330490143 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.336442471 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.343418106 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.33404349 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.334504177 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.334661252 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.333598527 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.334491832 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.339308058 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.352529333 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.333484013 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.334265261 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.335080888 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.331696526 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.336200756 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.334914575 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.33451187 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.336340903 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.335229007 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.335753789 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.334042018 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.335832105 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.336531458 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.335923252 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.33796211 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.346120864 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.339607311 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.333260369 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.335355233 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.3371269 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.339311217 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.335853661 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.336036841 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.334671943 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.347057617 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.364090961 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.341153733 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.358399321 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.335520916 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.342284303 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.359247783 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.338283978 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.33519807 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.336653448 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.335320387 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.336172638 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.333843572 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.335664419 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.337449468 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.336290438 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.337496491 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.34200843 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.337357207 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.336494444 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.336899399 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.337084321 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.337310547 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.336338383 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.337147754 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.338967552 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.338620844 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.336753508 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.336376849 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.342323324 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.360498933 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.337318186 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.336555078 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.336407183 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.337076191 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.337919938 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.337818415 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.341701557 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.34771161 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.34222395 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.346323201 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.340032973 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.347425573 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.33910314 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.341747178 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.348496793 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.336519477 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.337607671 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.339046998 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.340108225 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.344568009 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.362900041 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.341577281 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.343499438 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.339529216 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.339655267 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.339997905 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.339667752 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.340270722 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.340000652 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.346846276 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.362642293 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.343625171 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.340854121 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.337073638 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.341220074 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.341056981 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.338756362 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.342374491 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.340927465 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.340644644 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.339533319 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.339034516 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.340406678 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.340662685 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.340206777 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.338231972 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.340248617 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.346901397 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.365489472 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.345878687 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.340870537 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.34717806 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.361877531 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.347467777 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.363966978 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.340910475 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.341799091 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.340530613 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.342039874 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.34089099 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.341482368 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.34217266 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.343689658 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.346867099 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.342560429 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.34351025 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.340955349 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.343381409 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.341824782 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.35191526 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.367453207 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.344481161 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.346973016 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.338343834 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.344038955 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.34797989 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.343152845 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.341884389 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.344952299 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355217074 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.352418981 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.343024309 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.343573263 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.342477739 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.343157294 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.343471525 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.343689892 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.343879756 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.343736076 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.342642504 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.343223396 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.344792618 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.342707416 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.343672977 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.34428258 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.345547067 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.353525581 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.367012818 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.344611702 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.344688706 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.3453326 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.344023684 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.343708762 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.34441638 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.34384661 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.344700566 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.346146375 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.352085698 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.35084804 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.346424924 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.34325283 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.344404747 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.343931187 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.345921471 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.346384389 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.345143799 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.346925913 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.345775519 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.34490091 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.345341858 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.343355466 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.344663421 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.345492324 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.34591582 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.348565845 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.353728018 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.344839307 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.34222982 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.345404886 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.345908397 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.343458349 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.345191454 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.351253103 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.372201518 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.358796044 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.356262529 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.351189575 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.347936026 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.350210247 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.355943382 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.345279265 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.346886169 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.34876809 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.347314247 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.347861426 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.350613112 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.347476462 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.351462488 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.369368533 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.346041989 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.353021724 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.369103855 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.347462771 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.349204361 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.352297732 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.346186075 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.344870764 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.349080947 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.346265941 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.353372622 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.372138326 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.348634847 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.349320267 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.347771234 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.350631922 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.354425041 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.34997872 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.348348162 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.345100708 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.348762675 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.349124418 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.349046105 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.346202403 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.348647117 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.34963 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.353668458 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.356211292 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.346795394 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.349384401 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.348364757 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.350012378 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.350496367 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.349278032 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.346786181 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.347013754 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.347980999 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.350747943 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.350254376 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.350451777 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.349598326 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.350676573 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.351154194 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.3513567 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.354123252 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.36177812 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.358762414 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.347583845 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.34942754 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.350213993 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.350866644 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.351794083 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.351545888 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.350242766 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.350184035 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.350103941 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.351409487 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.35110886 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.353434113 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.366431051 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.373772808 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.351116397 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.349999496 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.3536754 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.351111042 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.348526292 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.351182438 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.351654133 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.355371582 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.360853268 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.353400061 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.355215004 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.374703996 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.352531738 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.355885324 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.355614852 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.359573589 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.354169515 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.352354867 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.352954763 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.357589229 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.369396312 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.352117233 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.362358505 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.383707461 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.374459877 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.352706705 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.353265348 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.352074882 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.352864127 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.353016383 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.353937288 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.353128942 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.353226044 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.35376091 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.3547317 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.359530864 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.353242582 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.35483673 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.353509067 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.352585061 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.354042993 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.350950115 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.35412179 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.354929065 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.353852486 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.354966052 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.354828588 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.354690757 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.365784051 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.383948926 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.354549159 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.355110797 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.351631371 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.35440988 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.357456526 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.366500917 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.363520249 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.35509224 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.355792297 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.354951962 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.355249468 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.353661714 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.3548109 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.353856735 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.353936162 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.352262639 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.366713664 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.385031742 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.359194539 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.355079945 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.356663209 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.355991363 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.354160881 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.356387415 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.355769845 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.355522174 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.358423265 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.361274374 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.356885165 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.35616969 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.359173851 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.364787811 seconds)
  done (took 800.1258769 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.355405894 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.353896347 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.354151755 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.354390729 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.354030374 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.352961164 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.353899418 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.354546599 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.355141027 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.354927887 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.354220266 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354337143 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.354421362 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.35522125 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.353514842 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.355603799 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355508015 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.354836661 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.354807003 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.355344394 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.354638755 seconds)
  done (took 29.713946446 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.359079686 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.355002902 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.355968574 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.35847163 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355070191 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.358120757 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.357441502 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358300205 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.35776136 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356605164 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.358693436 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358746879 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.355659711 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.356472877 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356964233 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.359680596 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.358765562 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.356237711 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.359423174 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.35690545 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.359368766 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.356923442 seconds)
  done (took 31.136040663 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.359315848 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.359210032 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.358551019 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.355719704 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.36010135 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.355800196 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.35965468 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.359521299 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.360042044 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.358472518 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.357579064 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.361717257 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.3678254 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.366437435 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.35972078 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.359720291 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.503780319 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.35999288 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.362368273 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.360522329 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.357827447 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.364906611 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.379419154 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.358974566 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.358700929 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.361478163 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.361271429 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.361159396 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.360550227 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.361600615 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.365072798 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.360690037 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.36119095 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.363100303 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.360072558 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.363274232 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.366323892 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.361546626 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.357669291 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.360991626 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.37203536 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.385376579 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.36081992 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.366619362 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.383823904 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.361941942 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.365751573 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.371332584 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.359549129 seconds)
  done (took 68.190475246 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.361241203 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.361887331 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.360528277 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.363072355 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.362510224 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.363563891 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.362673973 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.362433855 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.360400744 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.360446251 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.363504942 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.361873603 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.36140051 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.3630949 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.363712055 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.36080472 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.362230308 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.360898154 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.361547126 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.361238334 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.36139059 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.365371238 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.363779638 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.361325247 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.364280756 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.361224601 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.360737971 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.364722763 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.361653073 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.363082883 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.363441729 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.364028539 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.364971891 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.362119834 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.362014949 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.364464579 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.365064915 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.362189829 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.365506424 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.362371999 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.363449748 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.365050646 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.364798117 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.366134769 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.362424477 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.362386037 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.363533698 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.362303189 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.363539257 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.36507635 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.366150496 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.363255218 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.365211661 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.362870915 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.366244321 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.365932569 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.364438689 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.363281452 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.366144063 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.363268025 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.363910648 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.365954954 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.36347635 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.366978943 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.368303883 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.363846093 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.364002068 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.366485338 seconds)
  done (took 93.987561032 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.366991089 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.367358621 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366698661 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.368133567 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.367296023 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.367230333 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.367248943 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.368185437 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.36854279 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.367665588 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.366567577 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.367217654 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.367226681 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.36806026 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.367227287 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.36851443 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.367867248 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.368499098 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.367357376 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367650936 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.368347065 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.369097992 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.368302564 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.36869631 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.36859625 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.368679257 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.368291861 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.369523654 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.367493686 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.368457624 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.369076568 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.367302039 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.370628122 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.369116572 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.369576291 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.370124786 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.367403966 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368382272 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.368900567 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.368733638 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.369854155 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.368567621 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.36971858 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.368918595 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.368905952 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.368610088 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.368608867 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.369032034 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.36934747 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.368533262 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.368902572 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.369297189 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.369330381 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.370762 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.369831366 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.37033889 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.369601831 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.369297115 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.369478409 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.370860964 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.3698981 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.369381125 seconds)
  done (took 86.134313915 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.37130464 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.370890045 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.368212182 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.36633 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.36988411 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.368041786 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.369316761 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.369748749 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.369868446 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.370276848 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370850922 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.368957051 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367769625 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.370198473 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.368151614 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.368611578 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.368077656 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.36828464 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.371336866 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.369288466 seconds)
  done (took 28.6674513 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.370088813 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.371491176 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.369931056 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.370439934 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.372310909 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.369988742 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.371567341 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371609808 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.370032741 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371207771 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.371951872 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.372300782 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.369321402 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.370281252 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.372804662 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.3697127 seconds)
  done (took 23.218594361 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.370422821 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.371460289 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.372517489 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.372370181 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.369748349 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.3693629 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.372263863 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.369821877 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.371252495 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.373334787 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.373562811 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.372173911 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.372525295 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.373243679 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.370963253 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.373533366 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.370900034 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.370822081 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.373367777 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.372292383 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.371675524 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.371149812 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.374100905 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.373285432 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.37126792 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.371699741 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.37193717 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.369593899 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.371249292 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.373905372 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.372691088 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.370821195 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.371094536 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.371274913 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.374243808 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.372558753 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.374366336 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.375183092 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.373160819 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.374206334 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.374729395 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.371053388 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.374132963 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.374155937 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.372563586 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.375754432 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.372336882 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.373618562 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.372363004 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.372468331 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.375528708 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.376460246 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.376327513 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.37712264 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.375965766 seconds)
  done (took 76.785648865 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.377073173 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.376991366 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.372175039 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.376616228 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.376712399 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.373371973 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.376555664 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.375642064 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.374132027 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.376534399 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.373763261 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.378904813 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.374833171 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.377297869 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.37508388 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.37746717 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.375175866 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.375153394 seconds)
  done (took 26.050578393 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.376107514 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.374702061 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.376637845 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.374706987 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.374895976 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.376796615 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.374778426 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.377183601 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376920181 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.375673004 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374032346 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.377339959 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.377347478 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.378301202 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.375796052 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.37475121 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.377315764 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.377719074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.375451339 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.375687823 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.378017781 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.377266345 seconds)
  done (took 31.565257137 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.376652655 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.37640106 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.377434725 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.394342972 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.397688255 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.402235489 seconds)
  done (took 9.613215973 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385344083 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379647674 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.375365301 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379557663 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379743055 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376854244 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376371291 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376880033 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379675589 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376836763 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377498153 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379782648 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37944621 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377458677 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380168109 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380073571 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377647227 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377334499 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378663634 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381107968 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378073649 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380559418 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377103797 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377570435 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378124345 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377081397 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380115229 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379129051 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376943319 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379761723 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38055321 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37876817 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381400587 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37859678 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382089162 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380906665 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377988772 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381466335 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37983647 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379607431 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.380595219 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380893244 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381863912 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378890557 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381213771 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378385313 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379610389 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378516627 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378670937 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38267743 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382020355 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379633783 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383331899 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382753516 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382088686 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382575019 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379806623 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380653609 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382474967 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379912063 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379273065 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383161113 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378919316 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380298728 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382025143 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379645337 seconds)
  done (took 92.376642552 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380112446 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.379965279 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380365789 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381369322 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38080133 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380191849 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381149888 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380711909 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380297883 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380597237 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383725303 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380400752 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380057799 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380702832 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380209616 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381560093 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381613927 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38131067 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380964653 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384591252 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38106953 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380898213 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38263719 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381836398 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382003822 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383247536 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382431649 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381937162 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382141722 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381852088 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381807231 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381680619 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381941694 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.383400855 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382503371 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382980643 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382341725 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381705004 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382190411 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384914033 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382040729 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385581201 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382501438 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382639714 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383736418 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381635855 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383708097 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3833209 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384014405 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384216016 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383113527 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384656356 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383602474 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384735943 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384017569 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383325685 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383659922 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384139822 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383555292 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387157989 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383253854 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383739736 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385943024 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384211923 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383977912 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38411571 seconds)
  done (took 92.542562681 seconds)
done (took 1866.038812237 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.365263637 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.501675072 seconds)
  done (took 14.162882675 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.547397567 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.502315866 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.384454912 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.416620905 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.385950492 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.394291414 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.397640774 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.385086604 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.38586471 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.385431798 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.386247889 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.573448626 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.4616416 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.385304171 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.385313154 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.479719227 seconds)
  done (took 44.159572859 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.415270642 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.392052095 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.5218206 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.410262493 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.414577834 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.605161656 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.45199847 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.391630224 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.593934927 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.436148461 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.219883311 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.416550364 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.390133345 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.685133388 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.412345371 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.607602235 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.674059571 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.225041145 seconds)
  done (took 32.561097083 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.928940499 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.430189361 seconds)
  done (took 9.657956345 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.41328823 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.389663872 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.391654529 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.388908481 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.382230331 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.40217835 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.390593988 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.388542393 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.787607953 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.540003033 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.390114361 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.399170742 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.412273431 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.391310527 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.389225543 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.429448614 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.548805551 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.390185857 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.388373542 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.396327225 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.38981742 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.487623762 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.440079396 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.389458063 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.538924216 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.794105256 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.395031234 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.3991373 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.575514069 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.391836614 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.391489249 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.391500376 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.393570082 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.033082741 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.966356317 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.409416493 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.419341409 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.400200778 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.389489188 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.561983377 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.393429198 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.397570874 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.384613818 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.948434555 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.534544685 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.524727247 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.838250935 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.413409738 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.393328603 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.458479436 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.393392353 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.394167065 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.425729414 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.207244406 seconds)
  done (took 116.784662823 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.419682943 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.777282203 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560718938 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.414164477 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.279178518 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.233957906 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.407388417 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.731010803 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.428225023 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.38614767 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.690833373 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.958846964 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.408985308 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.440104692 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.867979449 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.471780703 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.386700641 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.17951441 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.407094842 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.393796179 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.920475935 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.402791512 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.387982969 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.600105732 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.429951521 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.898638995 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.057054279 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 4.007140278 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.407919034 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.388041558 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.915645427 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.408503744 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.40310072 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.388727705 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.678476716 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.805448309 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.796910793 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.412084737 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.435088066 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.391543449 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.403648065 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.89256249 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.805770793 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.409323124 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.40805488 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.918834888 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.40987311 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.392091911 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.397007885 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.607575365 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.047922373 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.390910866 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.043975598 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.391143247 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.687948918 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.466693284 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.407508728 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.92962 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.411257965 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.631106096 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.426781406 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.389980142 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.392874122 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.391771947 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.392135908 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.794838281 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.679408182 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.391948827 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.791844352 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.930939615 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.410966914 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.984844704 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.300895697 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.400116837 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.455060711 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.407945772 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.035580149 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942570558 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.418886298 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.390946381 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.779668489 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.414129027 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.696931835 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.410149006 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.390471814 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.935031797 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.396227061 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.433650647 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.391397305 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.393457122 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.183877407 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.395564923 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.706679381 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.414713798 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.392597302 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.390398833 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.441198839 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.391854489 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.392647233 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.396204702 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.98386904 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.416830186 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.393433999 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.413631861 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.392104236 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.393190836 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.394853664 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.394821676 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.626479454 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.877223643 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.41679972 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.394461979 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.392498318 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.394884145 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.585880672 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.39846992 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.757548807 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.415776622 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.411492185 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.397645097 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.25241724 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.46074891 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.393511794 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.398510007 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.347181479 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.605460485 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.416937453 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.41363405 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.395217637 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.415330481 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.838398396 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.417151161 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.480450818 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.397561479 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.157433602 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.416487951 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.432110738 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.70774572 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.404789448 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.394922864 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.399702897 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.396397353 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.696058623 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.688883772 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.521916763 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.395719205 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.41607683 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.142172936 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.446426791 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.54640205 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.419345398 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.392241223 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.597868214 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.52383283 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.396416329 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.01833056 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.39483798 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.623800863 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.396800775 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.710688588 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.947410023 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.415865367 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.403855435 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.16491444 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.12621869 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.147474479 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.400177025 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.699801928 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.378397857 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.868412684 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.395554505 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.39804309 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.974411482 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.397529901 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.40054739 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.397188051 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.397277992 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.450522988 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.574765979 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.60359185 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.406917778 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.906714042 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.442000895 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.408789747 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.402904317 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.397807812 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.748959399 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.445896875 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.400783508 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.444535107 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.401243772 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.402198053 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.92892274 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.371424318 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.399036673 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.554032323 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.099496882 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.418702798 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.41152327 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.03131415 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.628737075 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.999396326 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.461149629 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.764446931 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.427413789 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.441722064 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.21713174 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.446545494 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.934443628 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.421250144 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.400024623 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.063480941 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.418478213 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.45569913 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.399253681 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.401216929 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.999664435 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.42012845 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.398810476 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.846617498 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.423063776 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.663999842 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.399630375 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.443524025 seconds)
  done (took 1128.783208787 seconds)
done (took 1347.413214251 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.40018997 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.404062856 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.388302517 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.406750924 seconds)
  done (took 26.915015601 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.413041184 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.409132146 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.409976556 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.408634074 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.410207557 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.407688275 seconds)
  done (took 9.779144659 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.837008946 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.409559819 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.405870232 seconds)
  done (took 19.970314171 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.652150786 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.912318738 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.82699059 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 4.0698212 seconds)
  done (took 11.781008677 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.411889309 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.411063339 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.410578471 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.411525556 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.41341152 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.414252171 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.411520271 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.411207177 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.414018186 seconds)
  done (took 14.026708874 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.412943716 seconds)
done (took 85.206693568 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.163428697 seconds)
    (2/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.940695337 seconds)
    (3/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.384176391 seconds)
    (4/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.405721975 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.264165613 seconds)
    (6/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.384582744 seconds)
    (7/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.402785745 seconds)
    (8/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.726133693 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.482921193 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.68777023 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.464836594 seconds)
    (12/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.088508138 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.259745362 seconds)
    (14/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.514430322 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.83735191 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.45106447 seconds)
    (17/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.519934746 seconds)
    (18/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.312364802 seconds)
    (19/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.404467441 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.788560288 seconds)
    (21/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.510502348 seconds)
    (22/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.40132688 seconds)
    (23/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.224828479 seconds)
    (24/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.411299156 seconds)
    (25/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.280794004 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.387003869 seconds)
    (27/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.751534636 seconds)
    (28/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.943497773 seconds)
    (29/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.710849562 seconds)
    (30/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.254798025 seconds)
    (31/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.432818709 seconds)
    (32/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.418777113 seconds)
    (33/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.188769987 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 6.406402845 seconds)
    (35/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.731319399 seconds)
    (36/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.422986708 seconds)
    (37/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.438979412 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.135855636 seconds)
    (39/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.386587877 seconds)
    (40/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.394159364 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.558018334 seconds)
    (42/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.196069865 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.502098478 seconds)
    (44/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.40975551 seconds)
    (45/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.970482136 seconds)
    (46/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.387358612 seconds)
    (47/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.732177212 seconds)
    (48/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.511803388 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.426226993 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.519320045 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.661952981 seconds)
    (52/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.522797623 seconds)
    (53/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.84097897 seconds)
    (54/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.780453542 seconds)
    (55/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.493924466 seconds)
    (56/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.417425989 seconds)
    (57/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.235985206 seconds)
    (58/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.421805651 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.469068965 seconds)
    (60/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.264822957 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.406520635 seconds)
    (62/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.092474124 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.495706615 seconds)
    (64/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.413668542 seconds)
    (65/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.493430709 seconds)
    (66/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.226444152 seconds)
    (67/286) benchmarking ("sort", Float64, true)...
    done (took 6.432080385 seconds)
    (68/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.347086281 seconds)
    (69/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.408216763 seconds)
    (70/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.454297902 seconds)
    (71/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.812158649 seconds)
    (72/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.413140654 seconds)
    (73/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.528297702 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 5.716454166 seconds)
    (75/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.306898987 seconds)
    (76/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.600826911 seconds)
    (77/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.022045632 seconds)
    (78/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.168142669 seconds)
    (79/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.409522121 seconds)
    (80/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.4444302 seconds)
    (81/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.528919292 seconds)
    (82/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.388361051 seconds)
    (83/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.75586842 seconds)
    (84/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.630013577 seconds)
    (85/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.002500115 seconds)
    (86/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.961410586 seconds)
    (87/286) benchmarking ("sort", BigInt, true)...
    done (took 6.409232456 seconds)
    (88/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.410373017 seconds)
    (89/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.33192602 seconds)
    (90/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.306335049 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.440526155 seconds)
    (92/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.410226638 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.364418149 seconds)
    (94/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.832418077 seconds)
    (95/286) benchmarking ("sort", Int8, true)...
    done (took 6.410730936 seconds)
    (96/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.41128258 seconds)
    (97/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.390042505 seconds)
    (98/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.512691356 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.623219063 seconds)
    (100/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.389997317 seconds)
    (101/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.455296236 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.128672507 seconds)
    (103/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.474839011 seconds)
    (104/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.495506702 seconds)
    (105/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.437931128 seconds)
    (106/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.471419729 seconds)
    (107/286) benchmarking ("sort", BigInt, false)...
    done (took 6.411850755 seconds)
    (108/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.091293133 seconds)
    (109/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.461005308 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.853748146 seconds)
    (111/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.53285113 seconds)
    (112/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.975558823 seconds)
    (113/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.308931599 seconds)
    (114/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.42142349 seconds)
    (115/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.50932516 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.941119762 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.455500489 seconds)
    (118/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.426525565 seconds)
    (119/286) benchmarking ("sort", Float64, false)...
    done (took 5.849831628 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.67023567 seconds)
    (121/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.395490609 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.312563177 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.672661444 seconds)
    (124/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.443171124 seconds)
    (125/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.948677482 seconds)
    (126/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.422470762 seconds)
    (127/286) benchmarking ("sort", Float32, true)...
    done (took 6.415331699 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.515223261 seconds)
    (129/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.067688684 seconds)
    (130/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.40227115 seconds)
    (131/286) benchmarking ("sort", Int8, false)...
    done (took 4.475983842 seconds)
    (132/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.438960914 seconds)
    (133/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.413107838 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.411345903 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.333915169 seconds)
    (136/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.472586347 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.438026306 seconds)
    (138/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.498539588 seconds)
    (139/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.610336895 seconds)
    (140/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.610581667 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.433385354 seconds)
    (142/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.393010209 seconds)
    (143/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.433410246 seconds)
    (144/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.35993799 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.436725245 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.689421179 seconds)
    (147/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.414591427 seconds)
    (148/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.4605235 seconds)
    (149/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.204599934 seconds)
    (150/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.52039696 seconds)
    (151/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.406237442 seconds)
    (152/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.305554273 seconds)
    (153/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.083536835 seconds)
    (154/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.49659901 seconds)
    (155/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.418160287 seconds)
    (156/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.413828554 seconds)
    (157/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.40062245 seconds)
    (158/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.52194954 seconds)
    (159/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.414933647 seconds)
    (160/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.355398546 seconds)
    (161/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.420774606 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.473808465 seconds)
    (163/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.446214106 seconds)
    (164/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.952813711 seconds)
    (165/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.615559749 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.441352502 seconds)
    (167/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.505451735 seconds)
    (168/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.411262616 seconds)
    (169/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.428374479 seconds)
    (170/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.355916018 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.458267071 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.298056492 seconds)
    (173/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.763764006 seconds)
    (174/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.816457399 seconds)
    (175/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.396052433 seconds)
    (176/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.444561108 seconds)
    (177/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.969237795 seconds)
    (178/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.437552362 seconds)
    (179/286) benchmarking ("sort", Bool, true)...
    done (took 5.549388735 seconds)
    (180/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.191294982 seconds)
    (181/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.398879209 seconds)
    (182/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.473441584 seconds)
    (183/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.442027862 seconds)
    (184/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.561404734 seconds)
    (185/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.481710605 seconds)
    (186/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.021230414 seconds)
    (187/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.279059648 seconds)
    (188/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.481473559 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.079616296 seconds)
    (190/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.443229842 seconds)
    (191/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.091367683 seconds)
    (192/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.396646346 seconds)
    (193/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.426734882 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.635066163 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.046872005 seconds)
    (196/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.364700981 seconds)
    (197/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.432299987 seconds)
    (198/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.425818206 seconds)
    (199/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.543931205 seconds)
    (200/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.744569063 seconds)
    (201/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.565700176 seconds)
    (202/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.425417764 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.439231893 seconds)
    (204/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.201657479 seconds)
    (205/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.447210737 seconds)
    (206/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.458578998 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.799526669 seconds)
    (208/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.635564492 seconds)
    (209/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.171944323 seconds)
    (210/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.212573885 seconds)
    (211/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.525164793 seconds)
    (212/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.069862651 seconds)
    (213/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.442408089 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.857706184 seconds)
    (215/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.419119822 seconds)
    (216/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.853970107 seconds)
    (217/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.525394777 seconds)
    (218/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.397388254 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.424965108 seconds)
    (220/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.82027901 seconds)
    (221/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.486744614 seconds)
    (222/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.550915767 seconds)
    (223/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.518415193 seconds)
    (224/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.387816338 seconds)
    (225/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.398442377 seconds)
    (226/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.014982485 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.352029989 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.660249196 seconds)
    (229/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.422578286 seconds)
    (230/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.409348659 seconds)
    (231/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.563896265 seconds)
    (232/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.399262548 seconds)
    (233/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.524678676 seconds)
    (234/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.418823635 seconds)
    (235/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.503023587 seconds)
    (236/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.448993285 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.445713348 seconds)
    (238/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.400101536 seconds)
    (239/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.467492388 seconds)
    (240/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.399282445 seconds)
    (241/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.220537712 seconds)
    (242/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.174991154 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.202158193 seconds)
    (244/286) benchmarking ("sort", Float32, false)...
    done (took 5.479638046 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.82589644 seconds)
    (246/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.399760801 seconds)
    (247/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.096895611 seconds)
    (248/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.472746755 seconds)
    (249/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.440967549 seconds)
    (250/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.399990379 seconds)
    (251/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.446648776 seconds)
    (252/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.436677935 seconds)
    (253/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.469545032 seconds)
    (254/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.662139455 seconds)
    (255/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.421905021 seconds)
    (256/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.401128518 seconds)
    (257/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.795691535 seconds)
    (258/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.447746269 seconds)
    (259/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.140856788 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.531944209 seconds)
    (261/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.400448652 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.502030137 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.536138235 seconds)
    (264/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.44642545 seconds)
    (265/286) benchmarking ("map", abs, Int64, true)...
    done (took 3.006110358 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.231683183 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.860113584 seconds)
    (268/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.724431743 seconds)
    (269/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.402730343 seconds)
    (270/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.091308504 seconds)
    (271/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.403006859 seconds)
    (272/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.421517641 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.547264569 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.463896409 seconds)
    (275/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.520522348 seconds)
    (276/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.420721236 seconds)
    (277/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.433321926 seconds)
    (278/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.445689328 seconds)
    (279/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.327606035 seconds)
    (280/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.956847235 seconds)
    (281/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.40383174 seconds)
    (282/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.450843208 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.44658019 seconds)
    (284/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.546140775 seconds)
    (285/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.457953199 seconds)
    (286/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.821542247 seconds)
  done (took 981.867438671 seconds)
done (took 983.192641271 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.457009208 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.451868903 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.433615259 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.454979722 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.546250661 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.457462516 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.444886519 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.434799928 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.482580251 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.48312678 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.432774485 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.456838785 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.4351656 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.435654305 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.434478247 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.450217655 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.648144772 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.436467339 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.45186546 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.444916777 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.451960516 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.433251216 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.486026474 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.457610068 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.44007121 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.437957255 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.438899193 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.455056846 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.548652175 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.439648307 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.439109991 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.44779628 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.649702962 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.434844457 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.430388817 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.455942761 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.446447461 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.445644055 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.44044678 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.468847216 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.134374922 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.456804853 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.437919091 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.438070229 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.437593017 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.441585981 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.437826191 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.442740728 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.450986707 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.453063454 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.124732244 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.472521585 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.440558345 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.439119242 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.44764422 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.437595413 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.442668201 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.454195832 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.45695692 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.455558433 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.642407681 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.444426005 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.440453314 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.454707739 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.446643823 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.164392281 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.4540157 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.443371569 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.141277213 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.464446405 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.167410891 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.466896278 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.440142935 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.453554854 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.469403135 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.655258729 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.434690235 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.437763675 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.446728724 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.438795826 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.44973787 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.452606315 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.443277285 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.43925249 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.455097413 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.461707911 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.450849909 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.440798604 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.448140903 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.459333667 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.448410577 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.451673536 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.4439951 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.436665774 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.45070341 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.44302388 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.443055831 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.44402348 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.445789047 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.451789726 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.139496498 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.480431289 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.437514375 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.437819649 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.441007442 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.454518548 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.142223417 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.463422761 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.463267399 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.488266513 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.44360068 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.644758896 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.444450495 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.458261644 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.450649144 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.444145312 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.436820221 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.645471342 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.135326282 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.4764098 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.444320669 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.44061341 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.460674896 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.445309537 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.438093154 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.659655472 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.443415831 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.457084195 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.563411813 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.453297035 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.473892321 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.440172745 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.445660258 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.466290155 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.459914734 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.474474624 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.445340869 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.460144986 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.45810996 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.439384236 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.454647722 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.454373256 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.444282457 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.449064075 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.437340421 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.4656962 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.457603319 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.456219996 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.465292864 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.565531796 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.440852059 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.6493894 seconds)
done (took 245.276979062 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.502511531 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.438553426 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.530825467 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.44021631 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.544286407 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.545497469 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.436322234 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.438061615 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.437794698 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.824890676 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.437917808 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.436860945 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.431244367 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.437743323 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.521388106 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.440577265 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.438666562 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.789701835 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.441037472 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.511134807 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.44031587 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.437635359 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.441091653 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.819549577 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.439926439 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.438102085 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.509483338 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.44045124 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.78419966 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.436955985 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.437899342 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.784379656 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.529764819 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.456950018 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.45033811 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.447938446 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.544587872 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.46425908 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.522597128 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.522107959 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.533890985 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.480956886 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.437819537 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.44228052 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.442650062 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.442205916 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.43944615 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.468922262 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.438780292 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.440950352 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.791314924 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.451534813 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.450627362 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.440219704 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.439998499 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.462755313 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.440705775 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.443184745 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.531563687 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.443196362 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.504761378 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.820993507 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.829188894 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.443622977 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.442018254 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.441155682 seconds)
  done (took 155.666505252 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.509439429 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.515789917 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.565887319 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.464334996 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.491931893 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.571060215 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.463491003 seconds)
  done (took 11.930344437 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.449070883 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.444598651 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.491502097 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.493637705 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.445371916 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.591038141 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.443557164 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.453387076 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.442138061 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.495788231 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.443395578 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.444436264 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.451189599 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.445109328 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.492177163 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.455578149 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.557986147 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.444420288 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.445591834 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.601685878 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.441137868 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.452497618 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.495967849 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.455762366 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.445468433 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.452115916 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.008674812 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.446060153 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.44350428 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.445675572 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.442314562 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.481249889 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.446206618 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.44282533 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.443409703 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.560948112 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.445863015 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.443699668 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.446473484 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.442217948 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.447139539 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.446382106 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.445751643 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.444726724 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.446257814 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.469253983 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.447126551 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.4458932 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.446198613 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.447226221 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.496567168 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.447583416 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.444639585 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.444966131 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.501117222 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.454325621 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.447734668 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.445332269 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.447688484 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.445564868 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.604026264 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.493999624 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.446371494 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.495243354 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.44654606 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.448725952 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.447409959 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.448084743 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.501848155 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.448308568 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.495165566 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.446093077 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.602412269 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.469294631 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.447990353 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.450530595 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.451216681 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.448313415 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.443769079 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.45358924 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.446146515 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.448165908 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.454286351 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.447999789 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.447067264 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.550244426 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.557558856 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.447220818 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.461100946 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.454729716 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.447906551 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.50161987 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.449931908 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.445237911 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.500150529 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.563907761 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.500575592 seconds)
  done (took 164.240181888 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.453921469 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.456789396 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.449883025 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.464087967 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.448940703 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.448672847 seconds)
  done (took 10.077648364 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.453278394 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.453202008 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.448565793 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.450782871 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.451079545 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.451039489 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.451642492 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.452339717 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.455842706 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.450865307 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.451230996 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.451255927 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.450097171 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.452287079 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.451840033 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.450901894 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.450946707 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.448109895 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.450865333 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.451402188 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.555798452 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.451306396 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.452720784 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.453833739 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.455549454 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.451786244 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.458190841 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.452345162 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.451743259 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.459809448 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.475655971 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.452183617 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.454010631 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.459214224 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.456870358 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.45414123 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.457423285 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.453435829 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.449577277 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.451979882 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.454281123 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.452806091 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.452642806 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.453591503 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.455804691 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.458782299 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.458205112 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.460686747 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.453961363 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.454550635 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.453248582 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.45384141 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.452437778 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.454658906 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.455987527 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.480978218 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.459208072 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.455776784 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.453877546 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.455588139 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.455485128 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.454912775 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.457251916 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.458769772 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.452861923 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.45543875 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.455447063 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.459174854 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.455218812 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.455743272 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.455806304 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.452905887 seconds)
  done (took 107.192595825 seconds)
done (took 450.45824842 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.650141903 seconds)
  done (took 8.009803118 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.779550088 seconds)
  done (took 8.138342824 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.452993727 seconds)
  done (took 25.815531906 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.565390739 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.466708831 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.469202077 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.457258014 seconds)
  done (took 27.319463454 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.822487511 seconds)
  done (took 8.182940737 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.446880878 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.461733518 seconds)
  done (took 14.268940107 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.862661425 seconds)
  done (took 8.22222331 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.156585443 seconds)
  done (took 8.522035699 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.452975505 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.488422015 seconds)
  done (took 14.574825079 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.429664798 seconds)
  done (took 7.789605232 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.931216865 seconds)
  done (took 9.291671811 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.448163662 seconds)
  done (took 7.809165518 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.528020924 seconds)
  done (took 7.888734204 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.842029449 seconds)
  done (took 11.201544129 seconds)
done (took 168.40091781 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.449178665 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.455341167 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.451028904 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.452759686 seconds)
  done (took 27.169233258 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.491169406 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.490831627 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.491799296 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.501506705 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.492468423 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.489544573 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.482533853 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.482987121 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.500377006 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.493218542 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.493598477 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.49180189 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.490263743 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.482725192 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.493129405 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.492183928 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.500950476 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.491140515 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.481866027 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.493680779 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.45807198 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.501863735 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.4933323 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.458223073 seconds)
  done (took 37.103349699 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.979421391 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.528211975 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.610308836 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.508448939 seconds)
  done (took 7.988144948 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.509802676 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.511844949 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.523319405 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.562131068 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.586470045 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.521108182 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.483420679 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.480180067 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.46695286 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.511933419 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.588225014 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.528402909 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.596247664 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.458556005 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.645360195 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.458322292 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.459033938 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.510715872 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.561736231 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.579715371 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.460275337 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.511209994 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.512917979 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.528779242 seconds)
  done (took 37.919574897 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.459570733 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.477774286 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.459364021 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.459320645 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.465687455 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.457833009 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.459120401 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.459648718 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.459523703 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.465176329 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.457713707 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.470722998 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.457755002 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.458250636 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.466046194 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.459526367 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.465603657 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.457380799 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.459714168 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.465145728 seconds)
  done (took 30.603946055 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.45290158 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.309935069 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.804823966 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.70990487 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.45266577 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.460387148 seconds)
  done (took 28.555319123 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.547411611 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.7197528 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.460097802 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.903812792 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.999444659 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.481899818 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.461873839 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.747230058 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.148824655 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.158690714 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.531757241 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.542238246 seconds)
  done (took 22.070826373 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.469917174 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.453859889 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.474383982 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.470667213 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.529650662 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.485924366 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.468691566 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.455455948 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.532365792 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.554271599 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.48592767 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.529060437 seconds)
  done (took 39.277296117 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543134129 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.507613571 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.576913275 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463701502 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214108325 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.668058209 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.474146127 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.973949671 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.459863844 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730334645 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468961942 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546276784 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.715574638 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.467060501 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.457289897 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.610585512 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706922719 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041315551 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459644275 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.240890957 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486487483 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.457712212 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.38040296 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.497492356 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.670692569 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.604724832 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.718790863 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.234917416 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813646077 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.471142946 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468818183 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459044596 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733289963 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199116569 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578021106 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468999542 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4619714 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.007369934 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.456023662 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.236806134 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.465323052 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.482261557 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469692279 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459513605 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.395188537 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.472168345 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961927561 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.466114347 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.171139818 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.458570454 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47033141 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554730565 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.463758696 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.034258467 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471775486 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.467327442 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.458449958 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482297736 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053353417 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.652458634 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462767962 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.417007581 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.471397405 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.179159194 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202039525 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.585727785 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.464209127 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.46439232 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405098079 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.152092398 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47740366 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608235107 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.482602965 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157924153 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336859539 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.484711621 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.405005458 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10852037 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477523908 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.397358097 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689892358 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.236091297 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401432838 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.41031475 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.396810308 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.29799794 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469766883 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.016640481 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479971086 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.978338524 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.475582144 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482016466 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485648922 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.686335556 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.341293995 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463272279 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.473946004 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591306268 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485461183 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.959850021 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.408215755 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.466940553 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721948504 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.676165606 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.474599236 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.624774619 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.750331867 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.467508207 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.484411897 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.46660035 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.474993198 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.15348825 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.498993535 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.620235054 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481225655 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.239196436 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.329965033 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481598642 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.564296718 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.475070147 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.749454501 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.366349117 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.348752816 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533941846 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469606129 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.465077249 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.213026924 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.060210771 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.347390941 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.460838695 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.482862927 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.477066947 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.465532465 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.459092452 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.46333984 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478111663 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.748112833 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.689641144 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477025826 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741835704 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401019067 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61582624 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.513127966 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.690105677 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.872800594 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.487653544 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729569188 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464871442 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.473475578 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.480370612 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484537007 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568244155 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488844146 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.477101649 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.724014331 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.470609981 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.472090166 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.380281787 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.248441675 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46737729 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.471829173 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46557513 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162241492 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479658493 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.471407059 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361722389 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.481497401 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533653624 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.474429895 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.477993322 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.688296245 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51097482 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.471908128 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.479359867 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690893189 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.478836928 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.236459942 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5498378 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.71396106 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164277892 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503923426 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.402453419 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.179647657 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.160711975 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469110015 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.66098241 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.470475359 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478379118 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.479989009 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.481871114 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.163294616 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.493714062 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.253872518 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.47859741 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.478854036 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.474478065 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469593358 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.668349259 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.685146249 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.48040574 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.484833431 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613156101 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.48253375 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.404067612 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.986070588 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.474026433 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.470045091 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.24786276 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505209984 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.13741335 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008232392 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.730127024 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478085797 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.482691254 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.329483314 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.509115995 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.468486157 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471826331 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483502999 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.476833437 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500705663 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.481869636 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.195754917 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.876541839 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037644733 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347498058 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144834743 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.576121612 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.473848076 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.371051414 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.985023277 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.406863828 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.132715281 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700244115 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989317164 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.466530448 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.72291908 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.878339649 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.412454725 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48546056 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.70021318 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.555004075 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.476226072 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486653749 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.68471684 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508307749 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.479853286 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.417868714 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.766168744 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784357919 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.476106839 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55170908 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972220743 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.481402351 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.254830572 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.499099451 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.997163405 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.711988516 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.024108862 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.900416446 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.474072618 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.510716117 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015051014 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.478315716 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.002911899 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20559241 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.513716649 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.734615806 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417216845 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.486704195 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.484130721 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.470703236 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.170757993 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.485845673 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.731564172 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485475761 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.40956144 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.489226608 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114010504 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.351686873 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.481059983 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475854677 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.358223815 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.483610353 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832187709 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.482604738 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.659877633 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.499291909 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.40983726 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409532715 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.16790024 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.485094988 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465286274 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076582352 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.475595332 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475241287 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.518518078 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328955626 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.733791046 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.48940855 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.176535478 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.725858308 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478305263 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523169713 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.577684188 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.494045335 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.458636957 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.358418347 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.714510382 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.47742449 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.702059792 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.614898218 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.376800591 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.491428798 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.713032957 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.358665191 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.478046706 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77813584 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.210490726 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.481846725 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375882371 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526141383 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.486058775 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.528345048 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.478194794 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498610364 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572553858 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489992932 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.488788121 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.48944429 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.694901056 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.49836404 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.482152362 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.493513732 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571452081 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.675410337 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.668864545 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.251917664 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186454407 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40298609 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.206730665 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515219054 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.479389159 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480794881 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423468423 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630320526 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.008565504 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753021087 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.605235821 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.480386938 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503741915 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.481672451 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.493806536 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697242853 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.755195342 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.457718207 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481737531 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.273120785 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.381368929 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491510844 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.692030664 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082440403 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149540478 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593396863 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.491265546 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.984940513 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.754949178 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.573292204 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.481656719 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998323006 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.490254995 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.005164849 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.510745993 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.494809969 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630062432 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.490795681 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223304962 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.514897174 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.638504871 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.254758965 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.180069663 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.741413444 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.180783076 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.498531717 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188797847 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346561445 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748691245 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551832121 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.493856272 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.602559932 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631176214 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.48058614 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.396006582 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.483216974 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330465723 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.193487128 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.49309436 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191740005 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772162966 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.481033838 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.4838726 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50756913 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.493845007 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.707201764 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.321131052 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.707989946 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496298291 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.493310394 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.057341213 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189926172 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520040357 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428138676 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.488912528 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782850431 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.74282677 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507030175 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.9363356 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.196662016 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138265485 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.45998064 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506012127 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484283803 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328406761 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190140472 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.706825304 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093259696 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.145055594 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.499599674 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.763508231 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.489928482 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.495477464 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76372389 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.487634864 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.487290509 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.500452414 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.191027148 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.437847596 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.492269922 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.195191411 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.423111065 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.715156429 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484721445 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434869112 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.487188894 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.703097289 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.485754747 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614475879 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499533197 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.502800111 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.500141043 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.242018048 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.81408254 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.492347664 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.494138512 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.475831873 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.492218904 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513875224 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824172372 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.491589369 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.228726387 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.840107058 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.745038235 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.489553002 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.471048792 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.492866003 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.489566955 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.244441901 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.541298573 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.49941929 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157172869 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.503882864 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.502064325 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.492188647 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.704788153 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.699821925 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.500162865 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.501397499 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487736503 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530460821 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.388662769 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.312178335 seconds)
  done (took 1732.376574794 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.535013191 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.52555938 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.521870179 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.509556846 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.541395485 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.536519418 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.524761171 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.548127795 seconds)
  done (took 53.639903099 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.506619062 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.648632376 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.524399614 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.503851974 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.498809638 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.491511443 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.02775066 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.515553495 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.498242938 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.499542525 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.495462687 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.495042807 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.25722555 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.498541581 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.492560159 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.472679577 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.497866038 seconds)
  done (took 68.328853293 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.497885839 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.753651243 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.554279466 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.488347484 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.532602723 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.516160845 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.362746231 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.589925607 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.49189767 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.905271189 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.153609153 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.504542533 seconds)
  done (took 83.750349699 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.50784153 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.509219204 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.508641136 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.509504179 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.509350229 seconds)
  done (took 8.944108561 seconds)
done (took 2179.097186534 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.498204217 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.369068154 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.238808407 seconds)
  done (took 6.008449907 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.637922348 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.686159494 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.80671612 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.815353216 seconds)
  done (took 8.343250354 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.772760406 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.860626022 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.691847074 seconds)
  done (took 6.723800472 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.837131048 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.502947946 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.500235151 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.491811542 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.494101896 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.494997696 seconds)
  done (took 20.88138601 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.493941305 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.496820848 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.495937814 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.496392176 seconds)
  done (took 7.380670749 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.471568555 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.210461855 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.472480212 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.486885467 seconds)
  done (took 19.039925924 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.244838419 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.253350279 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.23784401 seconds)
  done (took 8.134627484 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.526721225 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.521279668 seconds)
  done (took 4.448168013 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.810397372 seconds)
  done (took 3.209838403 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.509607657 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.546819412 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.793037837 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.658745622 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.27989719 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.501885321 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.554460789 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 3.022483792 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.629059769 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.269805756 seconds)
  done (took 35.165082017 seconds)
done (took 137.080101521 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.076695536 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.899639463 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.694474668 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.045507759 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.725694612 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.691907405 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.781190946 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.017710762 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.557462405 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.548525892 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.095803566 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.724969084 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.728216037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.897869192 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.728090311 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.517261619 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.796395448 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.12388011 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.492077233 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.49281919 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.783013916 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.689318175 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.927088467 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.709096981 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.792706956 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.639489146 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.271397134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.516932563 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.504229798 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.283642077 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.640495703 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.49317668 seconds)
  done (took 206.287449025 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.505780595 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.499436561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.493361033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.494524451 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.49446669 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.494028444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.494558111 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.493662242 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.513693568 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.501843411 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.493764337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.492680632 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.495917053 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.494468592 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.49495755 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.493294676 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.500334002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.495129894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.495085994 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.515744698 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.493856243 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.495791091 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.497493113 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.503994914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.509335334 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.494577722 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.495275657 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.517829835 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.517927922 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.495093846 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.494506388 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.495221126 seconds)
  done (took 209.370105619 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.495914551 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.495398282 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.504745473 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.49479036 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.5163427 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.499993356 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.496901644 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.508182396 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.495304779 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.517717392 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.517425042 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.496252665 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.518071181 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.497275793 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.49746413 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.497266314 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.498747162 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.508526615 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.496763053 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.496691909 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.497653353 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.500116679 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.513265095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.509461051 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.496756377 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.496449932 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.49694841 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.519870446 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.513092712 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.497151203 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.497431241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.499773646 seconds)
  done (took 209.49213843 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.695884205 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.504156782 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.505319704 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.440782972 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.50601854 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.505105319 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.502829168 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.703613214 seconds)
  done (took 15.768992276 seconds)
done (took 642.326422428 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.058651622 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.742386401 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.728079941 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.526448305 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.468361895 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.547930648 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.523597526 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.727027113 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.521431055 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.739564194 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.948416458 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.544982415 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.105354042 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.524540661 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.818795454 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.639531187 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.46981773 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.602156597 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.883333692 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.227185772 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.821526038 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.141840085 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.753858199 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.507502576 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.129906531 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.146097181 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.402531006 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.457690756 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.548701474 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.892328803 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.443231757 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.67436015 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.604538072 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.605067334 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.662388394 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.641218658 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.641198636 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.603232781 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.751649788 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.891760972 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.228053942 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.321253656 seconds)
  done (took 102.624631738 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.489400835 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.490925834 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.489540212 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.491069792 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.491642134 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.491863993 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.490452642 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.490362807 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.490474925 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.4911711 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.490930078 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.492138869 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.490326299 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.492431281 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.491507645 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.491253458 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.492478863 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.494882367 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.491913113 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.492014909 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.493169778 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.492391508 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.49641147 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.492612369 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.495363485 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.492854819 seconds)
  done (took 40.199705746 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.510149175 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.798480628 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.980979425 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.51537163 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.519036777 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.514200097 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.605525534 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.512248892 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.513591427 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.514667714 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.703753895 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.515366014 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.548780264 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.012033678 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.514189143 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.512262291 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.512819881 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.512195758 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.807439889 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.521794075 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.633858108 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.512426767 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.607261959 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.522280671 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.537649234 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.513243429 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.516143846 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.048553198 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.536283185 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.701785622 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.639682986 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.604952671 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.004883957 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.011398658 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.591120857 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.516285598 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.514253076 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.706066984 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.516382172 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.514090959 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.608736595 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.514680413 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.991456423 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.178480355 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.536822412 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.512484304 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.071858052 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.725974636 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.823108831 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.52267936 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.020674384 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.517294659 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.516468632 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.51487507 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.820502679 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.520657785 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.513620858 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.094884701 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.544061547 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.609385518 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.516892424 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.514596868 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.806837727 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.515573974 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.796235613 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.517517263 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.522012524 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.538997107 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.995045071 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.517919462 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.203715451 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.539233657 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.514587625 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.702646483 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.797121889 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.112838568 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.543157769 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.812668989 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.019434599 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.631566637 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.52020516 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.040313665 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.636335353 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.520576295 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.519906299 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.517629383 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.516961965 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.569686344 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.608987443 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.125879382 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.215245981 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.121896712 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.637822488 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.529876621 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.516959289 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.101004761 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.541927016 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.517446364 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.988964531 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.200506729 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.540245388 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.522676404 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.209076908 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.541271059 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.613865241 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.524524177 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.001016541 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.520498136 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.571182738 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.519918978 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.525811063 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.546804284 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.617026644 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.523110205 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.522024144 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.173218351 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.742021911 seconds)
  done (took 199.748540628 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.514652277 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.513293508 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.51433635 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.514529975 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.512796915 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.52248177 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.514878649 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.515378664 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.520494013 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.513931894 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.514332936 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.513740996 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.517294416 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.518773313 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.524942803 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.52039608 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.125722847 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.513891602 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.526397215 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.515223235 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.363998263 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.517047483 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.52717574 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.515529771 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.515889138 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.518186704 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.529307318 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.517966721 seconds)
  done (took 157.373783594 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.523311908 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.216787099 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.546831725 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.684143034 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.548741743 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.519796086 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.682309684 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.595414506 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.546243128 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.520725048 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.52114866 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.895128193 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.52525014 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.161717578 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.770335686 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.708005553 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.160215299 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.547903061 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.521161181 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.5212965 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.688403283 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.531864945 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.897036546 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.219648807 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.54871162 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.220174269 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.50867747 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.523750105 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.5223517 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.223663279 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.545287777 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.900139628 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.619892567 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.597296583 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.246174965 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.185566994 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.186406709 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.709457085 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.523577392 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.522652604 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.523779619 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.50714361 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.223481692 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.549373784 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.524762018 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.214533293 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.548387053 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.526958354 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.530098431 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.523755831 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.595839187 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.621325467 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.924051345 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.229973993 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.642255762 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.537804098 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.686900927 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.931499294 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.52774582 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.163576872 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.508350188 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.231334893 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.549458039 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.509004276 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.525046425 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.530437783 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.710774735 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.68885612 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.165676721 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.549676242 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.164262304 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.733390864 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.523808585 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.524460335 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.526946366 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.228302499 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.187216967 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.734187906 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.691061131 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.770665022 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.511923452 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.525960084 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.511661028 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.622001994 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.526798517 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.233114961 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.189164106 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.551663659 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.528338734 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.527811687 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.527723134 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.749510262 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.254868743 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.64549088 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.156889286 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.92756509 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.907491692 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.530546546 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.602394957 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.549524981 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.907574912 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.53056425 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.600392718 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.002119558 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.90656626 seconds)
  done (took 184.177559329 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.819426522 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.91185342 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.634043616 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.683742427 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.200479579 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.137533946 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.901595454 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.688462891 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.657703857 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.825552297 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.862467713 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.617022588 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.733253008 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.618168009 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.332813449 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.633218521 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.65570152 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.698735741 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.663828198 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.63884465 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.238727945 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.857657188 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.727960553 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.639761502 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.634923744 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.425707007 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.173338087 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.084957164 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.725703336 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.005565303 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.126927382 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.788633773 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.636245997 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.327368679 seconds)
  done (took 73.737964683 seconds)
done (took 759.273787607 seconds)
SAVING RESULT...
DONE!
