cset: moving following pidspec: 12648
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.331871315 seconds)
loading group "string"... done (took 0.541577361 seconds)
loading group "linalg"... done (took 7.480169411 seconds)
loading group "parallel"... done (took 0.169796278 seconds)
loading group "find"... done (took 1.164474081 seconds)
loading group "tuple"... done (took 2.091238721 seconds)
loading group "dates"... done (took 1.308781106 seconds)
loading group "micro"... done (took 0.242823728 seconds)
loading group "io"... done (took 0.973604859 seconds)
loading group "scalar"... done (took 41.434489594 seconds)
loading group "sparse"... done (took 13.677430878 seconds)
loading group "broadcast"... done (took 1.102957824 seconds)
loading group "union"... done (took 14.845883772 seconds)
loading group "simd"... done (took 5.069650953 seconds)
loading group "random"... done (took 10.077974864 seconds)
loading group "problem"... done (took 1.991603525 seconds)
loading group "array"... done (took 22.306620281 seconds)
loading group "misc"... done (took 2.017065771 seconds)
loading group "sort"... done (took 3.400046915 seconds)
loading group "collection"... done (took 19.601238595 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.575883256 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156720052 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149529843 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148603016 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203730578 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146214389 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161831722 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100223593 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.989743675 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171427925 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152235736 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.526158733 seconds)
done (took 5.220243492 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.221134681 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097390898 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106209837 seconds)
  done (took 0.883297262 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078900549 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.149668266 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095955735 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079896814 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096459541 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079301825 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096949163 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078695703 seconds)
  done (took 1.361905724 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088500192 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099010192 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082968803 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097598832 seconds)
  done (took 1.052909771 seconds)
done (took 4.292494883 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730130439 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271534889 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203697197 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.468173352 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198464714 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220736506 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684377792 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.353686299 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252050093 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099909151 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.137975096 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.401539933 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138371481 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686838544 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089747833 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123437437 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177390957 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.470766823 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082056891 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110511318 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117239839 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141152937 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128169356 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091094868 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184658177 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082970102 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193323823 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10793128 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080430527 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.274946065 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201237162 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.700481565 seconds)
  done (took 10.931542905 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112776681 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135142838 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097551511 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138040496 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133465784 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09933674 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084896994 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096563142 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124669048 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175437867 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129320723 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123573975 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097299351 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083466132 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118479631 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249232047 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122916407 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101784719 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102554603 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105988665 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124351695 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112476576 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108717214 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092959183 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165061958 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221394162 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109951812 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124264734 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096378142 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111613618 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142920928 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142156551 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094032712 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080393459 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172177182 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122825506 seconds)
  done (took 5.150917808 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.097579265 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194428628 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122669338 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.127940888 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167750663 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081278362 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143373268 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096419921 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111921684 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256271399 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.131550461 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.103920877 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.486736437 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.096891017 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140945251 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100083503 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097922269 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082419843 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098157342 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.680207048 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.159278805 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116530342 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116710953 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104672107 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086359531 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.372039919 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101870936 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081229524 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099552762 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066985556 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164644802 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100402368 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.210216195 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125385301 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102874213 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134667353 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193657205 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124709439 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117117845 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096152291 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078095367 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.190864117 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087921859 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096241099 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104231378 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136131164 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134332389 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097619791 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080926909 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.210227201 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079694819 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113132463 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.946386331 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180550945 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089872118 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098858126 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.2918811 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.122016215 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098691 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.084329933 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.308613144 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.191885507 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100550519 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081147843 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098148239 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082050673 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.399993205 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083976232 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.731830385 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085286578 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108682118 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083979973 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09855521 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104679921 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086928891 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11517099 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079839763 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09892563 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080128444 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098551535 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082791494 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110638779 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.216699644 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09778319 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079915089 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098026977 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117878563 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112275746 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10172812 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097548786 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115473596 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097886151 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096589188 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115571196 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098971628 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105775009 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08236544 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141832758 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095055808 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.162768459 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09437125 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125775424 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101547986 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114324537 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110624561 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099177152 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167032643 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078052846 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096125538 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07954426 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097301247 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081796985 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099070208 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.076751791 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112687001 seconds)
  done (took 23.044018425 seconds)
done (took 40.908080735 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.328476798 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103401598 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102365474 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101846776 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099858736 seconds)
  done (took 1.496479692 seconds)
done (took 2.22866888 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284931765 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173176496 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09455253 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164344895 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092392982 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.161835942 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159703798 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093493715 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21604126 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093530301 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160130872 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075677784 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093724886 seconds)
  done (took 2.629085092 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096198222 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115939214 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084217437 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112143703 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077750145 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111966211 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093664051 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117237402 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110907641 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086980009 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09462578 seconds)
  done (took 1.833716735 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094674644 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114456251 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084187617 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111450251 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079373537 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112038504 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094425372 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119132399 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111288833 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087499775 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094992967 seconds)
  done (took 1.836335396 seconds)
done (took 7.025678527 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092748262 seconds)
  done (took 0.820209401 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.931334739 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.56095062 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112203013 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149812736 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.317041455 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.173119976 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.471844989 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126500407 seconds)
  done (took 10.782079354 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.117805666 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.114350014 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106179593 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084412399 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104207298 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088350936 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100562132 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103729692 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083542327 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103619061 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084117543 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102450912 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100590065 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086941681 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103176231 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083596746 seconds)
  done (took 2.369048467 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120500467 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117020757 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104881861 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10693467 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085922126 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104241231 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103926924 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089008091 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102496869 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104690559 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091863401 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10689741 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105814814 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080621448 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107530266 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108644559 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087789493 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106820301 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107672088 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091200057 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106984238 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097003646 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088199355 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107713562 seconds)
  done (took 3.280352134 seconds)
done (took 17.984954729 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16159911 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111293502 seconds)
  done (took 1.010488287 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096702204 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114344455 seconds)
  done (took 0.953294906 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099312623 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097838853 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123289164 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11265301 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08244326 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097905057 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121097784 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082400406 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098259801 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097919599 seconds)
  done (took 1.75804732 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084868207 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.112226844 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103027487 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096547951 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106700239 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09712106 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089848109 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100084938 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111876703 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077797351 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103587414 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115546204 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087655409 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117027309 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107088088 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100769337 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085979742 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101496926 seconds)
  done (took 2.543717106 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080966424 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099754017 seconds)
  done (took 0.926078838 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082541163 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09640189 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082467558 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098054123 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095709871 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077874664 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095351707 seconds)
  done (took 1.372773245 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.4477576 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137892178 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.263797184 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102764224 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10485763 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.295257869 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096669609 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083718756 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101690022 seconds)
  done (took 2.43907489 seconds)
done (took 11.746763683 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094545934 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117309643 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114587685 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.457171262 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106010904 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096827753 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146727263 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249586556 seconds)
done (took 2.132590821 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.146056919 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.575068748 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.422595675 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.229499263 seconds)
  done (took 1.975953044 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.405955086 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097801831 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083709232 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081057501 seconds)
  done (took 1.422479805 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081762324 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101282587 seconds)
  done (took 0.937776538 seconds)
done (took 5.237000801 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082059319 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.136428361 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081612631 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098020196 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081853394 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09864792 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080321823 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101098947 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098141586 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.081314214 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098447034 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081882857 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098873299 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079723925 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096381964 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079298404 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099031106 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079546034 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095827486 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078596394 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095923549 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081983448 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096583974 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079500978 seconds)
  done (took 2.973516159 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102280092 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099753801 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105644839 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086766881 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103876077 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087814464 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105341515 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098652473 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087852822 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101553362 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10413518 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086058879 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101572894 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086095671 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100945375 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103739753 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087597129 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099874366 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084610698 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102671507 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105266247 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082952123 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103014203 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104623554 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085553583 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102575818 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084665296 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098906485 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104608175 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.0864164 seconds)
  done (took 3.653072834 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087397352 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095800726 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079721286 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103694417 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079628651 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099233047 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078632441 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097600401 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08056805 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096655184 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08096917 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096412982 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079684102 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098187174 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.08109994 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100543165 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113994138 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079980647 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096699865 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079536194 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100845013 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079356632 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09647452 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080064484 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097160736 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079944488 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097415041 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078832398 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098065086 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079202175 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099917998 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083320938 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096168241 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086028393 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101693341 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096567981 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083259501 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096472943 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079536172 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097058586 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079638868 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097185977 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079440864 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104209319 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079763054 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099613053 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080048074 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098428324 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080071127 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10101282 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080031944 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096136208 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.099175766 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081058527 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100853319 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077900543 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095934747 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077060394 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095423078 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077396349 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094233023 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077482401 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098746995 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080369143 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111397863 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086355576 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095937113 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080458003 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095586497 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097109947 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.079306622 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110409623 seconds)
  done (took 7.264187972 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.133707871 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128861993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081810514 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100463058 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079633802 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098187691 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083952803 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098772408 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099576637 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086393389 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097885594 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081647977 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098692577 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096701443 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097762885 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099645496 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086172922 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096403712 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081126424 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101852053 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080579428 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101240932 seconds)
  done (took 2.870557124 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211869795 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107861747 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144133702 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109134701 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085304132 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108135037 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104724185 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088198507 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104505292 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085480625 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10205217 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103786192 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084573892 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101622824 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.213817165 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086127405 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104474107 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086366239 seconds)
  done (took 2.794444225 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095576314 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100788531 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100177168 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100216012 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100853661 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085304681 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106235284 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110144907 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085296219 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101027427 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093118355 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103105867 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103380233 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083900792 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104033308 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083243544 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103168582 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083321286 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109975309 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106785011 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088811136 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111143807 seconds)
  done (took 2.924893259 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098257422 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102279836 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120129427 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083780841 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095018876 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078925288 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10657405 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082996615 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108467124 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102301777 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083999859 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09979464 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090107779 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100431124 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105863199 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083229782 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102465283 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08327529 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102508553 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079684164 seconds)
  done (took 2.676749185 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104944616 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101220451 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100878286 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09284362 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101029879 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084441141 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11229474 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101579245 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084333388 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126947863 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10162023 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084794704 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111663033 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107770671 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101591777 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094287597 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110386308 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110663367 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084265175 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101691711 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12739861 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084003157 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112515693 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102052499 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084993395 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102509777 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102113205 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09037562 seconds)
  done (took 3.594905629 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082445231 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100818791 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080096968 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098577868 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.0808163 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098856891 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08031274 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098302114 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082405899 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098796792 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083598647 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10020062 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08291581 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101614311 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083387286 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100121314 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082730204 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097707925 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080486912 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098620907 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083179776 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100749633 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083032118 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097981853 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081444778 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100067322 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080124882 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097881346 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083619208 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098007886 seconds)
  done (took 3.49072887 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09262384 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108711021 seconds)
  done (took 0.974480808 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.08053867 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117090692 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080529998 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105930787 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106369027 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084023493 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11037243 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088097373 seconds)
  done (took 1.544474554 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097397196 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110237159 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082703404 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111332991 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109457573 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097971807 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169884963 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100589761 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104986634 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078990424 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112527507 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081254402 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105860762 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081861902 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104500986 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08771159 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097183434 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105484494 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084639992 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096937961 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083407432 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110776826 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101434986 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.077765771 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10051496 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09039087 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110669264 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100327371 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084169892 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106614742 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08740827 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092324599 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081388805 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099170324 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079545938 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107602918 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115793824 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085430375 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108495666 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100279717 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092980541 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094615643 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086814226 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104900076 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108890779 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08231293 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099918155 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077074031 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099127933 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083641935 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094796089 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081999504 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094143758 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106016858 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.084713075 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110265577 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080485938 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100641893 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084132054 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103067147 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105936339 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083628823 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100803782 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082060541 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108521906 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086420043 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109440302 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094541716 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075641703 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097043571 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091540292 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122850328 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105482478 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08245838 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10012988 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.07947924 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10241525 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101297072 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08769272 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105689458 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082345481 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106000309 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106861828 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081729489 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102049635 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090396339 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097845525 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101198271 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079711652 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11724637 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081622977 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09665102 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079677681 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110353965 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102381202 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081523798 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.096845165 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089093561 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09397389 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082449024 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100727232 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082074165 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110210943 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104814225 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105342695 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09201074 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106543791 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082085329 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102551226 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.07870498 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100048628 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084910192 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106679562 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093549993 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084516668 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099696819 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082745025 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108304709 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079692894 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.0998349 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106490719 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087911092 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097588075 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079162396 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102739736 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081839286 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103307372 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108298975 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.08194921 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094868473 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07757604 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103294339 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082329636 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103394217 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105334585 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086348364 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094093796 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081341877 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103952009 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109266244 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082542191 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.100290854 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089063729 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100992764 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081046376 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106260958 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101836855 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080980127 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105824028 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083211573 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094754698 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08568708 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101937683 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097844747 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085771598 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102957184 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08462445 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100727299 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080977593 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105839376 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100486625 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080963633 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099586562 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080503364 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11051723 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.083744891 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094217369 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096623555 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089036315 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097332778 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081429706 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098742316 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084723443 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101363141 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08097447 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098486214 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102288235 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094122634 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104588733 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100418109 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087168646 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111856293 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082831516 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102193209 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081637306 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101195481 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100385052 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091698073 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104559442 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088356872 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101159587 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078378266 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105542362 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107534794 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08095956 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097751707 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081816382 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103601895 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105653487 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085914954 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100822683 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08105286 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100445595 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0866658 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101929438 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100065014 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081064277 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105269002 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081461538 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106862788 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101096121 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093575577 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10373994 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077754951 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10461711 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080616562 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106231998 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095747417 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079677626 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099006734 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083899207 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099013617 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085358828 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093661932 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089454956 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107616662 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100446392 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081514374 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100565416 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089421082 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101115068 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086531887 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103835208 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107250343 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093634783 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099174056 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085498517 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111132537 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100634449 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076259893 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105795252 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081083278 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099733331 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081087837 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098173016 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085894864 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109016539 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108525027 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076570923 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102860261 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081323597 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099292801 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078916227 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.104720451 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104604882 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083013556 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107700028 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084268199 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101137561 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086427728 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100162365 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101670058 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084218299 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103918314 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083685145 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10376548 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081760651 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103262967 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08148302 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097647838 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101825778 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082438445 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.099414337 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089673587 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.09911763 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082816365 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103448633 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101445456 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082814117 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100072935 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081925898 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103567924 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083420013 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100297307 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084949083 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09581956 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107717798 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082607776 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108066975 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084117106 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096457949 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088168564 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103634717 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105878443 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083497838 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10068906 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083595557 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099657903 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084895626 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107665495 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098349753 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093293567 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109573111 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083178384 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103685326 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100300456 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083800924 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100370796 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084052729 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102735642 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082987772 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100173841 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086676129 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103919454 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100897389 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084475033 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101293359 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083288191 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101840375 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077382065 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100123752 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081724512 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100345402 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112253706 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084361759 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103117688 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081847196 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101846359 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081557903 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097582253 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108894613 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092041371 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102347895 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109055158 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081396526 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102524715 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094037636 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09427737 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081368582 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098281431 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08040607 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108716327 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.1022136 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093135904 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100588614 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082004381 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097537695 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084935811 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.108196024 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076951323 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098640443 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103960446 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085498503 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099241761 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08286051 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104118778 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084318255 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111470714 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101028974 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083288095 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101064682 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080199709 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099373814 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082427222 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104211051 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083854363 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098807216 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079697632 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10100922 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101113821 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084468979 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100510317 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084312808 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110418118 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083130648 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103886561 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105023089 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077437789 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104920496 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082910873 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10049402 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082054728 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104322644 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086164521 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10274069 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110806967 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082504732 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10168388 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082262053 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.09840982 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082869535 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100418025 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101323002 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082341225 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102710564 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09143223 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099457738 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08550031 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10111192 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083158547 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10797833 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102404445 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085868262 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109514959 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085903781 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103210626 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109106873 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087908213 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104256862 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083983593 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102884946 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107229829 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081895967 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107536828 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083344522 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102608172 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084897511 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098970963 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083234935 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101696087 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100310586 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.08976961 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102938562 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082290346 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100859314 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081297985 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102858731 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106683233 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091205501 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104467509 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08658598 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09630085 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080443944 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102570345 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080766694 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102663791 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105031761 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090002383 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103640189 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08386582 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099884462 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092764947 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108773012 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105591633 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081410367 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104740934 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084566853 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103898426 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084416469 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101708956 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103415238 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086973794 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.102405431 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08278874 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109456658 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086993159 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103248225 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103534795 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08418358 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101713502 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078800153 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102123738 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085004232 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106566629 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085497636 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102069303 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113151029 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083171472 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101812853 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087263553 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100580737 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106211527 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.07795703 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102595369 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084293361 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102764302 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078914487 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100706527 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08088025 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10486946 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081822183 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097713538 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112892768 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093533376 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105721208 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081991255 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100840762 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.07870812 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096958214 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101477342 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085280612 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103851249 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094105632 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101768985 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082434548 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096957443 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083120941 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105394388 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104667272 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080839546 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097350732 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082789746 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105092308 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089333043 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100257077 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083420767 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105533612 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104208543 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081316718 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105824379 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080307285 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106803631 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116356319 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084255968 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102517501 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089570427 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110910654 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.1037482 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078517246 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103226948 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08635294 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102026038 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084472202 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103639653 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119239049 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086445473 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100987456 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082673166 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105765733 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083104024 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111234777 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103548672 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084550462 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107130167 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085422056 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112016676 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104494682 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092844379 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105459627 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086479682 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101420975 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083782785 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10056792 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.10081766 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084442001 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102804564 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087742042 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11092111 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101238775 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094301003 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112359334 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088869386 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099241742 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083914517 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.106492421 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100793763 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087383632 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100275587 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08169745 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100409542 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082675058 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102952835 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088872512 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103740987 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085372927 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102182529 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096670256 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085731945 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104401483 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084534303 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099046671 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083710217 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103823655 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087417069 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10720084 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10272339 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084554413 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104284947 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084440085 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097398641 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090633007 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101467533 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086641586 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.1016673 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102380989 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085043111 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106034787 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088552577 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104582742 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085680162 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115416008 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105371527 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08083113 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100252955 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089497329 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10027672 seconds)
  done (took 57.515246724 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14910603 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080592945 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097956953 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078842216 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111731145 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098780653 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07878914 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098893398 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080241956 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101520178 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079481219 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098538239 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107718216 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123351364 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093116663 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103388394 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097990956 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080868246 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097667167 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081062882 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10793117 seconds)
  done (took 2.873196914 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108281771 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.12123837 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114978972 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118515578 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090308067 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114600507 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11332403 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114460225 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098663711 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11185809 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118032647 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113777219 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09151933 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110550207 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110602128 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093176556 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119914501 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107989098 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115553484 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09543746 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113166452 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113512618 seconds)
  done (took 3.234919005 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087051804 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.105893126 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087839266 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101747382 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087375229 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101426654 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.091635424 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.105279248 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090344322 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.106906137 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08535277 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10622681 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108361313 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081528903 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106991367 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084512305 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154852444 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10679281 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082866355 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104617502 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.09821576 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085933273 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098380707 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079405976 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101663629 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087771379 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103865403 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082181238 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102873017 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082905815 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10289969 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.100317641 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.085241693 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103312636 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082446662 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10219452 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083464372 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102575015 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079487664 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101385157 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087694926 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.102899302 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087592281 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108858356 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08236033 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102302307 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104305822 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084182483 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097715018 seconds)
  done (took 5.537781305 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107852151 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160480779 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086124208 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144333887 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119939675 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112752511 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087588632 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142050627 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10241289 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082462885 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125313135 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120243291 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103531756 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089666168 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111672904 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103430656 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085932546 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102150358 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10837333 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083481292 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10765908 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.11045192 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099572224 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117207476 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107293982 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083095303 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103952662 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108304919 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097205372 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108871014 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107571429 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089682319 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120408447 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10552867 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103276733 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087176419 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121311091 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104478424 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086601451 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101393556 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086146507 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108546144 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109645407 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121903552 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084922697 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108379536 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084355982 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100681381 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11735211 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087285262 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112823878 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119219903 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108795588 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084697078 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10878848 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120360281 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084017704 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102299237 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087837847 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116952909 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100471491 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087986881 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119243605 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104695121 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112588079 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098635181 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10965854 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107433293 seconds)
  done (took 8.115862474 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097783892 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11030448 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119881619 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120778068 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09097681 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110230411 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110419565 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090241327 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110730068 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115067643 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109389728 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134039909 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085858181 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113225233 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110578276 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091315424 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110471572 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11032174 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09047679 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111663435 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110295225 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119773761 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091836863 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118869706 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141201145 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105238543 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09010513 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110709586 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120293853 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110364335 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123138516 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091542983 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110427242 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119699193 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122777484 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090885836 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103345844 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110696587 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091096238 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111288888 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105316924 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119996189 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090477834 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105134117 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110442488 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091295602 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119292056 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122648176 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113833105 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116147944 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091167781 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119821588 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110622746 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090801999 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119249853 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14694026 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119736541 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120824113 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110553888 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120950131 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099758806 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127323452 seconds)
  done (took 7.644260456 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111382903 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.118618147 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118239955 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099951774 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082703108 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108054596 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082649247 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102143885 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113584548 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094560936 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116209457 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108660198 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091658808 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116310047 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107999857 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111602102 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089160347 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108356757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113813189 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108768962 seconds)
  done (took 2.941636406 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096769865 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128373949 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08938621 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115343573 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110536967 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091003438 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106584431 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108024781 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08653915 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108223269 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096583168 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117223467 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105324375 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091287974 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11618696 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109808911 seconds)
  done (took 2.513183143 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100927583 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120851669 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.1234405 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083942412 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104091549 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081016593 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104999317 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100680822 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081856859 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120015375 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084489227 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109108276 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104315294 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083137423 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101026224 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08880794 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10100742 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082456523 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104827736 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119547027 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095904884 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104415527 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10553882 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086945987 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104847292 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090558532 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10634243 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103044753 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083182775 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104923725 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085119528 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113825998 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101561452 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084190897 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103007716 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083175006 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104856149 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085015128 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109560724 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104539088 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083853173 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10449094 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085574012 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106626604 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081643566 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106036769 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101079317 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091472956 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102703917 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08553634 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104795049 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107083033 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085797226 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116209026 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088363769 seconds)
  done (took 6.252596153 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102685271 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111964226 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0810168 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103174347 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087700244 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10733913 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109239935 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088554242 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106662724 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082703387 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10665335 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089496874 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107293113 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1092119 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087010144 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108118806 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081930543 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107493162 seconds)
  done (took 2.625854462 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094707947 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108444949 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092661392 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104786066 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084865833 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108178981 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080177732 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10469144 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103516256 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084768757 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105744897 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088200797 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103604161 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087163324 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104948342 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085198456 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108284619 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102896783 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085327756 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099748304 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087821165 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103333314 seconds)
  done (took 2.974153408 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.123236177 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12649868 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09269412 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231388049 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103782176 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131921816 seconds)
  done (took 1.654699231 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113622949 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121464688 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106196033 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106518848 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114757256 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1069367 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087221602 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106947056 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117911275 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100506769 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108542662 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116563825 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117039113 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096440785 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114152104 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113837839 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107681304 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087195104 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106210899 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127926414 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088078457 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117562202 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107772478 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086862931 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108077668 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11663698 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117068792 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121389973 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087547901 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118088774 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114237333 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087408401 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117286407 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122302498 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109430419 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096415149 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107375691 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128892082 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114808741 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096691458 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108545241 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114100366 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118197136 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093150238 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117489457 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10875345 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092947198 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108230902 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107289432 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134836954 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114654304 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096070087 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114029367 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118709751 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117618949 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135018346 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101143688 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116797705 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114876141 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122035274 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117095122 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093792179 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116805956 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121505243 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114070523 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116446367 seconds)
  done (took 8.127525806 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108755455 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130800736 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111270675 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122159868 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09616843 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108419144 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111338891 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087505693 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107477293 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107389554 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151592781 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087583149 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117253745 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117358392 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10846574 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087828682 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108276109 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117357964 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087560863 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135349077 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107593284 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120533982 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122660055 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100957711 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126243407 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115850065 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108063488 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08737639 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10771553 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107953093 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093814757 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108916595 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117735476 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086519121 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118194094 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107419716 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108549834 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092975735 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107569753 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115377063 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096530186 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127106855 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108483156 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107217077 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124044331 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088163432 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107156971 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086794468 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107760907 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10724273 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122551098 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102043602 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121081084 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117251423 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108519279 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087942291 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107824696 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108099133 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087981432 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115038392 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116331503 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107901693 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135604007 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088505056 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108545864 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11816445 seconds)
  done (took 8.040105123 seconds)
done (took 155.566005711 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218919672 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.197954583 seconds)
  done (took 1.267099032 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.091432242 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.139302419 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096537913 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168534531 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08575465 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140304133 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138571155 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097033277 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106830723 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086287821 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10663072 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087832702 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171021599 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085588249 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106151415 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108380519 seconds)
  done (took 2.674239177 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118699883 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256021666 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.12244432 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105811849 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090062109 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11026069 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083863842 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111534573 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089481882 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104781129 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08868992 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106537316 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084918087 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107032288 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110148322 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088009815 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105499421 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088392858 seconds)
  done (took 2.830893997 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118427121 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152656363 seconds)
  done (took 1.138226236 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.24962907 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161170482 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227120115 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.470931974 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.278900468 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.356988418 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.201276038 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.217294077 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.169002172 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208559215 seconds)
  done (took 3.401108703 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124132974 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183481209 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318024927 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155251944 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106678412 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12693105 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155436239 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131280165 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122014076 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101030605 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123385798 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117777001 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13799018 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094096302 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115738006 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117764381 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121246897 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113522125 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114487985 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095041575 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137842843 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105925138 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095031034 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113073759 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.11918346 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098031168 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105763706 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085915701 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116687866 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115927033 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092558147 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125045429 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118873481 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154425391 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123344512 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155068839 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118867101 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091092747 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114879377 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111691236 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098098852 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118829916 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124040319 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096828585 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10580547 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096946819 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105916441 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10579937 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.09354319 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119017986 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114539275 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092478239 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15350874 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118971814 seconds)
  done (took 7.380620755 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.804121115 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162186884 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091231893 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.890496136 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139619727 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103579781 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.776341886 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112365268 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259550231 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.749136593 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132950056 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120829151 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206884888 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260658825 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.966598811 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291550345 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.638370929 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124252389 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151545024 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153558349 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117138026 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135805937 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109017039 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429816712 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116734085 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112436919 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096288638 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118556936 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160160308 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12409869 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113509426 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179259494 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250096304 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204986116 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094076744 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11172493 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111136765 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170188374 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270440678 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194016467 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180086862 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108577212 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088880883 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122321011 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132714428 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108153021 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163013638 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174575225 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169896372 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114803208 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118230724 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098035935 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121705911 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163073173 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121651301 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314485521 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318175312 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090005711 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121547161 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125552536 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26581126 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101841555 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225171892 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138852029 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214313695 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090322444 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82805629 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169860586 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11110021 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095024533 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120124686 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116224478 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120637498 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.145274862 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.405631358 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124732306 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113856654 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09000579 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229072938 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124935112 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089813776 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161782254 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116143922 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120723898 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125075308 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099737532 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191308798 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.23253324 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123189092 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097460238 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116011468 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125269938 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094016408 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216350315 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217348992 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.184484043 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.214159864 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122046655 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163653135 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169124379 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119536066 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172692125 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119936787 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123373827 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100445046 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217581322 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145969546 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123996373 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092435798 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119279056 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147774588 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127706312 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118165829 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171998663 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456342397 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188619402 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08741925 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127772502 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120283331 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163080958 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117855572 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241256388 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121972364 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16917632 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120036256 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087186744 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121706792 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162079137 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122628998 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121727269 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121827007 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096970195 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.260270249 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195257719 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122163434 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242824187 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182654462 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09659755 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19425904 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099675487 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189714529 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098051604 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120808713 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118398648 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798087884 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12306345 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119675804 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093074975 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185813242 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11147042 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123300708 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102166662 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108693207 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.838217641 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104665364 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121557598 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.123734167 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096123764 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120990147 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117629915 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093986107 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184677247 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23097968 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098121737 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119822922 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124209105 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160887714 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115456802 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103035201 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125014829 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124215844 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100477134 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115129088 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124431146 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170617026 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162729513 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220751629 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.596808272 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089547679 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125135469 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228316846 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111974721 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270623197 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120194029 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22587838 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163794613 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121563665 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320854494 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165349817 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186884051 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127051653 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174256214 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109185023 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096098726 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.185140075 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089590362 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117549113 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162081825 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124468267 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100142941 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.988810524 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111885352 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231409636 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108797169 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171891036 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116640078 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098547855 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290738679 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111617702 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10502065 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18576123 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092991044 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124754402 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.867842096 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102827309 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121504554 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117835587 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220563095 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164557469 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118613708 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097307218 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119510419 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163148117 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213778641 seconds)
  done (took 44.289910833 seconds)
done (took 63.840868769 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.290548235 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217009632 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269454777 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170570101 seconds)
  done (took 1.91408836 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.181097914 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157662248 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.128720551 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.11313979 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.158314114 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090371708 seconds)
  done (took 1.715018019 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.376990515 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277940948 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244131553 seconds)
  done (took 1.78980042 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.300913013 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246634606 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473064321 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323867225 seconds)
  done (took 2.363235316 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.217845705 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134448512 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110277545 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103086808 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196373827 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.244889733 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142441914 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20209003 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.09842018 seconds)
  done (took 2.390426027 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196818019 seconds)
done (took 11.261889878 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.179209703 seconds)
    (2/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.157068684 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.249535328 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.211710934 seconds)
    (5/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.149289873 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126080294 seconds)
    (7/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.247931421 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.214790986 seconds)
    (9/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.188829018 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.185006397 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123409651 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.126600213 seconds)
    (13/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.196749769 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.253443496 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118099074 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.220353748 seconds)
    (17/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.252277392 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.201370527 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.155190225 seconds)
    (20/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.168709618 seconds)
    (21/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.098187984 seconds)
    (22/309) benchmarking ("sort", Int8, false)...
    done (took 0.188351499 seconds)
    (23/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.100686781 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.106187909 seconds)
    (25/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124009632 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.190485885 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.148483727 seconds)
    (28/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.197745229 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11664649 seconds)
    (30/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.140197194 seconds)
    (31/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.16339968 seconds)
    (32/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111328626 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.137858339 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114605093 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092757689 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.11892827 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.121622089 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.275369772 seconds)
    (39/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.098954737 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116238635 seconds)
    (41/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.122224383 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.13507948 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.162833434 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.101578201 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133899465 seconds)
    (46/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065614898 seconds)
    (47/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.152768176 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.120744886 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114409096 seconds)
    (50/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125965173 seconds)
    (51/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068372508 seconds)
    (52/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.131294959 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.223916925 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08814312 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.210939637 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.138833975 seconds)
    (57/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117768799 seconds)
    (58/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.205082527 seconds)
    (59/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.152223554 seconds)
    (60/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.122256874 seconds)
    (61/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.184992427 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092592678 seconds)
    (63/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.1951445 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.178525039 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.200512932 seconds)
    (66/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.096408989 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109964037 seconds)
    (68/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.183321453 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.091741233 seconds)
    (70/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121968049 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.167515733 seconds)
    (72/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108418479 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.138161079 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155802399 seconds)
    (75/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119045973 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.086989245 seconds)
    (77/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.11661154 seconds)
    (78/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.175330651 seconds)
    (79/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.153376511 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114774403 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117233819 seconds)
    (82/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.165728677 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.092429738 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.142305153 seconds)
    (85/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.153732092 seconds)
    (86/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186223395 seconds)
    (87/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116714708 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.193220685 seconds)
    (89/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.146537283 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093376979 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.139006059 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.194871559 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.134608932 seconds)
    (94/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.076528226 seconds)
    (95/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.207633526 seconds)
    (96/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.198933474 seconds)
    (97/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.194439615 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065726624 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.212132096 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.096189524 seconds)
    (101/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123953101 seconds)
    (102/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091566692 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.224381834 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117896941 seconds)
    (105/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137902451 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.120605421 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110091664 seconds)
    (108/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088237393 seconds)
    (109/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.187072397 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.194150876 seconds)
    (111/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076847158 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109576147 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.112871123 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.120814078 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.185314189 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.359437272 seconds)
    (117/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112632284 seconds)
    (118/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217911994 seconds)
    (119/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.100634957 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.182008724 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09491586 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116872294 seconds)
    (123/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112712507 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118674359 seconds)
    (125/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.11501658 seconds)
    (126/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09229262 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.122125095 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091497769 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.13350868 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.193585828 seconds)
    (131/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065599223 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.085684644 seconds)
    (133/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114638958 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115182557 seconds)
    (135/309) benchmarking ("sort", Float64, false)...
    done (took 0.147979885 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117905959 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06602531 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115102743 seconds)
    (139/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093405441 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.108553914 seconds)
    (141/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.12805437 seconds)
    (142/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.072361213 seconds)
    (143/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065518232 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.088794656 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086055144 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.138043214 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093218494 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.157758802 seconds)
    (149/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06556606 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.153466206 seconds)
    (151/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.183118459 seconds)
    (152/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100210002 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.133875263 seconds)
    (154/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.083648566 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.135765905 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117785397 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087436149 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.181440002 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088095083 seconds)
    (160/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123584858 seconds)
    (161/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09147766 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.119698095 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066710481 seconds)
    (164/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.098249607 seconds)
    (165/309) benchmarking ("sort", Float32, false)...
    done (took 0.172708027 seconds)
    (166/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097357216 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109650549 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.129316461 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089858051 seconds)
    (170/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065498838 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.132938741 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086345675 seconds)
    (173/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.141069394 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.208426852 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066571582 seconds)
    (176/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.191836057 seconds)
    (177/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06599068 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091508816 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086841948 seconds)
    (180/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.122112093 seconds)
    (181/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088028178 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116179261 seconds)
    (183/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.081086489 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.13123304 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068491753 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066851016 seconds)
    (187/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091477765 seconds)
    (188/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066390071 seconds)
    (189/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123304589 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.120663785 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118963319 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.06764506 seconds)
    (193/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.108153644 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087027931 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.14649063 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.195358314 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.069068447 seconds)
    (198/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.06695665 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108988234 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068104221 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.149258051 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084327577 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111624377 seconds)
    (204/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093383048 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109931568 seconds)
    (206/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.176947197 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115850161 seconds)
    (208/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115905114 seconds)
    (209/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06741851 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.120206155 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086285775 seconds)
    (212/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.091024711 seconds)
    (213/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066429683 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094255501 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118187909 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.12046416 seconds)
    (217/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067024656 seconds)
    (218/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077600368 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.187457268 seconds)
    (220/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085316719 seconds)
    (221/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.139610605 seconds)
    (222/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067521564 seconds)
    (223/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.143836296 seconds)
    (224/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164023374 seconds)
    (225/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.153748053 seconds)
    (226/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.179897784 seconds)
    (227/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134062537 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092373276 seconds)
    (229/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.090433961 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090877299 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109821184 seconds)
    (232/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090840481 seconds)
    (233/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068045927 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090203485 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.188424915 seconds)
    (236/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087875491 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.153963813 seconds)
    (238/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066145518 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.091889461 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094825146 seconds)
    (241/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119199156 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066411054 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111288416 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086653991 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.172022364 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077269864 seconds)
    (247/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.09116596 seconds)
    (248/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094823037 seconds)
    (249/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067225121 seconds)
    (250/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.110537392 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110482298 seconds)
    (252/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078142637 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.217369312 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067949577 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.113255421 seconds)
    (256/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088967964 seconds)
    (257/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119092554 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179289661 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093618701 seconds)
    (260/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.111100439 seconds)
    (261/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067828839 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093804608 seconds)
    (263/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117080837 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.11796473 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118108443 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120809515 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086241854 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.111955828 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.190209426 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086514069 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.137729384 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.088171326 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.090846484 seconds)
    (274/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067309833 seconds)
    (275/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078570354 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110539054 seconds)
    (277/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066721335 seconds)
    (278/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091910007 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085242633 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119357705 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088286702 seconds)
    (282/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.179693802 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108737111 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086261017 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109693894 seconds)
    (286/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090847155 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112934744 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094679391 seconds)
    (289/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.077905588 seconds)
    (290/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.089718942 seconds)
    (291/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067935793 seconds)
    (292/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113584592 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214485878 seconds)
    (294/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094418459 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116699343 seconds)
    (296/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067075841 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.136098482 seconds)
    (298/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.06754564 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068730106 seconds)
    (300/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.091015677 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.06782734 seconds)
    (302/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087930381 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116736162 seconds)
    (304/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112717763 seconds)
    (305/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066700798 seconds)
    (306/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088914506 seconds)
    (307/309) benchmarking ("sort", BigInt, false)...
    done (took 0.244004278 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085765916 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141208568 seconds)
  done (took 39.844775786 seconds)
done (took 40.744615617 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106003784 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147665456 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096630429 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135975827 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124141741 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091735006 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118325779 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098599389 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12381285 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125106278 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098167153 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093268485 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096655065 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121084707 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096833573 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138922029 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124138977 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093553483 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119413174 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086049993 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120085623 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086637311 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112239103 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069697179 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122341301 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093875928 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117057886 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120401936 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086648692 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110765722 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09073028 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117979141 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086629874 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125243382 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094028679 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119294247 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.121647666 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.096137779 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112178929 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087504445 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.121143684 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086923438 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119506107 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095696989 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118429465 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092573625 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119245617 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123574421 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114923235 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116385275 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094833581 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122255411 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096334391 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117977002 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090750747 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119176106 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.116657113 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115580235 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119438361 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09279477 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11952675 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094599495 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116660273 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119740039 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095426867 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122047071 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098589294 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116294144 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096718216 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116777313 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087473993 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119483637 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114948581 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086884319 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120943026 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097662468 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110307428 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092319131 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117937856 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092129586 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110761585 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090394472 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112881531 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09332343 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113271272 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069916959 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115676546 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09367693 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.11095524 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096894268 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116779497 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09378252 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11376103 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122230946 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086580245 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116012342 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087015422 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.110783833 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089161064 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.115059818 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086272153 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11364431 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.095836875 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112797188 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093349891 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123212527 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087400285 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117759815 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086638357 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110786624 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.125870953 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097249482 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111472932 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092355645 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110829767 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094953179 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110629818 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086388621 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112319226 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087074901 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117069457 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086514615 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113243805 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094802737 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125492179 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087368214 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114930559 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089767849 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110787242 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093349675 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110930151 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08770178 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113442732 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078176366 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113981502 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086991011 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118500764 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089900472 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119400171 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112765366 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096077141 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116265194 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093088606 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117117454 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086464474 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098827649 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092792868 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114051083 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089240028 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111644396 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089110204 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110500811 seconds)
done (took 17.008311766 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092725973 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.191012489 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152465627 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14327929 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108024477 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112371197 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121875868 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119423847 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114020048 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143574971 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110836589 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13247876 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148538808 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087510482 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113119091 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091026841 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113861377 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103387859 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145858468 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13462987 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165862034 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087369642 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147400258 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135768373 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121903665 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114323504 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112619777 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091350079 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11609322 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103101094 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133012541 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11622808 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088554122 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135180731 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105631263 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121103269 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088005479 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118833593 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112294226 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087662515 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142644866 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134664276 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092996168 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118902064 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091730667 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115024772 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088994779 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122444862 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123104842 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.092022077 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128274883 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158069586 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090935031 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122929436 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08697882 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122500731 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122717989 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090195255 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113233889 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090290884 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.114807113 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091307543 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127266399 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142771847 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091654889 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122168622 seconds)
  done (took 8.66955889 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110116755 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141176735 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130629272 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105690267 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112755293 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087717613 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113617595 seconds)
  done (took 1.764459033 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094319338 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136927039 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127973211 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137981627 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133294172 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.10841011 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124283003 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088140672 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131669524 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089602164 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134651383 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153146186 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090375177 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120982185 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138274416 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088342053 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138055765 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088125576 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116691432 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137595028 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091358934 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136075044 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090708216 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114008785 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10290046 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114769274 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163789092 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093580765 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115462945 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092093902 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113365581 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166719425 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103135268 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125648449 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11402477 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102589068 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128720326 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086347452 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130483972 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094381844 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127758237 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115610362 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090414619 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112600109 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.094206045 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125827137 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090491464 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116490791 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092103525 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134316673 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089920628 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127486873 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114324622 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.09298287 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.116253552 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094630117 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124314658 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090270947 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134637993 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09042102 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132624578 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130822274 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10304379 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130954139 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090934456 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127990419 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.128386413 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.09181402 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116021573 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092592115 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130736781 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08744827 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116324055 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10014727 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1163129 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.138527314 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112133102 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11656558 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099092692 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11504989 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089765136 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114805057 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138155873 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093546256 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115462068 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092801078 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11820753 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086696664 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113568735 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092534968 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112738457 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.089869436 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118209347 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089988987 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117924994 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105332701 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115278959 seconds)
  done (took 11.881205058 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096781652 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115950491 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091902781 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115858722 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090213018 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11586166 seconds)
  done (took 1.607793138 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12165158 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118264603 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103654786 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120533783 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157062546 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129285113 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104592505 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123786177 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108437889 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127313644 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130013839 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105446104 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135878454 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122159829 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10493848 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121171622 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130565233 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100843663 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128691008 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097485258 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137821707 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122166611 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095973155 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132882146 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119049862 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096597807 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126989478 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103234616 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128357953 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12438657 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096654338 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118601263 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121369923 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098880713 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130866678 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096557174 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121662794 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12015225 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099835206 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119181141 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.131322477 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09627475 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128009266 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09472116 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123816594 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122224895 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093720099 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126324594 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130083702 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094718202 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120781753 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095528925 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118648171 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119231741 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.097118492 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124102576 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094417164 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130638429 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121918314 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096525266 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119762192 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093231262 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123018323 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119428848 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105221249 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120091867 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121609636 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096574024 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122788816 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096179103 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119784606 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118869966 seconds)
  done (took 9.301149229 seconds)
done (took 34.178884401 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.698891994 seconds)
  done (took 1.675358328 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.714216901 seconds)
  done (took 1.691541855 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.191689927 seconds)
  done (took 18.16505872 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.509948852 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.5924375 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.817660747 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18026251 seconds)
  done (took 3.074985456 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.94490259 seconds)
  done (took 1.940999527 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.304152422 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259111667 seconds)
  done (took 1.542889575 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.783321517 seconds)
  done (took 1.766632367 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.374903125 seconds)
  done (took 2.351241388 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.340578601 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185485326 seconds)
  done (took 1.513395256 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.565498478 seconds)
  done (took 1.552210341 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.760136687 seconds)
  done (took 7.756727588 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270188123 seconds)
  done (took 1.275029399 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.308352078 seconds)
  done (took 1.300714257 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.551705969 seconds)
  done (took 4.545834126 seconds)
done (took 51.136892405 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105411103 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128279222 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102312919 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125246533 seconds)
  done (took 1.448735369 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107196154 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12184942 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101380237 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121419843 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127484013 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095607403 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124388186 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101684912 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121158955 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096659348 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120871725 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120440898 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098388319 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123440199 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093535022 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124904635 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125231506 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095734742 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125002887 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096527214 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119679434 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098117505 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124773403 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119301263 seconds)
  done (took 3.702608215 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106996951 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120589702 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096326123 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119197451 seconds)
  done (took 1.436064952 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.106214962 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142456398 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138971119 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101586904 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143303205 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136238055 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092635305 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117567026 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094720671 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125416668 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090107495 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149472288 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137723331 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100212529 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127258388 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11409871 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091725735 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137002831 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100159349 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126869355 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093129561 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125211001 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090737866 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139094668 seconds)
  done (took 3.817489352 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.164431688 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.152003357 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139879063 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095026299 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.156438481 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141324982 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087891903 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141616295 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.091252445 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130299756 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119382831 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132846281 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128486454 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088849002 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113973869 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088053401 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12890984 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128565511 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090865866 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145023885 seconds)
  done (took 3.467908116 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103820098 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117981543 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088361202 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116916585 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098579474 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120950906 seconds)
  done (took 1.647388832 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096611601 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116242178 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.08973673 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114781612 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093623032 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11471859 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088416068 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115242168 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089363426 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11497876 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088947775 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113629663 seconds)
  done (took 2.238005357 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.472743473 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092661761 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120993187 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112220673 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096277448 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.116166544 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103651893 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118983426 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141380361 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089272624 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116053726 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091636027 seconds)
  done (took 2.674708552 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244292987 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125014232 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293386187 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192634905 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161145609 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17285706 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153796621 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167519248 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226538942 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158288288 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209990364 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222542325 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126350411 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220380686 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11192395 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144738995 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228843764 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220556789 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155575788 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233659152 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203050299 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166090589 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178700778 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15298304 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138762341 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170058899 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121701853 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103501746 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237056459 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180831603 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216047109 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164330543 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147474512 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242377136 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248661375 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199234446 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189013367 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136160976 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.14721993 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16485883 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270973838 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139137709 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238655711 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159887057 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105464947 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221855157 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170344034 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175016871 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151066821 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138936211 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200018891 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242706506 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193617343 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138884493 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165163612 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161134527 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169431589 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153231927 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254019888 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199916555 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204771965 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094202936 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147103344 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192004804 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182170851 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167239832 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208725916 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145929122 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193997733 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187393291 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167579246 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21997261 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183053489 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140010835 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170425626 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175225009 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172229818 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25613878 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178681809 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120985549 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168965105 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150308182 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131604474 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195540341 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09813197 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241545097 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150620072 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108260161 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163762617 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161244894 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162042359 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200444604 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219667927 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147262712 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084184934 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15567742 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155892488 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189447952 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139796119 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16115821 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160593962 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130646262 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179080834 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124197353 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177508413 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091596192 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179428145 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209329517 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100354497 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158676185 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154164754 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.14948518 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182155766 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198885686 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141587806 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133602177 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206990299 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202641427 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.123985494 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206157682 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200482611 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143909267 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149024598 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20144674 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245887103 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112909098 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230599291 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155419127 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134724455 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.10717737 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178470526 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156172421 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160767125 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134775346 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.18201028 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238967928 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097996006 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138725638 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189054098 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134132375 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132584908 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162037685 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148386945 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139228519 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.119794185 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151283458 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208666722 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178504826 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152947432 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168080737 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151879198 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252990066 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114602855 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150706167 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148721137 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120517547 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194826176 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197490034 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131977583 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204681214 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.200681662 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128604488 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196831986 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109086768 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17660525 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130772338 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093782164 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221366618 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167757425 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164551144 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19572602 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156220807 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182733476 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.208835822 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172648954 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175699355 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16592499 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159337736 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138279838 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159254864 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165677196 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096918751 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143371279 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134248464 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157014664 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14279308 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107634427 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227393939 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172836695 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149281419 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158118912 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150469053 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180044293 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101467404 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206242263 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177387172 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14689799 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196056147 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192548169 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213576911 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116794489 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235541513 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120618255 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099720564 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143543185 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172565083 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133962498 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108866222 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193235675 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178814471 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186435081 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175916943 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164169684 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176511228 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189532564 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12087339 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168402581 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186217743 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176074089 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.185528689 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14116213 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.124567063 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17495717 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15502075 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255943504 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166498017 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20311644 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209501509 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149041042 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131446283 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151459396 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186727808 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154676385 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1768334 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146577293 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14066294 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161248261 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10803318 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159757759 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212851245 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162067137 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191554141 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150955762 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212661851 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101151395 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165452688 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158830474 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165020145 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108730529 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177474359 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203560298 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148312667 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171291806 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220701463 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103755804 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.177864099 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242463489 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195268451 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138143304 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158250838 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159567802 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1649234 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17472471 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177820326 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159843876 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188338339 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157223686 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13601859 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139298281 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1509869 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125372274 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13370038 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148324993 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174234331 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140597371 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188011396 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160638561 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158043704 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171180688 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150427251 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145210346 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151427034 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216193623 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174401146 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24276084 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149166301 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179845588 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232064647 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099171495 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130989835 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.10626135 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177369316 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136750904 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215687329 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.1209427 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157573881 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180796559 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220468625 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112112184 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119979923 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156490206 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174771797 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164873871 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153245214 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159644318 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208433319 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.143852768 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13215517 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171773724 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12950878 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148217287 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225249175 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081027733 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148226364 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100976038 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133607441 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164860055 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234938601 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109263294 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185904988 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168959873 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167576564 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164690572 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148465146 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149386762 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165925112 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198981323 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212443753 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105027932 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15817418 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176347207 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222368935 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161336327 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140386036 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204039021 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192346216 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.226819484 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141983122 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167753113 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166436534 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155645497 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185478488 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134693131 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206778256 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134355286 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197645284 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15312495 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143358516 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175472447 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.148581691 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142694178 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188762164 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174644607 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135985138 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132737782 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168600066 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17693484 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155120013 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127606449 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181801164 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125081277 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190334682 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258314156 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106362543 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154642363 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148770972 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135186528 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156892389 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158952096 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13847916 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138780102 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229618308 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134772855 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190473374 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202405372 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196951996 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175292439 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144421664 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693113879 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103451759 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220737858 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156121662 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20797669 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151810348 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173075201 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157857777 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17223829 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194534387 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186401091 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203974796 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220805146 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177902775 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131935207 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159312758 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162254921 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145041051 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154046093 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166636207 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159711035 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.125643381 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.204526475 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171272481 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134585521 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11267157 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224921757 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127488557 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215522068 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179589701 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1108069 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19915413 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188372224 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133232551 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182156563 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237835495 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114498859 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150651861 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133414222 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15551021 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260294305 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09762306 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229567457 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176735795 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159170144 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168047105 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148037657 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190181371 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158963021 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204146875 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118345445 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159310932 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154746264 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138599342 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129529491 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153944087 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16739338 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.120904391 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186566165 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138674077 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190503412 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123739427 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145327542 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156215197 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191952526 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215106951 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138089066 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135533103 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163065291 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151465427 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175060425 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177386341 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135786395 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108775685 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137860352 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.155441655 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113518469 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156278263 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156391556 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166270822 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206529584 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137903762 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279315192 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141017841 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154646876 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089968453 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131356259 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150491863 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118643134 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156462586 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150280205 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261583496 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146254747 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106098717 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148329002 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126861469 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135636913 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137593238 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19201883 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175996047 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145852641 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081871203 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159547704 seconds)
  done (took 81.100922024 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168403737 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130496969 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146953389 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201559864 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176662241 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270699639 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209548086 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252859457 seconds)
  done (took 2.642401677 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.101030525 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145502178 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.153036735 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133813046 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091479975 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121287303 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.332396195 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133110092 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090571303 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139733436 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.148210146 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.116830373 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.508697835 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.118225167 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118539375 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083225758 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116020907 seconds)
  done (took 3.729456459 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.470303941 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.711867184 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.477663931 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124540178 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.144052644 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.13439435 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.739394345 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.209368124 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095523984 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485684717 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.768226116 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.1813731 seconds)
  done (took 18.629911983 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.106922893 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.128103547 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107561471 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135658606 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09611708 seconds)
  done (took 1.65983944 seconds)
done (took 129.185138208 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.111280271 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.425906859 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072405801 seconds)
  done (took 1.623973896 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.115867723 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.142513626 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109554325 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135763854 seconds)
  done (took 1.605145306 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.105765718 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.134239184 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109173848 seconds)
  done (took 1.442518413 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.322902169 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191983911 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142352736 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.114237229 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129750843 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103040617 seconds)
  done (took 1.440793571 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105378172 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130372554 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09808021 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130709781 seconds)
  done (took 1.56453452 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.10081794 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071315594 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101095843 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074471345 seconds)
  done (took 1.442047605 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120459935 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131398518 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105167177 seconds)
  done (took 1.45762444 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.138042303 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139127432 seconds)
  done (took 1.375685194 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114383962 seconds)
  done (took 1.209173363 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.125526507 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170712339 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190093465 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165953144 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.227543935 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165808413 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142426184 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114501731 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131099109 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144729344 seconds)
  done (took 2.679305622 seconds)
done (took 17.704018039 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11141575 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.519551794 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413588501 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117144459 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724008465 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.399615701 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034295755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146450694 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165180943 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093662558 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140875934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675078404 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.022880397 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.468451954 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983878135 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.469025133 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706016541 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09272174 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121168031 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094222116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018306122 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092244076 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122172618 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092651243 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70475887 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426668808 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096002174 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.469176573 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092595837 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126367428 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384701807 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122921594 seconds)
  done (took 17.336821505 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103771797 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17393593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099155957 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137864861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124026052 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09453357 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123866552 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093881168 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179790738 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122802665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111422604 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12125294 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12645103 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095156984 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141949965 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09332108 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125591055 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094183714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121571188 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123395392 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112340008 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120775144 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094950771 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121407014 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09444091 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135976817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123555278 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094078616 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121521443 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099410191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128105769 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096008849 seconds)
  done (took 4.857767346 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148221177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183975892 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129318953 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127715359 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169174805 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124495983 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200287913 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146551973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155033133 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122884691 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140480402 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093079544 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156568852 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123395523 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114508924 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121516207 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097526446 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122279566 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093533289 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123299677 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140940411 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092729518 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122756103 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093947877 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123224623 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137000834 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095855431 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12202913 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093014809 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127073932 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.0995729 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123720639 seconds)
  done (took 5.175269965 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.105187301 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127942196 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109168514 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138631627 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095579861 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125561585 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09738976 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124207911 seconds)
  done (took 2.027407308 seconds)
done (took 30.495654047 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118244358 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127659979 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106695017 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135185546 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10259155 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131288626 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092535817 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133264205 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133662167 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101056274 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138215385 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092118185 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123745876 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092523479 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135246503 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098038126 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13350195 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102565214 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134174281 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133189924 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093903775 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134119801 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103204674 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133921472 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104223485 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133834606 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138141392 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099337156 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122674987 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094959601 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125336479 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104270371 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124543749 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105605179 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128120589 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096994328 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.1237509 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094535755 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132835641 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133752968 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099521719 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133924547 seconds)
  done (took 6.025319637 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.116423252 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.143164021 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105322106 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081697513 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117348057 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081192597 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.13791935 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079766091 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111154513 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108048974 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074690838 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10652258 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078476825 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.104855168 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.0767718 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075441527 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109276389 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075566564 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076376585 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106848384 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079992515 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072755166 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108483546 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079123379 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.103955701 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081529769 seconds)
  done (took 3.604220101 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107989539 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135649127 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112710785 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184664349 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161328135 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101126193 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132699823 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140940935 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109161645 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12125804 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097210468 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150455423 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111862036 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129358349 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092780658 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137590797 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136287715 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094453163 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128908224 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113847353 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138839281 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102239868 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142821707 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133944919 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092051458 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123474161 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096519606 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136023253 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097928937 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131522656 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.12576599 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096343179 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123559703 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105869284 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127221216 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095085126 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142239617 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132526418 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101600759 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122995471 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096620234 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123369626 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114318686 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167456942 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092936202 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129004481 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129312257 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102496418 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122064148 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110540831 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139468018 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091553498 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124727897 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09185236 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121098697 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13649208 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094889188 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124355268 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102574712 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125031926 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10578334 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126501242 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108533675 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121390282 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129596975 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.092588309 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122459709 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091403515 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144107493 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093754343 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163983704 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.122934754 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094251055 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131097154 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100658592 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128196703 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09315691 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13869175 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102056301 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126411238 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130823997 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.095574019 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.12521281 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111471253 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124732625 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094698816 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123423055 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099484801 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124660668 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093628737 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137014665 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.121601654 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.09627428 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139203089 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092249885 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12386394 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099826379 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127334142 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091402066 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135337662 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.127431352 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093844347 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132008267 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09292353 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125310232 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103029792 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12745071 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092218597 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12753737 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128739128 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.093977964 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123283923 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.095874852 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124017944 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103576881 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128729218 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098225716 seconds)
  done (took 14.875331301 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234922041 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21599834 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.248942781 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.267368774 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135890541 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145552476 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211938443 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.126208296 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124376032 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.1611258 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163527185 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18850024 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171386807 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181358053 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.111073487 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121388501 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142313876 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134899612 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213797248 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.290525336 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143538485 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101247369 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162480772 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160671359 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137384553 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102799352 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140054163 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134356028 seconds)
  done (took 5.805036085 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115591227 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156824872 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098911054 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145428557 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148972294 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092940849 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128019095 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095418083 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135497083 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135901716 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09372005 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129649429 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100844562 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131860604 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124005447 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102299497 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132743423 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094983353 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127152912 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097159396 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130761902 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.132101213 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097187373 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122587962 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101934152 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122658906 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086485009 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142372324 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123832637 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115781483 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121549108 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100010737 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133549397 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09370695 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123968357 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095677667 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125856509 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095853007 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124892923 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092775584 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121656923 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078413909 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122793904 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136280904 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099742603 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109520062 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.10059968 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128996223 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093909799 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120362078 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095934136 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125846578 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096545467 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130940512 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098520201 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124062928 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097057259 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116053246 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099461381 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125959437 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084611867 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121354339 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097950821 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117541387 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101832609 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127900675 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091988383 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125121285 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098081176 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12916152 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095698634 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125996207 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121525333 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.096504213 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.125928974 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097953489 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127207276 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093090114 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122605547 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094142468 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106457022 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.093194561 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074255094 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126752937 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092425496 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122157312 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096778435 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129685115 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138196435 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09477146 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131719493 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094131435 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122070481 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096862355 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113059856 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096044044 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138069249 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141709219 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093806947 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121816692 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106980937 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126120531 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093140129 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106264813 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100287784 seconds)
  done (took 12.982251451 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13508307 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153474155 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095404035 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142551749 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155655144 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158302104 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100404988 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131111977 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095112256 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143127817 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093427769 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131434636 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096971982 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137441019 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15728269 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102733648 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125863095 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107507627 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132074652 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170713465 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112110668 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142422384 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140367856 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093682235 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.130482314 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110165077 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161464073 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.138998488 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.10683787 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142625758 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108196276 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162798475 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143190864 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098822967 seconds)
  done (took 5.503772691 seconds)
done (took 49.903582384 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.209687614 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.45033633 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.210270357 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.116718167 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.21643498 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.237717422 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.214959191 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.213566064 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.256133004 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.211405923 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.448427724 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.892712436 seconds)
done (took 58.815271816 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.246047969 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.349945841 seconds)
    (2/2) benchmarking "String"...
    done (took 1.479538929 seconds)
  done (took 3.968678684 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.588509539 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.171733664 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.473321818 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.210639 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.209890106 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.50305894 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.879015134 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.565029819 seconds)
  done (took 28.150494889 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.222426829 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.606863953 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.90600652 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.91071312 seconds)
  done (took 18.784807743 seconds)
done (took 60.876517556 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.209521778 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.256974602 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.22171071 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.186296562 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.321795087 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.255811112 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.453665433 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.443470237 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.208926721 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.202017349 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.243977479 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.218893798 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.217515369 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.481304132 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.211372373 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.213430297 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.233593144 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.695187376 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.629459288 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.228804161 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.236943953 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.261799437 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.216960738 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.213134761 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.266767654 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.212030932 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.219775093 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.233067039 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.833863432 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.218453019 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.219429172 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.723216978 seconds)
  done (took 192.126980494 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.213663685 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.317782682 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.366482986 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.275206071 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.650955178 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.411375352 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.384007302 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.728301403 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.233534543 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.225088787 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.438362116 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.215081863 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.511385913 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.202764074 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.224659048 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.3232825 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.411765209 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.524766408 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.225402495 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.495134284 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.228113858 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.457855241 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.365918882 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.423270275 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.244196069 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.267285809 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.225390419 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.219537434 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.420928104 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.356312661 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.217045319 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.237276855 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.836570393 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.074563003 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.218619851 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.248388779 seconds)
  done (took 150.561204192 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.494697239 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.217279401 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.217223042 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.217822902 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.218100207 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.250772387 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.217266291 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.804345553 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.804221027 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.720563759 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.519875996 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.210700156 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.277236938 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.216874173 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.47624466 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.211498257 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314044787 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.224768155 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.214495545 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.233622655 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.260981741 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211447634 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.216352367 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80573432 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.23213912 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.419779633 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.225990136 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.217651896 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250508927 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.609671177 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212805797 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.251002919 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.545112556 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.264540768 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21265112 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.541957155 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.155014241 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323845296 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214670655 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.251895087 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.220260012 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.495347459 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.214673151 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.220409517 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.223750191 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.831550055 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.213438976 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.805748806 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.219691609 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.13881774 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.2129844 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.221204499 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.355459035 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.725046308 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.227996582 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.218584066 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.222679331 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.219211882 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216944923 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.253663355 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.31970433 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.311471941 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.227782397 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.216804237 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245267438 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.211426433 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.400546936 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21182999 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.816865855 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.285696754 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.318900101 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.778313247 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211455011 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304676971 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327520976 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.206477654 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.210237642 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210879118 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.211164092 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.319016832 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.20554286 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.623996477 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21217102 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.213150035 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.270090391 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.306680642 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.206108782 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.547500211 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.212128719 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.210696715 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.924443384 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301934046 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.208008862 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.211984529 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21106718 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.624381281 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777944289 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.423904639 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.213435612 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.474331876 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.206544784 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.64161422 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.755075062 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.8511635 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.216034236 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321163148 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211569437 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.214279007 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.21279097 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.240989291 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.227890294 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.273018438 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.20847539 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.212946761 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.610785151 seconds)
  done (took 346.729485289 seconds)
done (took 692.047727906 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.89895599 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.857862741 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.989468017 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.865365534 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.874348136 seconds)
  done (took 10.623264219 seconds)
done (took 11.758794556 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.402896504 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.401604868 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274411045 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.405421377 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242147905 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.420065942 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.379462919 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.233238233 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.315155067 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.296509503 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.315459166 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.266114072 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239765738 seconds)
  done (took 18.328808881 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.531312677 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.517330227 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277301078 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.573566686 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253480975 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.529836499 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.427625723 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.422447296 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425198554 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247586548 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22828449 seconds)
  done (took 16.573910393 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.530452117 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.531573824 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283292192 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528980668 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25641806 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.539562725 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417328871 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429177096 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.426863963 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.245345184 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227283128 seconds)
  done (took 16.554798317 seconds)
done (took 52.594564381 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.225385966 seconds)
  done (took 2.363396299 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.257524322 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.417903706 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.238906939 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.228925587 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.224089387 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.225278995 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.228461018 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.223060864 seconds)
  done (took 11.185244152 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.220485311 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.221904292 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.22287209 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.219807038 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.220342993 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.226478435 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.22150933 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.222705798 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.2195168 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.221950167 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.220794995 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.22250518 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22043508 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.223717613 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.220853768 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.219551789 seconds)
  done (took 20.685752415 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.221104848 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.218988668 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219757385 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.22076024 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.220050321 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.221243909 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.222029206 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.21919387 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.219833819 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.220019451 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.223376157 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.219932438 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.22003219 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220335622 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220617009 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221937017 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.221338177 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.218541438 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.225889638 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.220065414 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.220294812 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.222758443 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.220271273 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.220930516 seconds)
  done (took 30.441444823 seconds)
done (took 65.813007199 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.275559461 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.872580789 seconds)
  done (took 9.287040083 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.221400511 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.222781085 seconds)
  done (took 3.586893081 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.223777903 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.222184338 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.221781894 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.22208577 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.223105034 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.221107719 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.224226339 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.223719112 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224125116 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.225445123 seconds)
  done (took 13.372888065 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.22343373 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.223877797 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.221664497 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.223631112 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.222690576 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.221407011 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.223469339 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.223678321 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.223420031 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.222107996 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.226785228 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.221684485 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.223934285 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.222039897 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.223101035 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.222041306 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.221387497 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.222244295 seconds)
  done (took 23.15493641 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.223694044 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.224542563 seconds)
  done (took 3.590726102 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.221195347 seconds)
    (2/7) benchmarking "second"...
    done (took 1.222509286 seconds)
    (3/7) benchmarking "month"...
    done (took 1.222013593 seconds)
    (4/7) benchmarking "year"...
    done (took 1.221724032 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.223732198 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.221748402 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.223322578 seconds)
  done (took 9.698038535 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226305965 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.400611645 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.478666439 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.828590197 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.224866296 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.228648711 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.10976703 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.229113741 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.233462291 seconds)
  done (took 14.101447965 seconds)
done (took 77.929119222 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.243174312 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.236903441 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.391765774 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.226668612 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.237743653 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.520103252 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.223346022 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.339784155 seconds)
done (took 37.560403333 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.219977922 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.96128976 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.956684328 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.220337683 seconds)
  done (took 11.281658352 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.202988265 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.141097464 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.204749772 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.213507367 seconds)
  done (took 17.906319689 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.228822627 seconds)
    (2/2) benchmarking "read"...
    done (took 1.555063165 seconds)
  done (took 4.92573068 seconds)
done (took 41.473832011 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22634381 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.226649886 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.226333074 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.224920801 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.22876989 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.222747846 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.226559374 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.226582126 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.227971714 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.2276446 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.226878262 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227089232 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.228239582 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226135838 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224422852 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.224303622 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227548773 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.224814823 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.224433578 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223793372 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225085163 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228908138 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.227712779 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.224839973 seconds)
  done (took 30.573474013 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.229696872 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.227266061 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.228529542 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.227399678 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.225984327 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.229867436 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.228750259 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.226948911 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.228070577 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.230305498 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227379245 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.227856165 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.228253077 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.226089116 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229861721 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.227091806 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.229662267 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225874322 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228380045 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.227794423 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.23070422 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227962124 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.229275128 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231997574 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.229167452 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226804998 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.231308123 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.231750487 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229446713 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.226422136 seconds)
  done (took 38.000827918 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.234711749 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.240231113 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.230464195 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.228852675 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.229929815 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.231527249 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.230175595 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.231695805 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.230733905 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.230242547 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.231285071 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.230165862 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231651014 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.230172537 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231224021 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.232912445 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.232845778 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.23086927 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.231704306 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.231385127 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.232887267 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.231733705 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231661869 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.231729495 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.232656188 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.232651687 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.231783548 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.231536197 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.23340403 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.230531163 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.233605073 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.232597574 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.233450737 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.232898652 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.231985247 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.233374003 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.235090612 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.23978282 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.232311099 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.23303922 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.231395875 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.234755734 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.233602283 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233579932 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.23312579 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.233055786 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.233646179 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.234187561 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.233730597 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.233854817 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.234331992 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.234115729 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.234765685 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.234738951 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.23351285 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.233313406 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.234992263 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.236387005 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.236245319 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.234567621 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.235150182 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.237254751 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.233897926 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.234554077 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.23522073 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.237343805 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.234773633 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.235977676 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.234563591 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.237504086 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.235804391 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.238109409 seconds)
  done (took 89.953096083 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.235730869 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.23329103 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.233779655 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232731974 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234696055 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.237016844 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.233864338 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238733818 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232102105 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.23755824 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237338232 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234516207 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232963772 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.237060318 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237064392 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.233584141 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.236597435 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235679992 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.237298239 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.236834417 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236546167 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.235580436 seconds)
  done (took 28.334607637 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236561714 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.23855078 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.233582842 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23716654 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.235458207 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.238154218 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.236716277 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.241136239 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239122132 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234605191 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235662555 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238991281 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23423317 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234690256 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232975438 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235299142 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239342929 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.237493593 seconds)
  done (took 23.414598286 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.234424671 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.236826071 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.237390962 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.236800378 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.236674373 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.240228928 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236098684 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23922549 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.238901228 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.23501741 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.239068354 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236519138 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.240405072 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236270114 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239560595 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.2386071 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.238485201 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236004988 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239552291 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236537152 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.238969747 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237915684 seconds)
  done (took 28.382448695 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239859689 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.23942073 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.237601425 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.236781242 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.237569452 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.239163187 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.23982624 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.236605162 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.244065148 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.241144345 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237939661 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.237545425 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.240200771 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.238278823 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.237698249 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2379067 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.242091761 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.239820997 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240535197 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.237890937 seconds)
  done (took 25.937262606 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.242920005 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242709308 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.241672215 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242641506 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242886238 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.241675394 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242355942 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.243904334 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243462817 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245614244 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240442887 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.243259739 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242404733 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242482997 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.242727142 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243787788 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243127192 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242948976 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.243634164 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244055643 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.243445728 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24413715 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243709755 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.244157509 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242619897 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244969828 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244373011 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243012843 seconds)
  done (took 35.967237559 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243884168 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.243701122 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.239901334 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.242664223 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.240135398 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.24041692 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.240973967 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.242339122 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246679577 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.241497171 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.244056572 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.244057432 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244061791 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.243410984 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245269857 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.245698248 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244333772 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.242197452 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243266825 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241322235 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.245822703 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245172132 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.244584371 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.242943948 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241565972 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.246371064 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243607949 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244175984 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246055743 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242647094 seconds)
  done (took 38.462751957 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.26343123 seconds)
    (2/2) benchmarking "in"...
    done (took 1.262107874 seconds)
  done (took 3.6858706 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.244007203 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246200682 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.246433655 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.243019449 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.244231749 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.247498855 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245184852 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242540517 seconds)
  done (took 11.119447516 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.245282069 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.245944885 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.245267451 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.248600451 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.246765821 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.246281767 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252926797 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.265861018 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.248721246 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.247056431 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.253508574 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.254010381 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.251673939 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246370428 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.245928493 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249057536 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.248029613 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.24698217 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.248663093 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.248028083 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247772477 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249961769 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249940257 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.246035832 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.248707524 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.259302498 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.271937856 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.249906676 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246529034 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.251069183 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.246577832 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.244380258 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.245822345 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.24589689 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.248938438 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.246865783 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256495357 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26739492 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.254484792 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266116988 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247640328 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.244730305 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.248405743 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.248505801 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25041747 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.248062059 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.250491604 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.247585656 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.248513088 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.251566989 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.256127978 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248795388 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.248508511 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251187588 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.250708617 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256260169 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.266981447 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.252337786 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.258281258 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.259382844 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.281309113 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.277149477 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251224532 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.249864897 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25879937 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.275260631 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258569969 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.266310128 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.248908445 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.251340484 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.256559503 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283672543 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.278069568 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.249367924 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250495216 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.249810971 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250490489 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251435328 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258994123 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.273031213 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.253536183 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253209658 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261113219 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275777054 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.251337433 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.251749033 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.250833371 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.251397042 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.25219043 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262446166 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.269739847 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.252201549 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.251611125 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.252100929 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.253231022 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.252219554 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.253193064 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254408269 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.249786103 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.251919707 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250863443 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254536738 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.260636707 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250933281 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252057328 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.259432923 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.272750713 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25298126 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.258498256 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.252220307 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253163243 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.253926579 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.258463744 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.249576013 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256484534 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.262363267 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.254261697 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.255741312 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.254035258 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.25424174 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263614344 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.280188735 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.254936635 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.254070562 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.258125127 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.266308409 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254466253 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.255422397 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.254150206 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.253735476 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.250393094 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.254765541 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.254737924 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.253914238 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254438051 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255447307 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.251577278 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.254697889 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.256393805 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.256413296 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.256149223 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.255774659 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.254716701 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.258141988 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.25475119 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.257284055 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.260840951 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.274733506 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.256645786 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.25565283 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.254457712 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254334332 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.25609941 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.256903941 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.257929239 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257062428 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.257750161 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.256658827 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256867773 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.256145115 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255304266 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.257998523 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26170693 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.259014438 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25861466 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.256628613 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.252707351 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.25602887 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.259165268 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.257753886 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.258080404 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.256794059 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.260689336 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.266979704 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.255463897 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.255796877 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.260092481 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254072442 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257593247 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255301922 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.26037772 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.266694755 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.254938567 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.262469053 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.276933253 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256699586 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.259994807 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.257388483 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.257214465 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255574183 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.259632343 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.265353718 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27166552 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283618208 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.259431133 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.260384487 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.258666402 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.261412815 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.261125408 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.258251881 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.258250518 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257833866 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25809117 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257458477 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.260946363 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.260412257 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.256736895 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.25933776 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.258459127 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.256929173 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258925902 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.260353401 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259650124 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.255785815 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259632957 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258628645 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.259046338 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.261064914 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.257500798 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.260013795 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.258643418 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.259423923 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.265933997 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.25715826 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260935044 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263172573 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.259297065 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.256652199 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.257389117 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25898549 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.258362317 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265095775 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.277113138 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.263046419 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264676228 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.275281754 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.254380764 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.259691952 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.258350562 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.255174201 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.260181384 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.267715741 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.260451967 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.257321608 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.258239902 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258592868 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260592686 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.266077045 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.272255039 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.25915919 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.259454138 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.260385631 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.257998527 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.257962553 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.260531963 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.260364768 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260305972 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260674228 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.258847244 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261010103 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.260794933 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.258299438 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.260547952 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262038211 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.267092498 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.264169102 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.260616345 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.261635316 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.26115131 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.263565456 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.260770386 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.25941714 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.258759961 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270754951 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.281877169 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267345107 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.27816836 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.26015331 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266340346 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.27940503 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.262124489 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26031811 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261231711 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.260139392 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.261680792 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.258909777 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259613348 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.260404785 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262212676 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.261384432 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.265608727 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.261688743 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.259648388 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.260334938 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.260433345 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.262711455 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.260076949 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.263103092 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.262633781 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263681951 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.260620801 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.261080395 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267306278 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279188265 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.262506455 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.260425868 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.262272322 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.262059245 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.262517655 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.262641391 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.263328524 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.271032371 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.260799373 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.272707249 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.26604676 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271101025 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.262917171 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.265112494 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.269667822 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.259306063 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.262013815 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.262862474 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.263668646 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269194574 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.281773137 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.262284955 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.266933138 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264456648 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.26225041 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.264368257 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.26235141 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264522603 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.261963182 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272096093 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.283464194 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.268014948 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266451346 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.26276252 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.265640908 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.263550663 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.262445035 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267681857 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.265442751 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.264937837 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.263599421 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.265191636 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.264673272 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.266828335 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.264995338 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.262783169 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.265215785 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271451137 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.28932544 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266634948 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.263683147 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.272923686 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.283960635 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269231821 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.282691935 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.264422922 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.265670439 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.265714631 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.265567768 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.263624924 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.266166073 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.264802035 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.263939585 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.266646084 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.265810268 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.265580115 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.264103777 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.266134732 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.262544706 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272894676 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29121055 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.264380355 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269587195 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.264223546 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.266625707 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.267584746 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.264555299 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.261057244 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.267420935 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277899777 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273781406 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.265247764 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.263143796 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264313201 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266955577 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.264189909 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.265599476 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.265457858 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.264770859 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.267172848 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.265740552 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268685301 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.265503797 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.263884204 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265357304 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.267136585 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.275142972 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.282200992 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.266155782 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264465491 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.265791833 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.265815805 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.266535192 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.267583248 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265523006 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264586851 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.266813313 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272644998 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.272864476 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.270733038 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.265586416 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.266520481 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.268395976 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.267400671 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264552955 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.265890332 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267671404 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.266249253 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.266720132 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.266938472 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.265513597 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.266719637 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.266754872 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266868692 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269504406 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.274825566 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268345043 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.265172112 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267710358 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266942813 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.268756658 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.269104414 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.276128262 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290799248 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.277357429 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.27778626 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.272723677 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.267108342 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270377279 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.274270549 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.267114333 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.269685233 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.268936606 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.270751825 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.270667822 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.272931537 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269433545 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.276303405 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.287935554 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.266447443 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277088918 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.288055177 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268395806 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.270178572 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.270723421 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.267299953 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.265636902 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267578588 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.267037241 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276368307 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.288888335 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270233378 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270800821 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.268957745 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.271437019 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272347304 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26883868 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.272311867 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.269314147 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.271889637 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270996962 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271359529 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.268190117 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.272316726 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.270109772 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.272275922 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.278149397 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.268958199 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272240704 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270045997 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.27069139 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271649014 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271381588 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.267961579 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.267959773 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.272925784 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273564074 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.271145052 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.274334326 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.271320607 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.271521821 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.272996115 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271922403 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273182041 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.281382503 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.277197787 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.267052213 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.27215128 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.272636577 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.27470951 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273070007 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.272249733 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272197786 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.274250951 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.27355042 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271600983 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272309475 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.27412763 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288528573 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.291383478 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271540387 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.273575548 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276528619 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.273968466 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.270579488 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.273765259 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.274588535 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.27528804 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.280863466 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.273290105 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280697727 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292857989 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.27565739 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.277423988 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.276087524 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.281632363 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.275736222 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274312776 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.274539951 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.278871618 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.290711008 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276212736 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281994547 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.303265759 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.292523012 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.273394051 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.273964924 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273166768 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.274048423 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.277741566 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275259769 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.272239515 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276224974 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.275253949 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.274073807 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281393164 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.275895335 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.276114334 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.275140415 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.274611206 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.279153829 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.275107474 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.275344675 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275128391 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.275282069 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.275539503 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.276560975 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.276388423 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287774896 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.303291604 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.276690436 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.276271433 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.27277688 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.280092826 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.27736498 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287422124 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.282711043 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275256305 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.276170439 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.276703772 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274745253 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.277153071 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.277188326 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.275275579 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276301102 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.274641177 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.288966793 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.299787081 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281700274 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.277688708 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277803589 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.278001882 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277903552 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277454942 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276482797 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.280407257 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.279985687 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282039364 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.279186934 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.276753568 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.28096293 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.285871946 seconds)
  done (took 755.002614228 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274034686 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275502585 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275666087 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276324915 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275189252 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276191417 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27776514 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274471734 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276095044 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275648626 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278403427 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279582408 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276290288 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276057793 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279056938 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277816988 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276080049 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276815569 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276328952 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276613038 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275910638 seconds)
  done (took 27.994512679 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.280193985 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.277315922 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.279443241 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2806186 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277985535 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.28111166 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277647262 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27958387 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279942867 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276751149 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.280293992 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280506888 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.27748653 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.278056363 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278859932 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281952487 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.280381503 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277778075 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.281986445 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278619656 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28087504 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.2784052 seconds)
  done (took 29.336936602 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.282075397 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.282823298 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.281262145 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.279572458 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.283729687 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.276645771 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.281858622 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.281236599 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.283968146 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.284169237 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.281001127 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.284083835 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.290938131 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.288376091 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.283009855 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.279987067 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.427612624 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.282183159 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.282644987 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.283571556 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.279558719 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.291329016 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.30159823 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.280380663 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.282663679 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.282762902 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.283756464 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.282294399 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.284910736 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.283208283 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.285650272 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.283444201 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.283203672 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.285212317 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.280581106 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.283925182 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.288384648 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.284054381 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.279373141 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.284458022 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.294436572 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.303877178 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.284252368 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.291525029 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.305178658 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.282700093 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.28891733 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.292208559 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.281406611 seconds)
  done (took 64.308163774 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.28467684 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.284683101 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.280220779 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285351961 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.283144439 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.284562053 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.283897343 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284204668 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.280420981 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.282983963 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.28434201 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.283419737 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282600958 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.286944214 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.285527654 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283391032 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.283989172 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282757889 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.283417515 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.284920901 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.285785952 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.285694287 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.2883293 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.286424251 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289591387 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.284853568 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.285247714 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.287397766 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.285662357 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.284746446 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.28649536 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286696582 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.28799789 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.286349102 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.285326978 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.285511007 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.287939638 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.287054401 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28856568 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.284869932 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.289933657 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287429588 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.28789041 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.286111878 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284197772 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.285984291 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285175648 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.287087418 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.286299149 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.28764665 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.289217686 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.285252469 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287588058 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.285559907 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.288758215 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.290718878 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.286546028 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.285566853 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.28950672 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.286031798 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.286082626 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288436817 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.286999398 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287698276 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.289332727 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.285913861 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.286490671 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.290435022 seconds)
  done (took 88.647389475 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28790775 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.290096193 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289978223 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288873288 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289833582 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.28939641 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290347601 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.289328712 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289791012 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289289816 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288260926 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286853878 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.287048987 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.289252896 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287602354 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286905787 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.285542788 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288285371 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287573387 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288922138 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.288867691 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289190017 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.290001839 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291905569 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.291660724 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291366902 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288963217 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288896649 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290338373 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.290498067 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292525654 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.288629058 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288107703 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289885335 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.291833043 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.289660702 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288858115 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290397016 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.289671288 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.288100925 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290929719 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289860615 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291896596 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.290822545 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291005931 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289407459 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289891831 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.291610575 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292506989 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291103101 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.290961416 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291533806 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290285965 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291752733 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289138492 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.28938441 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291451654 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289861084 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290838746 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.292631495 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291152444 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.292028801 seconds)
  done (took 81.173194934 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293596435 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293427761 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.291206345 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.28914157 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.293751413 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.290880249 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2931739 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.292912895 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.295345496 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.293392706 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292870699 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291567236 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291135116 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2943689 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.290558559 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290766908 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292666303 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.290295047 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295795062 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292332745 seconds)
  done (took 27.054319998 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.293718924 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294948035 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.290790151 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291138856 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.292982808 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291053074 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.293369627 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294499545 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290913555 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295479067 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293774428 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294625944 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292003972 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29344031 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294370247 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293080912 seconds)
  done (took 21.892594979 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.291289995 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.296202868 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296105054 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.295014191 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.291245815 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.292514806 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.294838878 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.291022053 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.290718537 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.294246013 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.295658363 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.294939519 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.296278798 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.295133914 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.29406185 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.296204957 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.294351718 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.293061481 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.295896441 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.295629375 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.29348607 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.295263379 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.294825934 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.296493277 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.294467272 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.2937933 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.29575922 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.294384428 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.292981226 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.296252711 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.2949528 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.295286278 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.294760855 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.293539981 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.297613654 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.295734365 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.297569677 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.296254786 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.29537315 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.298126588 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.297110845 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.294300014 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.297182576 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.298316069 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296257802 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.299093684 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.295417918 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.296209304 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.293365517 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.296636206 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.298914465 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.300601921 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.298206572 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.298769019 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.300029811 seconds)
  done (took 72.458964452 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299577761 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298119819 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.296902268 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.29902043 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297312757 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.296373511 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.29815019 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296408937 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296185889 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.299625758 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29717702 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298926019 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296179982 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297905843 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296819817 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300377499 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.296192888 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.296728167 seconds)
  done (took 24.565487157 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.298728749 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298447023 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.300694257 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.297616934 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.29449656 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.300361526 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296711935 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.299829794 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301065707 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.298929603 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29811917 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.300294354 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301277468 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.302143499 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.298966382 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298381515 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.301116616 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300986432 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.298410307 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.298617823 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.299075684 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30048063 seconds)
  done (took 29.792125734 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.299037717 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.299408098 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.299854712 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.316313683 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.317295036 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.323015825 seconds)
  done (took 9.061143507 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305132139 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300436785 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298047965 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300924626 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300262726 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298726975 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297093485 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297519809 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302328619 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298964024 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299445075 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297089404 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300510062 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296768025 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301348968 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300482018 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299268793 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298702962 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297621145 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303431497 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298440701 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30040422 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298522047 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299204777 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299231636 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301272012 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304489288 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299965604 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302081677 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30377343 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305230536 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29993385 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302112594 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302248684 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303706039 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303421696 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300683875 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304028784 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303217037 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301815659 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302706454 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304597094 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302177537 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300725322 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302356417 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301991984 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301986219 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302611264 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301928646 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305311345 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303380644 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301279148 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305040482 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305615116 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306812416 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304770065 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30349798 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300376125 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304266504 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306226662 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302439324 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305548758 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303671392 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304404732 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306453935 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304381076 seconds)
  done (took 87.158649906 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302669097 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30370646 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302299695 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30536973 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303597269 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302549738 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304133856 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30336349 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302212891 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302065187 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306994522 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303982298 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303515298 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304571912 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303094818 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302063003 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302270142 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304586682 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303492285 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307907219 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30453604 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304824155 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305166571 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304794559 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306214383 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308382573 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306647388 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303935332 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306488622 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305394516 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30557682 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301979288 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302985956 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303848393 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302855901 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303751555 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302590536 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30362413 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305609163 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307412964 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303764475 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306827711 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306552575 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306487861 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306010952 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306425763 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304881444 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307410863 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306548767 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308267615 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30717235 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306981153 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306973291 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305915118 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308770012 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306225437 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306740182 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307583971 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306462297 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31119307 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3063259 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306381952 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310649596 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307520035 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308147779 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30841068 seconds)
  done (took 87.372197985 seconds)
done (took 1760.790863393 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.312679368 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.391477295 seconds)
  done (took 13.919458474 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.473138081 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.422342916 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.307426348 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.335463541 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.30164746 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.327869484 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.29643415 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.302200858 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.306760038 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.306145575 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.308349401 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.496230173 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.363454805 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.301368003 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.307307204 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.403932311 seconds)
  done (took 42.78996461 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.335287109 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.313781029 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.423666446 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.330934054 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.335753948 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.491966848 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.363619513 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.312685771 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.47989441 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.35198441 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.890862368 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.338939163 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.314792974 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.430441732 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.329163968 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.491132944 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.5550741 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.846093973 seconds)
  done (took 30.152181648 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.753078493 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.341295152 seconds)
  done (took 9.311566482 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.317063208 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.354811977 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.348127829 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.331974084 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.328799673 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.378992179 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.311335991 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.364617462 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.352002205 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.326422576 seconds)
  done (took 64.645902655 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.332914219 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.31382707 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.312691305 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.311804944 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.30631126 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.305010677 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.311641725 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.306181112 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.872275586 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.434421769 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.335605161 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.323816618 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.330540197 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.314776014 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.312902623 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.347334067 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.444664859 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.330735165 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.310146352 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.321601567 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.316453375 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.427295818 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.35493665 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.310044003 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.438375949 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.906251834 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.315550528 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.322133537 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.424063546 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.330585036 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.313045182 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.313624175 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.317930105 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.897193183 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.830592356 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.323173165 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.347068529 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.322108637 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.311829026 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.458907254 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.336027726 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.322584 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.309907654 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.805497415 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.468623111 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.427206537 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.554866826 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.318094869 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.31961874 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.378502628 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.315474344 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.318027454 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.344844044 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.094671774 seconds)
  done (took 110.296931642 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.344834759 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.796673111 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.478046118 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.335087004 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.142786835 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.056782834 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.322766142 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.595234277 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.349465185 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.308278211 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.594402422 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.813618622 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.330705906 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.315434479 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.500792388 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.329285994 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.310111831 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.152846417 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.324508072 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.313149855 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735250037 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32644013 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.309376099 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.476620033 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.346082073 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.782233395 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.796851075 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.767508919 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.330381032 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.304260338 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.776265821 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.324221177 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.389789747 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.308368583 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.58848795 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.676360252 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.670725719 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.331016383 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.318211522 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.306076834 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.326306217 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.777542262 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.677909835 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.327166187 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.312429407 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.800883554 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.326825257 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.314596971 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.318336529 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509464893 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.148254068 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.313947349 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.784457075 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.314378696 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.652783047 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.342150038 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.365915888 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810771543 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.340735517 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.416937418 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.341569327 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.312430873 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.315367029 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315397507 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.312354227 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.660855342 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.332013242 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.316507724 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.671271728 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.790683117 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.328366579 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.836983435 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.259297985 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.321145237 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.397921124 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.311558482 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.936673802 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.824542793 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.337742582 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.307187962 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.652874749 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.330830028 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.588476938 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.329541294 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.333758195 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.748347491 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.338636874 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.33442364 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.31285227 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.315655424 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.986750883 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.31664472 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.595568125 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.344624971 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.314656515 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.314352815 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.352272535 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.313635066 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.332815156 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.314318823 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.839185898 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.331581013 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.444742212 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333939114 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314273873 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.314756558 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.3155176 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.314826185 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.534221771 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.894924774 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.314437303 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.317862862 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.310416646 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.316635299 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.450809075 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.320335401 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.627959274 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.332788874 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315134985 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.316300991 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.097718323 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.332179443 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309158756 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.315731857 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.145680724 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.544182039 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.332296949 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.335429792 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.316947285 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.334449781 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.702824982 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31694606 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.349865076 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.317076107 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.014218439 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.36813872 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.336726189 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.819164087 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.321351765 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.298653313 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.333046318 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318187597 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.631728626 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.59488545 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.822069414 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.315717454 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.335608993 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.027441404 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.37209298 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462942471 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334859351 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.38629793 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517982117 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.385746123 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.31998643 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.882574707 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.317219952 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52995953 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.31865401 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.66160198 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.810330803 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.331268721 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.324059319 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.023304648 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.986737241 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.93676166 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.322149979 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.593701558 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.292510329 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.770785122 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.320388922 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.319486687 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.798437594 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.322442688 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.314592359 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.320977208 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.320882093 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.462662095 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.494861766 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.606918098 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.326902126 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.787702508 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.354153507 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314078036 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.341654911 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.319508523 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.671398504 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.383683573 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.324974519 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.358003859 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.323366843 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.32175063 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.801687863 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.324255607 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.322252623 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478778309 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.94937651 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.339071918 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.322310279 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.060373723 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.789873097 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832873961 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.355449829 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.638287438 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.345424727 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.362199404 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.088854214 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.363535933 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.839794035 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.337166678 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.322542336 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.93697417 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.339816595 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.682323982 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.323865102 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.321231002 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875513136 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.340822949 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.32869463 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.718967074 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.324502924 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.587841069 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.325323343 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.343758978 seconds)
  done (took 1108.558714653 seconds)
done (took 1380.889925968 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.320643799 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.317851582 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.307907882 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.32420924 seconds)
  done (took 26.508912454 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.331551431 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.326964573 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.330657701 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.32871245 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.330748998 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.328028017 seconds)
  done (took 9.21353332 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.350387014 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.315894349 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.32422037 seconds)
  done (took 19.226763011 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.545619974 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.594680148 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.690010398 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.524122512 seconds)
  done (took 10.592507903 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.330441407 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.330395461 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.33215963 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.331978935 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.330946759 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.333620844 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.331310175 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.333925102 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.331884626 seconds)
  done (took 13.222544899 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.253039184 seconds)
done (took 85.250762973 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.054400578 seconds)
    (2/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.43198219 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.679018217 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.161930208 seconds)
    (5/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.059682386 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.599625219 seconds)
    (7/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.684327642 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.271091936 seconds)
    (9/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.315445748 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.320596585 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.365348933 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.181723413 seconds)
    (13/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.395049798 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.338492671 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.351422539 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.808063503 seconds)
    (17/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.737328258 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.850340235 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.365022573 seconds)
    (20/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.352198276 seconds)
    (21/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.424651663 seconds)
    (22/309) benchmarking ("sort", Int8, false)...
    done (took 4.383286474 seconds)
    (23/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.509453177 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.821905476 seconds)
    (25/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.500304576 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.311305507 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.965284974 seconds)
    (28/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.623738694 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.429400215 seconds)
    (30/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.371563569 seconds)
    (31/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.219946117 seconds)
    (32/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.408427309 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.268563749 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.580103683 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.367575535 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.349854472 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.799999224 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.219434123 seconds)
    (39/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.063983574 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.456459353 seconds)
    (41/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.700726353 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.451298409 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.411514004 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.33222198 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.606759226 seconds)
    (46/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.19659626 seconds)
    (47/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.827907994 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.353613689 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.328960013 seconds)
    (50/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.73233266 seconds)
    (51/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.305353674 seconds)
    (52/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.428325136 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.326774545 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.402133524 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.326695838 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.94455775 seconds)
    (57/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.346189317 seconds)
    (58/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.614918926 seconds)
    (59/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.616609642 seconds)
    (60/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.375568848 seconds)
    (61/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.50804311 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.21551236 seconds)
    (63/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.100244672 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.437866529 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.305804654 seconds)
    (66/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.441883966 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.219254075 seconds)
    (68/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.309191955 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.447647057 seconds)
    (70/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.353569313 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.468233539 seconds)
    (72/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.562841926 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.854587562 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.343482206 seconds)
    (75/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.389447798 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.523631207 seconds)
    (77/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.327557547 seconds)
    (78/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.236711272 seconds)
    (79/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.164812499 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.133350308 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.343085931 seconds)
    (82/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.867527346 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.309222616 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.327656151 seconds)
    (85/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.693431528 seconds)
    (86/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.659265355 seconds)
    (87/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.356399006 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.980757967 seconds)
    (89/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.645801443 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.436732135 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.83121835 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.331810145 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.720779603 seconds)
    (94/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.974634313 seconds)
    (95/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.521536762 seconds)
    (96/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.410996772 seconds)
    (97/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.724482123 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.741003358 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.193655204 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.412933133 seconds)
    (101/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.640158731 seconds)
    (102/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.346506876 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.328491984 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.52897995 seconds)
    (105/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.330604281 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.310872179 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.275659538 seconds)
    (108/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.33491249 seconds)
    (109/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.633740344 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.333462282 seconds)
    (111/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.798209813 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.061310014 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.193440766 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.352246309 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.326724646 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.356251272 seconds)
    (117/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.347230069 seconds)
    (118/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.334819693 seconds)
    (119/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.832475483 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 1.866121533 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.371961474 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.170357773 seconds)
    (123/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.333572088 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.645699222 seconds)
    (125/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.338593947 seconds)
    (126/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.357080993 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.748892086 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.120769096 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.592569572 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.662280197 seconds)
    (131/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.49099072 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.704388908 seconds)
    (133/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.42758016 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.793667443 seconds)
    (135/309) benchmarking ("sort", Float64, false)...
    done (took 5.662334447 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.438515989 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.116922133 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.35103993 seconds)
    (139/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.416515787 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.416758021 seconds)
    (141/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.779569457 seconds)
    (142/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.23491268 seconds)
    (143/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.935579647 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.188076234 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.116142638 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.37823746 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.360162632 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.430663117 seconds)
    (149/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.662454154 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.4026437 seconds)
    (151/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.20495787 seconds)
    (152/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.440305237 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.724491968 seconds)
    (154/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.000284139 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.855311534 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.356866483 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.347948044 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.433884888 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.459092516 seconds)
    (160/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.65402387 seconds)
    (161/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.358272919 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.346997214 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.313697163 seconds)
    (164/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.690588045 seconds)
    (165/309) benchmarking ("sort", Float32, false)...
    done (took 5.349770475 seconds)
    (166/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.359926491 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.275875236 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.312983519 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.255012854 seconds)
    (170/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.542136858 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.39057379 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.930766156 seconds)
    (173/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.706925239 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.743653372 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.992544709 seconds)
    (176/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.323889725 seconds)
    (177/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.82233416 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.336747323 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.333156923 seconds)
    (180/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.370702256 seconds)
    (181/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.469361121 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.360615783 seconds)
    (183/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.876006775 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.389153558 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.332662133 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.49232358 seconds)
    (187/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.941913052 seconds)
    (188/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.748518323 seconds)
    (189/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.73884051 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.569706728 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.377465819 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.345638318 seconds)
    (193/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.95224579 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.365461479 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.692783413 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.336187236 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.738883331 seconds)
    (198/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.94670854 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.828951676 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.228998456 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.339878824 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.38996436 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.336808934 seconds)
    (204/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.813153225 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.998623724 seconds)
    (206/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.912150859 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.74002972 seconds)
    (208/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.422813442 seconds)
    (209/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.42361292 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.752430171 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.770275581 seconds)
    (212/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.975740111 seconds)
    (213/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.843338852 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.5703508 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.979188015 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.441124652 seconds)
    (217/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.550136405 seconds)
    (218/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.334287682 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.353155189 seconds)
    (220/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.798572309 seconds)
    (221/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.948482304 seconds)
    (222/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.318430856 seconds)
    (223/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.362212525 seconds)
    (224/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.349963806 seconds)
    (225/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.713135306 seconds)
    (226/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.670715105 seconds)
    (227/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.355265602 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.362061059 seconds)
    (229/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.473229131 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.420040285 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.380263523 seconds)
    (232/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.463532322 seconds)
    (233/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.972443288 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.620226874 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.360192473 seconds)
    (236/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.394197848 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.332775855 seconds)
    (238/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.584804269 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.568380032 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.366052632 seconds)
    (241/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.366619028 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.983123444 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.266840872 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.063702857 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.462887446 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.177892678 seconds)
    (247/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.635703916 seconds)
    (248/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.385033232 seconds)
    (249/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.747904877 seconds)
    (250/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.355393299 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.556482793 seconds)
    (252/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.679610426 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.339610317 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.330421458 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.420096611 seconds)
    (256/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.427481395 seconds)
    (257/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.365768999 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.339413357 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.384466835 seconds)
    (260/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.338883974 seconds)
    (261/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.960327474 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.367815646 seconds)
    (263/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.366755693 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.723372955 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.406536295 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.355500296 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.116608017 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.40146758 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.341146425 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.700899583 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.764827082 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.343396327 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.682104177 seconds)
    (274/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.956335999 seconds)
    (275/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.396505833 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.773068008 seconds)
    (277/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.935969136 seconds)
    (278/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.321933464 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.155677768 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.425963112 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.345122513 seconds)
    (282/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.644545667 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.441374957 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.109268053 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.450155785 seconds)
    (286/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.406272567 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.407549002 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.173693201 seconds)
    (289/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.154911303 seconds)
    (290/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.124571826 seconds)
    (291/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.333614965 seconds)
    (292/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.400842002 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.439769338 seconds)
    (294/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.371213283 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.385535436 seconds)
    (296/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.5280068 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.389846005 seconds)
    (298/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.719005575 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.93139259 seconds)
    (300/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.924332248 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.808399655 seconds)
    (302/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.360359219 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.385707199 seconds)
    (304/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.468470007 seconds)
    (305/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.754863515 seconds)
    (306/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.429139341 seconds)
    (307/309) benchmarking ("sort", BigInt, false)...
    done (took 6.343068116 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.456860598 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.581798148 seconds)
  done (took 926.419487139 seconds)
done (took 927.65605289 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.376220103 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374018948 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.356059524 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.377377714 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.468082088 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.380592427 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.365306263 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.357905712 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.403392977 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.404413 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.352189082 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.384335455 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.356837464 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.355773278 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.353648554 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370148411 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.427698947 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.356441369 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.371732167 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.363347745 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.373478894 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.355345405 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.404156174 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.385028767 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.360009515 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.360683166 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.362493109 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.375022771 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.470666908 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.36037049 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.359998902 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.370396363 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.428397007 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.355207767 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.353103857 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.377487365 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.36765684 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.364913997 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.361508838 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.391669769 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.839825103 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.373131172 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.358241758 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.359983443 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.358550104 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.361879233 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.358866814 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.361667522 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375204767 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3738618 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.85172083 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.389411569 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.36181798 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.359173168 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.368414091 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.358971172 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.362185167 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378810557 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.379394235 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376158423 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.420341471 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.366361246 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.361044122 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.377533831 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.366120164 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.894787505 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.372281979 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.362713479 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.836808819 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.382705767 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.894601696 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.382870883 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.361807999 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.376267232 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.387749769 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.431135127 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.355531651 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.36008788 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.369797457 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.360733639 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.371606339 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375894018 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.364045472 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.363776395 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375826257 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.389100595 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.370818544 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.358059557 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.370378795 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.37939073 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.365521782 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.37084381 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.365915779 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.356596529 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.371236146 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.36366871 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.368253702 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.365099163 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.365934574 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37127874 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.840323846 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396228804 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.358443609 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.358310968 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.361518293 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.374418294 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.837252299 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.377616669 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.386186739 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.410602967 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.363862538 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.424567575 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.366691776 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383017819 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.372542643 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.365494735 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.358748525 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.425158539 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.860322957 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.393022316 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.366939212 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.362125669 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381544978 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.365333873 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.360437845 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.437025688 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.366458535 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378772699 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.48649961 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.373680132 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.395482791 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.36330287 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.365918407 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.39164215 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383140652 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.394955258 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.3654883 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383392592 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.380091652 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.361105664 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.376956461 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.376055748 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.361853597 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.370542546 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.357624242 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.390400418 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377866952 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380336223 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.385348309 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.48443984 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.361166317 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.426737699 seconds)
done (took 230.38980159 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.424525576 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.358424498 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.479367148 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.361365014 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.461549971 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.462724031 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.36034553 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.359496097 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.35851261 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.743382311 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.361522699 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.360497919 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.359420596 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.359395549 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.442915495 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.363782222 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.358268448 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.704713779 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.361894693 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.431907737 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.361747083 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.35970134 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.362504834 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.744504144 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.359588057 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.357785241 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.433005341 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.360901596 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.708422422 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.358239008 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.362838179 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.709276045 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.450695436 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.382227364 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.370836929 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.372007782 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.463815688 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.380236439 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.444391302 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.442869928 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.490739954 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.403356276 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.3602628 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.359419537 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.365579409 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.362924005 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.362273703 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.389135228 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.355899249 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.361152693 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.702044327 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.371757314 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.362131046 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.360269928 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.361383387 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.390890241 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.362434384 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.363093486 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.454138614 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.365312711 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.425645203 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.744676596 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.746446223 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.365907685 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.363741249 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.364997899 seconds)
  done (took 150.44144989 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.432259108 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.434394756 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.480489208 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.382957764 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.41600812 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.4829911 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.381221499 seconds)
  done (took 11.277647749 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.37303786 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364974198 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.415089841 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.413876948 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.365764297 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.514315778 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3656268 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.377053653 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.364768619 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.418624806 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.366695043 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368076976 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.37244741 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.359070622 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.416093712 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.37881512 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.481179895 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.366027226 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.367756738 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.517205652 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364532711 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.374013166 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.419623557 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.37912107 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.367610795 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.371988692 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.93677077 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366969608 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368584386 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.372030967 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366467309 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.406014832 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368751139 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.365131788 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364095055 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.4842886 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.36714047 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364047791 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.367946392 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.36656295 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.368033895 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.369029539 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.369377102 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.36572475 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.368069094 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.390764701 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.366911827 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.369507795 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.370818684 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.368745066 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.419310617 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.36971696 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.366337093 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.367220458 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.423532947 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377675707 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.36928895 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.365766994 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.370979876 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.367782249 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.519973342 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.417072081 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.368811545 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.416234728 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.371500456 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371063111 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.370544677 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.371236145 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.424314837 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.369850914 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.417344446 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.366498089 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.523795141 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393507165 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370020611 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.375196628 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.373730319 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369525883 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.370742391 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.376050924 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.369082113 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.37096617 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.37763051 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368888781 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36775988 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.475844131 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.478049162 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.368945925 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383849593 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.376331521 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.369013284 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.425356679 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.370140143 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.369900915 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.424956238 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.486075398 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.425552965 seconds)
  done (took 156.632476599 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.376629974 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.381893545 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.372414958 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.385795568 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.372545532 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.373332471 seconds)
  done (took 9.538039057 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.37456043 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.375478864 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.371238904 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.37179657 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.372459793 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.375031455 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.374076555 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373026089 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.378107528 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.375460761 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.374644788 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.37457916 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.374410191 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.373795979 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.372201871 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.37232664 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.375073268 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.373128675 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.372507524 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374439723 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.470154411 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.373943818 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373776347 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.375161729 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.379294695 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.374024657 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.380234488 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.375440593 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.377649519 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379535064 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.393217593 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.37804348 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.374896825 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.381105845 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.3773945 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.376067166 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378231587 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.375406279 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371864395 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.375255816 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.375545519 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375150351 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.375152417 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.377562853 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.376213111 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.380142188 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.381475549 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383980676 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.37612826 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.377638094 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.379696904 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.37387026 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.376806844 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.377714045 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.379149911 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396222151 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.381999893 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.376589307 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.374987118 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.375915414 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.381468906 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.378379737 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.377436474 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.381698096 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.38693946 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.379541494 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.378762395 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.382058032 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378561607 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.37688213 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.378872294 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.374203419 seconds)
  done (took 101.524240979 seconds)
done (took 430.675464275 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.850500898 seconds)
  done (took 8.129689093 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.48170881 seconds)
  done (took 7.765106374 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.670670349 seconds)
  done (took 22.954892425 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.424100356 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.484178861 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.838278495 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.382810677 seconds)
  done (took 27.412367866 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.926373821 seconds)
  done (took 8.208885817 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.370192585 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.362092381 seconds)
  done (took 14.014194886 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.411266488 seconds)
  done (took 7.691202076 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.100904061 seconds)
  done (took 8.387021014 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.369554385 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.38525291 seconds)
  done (took 14.308265311 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.366553493 seconds)
  done (took 7.648729082 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.256953322 seconds)
  done (took 8.540334279 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.37188508 seconds)
  done (took 7.656924169 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.399827446 seconds)
  done (took 7.681620291 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.618657686 seconds)
  done (took 9.900738402 seconds)
done (took 161.578232601 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.371081007 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.367034128 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.365655168 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.365664687 seconds)
  done (took 26.75189976 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.429963987 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.411164317 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.414879944 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.424058651 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.417300668 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.415484769 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.4067648 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.404547463 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.424410406 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.418193825 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.41471246 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.414552646 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.41445136 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.405644866 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.415095714 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.414597147 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.424412498 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.41543856 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.406383483 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.417046068 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.38181801 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.423710245 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.417790712 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.382052857 seconds)
  done (took 35.19829376 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.903941117 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.454426944 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.533523579 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.432896269 seconds)
  done (took 7.609216041 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.434124683 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.434766944 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.445732864 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.484529382 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.51090643 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.445611791 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.404257827 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.404255469 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.38835833 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.432881501 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.50939313 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.449292013 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.519388795 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.380785985 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.582581 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.382393753 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.381102581 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.433455203 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.489625441 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.499703421 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.380131875 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.432843138 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.43758003 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.451226798 seconds)
  done (took 35.998391549 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.395426045 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.388623926 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.383245292 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.383426198 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.402855215 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.381204092 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.382071104 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.38282834 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.381995254 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.386470213 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.380535842 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.39266547 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.381275544 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.381179703 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.388296905 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.38618496 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.389191469 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.380046606 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.382542876 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.385203095 seconds)
  done (took 29.001914514 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.37555568 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.230018286 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.727481145 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.632995603 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.375171378 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.369985305 seconds)
  done (took 27.996397539 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.45198407 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.608634942 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.382413584 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.756954378 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.839748399 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.394969252 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.384894809 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.636485994 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.958235117 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.945130686 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.441858696 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.451773701 seconds)
  done (took 20.53939359 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.38882055 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.379704536 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.389926411 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.39204873 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.440006526 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.403229498 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.390096089 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.378413866 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.441635156 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.455907843 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.402495652 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.438708579 seconds)
  done (took 38.187878631 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468775138 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.424086922 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.414909364 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.13960145 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.099931934 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584719693 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.138020818 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.80812452 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.377990635 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656349436 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380153683 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469232741 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633798838 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385178255 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382367703 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.394926914 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624477792 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894011719 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381872959 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.420440777 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408762381 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385773232 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.516574449 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.415051584 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591026058 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.357349423 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.640706606 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.159495272 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675616298 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394174676 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393357209 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381260526 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656551945 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055754419 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490090282 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393689775 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.081955351 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.929888309 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.380406473 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.507654245 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385652087 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385981497 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393253924 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382185978 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.317131994 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381758919 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828942611 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.381227544 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.096494733 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383735266 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396350689 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479788031 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.388520555 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.953866352 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413274113 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.381608647 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.380409442 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389212872 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951591137 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.92957545 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389005071 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.318080545 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.767750775 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.511636047 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041618778 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.499411069 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.39022375 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388111673 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317917585 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.511286384 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405159927 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531829256 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.400883687 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036009345 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113817415 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405570742 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.33412617 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947770092 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378686416 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.321782106 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611643582 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.160401826 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319506166 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.332339522 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320754484 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130534448 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388419415 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.804291975 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387261862 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.815597368 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.390140783 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405666996 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409506437 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.608048156 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.266435852 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387355009 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.389153082 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515273141 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401214956 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.823819353 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315311266 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.384434826 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642976213 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.597912622 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388878734 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.416426785 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609394567 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383835631 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.403265839 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.393190734 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.39593846 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.975696775 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415398004 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.934950762 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4053781 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.164835454 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15315979 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390644775 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.492259583 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.387866237 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646448294 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.179128661 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285262227 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45559944 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393495827 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38802606 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.54957337 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.238265743 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.546114776 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.384600599 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397631883 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.397950873 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.388194616 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339044435 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.379241621 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387736389 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.168197023 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614534273 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391136553 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664587758 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321976947 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536969816 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.392196548 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.605773192 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.642353902 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.40424233 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650661336 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401269453 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404776447 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40183156 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405793187 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487001476 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410463066 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.403078747 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64625552 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.393426477 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.394164339 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.555938146 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.167390769 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398731946 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.394889373 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.232549271 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979632709 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383433569 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390309884 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28080373 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.405913276 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458452332 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395714267 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.401178088 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.27074159 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.218761139 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.394977879 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.394742032 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615753062 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401821283 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.588230573 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472418568 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.593118932 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.985559171 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42264678 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.326938527 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.102625588 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.082261269 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392726145 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.580128926 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391467429 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402500233 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399796619 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.908213877 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.988055168 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409164943 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.462134697 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.398535626 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402962602 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.39645838 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393200895 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.253426504 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.983265908 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403476212 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.404786516 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538502979 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.406710631 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.326046915 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.910138679 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399471133 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396293115 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.167034959 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426623706 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.467823402 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881275707 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648914712 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.085546244 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402226667 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.574103758 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.424301967 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.392246706 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395705049 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401847474 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.402281472 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4170411 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.403684042 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.527906261 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.833526726 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95631719 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140580852 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970320502 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385883569 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.409409024 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.276159703 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.835928085 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319385989 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.05057274 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589896718 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.847629084 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332025225 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592037425 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.650190914 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20542863 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404837763 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624208228 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368054233 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.410502847 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407785007 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606691194 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431927019 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.407247701 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.32642728 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.907351686 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636317182 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389919627 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477887292 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835783608 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403160197 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.173659538 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.392599673 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.791244961 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59033602 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.939737758 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.783651139 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391510004 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399007987 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898935119 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393324484 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.925147177 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043590436 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.4274193 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.601925704 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329100552 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.410822259 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.408800952 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.393667231 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.776314381 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.411569179 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.667317677 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407666949 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334477449 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408161791 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943267314 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.278592863 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.40545785 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399060821 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191327326 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392781494 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708682333 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.400508822 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.257173459 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418922855 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.333220818 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333482256 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.090390625 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408257428 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374660359 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923295572 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.761583716 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.438431135 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412728431 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245119982 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656267492 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.412071115 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000926089 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642446666 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.200630124 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423942254 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.499169609 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404284692 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.382392666 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.296233994 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.635109526 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246491767 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618315453 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.450105556 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.304853962 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.396194979 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613870764 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.28789254 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409070423 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652669243 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.127821021 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.423711316 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183820277 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444062137 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416705463 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.415891505 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.783028607 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408568077 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472483577 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411098012 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.410329735 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.414394354 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.579518064 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406479908 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405466755 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.416177229 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494405917 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.000946875 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.258875255 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.192331306 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008214434 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187237575 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.023551324 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431381235 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404093041 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401700929 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337368411 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542962333 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.930093028 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674109859 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531531199 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.894092807 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424799091 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404001398 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41528004 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615192221 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678116622 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.27138356 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415895485 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.060525927 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.286925512 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416214682 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.61494931 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93866919 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010304206 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522317598 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414729664 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.842295268 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672501914 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.495824103 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406138855 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.995399112 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.405692078 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.812851309 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.422818577 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406461767 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552563053 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414158423 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089144473 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.428324794 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.562335109 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.178204767 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.501967527 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.660589274 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.914846028 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.416218035 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01207672 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.150633664 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669667671 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476417279 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417528407 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.510606573 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552380546 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.418360748 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.288673383 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40858724 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251280543 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.119007588 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.41690788 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011171322 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.684817521 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.404415157 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.41779335 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431483802 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.415443022 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628718746 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163090785 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622119698 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416585746 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.416274087 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.981256203 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.014277526 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437965174 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341510124 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.402662118 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659307157 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661170744 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434366268 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.859517021 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.117844977 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996789194 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.378762261 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429468571 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412033111 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.132231142 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015108475 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.289289787 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944423638 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.066097959 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417871368 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684048596 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.413813276 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409987913 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68624115 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.413091577 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.411642171 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418384382 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.019151902 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225913815 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.407606875 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.530302162 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.34828867 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.634783993 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05039712 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346061914 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402008091 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.590556018 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406212916 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53979269 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412850136 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.4130327 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412695875 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.171072789 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683016499 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.408031969 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.399579693 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.398541369 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419416376 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414559893 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652195938 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411174259 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.085964403 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.765196929 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.666193934 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.418047062 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.389348986 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.416691 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413268011 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.129728673 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.371760807 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.935312421 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02484817 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.423083458 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.423887825 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415005077 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.626836263 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621932598 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411786704 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422572304 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408736309 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427508325 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.549408057 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.189937032 seconds)
  done (took 1619.162497348 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.425541477 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.430320289 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.444670256 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.470930228 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.450729386 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.527908626 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.437027802 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.51257014 seconds)
  done (took 53.016376537 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.415489402 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.572065634 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.446870467 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.412997198 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.421209977 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.412704559 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.892758876 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.430432972 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.420042902 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.420397303 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.430268676 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.420072412 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.107611079 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.423763375 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.416281513 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.408489603 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.420632415 seconds)
  done (took 66.799129859 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.411925765 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.544360836 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.518271961 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.417456557 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.729215575 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.422433424 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.567949116 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.431238652 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.415447794 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.516753493 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.082872248 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.436920013 seconds)
  done (took 80.813316481 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.424117086 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.421631748 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.423230378 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.422411243 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.424518029 seconds)
  done (took 8.434979617 seconds)
done (took 2050.789922917 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.659230234 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.140827343 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.075445714 seconds)
  done (took 5.53647492 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.557307369 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.608573673 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.729734806 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.749079743 seconds)
  done (took 7.963641518 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.69074052 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.785939771 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.602764776 seconds)
  done (took 6.393605268 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.867590292 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.425110244 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.538052479 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.410789967 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.41281878 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.41196293 seconds)
  done (took 20.557850099 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.41553299 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.419406083 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.416368811 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.420900021 seconds)
  done (took 6.992364844 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.392454277 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.11566299 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.392672524 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.412696171 seconds)
  done (took 18.629011525 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.161382675 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.176203645 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.159423192 seconds)
  done (took 7.816843429 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.417689365 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.259508435 seconds)
  done (took 9.995729552 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.716760777 seconds)
  done (took 3.034529487 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.547799124 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.745469299 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.501084398 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.456098522 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.519838139 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.409913859 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.12302556 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.691385563 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.416271754 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.688662461 seconds)
  done (took 29.421400437 seconds)
done (took 130.145912398 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.341162552 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.77543305 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.623717502 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.352168582 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.640955984 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.621866238 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.633564741 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.322078924 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.945237407 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.813774768 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.348210398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.639272429 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.582344948 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.785308163 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.585071043 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.786918462 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.644688019 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.375448843 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.994598812 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.191166263 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.627538819 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.947061077 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.176695438 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.098097944 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.651564667 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.570723282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.53157283 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.777412447 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.173689908 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.682907893 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.570727052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.372788719 seconds)
  done (took 195.504199079 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.415896239 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.429290395 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.4090673 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.409135953 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.428274272 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.417311194 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.406621729 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.415907071 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.409071865 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.43092802 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.407839639 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.410609066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.42935598 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.424754772 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.411751015 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.409993899 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411149926 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.419850744 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.408212499 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.434049476 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.411214609 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.409713302 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.425582689 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.422586004 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.418215431 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.411109115 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.410465893 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.424813771 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.424670912 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.410572277 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.419525678 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.417655429 seconds)
  done (took 206.666983292 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.415454166 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410222876 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.427578833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.418560066 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.430639661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.423079562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.429779232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.419957111 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.408111431 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.433906061 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.412338838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.411722486 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.433608802 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.410736521 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.408732502 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.425149055 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.436081952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.420262737 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.410428867 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.412473546 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.416230129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.420745881 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.412562931 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.412442099 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.421361911 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.4239755 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.410640348 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.435831984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.411787412 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.411115364 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.419457489 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.434949296 seconds)
  done (took 206.75639052 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.615745664 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.428356955 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.42573179 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.36116616 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.426969485 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.424686384 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.422579412 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.624366438 seconds)
  done (took 15.056448324 seconds)
done (took 625.300560338 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.807810441 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.502549789 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.639095689 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.448158578 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.260495151 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.466596186 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.449342931 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.628330822 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.368329024 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.632927885 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.763030716 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.4633871 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.913204854 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.446463853 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.713538349 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.552924593 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.344864281 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.465760453 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.773598737 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.020198645 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.722684323 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.973979108 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.648533656 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.364347987 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.919114325 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.970809789 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.189661633 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.326556805 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.465076178 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.780782502 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.131465182 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.436666994 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.513218573 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.507280041 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.574993896 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.549206021 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.420023768 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.507150245 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.654887937 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.741786594 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.01889078 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.179262834 seconds)
  done (took 96.58374452 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.411875404 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.410852309 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.413380636 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.412576593 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.413072586 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.411534198 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.412230296 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.413012644 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.412216229 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.410084653 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.414779701 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.41402966 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.412449167 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.414097157 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.412739266 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.414128167 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.413939213 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.411414161 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.411686233 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.414714155 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.414006768 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.413782514 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.413796978 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.413196571 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.414180235 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.414507872 seconds)
  done (took 38.069739368 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.432277214 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.692743821 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.857685515 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.439957166 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.430209664 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.43879286 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.514783997 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.434589816 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.434125791 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.434714152 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.612958985 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.436928207 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470976281 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.889745823 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.436536926 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.435640262 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.434581019 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.434334416 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.704075162 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.444563531 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.539279049 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.434645239 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.51540642 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.445062337 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.45893876 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43628782 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.441440422 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.959992521 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.453471658 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.609681232 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.251818204 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.513503615 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.912258423 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.887306953 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.254222234 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.434497657 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.434725614 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.612436823 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.437067784 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.433247287 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.516146635 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.437157806 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.869208271 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.061439144 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.452247574 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.435234549 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.984692996 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.631088622 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.694886866 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.443101295 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.905573078 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.439810245 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.440334048 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.434570657 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.693278235 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.443032522 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.435584448 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.980719561 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.461887685 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.517070185 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.438815079 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.438031976 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.707319941 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.429581803 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.697437251 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.429203577 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.446023694 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.455275809 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.869139741 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.437614213 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.083705698 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.450849137 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.438507928 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.612216427 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.698333685 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.010393589 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.456562584 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.71147315 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.92097777 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.529916306 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.442245653 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.953051768 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.538827755 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.440350081 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.439799311 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.437221604 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.433747412 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.490077303 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.516318456 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.017825604 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.090537975 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.997281502 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.535118941 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.449905961 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.437111734 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.982885538 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.454619508 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.438746267 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.867173463 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.088389771 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.455339385 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.446235229 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.08980867 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.457783158 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.518136997 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.446073813 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.880762253 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.442115565 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.48814645 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.439018393 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.446852757 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.462819387 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.520216393 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.441681075 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.438943702 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.061346138 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.63597022 seconds)
  done (took 188.470728414 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.449309583 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.426346753 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.450561378 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.425527215 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.436408346 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.442624176 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.4337323 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.431436355 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.440890393 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.433426647 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.433551606 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.43220768 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.435825706 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.439476907 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.44048424 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.44194184 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.040520296 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.434846652 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.431756232 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.444388923 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.238878263 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.435262129 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.433921314 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.444577249 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.434210128 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.433674522 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.454020991 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.433344125 seconds)
  done (took 154.993621014 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.441672375 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.044267158 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.459056975 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.577961934 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.460452683 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.437621038 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.57723163 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.503248315 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.459501337 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.438738971 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.440834297 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.766382864 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.445191126 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.989353333 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.644422752 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.596571879 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.99159888 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.460157564 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.439183135 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.441493651 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.580292123 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.446770444 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.76771653 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.047752628 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.460786858 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.045588206 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.428716033 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.443022124 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.444943259 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.049707047 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.454369906 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.759851432 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.517345602 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.503934621 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.064462399 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.010197178 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.011470498 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.597897615 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.442310113 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.442875637 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.44190698 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.428183575 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.029710179 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.454634236 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.445072855 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.01806597 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.453923065 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.44423151 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.453252105 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.443881917 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.507456885 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.522740196 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.774754523 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.031794118 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.534820453 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.45040055 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.584587207 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.831773997 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.443899401 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.996622206 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.430570608 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.036006933 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.456602778 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.427550145 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.441363523 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.446528722 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.598115361 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.577849671 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.993575145 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.462868873 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.993677126 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.61737739 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.441394699 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.446126933 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.448774302 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.034993571 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.005027497 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.617578151 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.586945055 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.647970857 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.430675363 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.445865734 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.431702871 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.53011782 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.446704889 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.038012878 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.009064972 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.46567358 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.448058449 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.449453541 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.447875842 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.630818629 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.05708965 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.536526909 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.986449712 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.784768143 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.758915641 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.440697987 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.504646167 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.461351027 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.766689435 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.442091752 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.508203213 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.905367802 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.767607366 seconds)
  done (took 172.174067764 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.700996803 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.671967461 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.534060535 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.583517455 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.046007737 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.015021344 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.75254947 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.591692479 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.561220408 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.718463487 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.627379313 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.531090153 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.625117657 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.521990816 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.191425156 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.537529373 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.559050381 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.589551081 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.563434186 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.465881929 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.100828176 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.734837532 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.62416622 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.351046445 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.539249207 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.274456347 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.033087229 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.989932033 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.631273511 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.763158377 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.013467498 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.59739817 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.436920682 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.153228954 seconds)
  done (took 68.979245795 seconds)
done (took 720.595672858 seconds)
SAVING RESULT...
DONE!
