cset: moving following pidspec: 17961
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.59138991 seconds)
loading group "shootout"... done (took 1.207673468 seconds)
loading group "string"... done (took 0.424927175 seconds)
loading group "linalg"... done (took 7.796231927 seconds)
loading group "parallel"... done (took 0.148457672 seconds)
loading group "find"... done (took 1.235392706 seconds)
loading group "tuple"... done (took 1.906182719 seconds)
loading group "union"... done (took 12.359122484 seconds)
loading group "dates"... done (took 1.297794171 seconds)
loading group "micro"... done (took 0.2028999 seconds)
loading group "simd"... done (took 4.237342822 seconds)
loading group "io"... done (took 0.958880964 seconds)
loading group "random"... done (took 8.665417555 seconds)
loading group "problem"... done (took 1.543683194 seconds)
loading group "array"... done (took 18.5573886 seconds)
loading group "misc"... done (took 1.499525276 seconds)
loading group "scalar"... done (took 39.078265027 seconds)
loading group "sort"... done (took 2.956843751 seconds)
loading group "sparse"... done (took 11.585981297 seconds)
loading group "collection"... done (took 16.817664316 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532858827 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125942066 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136622833 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121641697 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.156366839 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118573548 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126457474 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084484241 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.882596552 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147144253 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113473753 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.440644874 seconds)
done (took 5.432070689 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173207968 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085886727 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078394679 seconds)
  done (took 1.294118105 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066174659 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127380668 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066725876 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067916942 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067530349 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067155012 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067177293 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067102653 seconds)
  done (took 1.66347058 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071580706 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069373631 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066596131 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.07170042 seconds)
  done (took 1.410911571 seconds)
done (took 5.759450589 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.245465299 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.109859935 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.305161853 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.32196715 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.41792577 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091962875 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074616099 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.071733007 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.130696533 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.349638513 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.115229159 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.189595691 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096236154 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.176756266 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.016902507 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.131253961 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086124359 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.125104656 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095011715 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132806514 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.361035702 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.077564071 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.081717987 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.070275048 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067342941 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.645199926 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664317008 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13945828 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082627221 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.079710989 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.116513779 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.645128015 seconds)
  done (took 10.478840814 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099409283 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10204577 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069539497 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125291212 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098066929 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070521015 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075365495 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068542126 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08936017 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128990637 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091860962 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107158081 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067493557 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069994802 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084342695 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198107646 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081536619 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082214877 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069544521 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079821973 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108962068 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079068853 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079840376 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079738117 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130451163 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17185938 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098514092 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096946867 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066808936 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080947427 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115800678 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128006924 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067436043 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066548712 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123901403 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097465953 seconds)
  done (took 4.632315434 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.110995917 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.090643624 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.101993295 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.60590969 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06670602 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.150242344 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23493812 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073928815 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.385737022 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.156510689 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.150604369 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.143009079 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065900802 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.122768137 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.256210327 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.072870905 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.122845319 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.26907096 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06818122 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.067343483 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066928967 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092351075 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063714534 seconds)
    (23/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.074978077 seconds)
    (24/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068372999 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06379994 seconds)
    (26/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.076723087 seconds)
    (27/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.091724224 seconds)
    (28/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.087662777 seconds)
    (29/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.189053819 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.98013227 seconds)
    (31/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.296416882 seconds)
    (32/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068591685 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163713291 seconds)
    (34/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.085537355 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.365458823 seconds)
    (36/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.071068791 seconds)
    (37/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.090094979 seconds)
    (38/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.393688446 seconds)
    (39/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.124320043 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067499269 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.164047906 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.131839363 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066146384 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.117670331 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079099791 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069825116 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.072098172 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068835988 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079016261 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079043217 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.102404753 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068596673 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065789494 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170382043 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066371911 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067116164 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068544089 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150955339 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066740413 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.147520882 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065825863 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070143506 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096617305 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071863886 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.08855728 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114312183 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.341393619 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.036031448 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067830107 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.871883156 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078925444 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.067809796 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.083861107 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066995577 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.068637818 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067788015 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.076472943 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071428506 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070065803 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109796189 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066629789 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.071529757 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066876716 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065381247 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.072257391 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.098965798 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066632155 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.459087142 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097318492 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065487945 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.077721495 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106163933 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066150366 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.073423483 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068821029 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.072999211 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067012209 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068383786 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073822944 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.095067708 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070561781 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113977483 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.14747012 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071202635 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068204496 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.073049714 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07055762 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071324516 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06771444 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070349431 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069255612 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065575648 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.117783124 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067671477 seconds)
  done (took 21.681873633 seconds)
done (took 39.03625863 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247849985 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082810093 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083125051 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083553347 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082911234 seconds)
  done (took 1.810526947 seconds)
done (took 3.035547869 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129118127 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102466657 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06458825 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101656857 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064916257 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104663718 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102405394 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084950485 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103331333 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065008313 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101244161 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064925543 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064740789 seconds)
  done (took 2.380497565 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080083946 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086488071 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06989561 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080971222 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062446923 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081138174 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081078074 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088538479 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08109546 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072532524 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062784592 seconds)
  done (took 2.064236677 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08094464 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084575181 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069490812 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081537386 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062409921 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081122257 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081111585 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085689198 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08193107 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073705434 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062708319 seconds)
  done (took 2.051067204 seconds)
done (took 7.703889252 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.074142338 seconds)
  done (took 1.266283104 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.532822313 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.46174672 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.076578298 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.098615628 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.195191668 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.107241941 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.229496965 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082097589 seconds)
  done (took 8.156008903 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095299304 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.080283573 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069035157 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069048173 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069461814 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070285353 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068932954 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07067587 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071320144 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069362407 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069597565 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070054199 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070417344 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071253615 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070365258 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070755383 seconds)
  done (took 2.441554604 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098141198 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09587193 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073996532 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075630032 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073126728 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072291419 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075270221 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074438861 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071692782 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073188284 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076419062 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073994587 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073540075 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064323037 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074556804 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076105039 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071186955 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074904843 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075340213 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07586871 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07527545 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064498261 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073421904 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074276684 seconds)
  done (took 3.124016664 seconds)
done (took 16.196796274 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113603891 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077489239 seconds)
  done (took 1.391071562 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.076606765 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079159431 seconds)
  done (took 1.369862115 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074291608 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062703105 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.082532759 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.073171692 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063032252 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062609932 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081178353 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.062865406 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062345445 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062992057 seconds)
  done (took 1.904321482 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063235797 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.071538424 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069555003 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078598388 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.068847825 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06394271 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.067001592 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06442646 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.071748054 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063388925 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068479256 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083030522 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.067310023 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084677221 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.067255597 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067784434 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070188152 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067123088 seconds)
  done (took 2.476336957 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061104975 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063229996 seconds)
  done (took 1.352106963 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065159832 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063637371 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067484585 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065667198 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063140254 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062679296 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063271099 seconds)
  done (took 1.669897374 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.371005506 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.132503145 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.335779769 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07130022 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08030844 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255591378 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06475995 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069494077 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069770585 seconds)
  done (took 2.714230814 seconds)
done (took 14.105647734 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079566756 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086200816 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097630736 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.409675468 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093418763 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068196626 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113671219 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177713559 seconds)
done (took 2.363226235 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207573213 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.104059622 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.917765866 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.06520347 seconds)
  done (took 3.312775043 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.331648727 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092060099 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078046809 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069398619 seconds)
  done (took 1.806600659 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066528613 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070317409 seconds)
  done (took 1.366931267 seconds)
done (took 7.937488657 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064514724 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090238797 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065409455 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065674075 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065405681 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064898071 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065242587 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06472516 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064593505 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065052313 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065765107 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064335059 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065166777 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064873766 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065747722 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064692964 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065400088 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064372289 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065259205 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064874311 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065223021 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064837428 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065065274 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064948758 seconds)
  done (took 2.841835998 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079246485 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065605965 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068703613 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068688021 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068829401 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068862347 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068422284 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067222097 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068350636 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06632411 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068667615 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068637805 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066836688 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069056492 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066509117 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068663679 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068034765 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067219381 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067000453 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068921515 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068385808 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067193046 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068798634 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06874565 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068679107 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069250098 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066413454 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066886269 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06833745 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069149288 seconds)
  done (took 3.296955344 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06417359 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061369063 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06285784 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07011815 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061192152 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062625381 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061479505 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061789879 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061924351 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.060976432 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062243723 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061031436 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061569052 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061955891 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062191676 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065535281 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078918747 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061625861 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060962068 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061793003 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065350224 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061201626 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061188423 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061056118 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061551097 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060965085 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064601448 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061094167 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062340599 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061240924 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065032078 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065988287 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061401392 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071184707 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065591687 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061402541 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065058582 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060832747 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06242226 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060948358 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061749453 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06145125 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061056644 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070528906 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061354258 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062525151 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061155105 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062500748 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061535978 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063548912 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.060708314 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061193791 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063640229 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06235492 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066511727 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061228899 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062230492 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06092287 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061883784 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061037595 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06076519 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06121882 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064866343 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06203404 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079184868 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069975703 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061219719 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062747997 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062275315 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064187266 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062504543 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076868364 seconds)
  done (took 5.809243328 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08386248 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087403852 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066672983 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066820614 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062083137 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061710426 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070083306 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062134961 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066342476 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080920024 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062151097 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066513489 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066021278 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065626999 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062061116 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06691685 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07026386 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063134377 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062087395 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065943901 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06274866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069996898 seconds)
  done (took 2.74888924 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.145887571 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068170981 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106565984 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072116423 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070409974 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072482039 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067895279 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067964126 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068034001 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068823685 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06838753 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067750499 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070067286 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067897491 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068344236 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068254578 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067948135 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068373205 seconds)
  done (took 2.607459488 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076588305 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067166625 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087164916 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067868744 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067315182 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067229005 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07125564 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071854887 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066987266 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067142256 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072453345 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066962724 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067137971 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067211231 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066419863 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067127067 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066616953 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066995267 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071846072 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07103389 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071167867 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072147026 seconds)
  done (took 2.791002861 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077315656 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065627117 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082117543 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068613213 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062446789 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062092398 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067750718 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066371154 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067737217 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06622731 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066488239 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062086093 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069066479 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0668786 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069056458 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066605197 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066349451 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066290871 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066453172 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061920175 seconds)
  done (took 2.601268155 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089671032 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063666523 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065072165 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071426428 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065835089 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065500112 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071057934 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0651408 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064951315 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085724167 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065186697 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06531289 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07119399 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068532895 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064907406 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071418501 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071458707 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07118302 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0680435 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065364568 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086215123 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065429729 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071443826 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065009593 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065092154 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064897662 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064826364 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068895538 seconds)
  done (took 3.197417981 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063986949 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064220908 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06476697 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06495621 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064793775 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065052883 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064967046 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065140422 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064182997 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064952433 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064847064 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064855111 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064429682 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064652156 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064740376 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06468811 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06466523 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06462534 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064998356 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065391561 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064736886 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064496803 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064993047 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064778065 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064683437 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064559253 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064945049 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06465342 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064260946 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064714155 seconds)
  done (took 3.202293257 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073247277 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071333017 seconds)
  done (took 1.405088881 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061792877 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077173104 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060964176 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072593134 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070410846 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065436838 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071030737 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070499952 seconds)
  done (took 1.804866721 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084025443 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.074939456 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064513739 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077806282 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074846688 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083941567 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12809113 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064290296 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074632997 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064919006 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082221849 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065666457 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074238091 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069891085 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074182172 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07796917 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061919823 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068680581 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065053373 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.061822173 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064423031 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077796287 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073548734 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062206877 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068808707 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092591298 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080910664 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063130147 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070679963 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075873675 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074109695 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061118563 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063678434 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064357914 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062173368 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07437535 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083601056 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070951203 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077066813 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064518251 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07268722 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06184437 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073017643 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07459277 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080030134 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063882615 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063756093 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061801098 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064944079 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069680247 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061757909 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068356217 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061068893 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075930353 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071348434 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078922095 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062562368 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069723306 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070829613 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071080597 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076683642 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070975352 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073735037 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063563853 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079654919 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073498363 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075759619 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061792255 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060997793 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061577237 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077595757 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092693323 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073282713 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06356937 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064394328 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06174489 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070766161 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064108733 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072708669 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074854652 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063113098 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068931711 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076268194 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068338982 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069989195 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070720619 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06212803 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066643007 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064974698 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082750727 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062530697 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061850734 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065018731 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079305763 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070669475 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065338856 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064751571 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075232394 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060916044 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063956753 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064740243 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069477798 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077063282 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067850766 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06791361 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076412201 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071754406 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068236319 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069654392 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060373043 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063089492 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065441879 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.0744057 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060545052 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069872508 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066881405 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062577334 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073538496 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061592932 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062017994 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075240591 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074230621 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061054311 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059912779 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069548395 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062782638 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064509915 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075273934 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061166556 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060846141 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061149533 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07014258 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062036876 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074595939 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066167413 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069477929 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.191575153 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063333627 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069278157 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076622619 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068640235 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070513249 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074062927 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070351546 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063273346 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076277499 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071844031 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067277977 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073258075 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068759646 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062212938 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065237141 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070747369 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062365019 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070999529 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06576383 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070726095 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063895937 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062669885 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070483033 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064740529 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066063492 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069824559 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062711618 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078889928 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070100359 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062021664 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061282423 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071070889 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065259212 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.062859741 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065604704 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069779494 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.063921965 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062280659 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063451615 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069938063 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071856665 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066382733 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064562975 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074008209 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080734017 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063682625 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070439187 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.062950002 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064357614 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063660064 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078404224 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074637826 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06758083 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070417495 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061690204 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073247786 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076625907 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066675414 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062307686 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066559305 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067810134 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075727904 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06789655 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064062395 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062791041 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069789567 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066007144 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070742502 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063673489 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066318237 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068309419 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062234386 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06909424 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064865294 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078314116 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071157125 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061867676 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066329389 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062485288 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075254236 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061863866 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064888837 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066982139 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064837287 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063037696 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070168785 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061486127 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076653747 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076365302 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069110623 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066000063 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063356297 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075586046 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069109797 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072247273 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070803818 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073123644 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078832517 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066838448 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071221853 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078321158 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063499572 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060903599 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076330218 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062442357 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062873505 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062571729 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06261159 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071651609 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069722953 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073929745 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060901194 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07060545 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062002525 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066373238 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.0613934 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071493533 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069791533 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067085337 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075614979 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063153046 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063481703 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070561009 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062588166 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.063768782 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064771546 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069870302 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062984807 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068786906 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065662758 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068607422 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065493322 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060895029 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068780664 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062919294 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068186969 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071541639 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062081261 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068421472 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069635605 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063031225 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.20587652 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069507135 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068287761 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07324474 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071037585 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070076188 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071204366 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.0626069 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076131075 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063538678 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076816602 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06894328 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061538219 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069828108 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070968342 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069447089 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06456814 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.063802067 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069690591 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.062882756 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070748308 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076285476 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065892173 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080183031 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075177723 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070167765 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070855147 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069488781 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069813421 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066270295 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068630507 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064114314 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069665723 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063590063 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072668897 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07064006 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068793832 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070802548 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06445453 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069176828 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065275532 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061590753 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066866345 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066652127 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063345645 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076767601 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064191948 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066920782 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062849271 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064560005 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062706321 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061002465 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070045396 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070652524 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064352651 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074340069 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066491824 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070112494 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079450284 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061747105 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062968117 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062298388 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065199497 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0762534 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064069599 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077884247 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069280669 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066537144 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06189108 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064379086 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062624217 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061976089 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061969468 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071983426 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066370948 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063239174 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063535139 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070678663 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064612476 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076294157 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06295789 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068174544 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064147704 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061814413 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066524218 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065975577 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070744922 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064208023 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065479186 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061710504 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063506956 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06839795 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069865444 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.062964093 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069264866 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076476232 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063402712 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071113065 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066287877 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061979144 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070957027 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06318972 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063947941 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066475176 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071168484 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07173463 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064039998 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077489987 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066135976 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069439821 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063629087 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061987086 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063205685 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063183817 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063467679 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065665476 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065088101 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076871208 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061398468 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069347635 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068149393 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06689234 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072906649 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063429221 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068960744 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067621508 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064688069 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069097259 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075785581 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065851204 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070026616 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062458615 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068231746 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071877983 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065343439 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073727825 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067890905 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063301975 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068117832 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06474596 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062425576 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062930088 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061932467 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072951476 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.201913288 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067538549 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067429805 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063207079 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069819927 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067164472 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077857472 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071001499 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072245803 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062543943 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061539616 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064253802 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065841922 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070246464 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071153484 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074453169 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071022008 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067632699 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063363692 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078946895 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074196959 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071402474 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065489446 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071609302 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064545339 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070530184 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069344963 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069316572 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064350495 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072317417 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069524271 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066645285 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073620938 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071587552 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064512004 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069990073 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070430469 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068376814 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062014639 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063775776 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070956612 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072759241 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070671492 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064229785 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079518572 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065306335 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069130044 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065638028 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063110604 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072791325 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061860699 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070290552 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065655906 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064314579 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062855407 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06639733 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065464276 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070902052 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06719439 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062761586 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079482214 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078289182 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070510647 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062925878 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062716234 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06233937 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061931824 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066550284 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064864958 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070081099 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078128343 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066528386 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066659059 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062472298 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06402924 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071131334 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071471003 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061600301 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062509519 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066596369 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069755415 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076681129 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062897914 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064025979 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071024255 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070867361 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062366163 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066252995 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061685492 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072287839 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080324433 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06372947 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071117816 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073636231 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077262765 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06428262 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062344135 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064512006 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069847632 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069502956 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064451156 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064487478 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082770628 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071059864 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066668513 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062546593 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070612854 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066976924 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077357301 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067386627 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06444393 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073226598 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070216319 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070115204 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074109172 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074301695 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06951982 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070351798 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062671187 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068616636 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063255567 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065911033 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063516939 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063077763 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066163281 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069383579 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065439343 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077376999 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076627397 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065582518 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060793145 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065305438 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065401511 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061231604 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063093313 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061336474 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061683362 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061404507 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062118936 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068725948 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071024032 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067119605 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062744667 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062150704 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060237478 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.210663544 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071980846 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070486912 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062043134 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064337227 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064737865 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072760854 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067099937 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066049219 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070407612 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069703039 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070011177 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06282714 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075485868 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063254474 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.0698748 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066836198 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063326658 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064400312 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071558174 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068120238 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06519864 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070654286 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070927037 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065615533 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062297273 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061682465 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073883447 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062561624 seconds)
  done (took 42.476395567 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098727942 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063403182 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062920487 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062395596 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072149324 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064385045 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062540708 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063144174 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063349661 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064981655 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062216558 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06197287 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069633441 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077011435 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071664694 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066847873 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061820831 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063554506 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062607335 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063884374 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070065769 seconds)
  done (took 2.775118333 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068447271 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075358201 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074114741 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079185037 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071142572 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066791375 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074599991 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067642078 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075123557 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072299659 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07481833 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066848517 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072561706 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07243391 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072732197 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067747889 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075656503 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071683646 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067193779 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075064911 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067614858 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074737124 seconds)
  done (took 2.934604077 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062720375 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06256605 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069571384 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061875614 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063502891 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061716079 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066368593 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061652081 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065021567 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06561872 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06568944 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06540322 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06963981 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061528163 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066408864 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061482695 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106741718 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.065373855 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063358081 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.063821275 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061811044 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070213654 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06186119 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062186949 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065600332 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066236814 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063697749 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061649369 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.062937506 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065620556 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062911468 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061795761 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069822053 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069149154 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065925374 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065355031 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.0626929 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063121238 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064858318 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062228537 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.0691562 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062175043 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063772741 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069970278 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062012977 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061694787 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070010728 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06323888 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061416452 seconds)
  done (took 4.558262045 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072612617 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109818519 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067958965 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091187449 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.075755366 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069357271 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068065959 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092421787 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064009358 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064059545 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.076603476 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077084201 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065905232 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067777955 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069979906 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065395608 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066139963 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064922964 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068596281 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064886785 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068801075 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069663385 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075712955 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076137891 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066444063 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064744017 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065142555 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.0667568 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076230755 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069242079 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066946792 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067557495 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076424839 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070871474 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064627329 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065002927 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077310369 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065672896 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065052887 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063613476 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06486305 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066714191 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.06950643 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077319876 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066064109 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070431171 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065724559 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062969113 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07690929 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065487415 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070298412 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078232622 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067117085 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065706954 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067738427 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076741863 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065708844 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063738542 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065818722 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076345738 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063391012 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0666601 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077354283 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064378299 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069151347 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077711706 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070310157 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066478649 seconds)
  done (took 6.279161033 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070821439 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094567638 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079319368 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080903509 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073225434 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073514966 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073635839 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073918924 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073302299 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077592696 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07395406 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113731625 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069689147 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074796532 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073643448 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073630497 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073921611 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073694589 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073380971 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073103665 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073616357 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079070697 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073303035 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079048105 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076464908 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069488355 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073183485 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073321724 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079471519 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073380286 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076618179 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073940729 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073317842 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079365884 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076797084 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073489585 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063136048 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073472147 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073128782 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073849143 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069696165 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079666706 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073254362 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069974289 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073569214 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073453671 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079063154 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076405976 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075219783 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076856321 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073728504 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079459545 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07319258 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074023016 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080236738 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082352537 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079539392 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079860558 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074063994 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079488011 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079315675 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081210354 seconds)
  done (took 6.102652713 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078955574 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069776806 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081288994 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062662077 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065184001 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071801047 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062435004 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061976977 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069854905 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070418479 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071843333 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071765256 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074277015 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072077404 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071790096 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07387268 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072407684 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072407448 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07026308 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071740753 seconds)
  done (took 2.800564771 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07475342 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081721739 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067568111 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073122267 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068414551 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072237006 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067039327 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067851452 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068147084 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067686187 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074118701 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073828385 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067789491 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072237077 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073104107 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072190863 seconds)
  done (took 2.514372128 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081251894 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069702448 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.076207232 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064491215 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06754113 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063026428 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063171018 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062258014 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062577675 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07630268 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063123993 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074273971 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063636526 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062628643 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063312593 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069168602 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062556523 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062781887 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063757129 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07579762 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070398578 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06495537 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067068555 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063420577 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068513425 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07095941 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065753778 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067075903 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063563863 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063614295 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068788621 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070580955 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062882483 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063863547 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063428852 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063570349 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063465519 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063720036 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069172864 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063597033 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062012628 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068563891 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064162997 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06434586 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06268087 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.0636541 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06251566 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069429477 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063775661 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06900127 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063802043 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066530448 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063814251 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071009628 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065970474 seconds)
  done (took 5.021233881 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076907762 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067496638 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06267989 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061938194 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085429426 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067903215 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067635135 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067855943 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068783381 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062254833 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068141959 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067493662 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068780963 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067524608 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068629865 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068012687 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062492597 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067963766 seconds)
  done (took 2.614447214 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071554665 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066205746 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072324653 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066800935 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067005218 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066441031 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06232528 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061817196 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062645008 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066822093 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066685702 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066598693 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062043946 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066392632 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066991381 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066600331 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066570453 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061981349 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066852687 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062210133 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066450938 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062189718 seconds)
  done (took 2.826736807 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093152399 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085147283 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141090809 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08009185 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088313458 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072198586 seconds)
  done (took 1.944128093 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091461855 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098741225 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067696302 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067656902 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073707916 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070713249 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070496104 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071003581 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074834753 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075837506 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070493016 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077972155 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075697534 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07712244 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072878789 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072663544 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07105588 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070603986 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06708774 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079317132 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070395991 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07480197 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071388784 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071137832 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070550073 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076710822 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07502641 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075335716 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070900848 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075324162 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072827723 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071006469 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075368319 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075602222 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067728657 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075225885 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071117148 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079591182 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073112092 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077437053 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067555207 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073377698 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075258717 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074903135 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075225985 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071326513 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074586359 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070793793 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070720655 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085016988 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072847895 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076667652 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073216237 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075373257 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075066109 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080987483 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075645443 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07690044 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073014446 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07572286 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076720881 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073014097 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076937509 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074805912 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071453619 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076020935 seconds)
  done (took 6.29427203 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102455747 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067014371 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071167629 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075079394 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077202069 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071084039 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070700165 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071190048 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070999921 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068009824 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105524831 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071033836 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076998839 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077289015 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071172286 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071463434 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071241628 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077515078 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067969115 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081616069 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071144243 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076861764 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077171936 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077338856 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076078928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074239199 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070892979 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070823692 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070704243 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071134199 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074371581 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070948415 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077076055 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068131539 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077863929 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071397003 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070580553 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074390536 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070589622 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07309942 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077119557 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080141467 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070729299 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070724633 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074792122 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070830058 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070995235 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067828341 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070923724 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067793617 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075866649 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076071995 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075427999 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07749646 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070578845 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070916212 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0706881 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070640217 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070921299 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072784992 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077277615 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071135626 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081347843 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070912779 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070635005 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076378271 seconds)
  done (took 6.28529712 seconds)
done (took 128.964841628 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207048907 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18317289 seconds)
  done (took 1.758395575 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072406115 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103111724 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082510762 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134429488 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06904774 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106002965 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10264551 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080834401 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069729882 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07180987 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070644369 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073847969 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137776191 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071564292 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070004114 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074123296 seconds)
  done (took 2.781788036 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102436351 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.216991767 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109571557 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069511044 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104033086 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07754999 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072133658 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.083166132 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075831349 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071733661 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077613283 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075846364 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071477612 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07571484 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07596784 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076860731 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070953756 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076986095 seconds)
  done (took 2.976572761 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099251252 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091937248 seconds)
  done (took 1.588458244 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.170108196 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.131909639 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200177634 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.33277647 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.146987086 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.41193784 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.137739148 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.132633042 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.111484629 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.130980923 seconds)
  done (took 3.296696695 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101812084 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192163643 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292089984 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119023368 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074154649 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.106046187 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119540624 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081453424 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081540479 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081329804 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081010805 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077816274 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101988987 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07719567 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076444228 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077264205 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103947714 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075172444 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076459625 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076394286 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104697226 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.0702935 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076679423 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074812758 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07885149 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078961492 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071375784 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070048796 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076221998 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076341167 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078987917 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.105223204 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078625585 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102793176 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073875072 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105155775 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078053308 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074706241 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076171457 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074954577 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077980374 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077510998 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078811938 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077651567 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070985057 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077772013 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071426834 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070061859 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080567765 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071639318 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08044857 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079306812 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103381447 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07144698 seconds)
  done (took 6.207582975 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10613278 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104440505 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070248073 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114037384 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104326691 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071201999 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105485545 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098111562 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105427089 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069786895 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068991085 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071134774 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07747081 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079037199 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112903198 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105214697 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07122502 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069317265 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105752337 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1051982 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068611904 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099260881 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09604006 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104723386 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067743186 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069500247 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068228814 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070783755 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076235266 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078459292 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070129637 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079025922 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084491717 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075046294 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068526555 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06939188 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069673215 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078191742 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07920439 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078310674 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077029989 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068821168 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069257072 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069486136 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069410108 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068661667 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077021402 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078891824 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077144839 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069998637 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071034436 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068801124 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069961741 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078652022 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076539746 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077514683 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077004134 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069769326 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069295765 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072137207 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080132073 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078385599 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078129685 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070148378 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079982633 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072695873 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079665781 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08081611 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067689895 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068820324 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067570772 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067743306 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069859074 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076126663 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076493659 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070629189 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069317505 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069527492 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079241948 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076744766 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069571075 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076737531 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069216253 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069965508 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070937224 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070715314 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076362202 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078991072 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071236189 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069690613 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069857448 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069856767 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069430164 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076978201 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078869758 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078378095 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078055614 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071012739 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078216425 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077806404 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070977395 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076842247 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068873603 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07033527 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069679775 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076281149 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075112155 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077301678 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068979884 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068935545 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075705903 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077768486 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06877619 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075074813 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077892049 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075718549 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067923475 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078709103 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068721386 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078033964 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067105808 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210484533 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069363283 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078663327 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07139667 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070002349 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070655147 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078961605 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071399035 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069740386 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071057202 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070402333 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078105612 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081433095 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072211579 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078420781 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077795618 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071754878 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077535032 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070094922 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078082228 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071052499 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071098181 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068865303 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080633168 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069823968 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069654761 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070163625 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080101612 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071038394 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079228317 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078269265 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069883167 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083671154 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079912612 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077517327 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079425158 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071712492 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070337768 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069834946 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069963702 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076174967 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078267382 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071442142 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069859914 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077774633 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080124595 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069743215 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077313047 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077046456 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077215166 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069010538 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069209882 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080314234 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079498965 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077411757 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077192624 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078666329 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070521283 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076755184 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077510476 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070234433 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081636526 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068429335 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080067282 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07776204 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076442757 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077905033 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079794088 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080814366 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079141227 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079935214 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068002284 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067710128 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076113606 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068170664 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068592924 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075718844 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071147736 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071214463 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084382038 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068407508 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079646408 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069853337 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078651238 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068842994 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070515565 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082222225 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07092315 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070769074 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077901807 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073080139 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077024617 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080949484 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075900831 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069944304 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070772735 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07852136 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078641912 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069927844 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069562299 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071281155 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077079316 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076775342 seconds)
  done (took 18.556096473 seconds)
done (took 38.57158146 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209606328 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159748585 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.188241044 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117951668 seconds)
  done (took 2.169024525 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.106858037 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099209676 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.085887166 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065651587 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.095864782 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066282938 seconds)
  done (took 1.960965147 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301696473 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20605945 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184578109 seconds)
  done (took 2.125535374 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212411877 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.203195833 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.460339061 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282773817 seconds)
  done (took 2.688448764 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.13789728 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081623454 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063417691 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082309561 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.122893217 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.146435766 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.091567016 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.116998813 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075021602 seconds)
  done (took 2.409528499 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145209614 seconds)
done (took 12.949558553 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09929055 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.436674905 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072536471 seconds)
    (4/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.222372171 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069841678 seconds)
    (6/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.207263811 seconds)
    (7/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.259742749 seconds)
    (8/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.111668425 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075856455 seconds)
    (10/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140377007 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.19755919 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078057562 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172269278 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.157198726 seconds)
    (15/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08296656 seconds)
    (16/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.120848069 seconds)
    (17/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.091459283 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135824952 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109699336 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076381138 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.236171762 seconds)
    (22/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077321249 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075503898 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.103356059 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103196408 seconds)
    (26/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.166331148 seconds)
    (27/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.142618165 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.210248076 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06501541 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.099732336 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.173035797 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121456154 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085307721 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.106913152 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.20271061 seconds)
    (36/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.173487341 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105466516 seconds)
    (38/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.223668569 seconds)
    (39/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076356639 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.208573565 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.180495663 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076346784 seconds)
    (43/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.176500553 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074066836 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065134998 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066616669 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134091452 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065327114 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110141015 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.148885493 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.245845991 seconds)
    (52/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077084705 seconds)
    (53/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095643673 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06590139 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09098326 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.067533181 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073784542 seconds)
    (58/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096982995 seconds)
    (59/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.140748595 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087270322 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090544656 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066573601 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074914478 seconds)
    (64/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.171242194 seconds)
    (65/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075631672 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066009753 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.194124534 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.138960706 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.106230781 seconds)
    (70/309) benchmarking ("sort", Int8, false)...
    done (took 0.169268784 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090885689 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073364931 seconds)
    (73/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067194201 seconds)
    (74/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065782876 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077561287 seconds)
    (76/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080793263 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.209513866 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070379303 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073690772 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118698634 seconds)
    (81/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067962186 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.100894202 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132055752 seconds)
    (84/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159709793 seconds)
    (85/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.193467115 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172622583 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065688616 seconds)
    (88/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072262633 seconds)
    (89/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06501128 seconds)
    (90/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075523479 seconds)
    (91/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070257561 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.253911181 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.188004522 seconds)
    (94/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086844605 seconds)
    (95/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.151524329 seconds)
    (96/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078100695 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075344831 seconds)
    (98/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068128795 seconds)
    (99/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.203255355 seconds)
    (100/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.187897993 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068441256 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07420254 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093524441 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.163604836 seconds)
    (105/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067459336 seconds)
    (106/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.065950665 seconds)
    (107/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066956611 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06713377 seconds)
    (109/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06816255 seconds)
    (110/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.142346966 seconds)
    (111/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075811963 seconds)
    (112/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066934158 seconds)
    (113/309) benchmarking ("sort", Float32, false)...
    done (took 0.133614214 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076280797 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067764407 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075815888 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068077227 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067159671 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065924329 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073555544 seconds)
    (121/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079512347 seconds)
    (122/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.13949113 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139526223 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095247566 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089381682 seconds)
    (126/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076426173 seconds)
    (127/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.168715344 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183444836 seconds)
    (129/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068141968 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07614642 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078906499 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066378458 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076695535 seconds)
    (134/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.170169864 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139498671 seconds)
    (136/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074418269 seconds)
    (137/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067234546 seconds)
    (138/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083333785 seconds)
    (139/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.0679888 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073911868 seconds)
    (141/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076740117 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068690604 seconds)
    (143/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.20223917 seconds)
    (144/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076345348 seconds)
    (145/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084222007 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095594237 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074845114 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.174787087 seconds)
    (149/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.203049587 seconds)
    (150/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066229459 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066965828 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066457177 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074776682 seconds)
    (154/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066135879 seconds)
    (155/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.140168795 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.159893929 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091581533 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066612091 seconds)
    (159/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065597626 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142734625 seconds)
    (161/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067922992 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065781229 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126176423 seconds)
    (164/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.165516873 seconds)
    (165/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.16017355 seconds)
    (166/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073302201 seconds)
    (167/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077028013 seconds)
    (168/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.143565257 seconds)
    (169/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182175763 seconds)
    (170/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.19041126 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066576932 seconds)
    (172/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074654765 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067539118 seconds)
    (174/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066772001 seconds)
    (175/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068462178 seconds)
    (176/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067404824 seconds)
    (177/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067013392 seconds)
    (178/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070782668 seconds)
    (179/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067466884 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092075277 seconds)
    (181/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.066984626 seconds)
    (182/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07979571 seconds)
    (183/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.162381508 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066308833 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141767571 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.197570124 seconds)
    (187/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076262973 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117997288 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073905376 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.141413847 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066401987 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124516376 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06604959 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121937382 seconds)
    (195/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077138728 seconds)
    (196/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075428109 seconds)
    (197/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073310118 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066262208 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091691382 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069061354 seconds)
    (201/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065652392 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065461056 seconds)
    (203/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079384736 seconds)
    (204/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068813596 seconds)
    (205/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06682264 seconds)
    (206/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.064910888 seconds)
    (207/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066922408 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.066774142 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067172137 seconds)
    (210/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.064948199 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073044611 seconds)
    (212/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066839172 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065581846 seconds)
    (214/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.137919329 seconds)
    (215/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.163628245 seconds)
    (216/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.238379568 seconds)
    (217/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.080504705 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069707363 seconds)
    (219/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092271598 seconds)
    (220/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096947927 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06701739 seconds)
    (222/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.069139231 seconds)
    (223/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.068748842 seconds)
    (224/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066842385 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074462921 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068301586 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066826766 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067071808 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075113216 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07569252 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111094264 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078417631 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138701212 seconds)
    (234/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.214639001 seconds)
    (235/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068422539 seconds)
    (236/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065876206 seconds)
    (237/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075859213 seconds)
    (238/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083354012 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137118629 seconds)
    (240/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074994919 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.17326826 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068013011 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115535464 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173264643 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069091301 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070174944 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066142754 seconds)
    (248/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.140422756 seconds)
    (249/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066159514 seconds)
    (250/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.06786932 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066682684 seconds)
    (252/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071560323 seconds)
    (253/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075110189 seconds)
    (254/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066279296 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07070736 seconds)
    (256/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066671818 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06679238 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067112352 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066460415 seconds)
    (260/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068134589 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06656567 seconds)
    (262/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076058381 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088746257 seconds)
    (264/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068463149 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12324528 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130080455 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093829686 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076271158 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071870534 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068247635 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065994473 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12403659 seconds)
    (273/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176834051 seconds)
    (274/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067742103 seconds)
    (275/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068185443 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077066926 seconds)
    (277/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066762715 seconds)
    (278/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.068306262 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074513401 seconds)
    (280/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066541469 seconds)
    (281/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.0706818 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134836849 seconds)
    (283/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068639149 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067044917 seconds)
    (285/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.069416083 seconds)
    (286/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.068073127 seconds)
    (287/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066233044 seconds)
    (288/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.068073969 seconds)
    (289/309) benchmarking ("sort", Float64, false)...
    done (took 0.132175539 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080664146 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090809832 seconds)
    (292/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066738478 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075488807 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066466472 seconds)
    (295/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072603479 seconds)
    (296/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068305294 seconds)
    (297/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066851623 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066574841 seconds)
    (299/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06983427 seconds)
    (300/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066421401 seconds)
    (301/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066677231 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07346848 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073713468 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.133645517 seconds)
    (305/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067544943 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066099513 seconds)
    (307/309) benchmarking ("sort", BigInt, false)...
    done (took 0.244919638 seconds)
    (308/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073631403 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066422021 seconds)
  done (took 33.256828425 seconds)
done (took 34.708376647 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083555028 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096589599 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074697624 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09334988 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082126078 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096186839 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074552504 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07968345 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081911137 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.0813402 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079826122 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073075042 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076298363 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075731799 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074145676 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09829091 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080894177 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075604676 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07522742 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066733612 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075286167 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067458238 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066589406 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073368715 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078678267 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074215868 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076402446 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076126829 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067762731 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067670901 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072399901 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075847496 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067248413 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.0799464 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075777807 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075273442 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076000062 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07959287 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066239269 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06713147 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076706417 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066765683 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074274694 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073115843 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071326134 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073240464 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074693725 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079102232 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098139264 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071716618 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077269041 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077763422 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078632479 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07273434 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072110207 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074906239 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073082963 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098146367 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075561822 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072057503 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076415872 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075038608 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071684941 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.0752274 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075038765 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077218437 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079098397 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073392601 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076816699 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074166545 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066991174 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07489157 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07145093 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069563429 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07792724 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07860549 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06599433 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071276118 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074980818 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075473113 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066975966 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071288529 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066756437 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071837719 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071228083 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073445284 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071953885 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073963802 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066677787 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075676045 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073052464 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075060754 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066686192 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079448773 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066841702 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073073202 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067617165 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066911603 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066690157 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071984764 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066666757 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071503476 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075797427 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066020636 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071288319 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079730258 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066535894 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073840465 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066181857 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066284413 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078188536 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076421592 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066810112 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071604227 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066136514 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071896393 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06639383 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066473251 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066020277 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066596434 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070859856 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066292262 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070535078 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071533124 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078760919 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066623773 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071068027 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070544462 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066615085 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072976527 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067344579 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06651357 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06610949 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080342364 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071027805 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066537592 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071443951 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070569225 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073758633 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065220544 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074291844 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071848872 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070177814 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072044934 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065572994 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076732751 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071088724 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069873162 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064862229 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065400477 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06504293 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065138159 seconds)
done (took 12.725427023 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068137397 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.1167098 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.091489649 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094319157 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08407678 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068711361 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074899342 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.089620599 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069448024 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.095980286 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089320159 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089491405 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109014129 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066888973 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067274139 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068698915 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068650715 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077816401 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093670005 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090199024 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105464208 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067611732 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085270432 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087357939 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083084466 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090054253 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068242363 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06865573 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070443081 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.088050328 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093490371 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070548047 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068831376 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.089745411 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085164372 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081298834 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068489954 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075607333 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068450363 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067094071 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068993226 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.086782334 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074806847 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077025131 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068495448 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075557711 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068820694 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082433898 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.084347944 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075071663 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081912743 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.089093903 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069107518 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082914881 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06666845 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081817574 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076189714 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069063589 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069051755 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07282005 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067959096 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069987739 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077270612 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.074203599 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069445313 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081369673 seconds)
  done (took 6.729600956 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085920905 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09235811 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081844306 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08136591 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067427506 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067605339 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067599458 seconds)
  done (took 2.10046173 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065751743 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087062258 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089155207 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089362536 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083996501 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092668218 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075964086 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.0679356 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097776095 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066961663 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089396652 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103967586 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072557684 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079837964 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095116669 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067970598 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092860128 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068156936 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070131728 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093536696 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072012399 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094655452 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079494024 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068953763 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081109372 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067941464 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118871967 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076803894 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069533042 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069478496 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069089569 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109570625 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080735275 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082068127 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069491958 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081721811 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081269759 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071369215 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078003719 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078787534 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080867571 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069090884 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066869609 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069846661 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072026909 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078514952 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067172305 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070064213 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069138251 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088663349 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067370255 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080776148 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072499038 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073736561 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07409706 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072690462 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077660804 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070315521 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089205694 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068860335 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08625004 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085231684 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081157603 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085100865 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068986071 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080673837 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080495802 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069094867 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069984853 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069995785 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085246063 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071465293 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069804768 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079134985 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067615467 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094343286 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094284651 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067686243 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081760033 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068567268 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069260358 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079092084 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094349182 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07246208 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069033105 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073696074 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069865082 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071072193 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066625342 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071691296 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069014242 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073630052 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068964953 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072124 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070568357 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085521415 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067722626 seconds)
  done (took 9.074505767 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068703761 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068957199 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070751627 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069537269 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06898886 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069664916 seconds)
  done (took 2.00750652 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088379339 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068838724 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081932232 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068756416 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109672943 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083341029 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083409045 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077734647 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081743885 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081292427 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083278266 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.085827613 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087546194 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070973142 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082825427 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070242629 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082804261 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072817682 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080137018 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071935925 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.082159223 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071327499 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071202788 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087749732 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072025614 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07015373 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077472436 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08038946 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080036299 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077612084 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070778584 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071805813 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077158078 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077334206 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083514672 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079463491 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069149133 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074936677 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071278577 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072066232 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086013531 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071062303 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071949547 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07483188 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077474859 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077054053 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075220198 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076742991 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08322215 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074915446 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07498599 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069948211 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071690081 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074708095 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07655582 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078684753 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074841359 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083045931 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070959241 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076682722 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068901819 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071951708 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077371268 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071549219 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075740251 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07427435 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076495058 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071181564 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071363144 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068777645 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073852377 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069231692 seconds)
  done (took 7.078375289 seconds)
done (took 28.572639872 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.520942499 seconds)
  done (took 2.058526956 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.612737224 seconds)
  done (took 2.189944118 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.556898017 seconds)
  done (took 8.127737126 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.410046966 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.470600322 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.745992237 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131646193 seconds)
  done (took 3.362142294 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.703217037 seconds)
  done (took 2.288527587 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239398163 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226341526 seconds)
  done (took 2.059898791 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.345323375 seconds)
  done (took 1.921735964 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.066443631 seconds)
  done (took 2.642265199 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.248925706 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16237005 seconds)
  done (took 1.996666105 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.454245386 seconds)
  done (took 2.031891613 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.231489782 seconds)
  done (took 5.81552454 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236090863 seconds)
  done (took 1.856103103 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.229737673 seconds)
  done (took 1.816706381 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.720760403 seconds)
  done (took 3.300342066 seconds)
done (took 43.051985223 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082471309 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084470284 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083957451 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080518896 seconds)
  done (took 1.887363159 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.073758504 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071159517 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076046664 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072209469 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076967236 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072155418 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074163219 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075037764 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071802183 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072379764 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072705132 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071767486 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074908761 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073254915 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071443687 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075252011 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07636079 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071879915 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074700399 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072116003 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070233458 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074645319 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074834363 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071340473 seconds)
  done (took 3.339851687 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078857609 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073893582 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07725458 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073290882 seconds)
  done (took 1.890302147 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076393217 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087359076 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089118791 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078767467 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091274507 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086826292 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068582458 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068457402 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069804014 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078285229 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067477149 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09509622 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088586168 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07867924 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081061754 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064825407 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066603285 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087982455 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079092074 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079763111 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069849596 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078350942 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06778781 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088267275 seconds)
  done (took 3.476866353 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084058642 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06548036 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085392508 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092655007 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093967979 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067461438 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.086431388 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092922198 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140082228 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067761168 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073309144 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068108618 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105621107 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067835675 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085884693 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.111175358 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114116513 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071280066 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099948828 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06758487 seconds)
  done (took 3.338830631 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.082573583 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070553206 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071826006 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067372357 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077805665 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074862357 seconds)
  done (took 2.044802013 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068119957 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069948645 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06952775 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068617797 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073938507 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071442983 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067511914 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068972321 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069355976 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069087193 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06893924 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067621229 seconds)
  done (took 2.426588194 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.161252304 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071517889 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07174091 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068712115 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073666826 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068391781 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084017993 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070682579 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.088734985 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068154796 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068207434 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070688284 seconds)
  done (took 2.558972053 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183278021 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075430144 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216684983 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144675734 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101780074 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1111179 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11088249 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109684188 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.131984409 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096761356 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153792571 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1515825 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101961296 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127122508 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08880369 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.125775382 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138562561 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154432578 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100454918 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154251408 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132906379 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118183886 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139439141 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099335134 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099674702 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114480003 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072559111 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077409474 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15501122 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121297901 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128833628 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101735317 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08613531 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161874279 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151773128 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130388491 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1407354 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079214082 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.11484096 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.124035317 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1864024 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084716525 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143794803 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100008249 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075755233 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116743289 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10622526 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.110514456 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.094787181 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083879423 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272182132 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169892347 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128524261 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083118395 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117606765 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103551946 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.107951535 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112206333 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164386423 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146764486 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121083093 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071067121 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108192933 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141515594 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124465999 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103604886 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117373916 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088887286 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126117869 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145849483 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126586767 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132580675 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115065954 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084698197 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111653383 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126355659 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114013864 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154399955 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112986941 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070955409 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112951551 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094194179 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078971745 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142347064 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074232036 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159340017 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097042648 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120721952 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124585895 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106021667 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10476212 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145013704 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132377169 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101639209 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085485994 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100756546 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114237218 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131220733 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082758014 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104939438 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107679062 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078124979 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121790209 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074316545 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112526477 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093738542 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113077914 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115464537 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07773966 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265009714 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099054507 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099141465 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124322421 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145289221 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085121944 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079184135 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153512929 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11422808 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100015962 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135716792 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14507269 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118219744 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095925181 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134865268 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162155657 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08943556 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148879258 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09782733 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082461501 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.104517752 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114665344 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106260476 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118998387 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079126653 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.109963888 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149892639 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073031828 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093736699 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125024303 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080086119 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077751119 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097160742 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09612155 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09393508 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097861902 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.098045563 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121956107 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111675735 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098178424 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11420796 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091535305 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151322026 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085460721 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099948413 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10163883 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072315908 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126254883 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142721764 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077182326 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149965355 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.11494113 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107700867 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109193576 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081120849 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130158124 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077636683 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071979299 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128867533 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10366965 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100629377 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.132690132 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260644873 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.117581165 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.113386943 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120335745 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121745206 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122467435 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103867588 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088386573 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1105544 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121784047 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072058772 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089129335 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081245988 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099803306 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090425302 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081540248 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127895739 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112767259 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102564642 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106246139 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090654756 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135725754 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074614743 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115132492 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.113903529 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09212123 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.140963314 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138174934 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119301807 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096843177 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12713365 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072444179 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07352316 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.083473402 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115699923 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080430312 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081885833 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105138094 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134762632 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118113034 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120908154 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114936276 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109407199 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144231135 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072483703 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11903449 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133145256 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113640105 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102735736 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088980715 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095100547 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131112978 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099928289 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169379166 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108026499 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116969507 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143864451 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09821003 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077850139 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099911134 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120885355 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091515959 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.282893972 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094689554 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085818096 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104324627 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078080787 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094159269 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118561064 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10879918 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127988077 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.106924185 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121664448 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077603963 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104813261 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115388102 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113157102 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083607462 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114148552 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153372545 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095046275 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111832939 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139260184 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077064713 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133434584 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157446659 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135297688 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081312532 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098190964 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114628298 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118995019 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113482904 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130680835 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095668689 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129498831 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105776826 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086535967 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084181411 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092957553 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097280379 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108709158 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.09902509 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.107598586 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093193007 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123947966 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098960997 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106436502 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111452252 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098401437 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096570471 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094037699 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161676794 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1105372 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156256229 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09675353 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.131924911 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148388914 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074318991 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077638705 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078441898 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128348706 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081851789 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116520208 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.257612415 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111118867 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113355956 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131952093 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093883651 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071513026 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104457513 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122945301 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11906952 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093783338 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.098550326 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148334082 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115319263 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078126021 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109167221 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11267236 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10073342 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159526626 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081715421 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106246524 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075884676 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078699493 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118788394 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141832445 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084343479 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102620525 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114377239 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104832895 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118612457 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092700297 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10805302 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124593813 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134417478 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117500872 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.085039185 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106119474 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119310969 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142067996 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100073985 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096488463 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156247709 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13635559 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.144580865 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.082488839 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106145314 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105624505 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104721719 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126105028 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082550663 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149817206 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077367415 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122632949 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093542254 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083726149 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119296333 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108913872 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085969625 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130534585 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104259424 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077456887 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074294909 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256762223 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109106395 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094647756 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07329847 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128056956 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07250085 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124296581 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156480103 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078787411 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101086735 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093992206 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080580667 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098756737 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09849735 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084636699 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097197006 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156757464 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084201819 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136232042 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126063009 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106477778 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128308685 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099050324 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640919552 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078602532 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138955824 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109575958 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163435889 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093886783 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109661013 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102332686 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108494232 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129056729 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095525441 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175382081 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120243449 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.108623435 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07479908 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095074436 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09777103 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.084041919 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101192281 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106316571 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103011898 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.08862588 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106477584 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110432841 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.078567519 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094136146 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143024765 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108651228 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131335481 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127915052 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079726307 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108780298 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124037418 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078352376 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.112155332 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135044657 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250760066 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097587535 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081872647 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096000366 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158142492 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072387313 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141977574 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111994574 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104531224 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108456803 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.104046398 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12146731 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097022364 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114425522 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088805781 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104047359 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107341239 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082428154 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077721719 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101271296 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105364472 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094229294 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092791862 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096979686 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137418536 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071273732 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094219852 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110141883 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127578957 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155453928 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.100624959 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07984611 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107922252 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108791699 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.103569251 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11037575 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111847242 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077470756 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077098718 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098996211 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1185938 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104826868 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109925797 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102346212 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146282276 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.080292106 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221379894 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089763122 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097560668 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08463116 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076580969 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091358405 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090358411 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100446144 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107426971 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156605725 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.089644697 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.085199332 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086181361 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072029061 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078917832 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115546219 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101450242 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105350721 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095491911 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.077524018 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093092812 seconds)
  done (took 55.852896723 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103678245 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.076996953 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096753272 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144848992 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121517715 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199010316 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150012239 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187338152 seconds)
  done (took 2.83636351 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067717001 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094416304 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102272297 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082729283 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066850772 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067676418 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228993094 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079685994 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065692621 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091074743 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.075726678 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067405075 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.426688369 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06735007 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067821023 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074470334 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066540063 seconds)
  done (took 3.503680576 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.379284188 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.595129287 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.362162887 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074494659 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.928692694 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087858338 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.196715652 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136223884 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080324649 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.523569978 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367015949 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129849384 seconds)
  done (took 18.585218413 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080018546 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077535445 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09120565 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091062163 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080008651 seconds)
  done (took 2.134003209 seconds)
done (took 105.491990787 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079762623 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.191113403 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069837878 seconds)
  done (took 2.003516068 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08908389 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087035422 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090213952 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088332838 seconds)
  done (took 2.077236229 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074741533 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075931316 seconds)
  done (took 1.868072837 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233450841 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172045641 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095003604 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081815365 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079669351 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081841102 seconds)
  done (took 1.969522249 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072045855 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071911227 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072807673 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077693282 seconds)
  done (took 2.01180144 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.070459299 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066005407 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068328044 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071107938 seconds)
  done (took 1.994445314 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083483725 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083411491 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080994324 seconds)
  done (took 1.964453368 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101387586 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093176099 seconds)
  done (took 1.910800538 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080163533 seconds)
  done (took 1.800579023 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092511554 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101574176 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129024858 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111520254 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138503498 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115353392 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.081256085 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086881839 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079261613 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086139513 seconds)
  done (took 2.738660515 seconds)
done (took 22.636930483 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07792426 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371008823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359420556 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089109781 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671710244 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359222648 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.9920117 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094383066 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110021553 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071046329 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087030698 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651359883 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981477466 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33200634 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966384412 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329397513 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652612647 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069402434 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070190311 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07084814 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.978075593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070117609 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070863435 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070409149 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652286533 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373798421 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070346074 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.331767982 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070983349 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073750251 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359601439 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071507603 seconds)
  done (took 16.294579325 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070803448 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120334566 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072994568 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084862786 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070845155 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072418773 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074176915 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070713334 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11664344 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068839421 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085690042 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067856888 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072737662 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069186881 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088037235 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067899468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070645834 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069109847 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068787907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069185741 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087354966 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068662963 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068978466 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069464885 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068949414 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080886484 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069752449 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068653303 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069453377 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074564089 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076286598 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072489435 seconds)
  done (took 4.163272706 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116441257 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125042736 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077505751 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109511507 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119868077 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072645831 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148796507 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096195225 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122877845 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071259801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08799301 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0707168 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10367826 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072776253 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092962432 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071756539 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074636713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070712162 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069836136 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07225849 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087706926 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068798742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069512701 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069010644 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06922991 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083141506 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069685147 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068594389 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068524238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072372581 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074113708 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070101925 seconds)
  done (took 4.454620953 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.06993218 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073729283 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082815073 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083022547 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069785738 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071608545 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072910508 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06952247 seconds)
  done (took 2.334019387 seconds)
done (took 28.978648431 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077345618 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068610027 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073133098 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088616663 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076439026 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079965093 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067251127 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07630666 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073849973 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073711376 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07744526 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068574198 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072161829 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067170575 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073588755 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068544082 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081989191 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072330997 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080513049 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081516111 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071119994 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07424602 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076677271 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081858965 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081135221 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08144116 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078190106 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074415061 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069799024 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072458301 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07179664 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079699993 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.083194313 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083737062 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068979356 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069184646 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074375051 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071049766 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082640231 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077921263 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070593565 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078428214 seconds)
  done (took 4.879731069 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082298298 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087674703 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08054501 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077830702 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09677403 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083995823 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08899294 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079921214 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079897131 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087725101 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07565484 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.083007872 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079895747 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.074819176 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079116794 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076720285 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081314615 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075170154 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078861245 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079604845 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089358508 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.075279519 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088415 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080778695 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076679764 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081961036 seconds)
  done (took 3.868605275 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072619387 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08491123 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094383892 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146356461 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11407841 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08824756 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083392284 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094394468 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098642271 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070061262 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074891986 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09411874 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095238399 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07560577 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.111844686 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08495392 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08392519 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071120805 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07703505 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098244665 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089869198 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086618894 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095679476 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086236354 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069411919 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072006537 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074310215 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084915206 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071948043 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080713978 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072549668 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073082486 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069950058 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079449549 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072022532 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068460943 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094004098 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081770037 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082068207 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.107534946 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078730812 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070998548 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094501504 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129300846 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06889018 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073371834 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072809019 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080705606 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068976976 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096857844 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08141817 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068889467 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070070369 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068675617 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068525837 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071716783 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071301578 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07116183 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079753044 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075607678 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091250607 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074558406 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088636327 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068898104 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080270277 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068299619 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07084993 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068031642 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098379397 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069885185 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114197896 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070302837 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067968277 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080923539 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080154245 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075465976 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068889136 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089080296 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079883917 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073069939 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077722969 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07293831 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071469421 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.1001499 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069655843 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069396161 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068280308 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076045391 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072479079 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070180883 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081398443 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069269765 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073238891 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089295784 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069481392 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070444681 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071357521 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068813557 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06864364 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080757306 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073189038 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071054446 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079905912 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070443633 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072902653 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082665527 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076731802 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068421071 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071227032 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072585677 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070721723 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071380232 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072824777 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071209892 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076363207 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076204287 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075518621 seconds)
  done (took 11.058715461 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162757028 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15590076 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07158868 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150862262 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078528353 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082940736 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151407324 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099051002 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070863515 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071812794 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069969934 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11068328 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106035059 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118306803 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082099298 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070579765 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096131527 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116366736 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155345098 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149291428 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09247312 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078757941 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073239487 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.0720581 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07185689 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079847287 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089614757 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.0794554 seconds)
  done (took 4.592138181 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076544464 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106427803 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074048645 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093642474 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090144017 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07078592 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073447949 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071906923 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08671763 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078785236 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070615429 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076041521 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073927368 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073225922 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070983198 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07676194 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077658211 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069684256 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073822028 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075831071 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080064239 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094446812 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076474486 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070201182 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.0730779 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07036557 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07786557 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082028555 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069970026 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.10675626 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068333472 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074745519 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084382946 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07048593 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069473503 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070015593 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070216173 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070401335 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070573481 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068804662 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069014375 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074155476 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069128754 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078433155 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083184693 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076407432 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071949941 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073003658 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072994199 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067629291 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072777376 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072849133 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072615582 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077341875 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073929422 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072675811 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071012007 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097386301 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076273424 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069275545 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069232229 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068750696 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07219186 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07927255 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084964078 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072823384 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068825199 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070313374 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082010972 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083199826 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069375077 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075096544 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067742721 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069776259 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073145875 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072494169 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070646953 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068995325 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069928875 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070277504 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070174707 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069860058 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069181175 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072459849 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068963246 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069056009 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070039899 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074404419 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076954953 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069671087 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073654931 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070740071 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068826361 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072590401 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075079244 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073027727 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080600603 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080811413 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070383429 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068748575 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08584835 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075886513 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068773336 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073436062 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072312504 seconds)
  done (took 9.632616956 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089127484 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070034825 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086277175 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093415633 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079614649 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07539458 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080163172 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070071343 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086993428 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074857508 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077424499 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068312494 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080928397 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079607047 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071290394 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080749155 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073025881 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090040203 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084464344 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069177789 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078911623 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082155651 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082349527 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084038431 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084024649 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085108296 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081771507 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079352077 seconds)
  done (took 4.02976737 seconds)
done (took 39.795483399 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.850502886 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.080603042 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.816328956 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.031368146 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.865001403 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.062737044 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.905185738 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.822951314 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.081600879 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.831805984 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.103953558 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.313014671 seconds)
done (took 67.633279656 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.859548966 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.966238597 seconds)
    (2/2) benchmarking "String"...
    done (took 2.064415337 seconds)
  done (took 5.776060354 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.031584493 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.470717603 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.077118776 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.812428538 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.81878595 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.240207677 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.582993843 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.26457062 seconds)
  done (took 31.014090604 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.94900096 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.030260723 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.510370919 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.542840649 seconds)
  done (took 15.820997328 seconds)
done (took 64.340916869 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.828263811 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.812447067 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.872009555 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.840381627 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.820724502 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.813442572 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.816246979 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.814173165 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.827002858 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.835603476 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.811059869 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.818263241 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.815608795 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.850356467 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.316682434 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.860387162 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.821939793 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.822072321 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.816817116 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.847654879 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.81093583 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.815098108 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.238202983 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.966267405 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.428275203 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.96835753 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.146436841 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.213760867 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.823387418 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.811661734 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.032289422 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.062815385 seconds)
  done (took 205.125857386 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.812282565 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.806801146 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.914466932 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.850538439 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.209937461 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.995603264 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.916709407 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.280087842 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.82076412 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.831078445 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.014910747 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.818352295 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.02420856 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.833151693 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.848834277 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.814155479 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.023073858 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.045120164 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.85745848 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.978730042 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.828327988 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.905160098 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.855165125 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.993088343 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.846305228 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.821329693 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.836143484 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.820280235 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.999493206 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.002868166 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.834801735 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.862220835 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.020132658 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.684414043 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.826475211 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.841649014 seconds)
  done (took 171.422279016 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.997361363 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.822653116 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.815198311 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.86836878 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.936816724 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.819545655 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.491021646 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.822681289 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.149298861 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.819337174 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.814692617 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.815209988 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.815650636 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.813996665 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.924898706 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.829651182 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.819603276 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.831079787 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.818835257 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.842006234 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.816159703 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.816546265 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.81624487 seconds)
    (23/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.817858337 seconds)
    (24/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.815502306 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.817167606 seconds)
    (26/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.816438654 seconds)
    (27/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.817905872 seconds)
    (28/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.816719278 seconds)
    (29/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.093680713 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.067930579 seconds)
    (31/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.816980355 seconds)
    (32/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.816531997 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.380695091 seconds)
    (34/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.830002192 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.092342396 seconds)
    (36/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.821471084 seconds)
    (37/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.908645936 seconds)
    (38/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.870417148 seconds)
    (39/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.93740529 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.822056597 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.034173777 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.896714289 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.817612436 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.817404985 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.880941027 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.830407952 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.820376707 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.815819509 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.822662194 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.882025667 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.060397047 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.819473163 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.938066499 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.301201349 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.818479513 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.818285576 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.817889546 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.410205779 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.822246124 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.817548185 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.824028506 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.823099926 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.818608545 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.816727575 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.2037597 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.888834157 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.136484826 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.038090317 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.820636451 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.622372304 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.940928948 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.818299071 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.818350498 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.818842006 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.819865274 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.818600318 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.82082345 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.940605878 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.829633116 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.942456363 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.900301805 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.941276939 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.823537373 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.818389665 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.82608503 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.641291868 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.888097449 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.852924132 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.647482155 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.820257474 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.192006695 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.582760743 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.819257068 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.819015829 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.83205394 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.82448797 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.819756178 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.821041975 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.899005681 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.820998797 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.942120667 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.544398284 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.022775978 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.822379008 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.820152725 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.825387502 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.9016001 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.94170698 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.824937257 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.885761667 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.828051717 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.822232884 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.91068473 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.821000151 seconds)
  done (took 405.753053972 seconds)
done (took 786.101731799 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.449196538 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.42048004 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.517312074 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.435420458 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.411289934 seconds)
  done (took 13.987077782 seconds)
done (took 15.742388225 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.898319492 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.906046325 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.840689946 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.90370771 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.836150521 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.902559439 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.884502818 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.842053904 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.869395704 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.843617335 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.871334417 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.845895758 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.829081244 seconds)
  done (took 26.028251741 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.051534575 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.060170258 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.888616741 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.057790036 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.861312353 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.053789556 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.983874041 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.9768409 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.971163721 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.831936253 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.831530656 seconds)
  done (took 23.324123797 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.049503481 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.061645281 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.893055026 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.05441904 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.865101155 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.057491009 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.985779246 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.975092038 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.974228784 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.832940455 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.830701772 seconds)
  done (took 23.335690618 seconds)
done (took 74.443685055 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.824508377 seconds)
  done (took 3.5796674 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.841504376 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.998908315 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.82407477 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.827131994 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.824616134 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.824686254 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.827052824 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.825353467 seconds)
  done (took 16.552442815 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.824785113 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.824631658 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.824701351 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.825333287 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.825698863 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.825025842 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.824796306 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.825403474 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.826056642 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.824700409 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.825191071 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.825727656 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.825575239 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.82585586 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.826700883 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.826403235 seconds)
  done (took 30.963050037 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.828068493 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.826426834 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.826282429 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.826748535 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.826083113 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.826830438 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.827343328 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.825986185 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.825761708 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.826603988 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.826628582 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.826713724 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.826778109 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.826555288 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.826386492 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.826781237 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.82609603 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.826296987 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.831747875 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.826034972 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.826601506 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.826845557 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.826630583 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.826972804 seconds)
  done (took 45.606705723 seconds)
done (took 98.459551682 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.543311029 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.41299247 seconds)
  done (took 9.713925094 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.831555721 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.827005275 seconds)
  done (took 5.486960949 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.826779543 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.828519298 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.828219893 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.828176553 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.827811294 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.82746024 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.827437822 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.827111119 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.827100745 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.82763299 seconds)
  done (took 20.035477203 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.827393832 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.827632228 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.83000059 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.827451384 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.828710073 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.827800601 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.828475843 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.827860372 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.82890665 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.827936524 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.827945608 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.828677567 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.827883566 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.828668148 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.827798663 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.828639852 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.829122607 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.828542275 seconds)
  done (took 34.668710067 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.831469289 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.829511042 seconds)
  done (took 5.420875197 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.828570662 seconds)
    (2/7) benchmarking "second"...
    done (took 1.829005179 seconds)
    (3/7) benchmarking "month"...
    done (took 1.829803435 seconds)
    (4/7) benchmarking "year"...
    done (took 1.829987886 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.829244974 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.828583988 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.82874297 seconds)
  done (took 14.564073121 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.82939473 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.984101203 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.051160011 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.496613581 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.831180992 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.832615742 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.755660473 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.832862405 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.832762851 seconds)
  done (took 20.207223634 seconds)
done (took 111.857252698 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.689929314 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.84172467 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.100635266 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.897384847 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.846809352 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.121219811 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.844868308 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.10646811 seconds)
done (took 43.211748035 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.861360563 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.385336659 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.412765617 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.60652708 seconds)
  done (took 13.165984579 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.844258835 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.166243992 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.852244533 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.63170137 seconds)
  done (took 22.281493274 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.191130542 seconds)
    (2/2) benchmarking "read"...
    done (took 2.171290231 seconds)
  done (took 6.128058018 seconds)
done (took 50.202395162 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.830727263 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.829689163 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.830914 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.830610987 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.829889931 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.830198527 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.830398422 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.831268992 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.832306536 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.831162795 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.831153118 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.830955702 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.830980714 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830604675 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830313786 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831968612 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.830353308 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831012654 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.831389117 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832173006 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830496159 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.831507713 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.831244989 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.832308955 seconds)
  done (took 45.706017476 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.832539782 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.832335663 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.832903115 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.83202127 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.833267892 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.831663234 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.831826815 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.832577874 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.832426227 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.832939767 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832045944 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.832214177 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.831812278 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.831533984 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832599012 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.832882443 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.834185492 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832871968 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83235117 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.833394605 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.832486522 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832840202 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.833039905 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.832602124 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.833784533 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.832474717 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.833074449 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.834122021 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.83348761 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.833254652 seconds)
  done (took 56.747520252 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.833628141 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.836055618 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.834163003 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.833328828 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.833746612 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.833267145 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.833626325 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.833403872 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.834396918 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.833120095 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.834499754 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.833865465 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.83501507 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.834340655 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.834342363 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.834404385 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.83479824 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.835113157 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.834096182 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.83413639 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.834600903 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.834352064 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.834873654 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.834332347 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.83648959 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.835981878 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.836182967 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.835641441 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.834722464 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.834589615 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.835262072 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.835397714 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.835740233 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.8356285 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.838256248 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.836014426 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.835726122 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.83615242 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.836095971 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.836193018 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.83486504 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.836307843 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.836714904 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.836170718 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.835756235 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.83615688 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.835676786 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.836841785 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.836775578 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.836573546 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.836298362 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.835795745 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.836466195 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.835065582 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.835689254 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.836601077 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.837234955 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.83639316 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.836084013 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.836688277 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.836232908 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.835864461 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.837254908 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.836727156 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.837226627 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.83750133 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.83677109 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.836451153 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.836996202 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.837084915 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.837193456 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.837394173 seconds)
  done (took 133.929644734 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.837030316 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.837648836 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.83755395 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.836782158 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836645297 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.837834436 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.838473765 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838105093 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838113867 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.837676266 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83876386 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.838376291 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838478468 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.838711011 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.838199362 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.837612161 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.838109119 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.838311163 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.83948982 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.838653462 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.837708983 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.838526097 seconds)
  done (took 42.205195743 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838649392 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.838756281 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.838751478 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.839347476 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.838849533 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.838460684 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.838140811 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.839157801 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839592179 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838524463 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839335234 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838626931 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.839737591 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838424974 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838446345 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.839447798 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.83930544 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.838756615 seconds)
  done (took 34.870057827 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.840813043 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.84091743 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.840001112 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.839947232 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.840791173 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.839433143 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.839340068 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.839174251 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.839510385 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.840005898 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.839985679 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839982926 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.839963115 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839724499 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840156623 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.84092816 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.839868118 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841109821 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.840188855 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84047423 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.840105182 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.840071035 seconds)
  done (took 42.253550853 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840757813 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.840529271 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.839885674 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.841241793 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.840722473 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.840897151 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.840919665 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.841346666 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.841492014 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.841259103 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.842693713 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.84231674 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.841201924 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.842576319 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.841396825 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.841634618 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.841038143 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.841307146 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841265484 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.841804445 seconds)
  done (took 38.598377711 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.842047156 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840954701 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.842109232 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.841428905 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844743799 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.84180354 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84265181 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.841656929 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842086435 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.843063497 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.842099099 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.842316822 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841884205 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.841980126 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.842546934 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842657603 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.84315414 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.842621274 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.842713107 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842973282 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.84269205 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.842401144 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842865108 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.843368415 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.842612734 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.842612614 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842756226 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.843650938 seconds)
  done (took 53.363209254 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842716829 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.843345398 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.843620189 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.843404927 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.844144827 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.843799861 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.843127766 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.843605389 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.84443703 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.845127865 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.843933808 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.843886689 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.843147334 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.843370139 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.844162908 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.845141803 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844273725 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.843183987 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.844655783 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844157145 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.844094761 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844089913 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.844073297 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.843618183 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843451084 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.843788107 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.845389563 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.844507708 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.843926209 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.843920898 seconds)
  done (took 57.093061213 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.867916413 seconds)
    (2/2) benchmarking "in"...
    done (took 1.865171278 seconds)
  done (took 5.507607051 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.844617557 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.844949174 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.844170139 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.8453627 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.845150878 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.844632373 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.843639475 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.844590637 seconds)
  done (took 16.531900322 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.845180861 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.845163211 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.845270968 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.845467424 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.845822779 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.847832449 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.852141116 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.845537461 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.84587901 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.848103485 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.852792863 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.857228053 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.849061399 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.846940411 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.846502741 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.84898201 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.846606075 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.845694062 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.846366867 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.84617297 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.846638874 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.849253003 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.848729056 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.846879387 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.847936365 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.857287221 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.851483802 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.847380657 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.847172252 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.850346185 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.847546868 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.847632743 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.848093135 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.846831555 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.846560748 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.847431731 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.854843237 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.848317651 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.852714647 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.847282955 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.847890485 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.847897896 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.849164348 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.848697772 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.849783219 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.848643506 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.848761164 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.84880883 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.852460335 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.849848823 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.855503576 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.846745108 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.847467186 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.851589757 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.849963677 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.854999438 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.849234034 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.851334522 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.857016634 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.858501248 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.85999255 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.857132583 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.850990627 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.850299368 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.858349427 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.873662397 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.854678826 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.84854767 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.849056011 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.85005541 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.856290467 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.861204896 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.860119289 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.850026965 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.84978334 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.849635608 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.851621101 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.850041021 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.85714051 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.853714934 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.851431731 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.850233105 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.859858917 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.872753533 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.850273983 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.851104592 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.850492449 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.850381737 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.851350855 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.861208045 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.850921522 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.850850576 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.852862723 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.851375441 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.853657257 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.851098911 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.851365332 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.852186287 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.850564592 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.850924394 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.850848686 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.853806407 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.860349541 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.850774658 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.851187647 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.857451483 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.851108081 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.850980933 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.857267797 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.851132613 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.851405163 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.853137719 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.85756707 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.851782816 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.854482405 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.861187337 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.851955829 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.853955087 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.851809398 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.851094782 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.860161907 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.879654282 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.853228887 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.852109992 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.857021571 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.865050965 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.853368293 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.856669045 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.851747032 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.853037873 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.852619178 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.855079287 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.852925738 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.853356976 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.853334685 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.853642421 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.852603399 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.852865396 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.853359242 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.854178195 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.855817908 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.853215049 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.8546938 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.855779532 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.853111644 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.856477469 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.858910838 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.855404171 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.855106877 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.855981353 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.85395768 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.853342055 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.855038343 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.854323714 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.855909236 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.853782225 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.854099135 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.854468018 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.855005127 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.853466893 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.852887427 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.856331297 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.859097685 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.855553293 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.858348248 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.854918923 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.854828225 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.854649725 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.854223997 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.855417616 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.85471099 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.85602176 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.858399192 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.862909083 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.854508603 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.856215247 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.858077243 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.85490188 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.856487931 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.855657294 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.858322973 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.864334685 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.855330856 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.861452554 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.856726183 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.855581438 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.855869869 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.856331969 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.855903092 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.856728244 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.858768489 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.863776756 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.866739141 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.865833145 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.858819492 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.860619947 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.859080797 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.860044293 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.859901896 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.857598151 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.855497189 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.856764416 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.856301547 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.856657409 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.857390347 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.857689895 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.8579258 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.857250566 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.856597343 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.857709648 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.859200391 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.858538351 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.85776792 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.856428537 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.857092884 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.857561946 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.856686956 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.856890735 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.85780382 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.858758648 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.857517441 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.85849125 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.863730761 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.85789752 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.85829204 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.859446158 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.860631503 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.860234169 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.859450934 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.859676066 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.859715893 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.864606132 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.861884781 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.859496413 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.864266317 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.860250687 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.858732703 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.861761227 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.85860048 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.858318024 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.861705445 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.865985886 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.860279058 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.860684458 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.858968844 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.859458545 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.859015569 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.864993967 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.859560327 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.857521746 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.859497295 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.862656603 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.858937671 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.861095735 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.860322428 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.861299706 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.862068001 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.859082509 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.859722723 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.861505863 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.859381232 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.859977696 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.859231966 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.862408609 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.868046498 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.864341659 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.861393274 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.862522411 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.861889695 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.864124705 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.86094796 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.860257283 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.860507895 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.870824927 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.869501797 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.86676954 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.861645777 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.860358997 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.865013329 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.862612707 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.866949388 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.860996904 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.862076147 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.86103501 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.86397665 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.860584657 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.861615469 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.861308091 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.862176068 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.861986081 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.865204878 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.86233593 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.861149604 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.86207031 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.861282461 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.861547755 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.861340794 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.861350978 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.863595639 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.863608414 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.864080217 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.862315237 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.868500397 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.863303048 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.862651703 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.86179121 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.861425174 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.865831629 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.864952514 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.862668128 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.865901403 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.869583169 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.864684153 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.872394592 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.86368809 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.871201699 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.862855711 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.865054614 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.870734869 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.862862344 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.863174311 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.864658683 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.863768384 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.870170754 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.863665534 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.86573758 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.867948813 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.863113616 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.863341545 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.86262057 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.863786156 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.863532123 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.863536128 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.871325617 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.866672733 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.868205278 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.866118532 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.863920552 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.864567984 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.865523212 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.864937762 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.868546408 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.864894494 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.864569473 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.864369685 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.866088618 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.864527866 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.865498694 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.864277398 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.864980707 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.865100132 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.870179527 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.86737218 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.869600357 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.865606632 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.873057203 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.866069544 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.871654462 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.865649525 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.867448036 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.865086309 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.863704955 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.868356114 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.867160764 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.866354703 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.864765038 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.86767151 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.868915085 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.866117456 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.868687225 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.866053254 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.866747476 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.866320224 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.873990423 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.889870248 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.866997679 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.869563729 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.865478467 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.866749601 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.870875577 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.866157334 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.866626148 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.869105138 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.876540709 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.874518694 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.868095687 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.865932128 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.867768705 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.868801262 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.867217716 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.866780092 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.866732199 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.867782131 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.869443248 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.867125751 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.870061166 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.866875694 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.869514545 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.868558306 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.869533197 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.877585906 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.869668514 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.870228651 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.866982124 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.868011441 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.868184942 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.86792871 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.86762103 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.868915118 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.867898872 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.868620333 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.873200592 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.875919604 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.870481361 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.867353477 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.866876658 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.868735267 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.869808716 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.867705447 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.867978219 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.869040557 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.869168094 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.868410391 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.870776017 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.869122401 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.867579653 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.870942273 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.868273162 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.871207098 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.875757037 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.869107887 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.86864216 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.868223888 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.868707424 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.869460617 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.868960481 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.876349645 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.871343299 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.880490903 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.879409593 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.874005231 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.871283222 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.87296213 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.877657418 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.870504505 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.870174156 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.869332075 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.87121559 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.871780887 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.874782167 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.870398395 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.876829324 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.872109141 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.872144058 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.877810292 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.872785948 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.870755285 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.870981552 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.874551859 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.871307056 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.870538005 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.870460214 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.870090935 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.876653836 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.871870429 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.870965218 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.872510755 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.870325545 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.872062464 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.874402625 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.871297728 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.872144991 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.87098665 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.871397409 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.871658839 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.87101987 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.871257986 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.873029914 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.872339711 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.873587654 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.880501228 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.87186719 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.874211418 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.871989111 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.874212067 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.87207685 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.872691961 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.87111 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.871375396 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.873644715 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.871583659 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.872583989 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.874102124 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.873406741 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.874505008 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.875918781 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.873425187 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.875179499 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.882633011 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.880364512 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.873818973 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.874136752 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.875433938 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.876207885 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.873223897 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.87273647 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.872476109 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.874689916 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.872378979 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.874090752 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.873518611 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.876373181 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.888571918 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.873239524 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.874197568 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.873918536 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.877478867 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.87318458 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.873172803 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.873574945 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.876838478 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.876396617 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.881745193 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.874191206 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.880280761 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.874307279 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.875623201 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.878003836 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.8776652 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.884194556 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.877189528 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.873763209 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.874945515 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.878324984 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.891504735 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.8751831 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.883412185 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.902851868 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.876745184 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.877539332 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.874624571 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.87451595 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.875663217 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.877802162 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.874547646 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.875178513 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.875502538 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.875580091 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.878371559 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.880941863 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.876833668 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.87565133 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.875133415 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.876930187 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.877840656 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.875743655 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.875601489 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.875556901 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.87593658 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.875792728 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.876661162 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.876565544 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.887298497 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.887708525 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.877963554 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.876672783 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.877367409 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.879415795 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.879534462 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.886586074 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.883672176 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.876112823 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.876016102 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.877625114 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.877268287 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.876159662 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.878473399 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.87718901 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.877469339 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.876815161 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.888981893 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.88550218 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.88185124 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.878791418 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.876794282 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.876859944 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.878011348 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.877105257 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.87739777 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.878701533 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.879679257 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.881852343 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.877730301 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.877317155 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.880282641 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.885755038 seconds)
  done (took 1112.729433592 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.878379189 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.877244823 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.8784266 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.878086371 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.877923315 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.877618663 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.877332458 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.87713943 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.877893932 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.878570818 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.87897412 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.87850208 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.878718014 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.879379727 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.87889563 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.88113208 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.87869584 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.879344288 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.878849774 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.878856205 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.879441763 seconds)
  done (took 41.257135879 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.880260581 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.878966518 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.879580098 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.87895827 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.879667622 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.879927592 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.879398712 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.878364282 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.8803595 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.881193466 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.87959264 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.878976611 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.879382539 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.879754843 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880282562 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.879396849 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.882395894 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.879321984 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.879672535 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.880246055 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.880094465 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.880482047 seconds)
  done (took 43.165463285 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.88064681 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.880974898 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.880484525 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.880033579 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.879434865 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.880430102 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.880071647 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.880274263 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.880944525 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.881980684 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.880978401 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.883993513 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.887647924 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.888880549 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.884675747 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.880329186 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.026877158 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.881023758 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.881924231 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.88197228 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.881761194 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.885814751 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.882583246 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.882238084 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.881831337 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.881835683 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.881669704 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.881043076 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.881179961 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.884357625 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.886461188 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.881166875 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.881729747 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.884081052 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.886777338 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.88437283 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.886035412 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.882878033 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.882435255 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.881819592 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.890710771 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.906724044 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.882485696 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.888463014 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.882351946 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.882706744 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.88456525 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.890656637 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.882273421 seconds)
  done (took 94.247776302 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.885242722 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.882784084 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.882668003 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.88233702 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.882451419 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.88278903 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.883278313 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.883783157 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.883344382 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.885013951 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.882606598 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.882765572 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.883648033 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.88219453 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.882426031 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.883125065 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.885490593 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.882829363 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.883207679 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.882662089 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.883074324 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.882872876 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.883743368 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.883621426 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.883814992 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.884416642 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.884140052 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.884428117 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.884249208 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.884267315 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.884242067 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.884188943 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.886241664 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.884730907 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.884267389 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.88506206 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.88512887 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.884822981 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.884982696 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.884122851 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.885275517 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.884076271 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.88470383 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.884783753 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.88390313 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.884264279 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.88472046 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.883517646 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.887949648 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.884884579 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.884777436 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.885178839 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.884805181 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.885101308 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.885223017 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.885439321 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.885535981 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.885205688 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.885336516 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.885620866 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.885061828 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.88613981 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.885713918 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.886440149 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.887290599 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.88556919 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.885777912 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.885396773 seconds)
  done (took 129.95324884 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.887382832 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.887473738 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.886453533 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.88720361 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.887410012 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.887021306 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.887180968 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.887420255 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.887637028 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.88653169 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.88809455 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.889303456 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.887886059 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.887461738 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.888067585 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.887629934 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.887855003 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.887748044 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.887856689 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.888204866 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.887636935 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.88790542 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.88749335 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.887466634 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.888624629 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.887832205 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.888678843 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.889554185 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.888119415 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.888228101 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.888722796 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.889760663 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.888669513 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.889463259 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.888251018 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.888678576 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.887972426 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.888833044 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.888184555 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.889555306 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.888481437 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.888655934 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.888851939 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.890118291 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.888564092 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.889001605 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.889425121 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.889425909 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.889169194 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.889122309 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.889311086 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.888970602 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.889800753 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.890662597 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.890193584 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.888450888 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.889202692 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.88868192 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.890397565 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.889620504 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.88851912 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.888321892 seconds)
  done (took 118.901487374 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.887962701 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.888871728 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.887638732 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.888932242 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.888275043 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.88802952 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.889444419 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.888767821 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.888330306 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.889043317 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889293391 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.891016347 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.88952635 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.888594703 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.888669379 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889193038 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.888178556 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.88876812 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.888366799 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.88778265 seconds)
  done (took 39.592500465 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.888057513 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.888090177 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.888175934 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.888537858 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.888210967 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.888027015 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.88941338 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.888622568 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.887943101 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.886887353 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.887758608 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.887752515 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.888118203 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.886685938 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.886981577 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.886721086 seconds)
  done (took 32.023262865 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.888310996 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.886780265 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.886871352 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.887832476 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.886927433 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.887770505 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.886071261 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.886330252 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.886162679 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.88691908 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.886598012 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.887014585 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.886488167 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.887272102 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.88648207 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.887118034 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.884464452 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.881480045 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.882604372 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.883458041 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.883364579 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.884893348 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.883003726 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.882511232 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.8829507 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.882426395 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.884827635 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.882840938 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.882071181 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.8832909 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.88243431 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.883059256 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.882550283 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.882374827 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.881387839 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.881991088 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.882022292 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.88252609 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.882176606 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.882398864 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.882078345 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.881810974 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.882079382 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.882199988 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.884343425 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.882531554 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.88122014 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.882795938 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.882677709 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.879207138 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.878747239 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.878507723 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.878876086 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.882014919 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.878099544 seconds)
  done (took 105.412770201 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.877363836 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.878565474 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.879357866 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.877419889 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.877401622 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.877677527 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.87686282 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.878341524 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.879119407 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.878672557 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.877331994 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.877831886 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.877797711 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.879046227 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.878006847 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.877772587 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.877282526 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.877506403 seconds)
  done (took 35.611457739 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.877612726 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.87826394 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.877041045 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.878005265 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.878054558 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.878993349 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.877700608 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.87794179 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.878545158 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.877426417 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.879453461 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.879547186 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.878391979 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.879239464 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.879420587 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.879287939 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.879171232 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.877818307 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.878223925 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.878703786 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.879256082 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.879181665 seconds)
  done (took 43.1344458 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.879216725 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.879324591 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.894574873 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.902840963 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.900617559 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.914829441 seconds)
  done (took 13.178782923 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87906154 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880044841 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.879327165 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878105937 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878892686 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879413922 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879440924 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879907988 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878935707 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879645555 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87932581 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878977836 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880816985 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879818143 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879754398 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879758177 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879975136 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.882553845 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880301237 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880529166 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880940385 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878837365 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879736913 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88065482 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879567916 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879345133 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878563054 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882175094 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881553838 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879894198 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880483044 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880033554 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880056684 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880571067 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873243193 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872978255 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873711943 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872875693 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874135384 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872732708 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.87068462 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870263374 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870083885 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870509783 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871541247 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870283175 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870028372 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870547676 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869912637 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870190535 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869246275 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869650329 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870163947 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869512815 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869024096 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869746111 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869908629 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869777891 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869046684 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869988863 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87049999 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868577827 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868993424 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869646328 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869139591 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870322905 seconds)
  done (took 125.583798432 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869410403 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.868311839 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869219346 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868955051 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870398798 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868201036 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867389116 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867946681 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868969777 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868880068 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868133076 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867380521 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868589696 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868171007 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86786829 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866663609 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867445758 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867159445 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867625591 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867814138 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868597102 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867263097 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867367561 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867134254 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867546155 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868573464 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8675975 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867309791 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86750366 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867094623 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867720881 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86770446 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867916383 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.866883373 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867410955 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867271492 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866908043 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867161665 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867283999 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867047375 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867726445 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868554417 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869230034 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867492047 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866887368 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867311997 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867909819 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870455332 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867633168 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865801817 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866707255 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867043059 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868448494 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866819734 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865918195 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86653488 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866212442 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867968675 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868593967 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86650788 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866649151 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866547407 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867213832 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86721802 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86639179 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867160021 seconds)
  done (took 125.066067466 seconds)
done (took 2588.432124128 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.886345897 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.980926617 seconds)
  done (took 15.663949408 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.028459391 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.981884258 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.867424594 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.891786501 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.867084959 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.89229053 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.894683775 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.866088453 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.865709883 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.865735042 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.867192812 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.049181529 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.923027961 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.866232048 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.865521264 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.957665264 seconds)
  done (took 52.35221198 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.868249917 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.87089476 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.880679013 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.872277975 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.869175776 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.882356983 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.899087241 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.871911684 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.902133504 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.881209657 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.938063383 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.881300968 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.86901982 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.919320655 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.882370475 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.883396789 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.960403817 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.946213295 seconds)
  done (took 35.874039792 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.945249702 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.882931361 seconds)
  done (took 10.633062928 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.891403928 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.924247224 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.866667926 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.877376172 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.86605599 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.900395653 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.886192142 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.885569203 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.889456163 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.066128831 seconds)
  done (took 70.851086472 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.878578075 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.877210594 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.875197882 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.872520833 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.87178996 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.878633836 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.872857545 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.876497765 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.549264625 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.92261367 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.882102263 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.878854186 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.872535522 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.874005933 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.871713037 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.89545554 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.0062475 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.870633045 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.870189552 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.878256387 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.872100612 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.925591889 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.88656028 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.874313324 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.903257877 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.543473451 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.880984532 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.87944244 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.979308926 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.870731977 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.872138426 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.064561302 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.874778789 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.337326832 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.135003779 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.878871716 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.887158179 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.879819447 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.873363636 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.992727407 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.874518959 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.879448838 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.824014204 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.11634566 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.974812267 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.917442132 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.187822492 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.892789969 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.874354612 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.902762357 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.876413718 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.87395719 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.888211422 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.388058922 seconds)
  done (took 133.060725518 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.873511412 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.231618941 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.040119225 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.877168481 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.156014418 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081577444 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.88085955 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.919990958 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.877119981 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.101610768 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.128186551 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.979372376 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.876009008 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.872898992 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.875485981 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.87419808 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.029578834 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.944753127 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.876972538 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.872745076 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900549127 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.116022011 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.996740297 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.876363571 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.901407023 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.083733269 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.996015846 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.977503406 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.664916545 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.873345875 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.936353794 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.87681373 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.878209028 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.873883888 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.029932767 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.967544381 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.959347397 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.879006786 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.874148453 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.87572667 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.623273508 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075284656 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.969643998 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.004564368 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.127872409 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079392909 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.652826043 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.875080693 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.620938033 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.037956804 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.102069975 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.10490704 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.996042683 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.877114372 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.137380067 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.875738087 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.873665488 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.124962482 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102553353 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.971405105 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.878064327 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.876274934 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.877256496 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.164295072 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.879084961 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.97128762 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.878061651 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.87592204 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.971460453 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.97366304 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.109005716 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.088989522 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.906684732 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.217399209 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.382094134 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.12145046 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.940586823 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125739799 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.8802483 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.875375661 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953987779 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.714315913 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.128787892 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.155960009 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.12073627 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.910034393 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 3.026263124 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.875649747 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.101408249 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.096166532 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.134362072 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.123351951 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.113693758 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.201367522 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.877882703 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.876820878 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.167651199 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.001103963 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.880411232 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.222489719 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.107148015 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.402167673 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.902460561 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.179410491 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008893564 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.879819193 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.504949829 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.878382791 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.104177686 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.917927326 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.878756966 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87761587 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.095168955 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.86261181 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879885353 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.760729043 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.93795249 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.880900371 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.109475616 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.881681478 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.144881757 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.881952806 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.111527742 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.250741325 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.907752648 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.050822339 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.122428786 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.880961043 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116958191 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.121466691 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.992983357 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.14888695 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.772531616 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.878320849 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.161897816 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.88178294 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.878851094 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.04625143 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.880522665 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.019965809 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.882425539 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.173605185 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900140858 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.116585693 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.884477895 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.132914482 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.912115687 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.929439833 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.88248426 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.009403306 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.88046664 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.799095009 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.036859376 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.880522316 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.881426026 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.427281361 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.880021938 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.02812226 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.108079117 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900211835 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.950768899 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.543421113 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.880083886 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963710006 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.90298531 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.271467693 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.881121204 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.131678753 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.882349108 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.879703037 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.881498674 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.165372472 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.114507023 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.884267918 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.879629717 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.783306289 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.880985385 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.880452725 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.061877182 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.223855757 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.881699437 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081294676 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.885526458 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.007990569 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.883105441 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.969342907 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.210032082 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.881571787 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.881018031 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.882585637 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.882947825 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.883091156 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.088266346 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.905631886 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.373202082 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.017631194 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.151621709 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.190066661 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.119892006 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.925248086 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.886482145 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.141555922 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.884418927 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.942538114 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.885785927 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901670708 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.107674202 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.885844354 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090431506 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.152349824 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.890634863 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.929104189 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.885029444 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.883289495 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.882617234 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.028178366 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.964833408 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.885509766 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.884340693 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.996872495 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.004036046 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.091751389 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.885429241 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.918441778 seconds)
  done (took 905.730372628 seconds)
done (took 1225.965456786 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.883882657 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.888157753 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.890510678 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.888347489 seconds)
  done (took 29.364711316 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.886026903 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.884589182 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.885276722 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.88435599 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.883854778 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.885490943 seconds)
  done (took 13.122190271 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.007605682 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.888992408 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.889668827 seconds)
  done (took 21.599985845 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.95559484 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.270203852 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.015915848 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.303214117 seconds)
  done (took 10.359677276 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.886377584 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.885603795 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.886729626 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.886490497 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.88753269 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.888111652 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.885834222 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.886064121 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.88716557 seconds)
  done (took 18.795019348 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.886388486 seconds)
done (took 98.943473653 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.973608733 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.982489739 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.952623623 seconds)
    (4/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.884942737 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.00641259 seconds)
    (6/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.095192686 seconds)
    (7/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.205009176 seconds)
    (8/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.708387382 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.889071862 seconds)
    (10/309) benchmarking ("sort", BigFloat, false)...
    done (took 8.159058038 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.248022376 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.905874736 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.978343123 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.0185556 seconds)
    (15/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.549531224 seconds)
    (16/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.904019382 seconds)
    (17/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.886016411 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.84066876 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.889575367 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.198122878 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.884737002 seconds)
    (22/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.050197214 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 3.622658557 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.007080008 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.288430931 seconds)
    (26/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.18078399 seconds)
    (27/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.137945685 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.332614962 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.071385482 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.177462312 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.888997519 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.892342693 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.078592462 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.500411517 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.202815278 seconds)
    (36/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.989531323 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.559699626 seconds)
    (38/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.887800264 seconds)
    (39/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.119673541 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.884838786 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 8.151925264 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.047560721 seconds)
    (43/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.974513116 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.060943807 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.990011162 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.886380179 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.684508151 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.203557135 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.892959852 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 2.202579386 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.206522808 seconds)
    (52/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.890189686 seconds)
    (53/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.479791172 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.264715304 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.836281873 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.572619223 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.151532054 seconds)
    (58/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.891914155 seconds)
    (59/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.084333054 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.13989942 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.279828408 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.048408739 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.908475451 seconds)
    (64/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.963063877 seconds)
    (65/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.912983426 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.978229225 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.190196986 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.785271574 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.506907678 seconds)
    (70/309) benchmarking ("sort", Int8, false)...
    done (took 4.761786666 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.127868791 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.13678136 seconds)
    (73/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.047390023 seconds)
    (74/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.901725522 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.903847034 seconds)
    (76/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.888667738 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.961908285 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.60973302 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.966019425 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.891886584 seconds)
    (81/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.111158688 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.301133567 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.932937418 seconds)
    (84/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.117941844 seconds)
    (85/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.131165978 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.896204762 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.222184222 seconds)
    (88/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.980629537 seconds)
    (89/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.971126617 seconds)
    (90/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.89867619 seconds)
    (91/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.98658859 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.213924442 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.89562155 seconds)
    (94/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.726045306 seconds)
    (95/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.089365429 seconds)
    (96/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.039901037 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.89961704 seconds)
    (98/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.889618066 seconds)
    (99/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.310144148 seconds)
    (100/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.262966362 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.677342015 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.908168979 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.779730305 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.079822122 seconds)
    (105/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.903320852 seconds)
    (106/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.100850629 seconds)
    (107/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.053636872 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.226276306 seconds)
    (109/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.252941355 seconds)
    (110/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.05730814 seconds)
    (111/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.918537248 seconds)
    (112/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.889668554 seconds)
    (113/309) benchmarking ("sort", Float32, false)...
    done (took 6.264648218 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.188875243 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.890888724 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.008206655 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.891661989 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.670199404 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.062187428 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.108127762 seconds)
    (121/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.895422199 seconds)
    (122/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.085368883 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.02725649 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.658624178 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.8184311 seconds)
    (126/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.903178978 seconds)
    (127/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.801831446 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.900945957 seconds)
    (129/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.893192544 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.554866622 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.157279655 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.210623296 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.925487987 seconds)
    (134/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.038527603 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.896452127 seconds)
    (136/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.974242549 seconds)
    (137/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.892647555 seconds)
    (138/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.936556586 seconds)
    (139/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.053335069 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.148965514 seconds)
    (141/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.021988794 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.671776208 seconds)
    (143/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.19951902 seconds)
    (144/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.904190451 seconds)
    (145/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.973447958 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.695280475 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.155492888 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.371071386 seconds)
    (149/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.145632996 seconds)
    (150/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.19564379 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.214184773 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.229589973 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.920023451 seconds)
    (154/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.103062879 seconds)
    (155/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.144612807 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.999548212 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.574776329 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.216582853 seconds)
    (159/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.031804467 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.893042703 seconds)
    (161/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.835900553 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.918031445 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.018719915 seconds)
    (164/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.970320437 seconds)
    (165/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.01231925 seconds)
    (166/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.279003429 seconds)
    (167/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.898605341 seconds)
    (168/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.132393978 seconds)
    (169/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.03276827 seconds)
    (170/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.24511354 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.295792373 seconds)
    (172/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.033858901 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.894016228 seconds)
    (174/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.040823654 seconds)
    (175/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.392363566 seconds)
    (176/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.900031948 seconds)
    (177/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 8.131401689 seconds)
    (178/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.072769807 seconds)
    (179/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.99509241 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.904580446 seconds)
    (181/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.070051425 seconds)
    (182/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.386294912 seconds)
    (183/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.140601803 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.219914799 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.898739835 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.301389744 seconds)
    (187/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.918907191 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.024324924 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.074299269 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.005848074 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.523541853 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.029750905 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.245696305 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.026302041 seconds)
    (195/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.896979663 seconds)
    (196/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.028676167 seconds)
    (197/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.898057427 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.240155957 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.898605166 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 8.151535367 seconds)
    (201/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.059210083 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.006265438 seconds)
    (203/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.396116921 seconds)
    (204/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.904143421 seconds)
    (205/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.266431777 seconds)
    (206/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.17719455 seconds)
    (207/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.205027177 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.357478638 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.902953654 seconds)
    (210/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.146578076 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.969369818 seconds)
    (212/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.13541833 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.207367747 seconds)
    (214/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.107891301 seconds)
    (215/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.018489471 seconds)
    (216/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.923804302 seconds)
    (217/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.918510635 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.026754326 seconds)
    (219/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.90743151 seconds)
    (220/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.931932832 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.00446131 seconds)
    (222/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.143587651 seconds)
    (223/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.160357505 seconds)
    (224/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.267385193 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.135647238 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.900752012 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.752125442 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.201225996 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.927278561 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.193009604 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.021457192 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.553806333 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.899142479 seconds)
    (234/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.347560842 seconds)
    (235/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.905853943 seconds)
    (236/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.850476688 seconds)
    (237/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.983400385 seconds)
    (238/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.027786919 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.898207525 seconds)
    (240/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.927096231 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.898610808 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.167466618 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.037552954 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.009529977 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.903971981 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.25531743 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.170797613 seconds)
    (248/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.354090248 seconds)
    (249/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.156058028 seconds)
    (250/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.985246244 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.640139534 seconds)
    (252/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.961022858 seconds)
    (253/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.92043012 seconds)
    (254/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.996522762 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.968928678 seconds)
    (256/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.044377171 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.039910964 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.904896951 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.100192122 seconds)
    (260/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.139237681 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.295881259 seconds)
    (262/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.915917023 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.816617708 seconds)
    (264/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.124481123 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.902755531 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.312623226 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.83533631 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.908045673 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.027700029 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.231609685 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.206613521 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.90709136 seconds)
    (273/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.006871334 seconds)
    (274/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.979075583 seconds)
    (275/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.291372178 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.320040374 seconds)
    (277/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.052138186 seconds)
    (278/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.080904653 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.931173742 seconds)
    (280/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.105929771 seconds)
    (281/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.97550368 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.901532793 seconds)
    (283/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.186834102 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.140428204 seconds)
    (285/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.904551705 seconds)
    (286/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.306683251 seconds)
    (287/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.008067557 seconds)
    (288/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.407180114 seconds)
    (289/309) benchmarking ("sort", Float64, false)...
    done (took 5.630643266 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.569774198 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.029053785 seconds)
    (292/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.055960016 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.752828052 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.077119303 seconds)
    (295/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.923122174 seconds)
    (296/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.219962092 seconds)
    (297/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.294276357 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.094119838 seconds)
    (299/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.008205602 seconds)
    (300/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.773368364 seconds)
    (301/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.07799777 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.90386375 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.931071906 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.924071599 seconds)
    (305/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.00367311 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.12246254 seconds)
    (307/309) benchmarking ("sort", BigInt, false)...
    done (took 6.905737094 seconds)
    (308/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.925917787 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.237471588 seconds)
  done (took 1014.369357278 seconds)
done (took 1016.246783682 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.932467616 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.921126923 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.90422106 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.925754939 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.017727576 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.948574635 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.918555329 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.908826513 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.955401784 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.955968855 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.903495207 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.947205505 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.906749895 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.90704123 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.904542896 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.921515767 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.201545329 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.930249732 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.925514178 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.918167835 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.925393951 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.905858566 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.955414851 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.94785334 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.910838251 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.910658494 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.914254097 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.927733177 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.022166772 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.912100429 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.910924489 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.921660414 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.201824389 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.926780408 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.904907053 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.928665656 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.922690237 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.918770042 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.910927464 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.941855942 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.293843941 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.940951965 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.910223112 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.907207339 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.90775962 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.913552766 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.909466666 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.915332524 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.921962698 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.923658951 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.286728595 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.957304531 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.9135596 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.908802686 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.921782642 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.910499858 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.911818243 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.925160071 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.928944957 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.924583982 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.191651776 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.936844076 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.912637081 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.928307523 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.919383907 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.321389666 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.937745541 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.915973794 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.291807935 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.946482747 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.324397195 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.95120077 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.91216976 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.92528802 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.943980301 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.203356055 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.928386457 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.90822798 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.92026987 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.909436257 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.923503982 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.923792768 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.916078996 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.909392888 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.925116053 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.954888243 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.922957621 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.912362576 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.921002421 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.931005035 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.921002191 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.924527634 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.914493124 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.907787042 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.922245233 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.914233082 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.916505129 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.915926311 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.915599579 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.923295225 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.291726145 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.959613139 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.907431936 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.908219206 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.909844951 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.926939146 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.292393245 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.943690201 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.934230217 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.960092219 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.911666505 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.19493062 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.938395831 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.927864819 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.922401542 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.912857071 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.908776805 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.195512299 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.314066265 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.959953185 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.911658399 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.91127627 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.928489755 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.914441285 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.908649823 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.20814339 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.935944193 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.927733279 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.037217041 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.925327499 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.947406862 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.912859499 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.916463938 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.958697569 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.928558777 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.947256912 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.915012686 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.927154067 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.932929724 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.909372048 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.925267645 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.923905721 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.912195473 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.920405958 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.910208302 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.958290367 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.92651791 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.928345604 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.935841587 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.038089846 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.910720039 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.196565074 seconds)
done (took 299.908417403 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.987540852 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.910854904 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.006206124 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.910147593 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.000547807 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.984570797 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.913122628 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.91178892 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.911248091 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.393524409 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.911486688 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.916596096 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.910797163 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.911869931 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.981084321 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.912026785 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.911289959 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.343928556 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.913611995 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.991363539 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.912551036 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.91198072 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.912644003 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.402556744 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.910438991 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.913572007 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.994209971 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.912795291 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.348006186 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.913388017 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.912863925 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.34980467 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.994252641 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.939606443 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.920364553 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.916689095 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.003642093 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.923314591 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.980846349 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.980574379 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.007078119 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.944283169 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.913286124 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.914263641 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.914441352 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.913672209 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.914132542 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.945184737 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.913683423 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.91773007 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.344208587 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.918489817 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.921426046 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.913550246 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.914116228 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.941476286 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.913678467 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.914537637 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.994191696 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.916759157 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.983584911 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.400821562 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.400344524 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.914301026 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.91405505 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.913663448 seconds)
  done (took 188.045987097 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.981689687 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.990273703 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.979394175 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.918111759 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.964562013 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.982739265 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.919162873 seconds)
  done (took 15.577677851 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.922155391 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.914898342 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.965012543 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.964901565 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.914954413 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.072148849 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.914621504 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.927269823 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.919191757 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.943483096 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.915741329 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.915293522 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.921473584 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.915241919 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.965778899 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.928176811 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.032014154 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.918011197 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.916447753 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.065366233 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.92002551 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.922311992 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.942721269 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.928909959 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.916536948 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.925656688 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.487691107 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.9178572 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.916006218 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.915287108 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.917455817 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.959498274 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.916056807 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.917694358 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.917155897 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.031853369 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.91731573 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.917211496 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.917964598 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.916452356 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.916271994 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.916684655 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.915462797 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.915665307 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.915808474 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.941226508 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.915747279 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.916608775 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.916869605 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.916215084 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.945170401 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.917157489 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.917337111 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.923847157 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.96076124 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.925555323 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.9163903 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.91641973 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.9168514 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.916898209 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.067227847 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.968122354 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.916484436 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.96856631 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.916895615 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.918149252 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.920369769 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.917616556 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.006596906 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.917365527 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.968498198 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.917786182 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.077122652 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.943072626 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.920522518 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.923199615 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.924218907 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.918719918 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.919209797 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.927033357 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.91798162 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.922181887 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.927224309 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.924885422 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.919515767 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.032074102 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.060003459 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.918358821 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.921518631 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.927360915 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.918058672 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.964379421 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.918224498 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.918836852 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.978126696 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.035716729 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.947887907 seconds)
  done (took 210.471268196 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.927281893 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.927450534 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.922452211 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.936850503 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.922320419 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.921655331 seconds)
  done (took 13.405101284 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.923073756 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.922931286 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.918598923 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.920544635 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.919589292 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.920906471 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.919181689 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.923364555 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.924212235 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.919688335 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.920681606 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.921118884 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.922962018 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.919804791 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.920741664 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.921191474 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.921209964 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.920308368 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.919302786 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.919463346 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.1721061 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.919567851 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.920752569 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.924105778 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.924305953 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.919801233 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.935906714 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.920692385 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.921032814 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.929257483 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.925048484 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.922443179 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.924294809 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.92815085 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.924976406 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.924554855 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.926683808 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.922385727 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.92161503 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.92149683 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.923054296 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.922109387 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.921703557 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.924778684 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.924928867 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.928847956 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.926695374 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.935397463 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.921240474 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.922111809 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.923827047 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.923370593 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.922591245 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.924334728 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.926478981 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.929352847 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.927647694 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.923149576 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.922325166 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.92526531 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.925549277 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.922817816 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.925465134 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.926550305 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.929542907 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.924516108 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.92710083 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.929191421 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.923251951 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.923502198 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.925221535 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.923041893 seconds)
  done (took 141.602488144 seconds)
done (took 570.956305777 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.185166058 seconds)
  done (took 9.03582456 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.009914761 seconds)
  done (took 8.919310072 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.206456475 seconds)
  done (took 10.063331357 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.933996362 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.936254826 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.936139707 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.929437354 seconds)
  done (took 29.601830305 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.176891605 seconds)
  done (took 9.027907635 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.947791365 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.923713606 seconds)
  done (took 15.788633414 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.082621437 seconds)
  done (took 8.941994764 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.196716549 seconds)
  done (took 9.056339372 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.939862589 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.930934936 seconds)
  done (took 15.743141285 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.92923566 seconds)
  done (took 8.781013743 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.104191774 seconds)
  done (took 9.985095225 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.946635508 seconds)
  done (took 8.863702775 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.966791619 seconds)
  done (took 8.817974431 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.799624587 seconds)
  done (took 9.651704403 seconds)
done (took 164.132019977 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.938134623 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.924828078 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.925616441 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.923416323 seconds)
  done (took 29.563454755 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.95715097 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.957578796 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.959196615 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.967771152 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.960899995 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.957064268 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.951705451 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.950588225 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.968088645 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.960423419 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.958887375 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.960067517 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.958791966 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.950217816 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.960869246 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.95974352 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.968219136 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.96040263 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.950121967 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.95997307 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.925622974 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.968993679 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.96025337 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.925216187 seconds)
  done (took 48.8105658 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.118033697 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.997806225 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.080326191 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.979419666 seconds)
  done (took 10.028747876 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.977330443 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.979062027 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.991783772 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.02901917 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.05306327 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.987672511 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.951064603 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.946574449 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.933095063 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.978797392 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.054387417 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.973273893 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.068587162 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.927499969 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.106360149 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.925691426 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.926675632 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.978477764 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.029353544 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.04310695 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.927525363 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.978569125 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.981975571 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.974533741 seconds)
  done (took 49.577819479 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.927570702 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.935749854 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.934929996 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.927688132 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.928454181 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.929301941 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.934953857 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.930381603 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.950577446 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.929973655 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.928084801 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.92846431 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.9357868 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.92984759 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.929701216 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.942443909 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.943371332 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.929662187 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.933570114 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.937829076 seconds)
  done (took 40.523298861 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.9283876 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.7757673 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.273580874 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.180138757 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.928862024 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.928483144 seconds)
  done (took 31.87182641 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.941431077 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.936378824 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.932504052 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.98647943 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.065379904 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.936734137 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.931815034 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.941078863 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.97327007 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.990645221 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.953351655 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.956365206 seconds)
  done (took 25.402176016 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.930031285 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.937637866 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.934831582 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.945786326 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.941165824 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.936591113 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.938160973 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.93085258 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.946101768 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.948462088 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.936974275 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.942175776 seconds)
  done (took 45.128157258 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006573779 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.803770124 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.369410806 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391567076 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45180748 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131505505 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.930567616 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.012519927 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.930298421 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199646076 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.25879242 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442813895 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.17601918 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932469698 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.033759093 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.408242485 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.223160591 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145613788 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962910241 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.592903042 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036312266 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371073948 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.68142371 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.039721253 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136515339 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.056274941 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.197609509 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.883108031 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982002532 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93762377 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939644731 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934537151 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207585755 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053603998 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004581961 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939567665 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.347913977 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.641840472 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.94026733 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.55225976 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.422287517 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.050945822 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939364625 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934779472 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.861188741 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3780571 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137463243 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.938243993 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.636351808 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.93595869 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940741785 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010185347 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.937473065 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.742417034 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.61674487 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.203476121 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.93595978 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938684571 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.495859609 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.933771629 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469636559 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.980227857 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.024273336 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.557736263 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381373671 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.088680503 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.937210359 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937338219 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863636421 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.55684197 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0476684 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.073183884 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.953335593 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579147717 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245784268 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.347338549 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.98597883 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206282596 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.667045628 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.979427249 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154007578 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.887498902 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863819083 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.766501419 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.863024768 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151727294 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971000924 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.528947315 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974807421 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.018124116 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.942904916 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954042363 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938617201 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.151714149 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.831727695 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939044047 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.222144438 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.188143044 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955435932 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.023478724 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867198765 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.94028272 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186014285 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.141352281 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.122884693 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.51858908 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025887686 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811812664 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.065505063 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.797019268 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.05861053 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.202898679 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998064716 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.937082591 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051712435 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.887638492 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183396963 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830354236 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.151673555 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.297762526 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172350586 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.27362064 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.187082444 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002372873 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.942165605 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.94021224 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.615654748 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.546022344 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.156723381 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.953695423 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374461667 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05997647 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.941966142 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874362448 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.810558509 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.28481013 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.012881268 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154379004 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.834168268 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.327326404 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866949245 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.077963959 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.93443877 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.154178394 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.57524727 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.019174082 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189272698 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.12982206 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.238932499 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061457362 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955322215 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032904191 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957933046 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.309499891 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.300020827 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.943283935 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.943095017 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.615324976 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.99485462 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946764613 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.944910843 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.467366736 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209394245 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961505366 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.950514001 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.816606816 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.953258037 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004329841 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945554873 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.945293414 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.500603505 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450702956 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.948585059 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.646584389 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158966461 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946278348 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.55505694 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113561545 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.955173326 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204952734 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005142628 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.869115488 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.643486766 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.645044821 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943886594 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.869523681 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.943443547 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946550379 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949498154 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.13197555 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.212275795 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.991334925 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.601074234 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.043005194 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948909325 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.946822651 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943677094 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.438157728 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.939641495 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.519477477 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.064026737 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075216246 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.955875052 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.870809189 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.945915941 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947811564 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.944462165 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.893810446 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992204323 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.597175402 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140570787 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195582622 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.349409112 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954772538 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.607173001 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.057886794 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.962920158 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.230143338 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.510855984 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.060798028 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022788947 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.951641609 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.608307693 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.68095708 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.511418786 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239590013 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255245603 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287506844 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.369915763 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.276769856 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033157376 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175345567 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.469083845 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005712415 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037387973 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885273974 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962981296 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.584776011 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.344378009 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959665691 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165920454 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233077563 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.281615899 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074415385 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152300825 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97967093 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.803769681 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.983082517 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.485097853 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965531625 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.31472929 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145075701 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030388328 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.235586588 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.024865442 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.950923078 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.282291512 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990127066 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.652127522 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.302160576 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39065713 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.394175065 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167373004 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.957824958 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.388617403 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291571282 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.179097775 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.076574174 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877439259 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.955855901 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.956887147 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.964588039 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.923959388 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.793627262 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.194198148 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957519433 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177400982 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.124759269 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.316240691 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.855362285 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.954082517 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954082966 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206159434 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.671182743 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112999233 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.316198962 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.535003351 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962722838 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.878413425 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877022966 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.651524397 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.958415092 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.916891814 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158558113 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.056144146 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.635800333 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387117115 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269011853 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.196602479 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.963811568 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.215455338 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224487751 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.444093863 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973600381 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.050687325 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.233137559 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.644750517 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.169655095 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.178734878 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.484371483 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.171683707 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393914571 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.923464204 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.95518267 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.158533064 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.169132457 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.408767582 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121303338 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.663600002 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.9670712 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327795487 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013606141 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.30403816 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.134448215 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.049975786 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963900111 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031342094 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957467214 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.958961403 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.959345352 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965770136 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.303427427 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.06547282 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.966644964 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03050835 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.961777746 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.523540473 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.962260107 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218046338 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304900983 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.282350768 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015221198 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.954676861 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963354622 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.883062634 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084283489 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.394287928 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22844031 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.075862237 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.090937922 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975466784 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.238821789 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.253925244 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269321875 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227308472 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.837729183 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.634411176 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.081694309 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.172936231 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962096765 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.159428051 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168890943 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257129076 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.515297863 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.135731088 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.152733843 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228742986 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.315877963 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.956540684 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.536491241 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.963261958 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.358001344 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.989152395 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.306407755 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206449912 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960044383 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078618497 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.960484108 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.154263941 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.40743872 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.582874369 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.297153505 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.81769321 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.961198503 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224132235 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.276153881 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259019234 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036499236 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963012106 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.648427488 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090001816 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.841613676 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.173968728 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.959264907 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161955906 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.667573371 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.961815602 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223362297 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259585868 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.957652167 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.881096752 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961530075 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.961978846 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.173043218 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169330001 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.203300741 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962086842 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.966534398 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.765137106 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.230003234 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016477527 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885685022 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.961199267 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004780149 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.185989698 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977169017 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.474644072 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.659059316 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235554591 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.86554315 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977358484 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400849101 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336409729 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281861913 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.483770625 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176049627 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.513239738 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.844719727 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.342767306 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.963339214 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389813376 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.346036954 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.962009871 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.51411318 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076942668 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.221477462 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.283849683 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.969389143 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.65605707 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.985679884 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174279367 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318419571 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890863485 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.961762538 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.010663086 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.961692821 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.95033752 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969806707 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.891573936 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47010672 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.806088573 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.519895702 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.964906764 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.96997889 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.284056025 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.519437749 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076717349 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978530227 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.965873902 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.6638638 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.250740575 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.205485276 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.506333499 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.06196695 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.963523003 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963066716 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.886376585 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.14552865 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.150998179 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252892232 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.356206073 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.07648353 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.964314617 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.171081257 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167157157 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.317528215 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087905093 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.144664751 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082713259 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.903496755 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.670004128 seconds)
  done (took 1700.338816967 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.991284344 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.988867028 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.9883328 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.001534957 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.986315859 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.980556231 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.006503503 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.05963356 seconds)
  done (took 57.893384964 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.966727454 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.069274834 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.971411508 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.968019749 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.975099582 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.968486492 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.136148104 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.979382563 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.971570908 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.972822623 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.967679941 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.966757606 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.275383525 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.988274383 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.966458475 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.968011042 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.970856088 seconds)
  done (took 75.982634368 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.967281327 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.124034132 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.006995171 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.973101628 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.662508531 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.975457616 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.854964523 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.972060077 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.972360613 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.445456706 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.261658579 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.00179888 seconds)
  done (took 91.112116177 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.978313264 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.970353362 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.969746123 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.970101245 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.970436257 seconds)
  done (took 11.760213459 seconds)
done (took 2219.930375129 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.203920261 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.026383951 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.068802754 seconds)
  done (took 5.987697782 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.117121764 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.161640754 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.275206382 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.293119311 seconds)
  done (took 10.749911151 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.278465733 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.342512551 seconds)
  done (took 6.512253204 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.284839546 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.99537262 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.340534855 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.97010998 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.970975875 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.972426637 seconds)
  done (took 22.808765335 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.965651364 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.965604146 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.965944414 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.96524409 seconds)
  done (took 9.753207776 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.964908343 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.678353549 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.964102515 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.978343235 seconds)
  done (took 21.480985763 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.112250213 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.080829414 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.108656566 seconds)
  done (took 8.19253475 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.110034023 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.816059573 seconds)
  done (took 6.821582852 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.110599627 seconds)
  done (took 4.002729306 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.99425281 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.237137653 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.456261857 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.48716702 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.549975936 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.788263531 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.275626509 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.190421217 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.411186708 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.40892907 seconds)
  done (took 25.691190866 seconds)
done (took 137.721021341 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.293394154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.9924585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.168483801 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.313199034 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.1938019 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.16952153 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.188626279 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.300906156 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.985911825 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.974788955 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.313039809 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.195556551 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.131534879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.983072485 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.140297818 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.984054106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.205070004 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.310695776 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.998879322 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.235908643 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.197901702 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.961055297 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.156577343 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.972591484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.205770525 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.122709616 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.503267566 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.987796159 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.143124189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.514065072 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.125965278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.377575986 seconds)
  done (took 171.24135196 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.971849706 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.970963389 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.969995721 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.971441662 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.450747901 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.971355505 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.973073537 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.969756978 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.397136778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.385511452 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.970452074 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.438338214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.970911385 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.972467066 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.973720601 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.97189254 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.569750298 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.97154543 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.971792253 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.971314095 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.970958109 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.274638751 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.972459733 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.285535556 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.566740883 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.972460836 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.971436307 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.972428452 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.97147703 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.971466422 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.971952376 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.971853216 seconds)
  done (took 212.585228165 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.856305721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.973425359 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.974334028 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.973994218 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.97507809 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.973532351 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.973810625 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.971455489 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.717449338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.710435242 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.972828247 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.973780912 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.977163302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.97263918 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.972013786 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.972952757 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.97420869 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.893804256 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.972853054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.973829786 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.974506669 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.537669459 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.973203447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.54068281 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.973685624 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.974280821 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.973847953 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.972209982 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.973737056 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.973959641 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.97587531 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.973613515 seconds)
  done (took 223.470072867 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.21328901 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.973817356 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.974338797 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.962245315 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.973643225 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.973423267 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.949986202 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.224346767 seconds)
  done (took 20.143797873 seconds)
done (took 629.344608996 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.363751097 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.196691809 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.156853649 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.004203845 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.289731926 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.045669208 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.995464409 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.062097751 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.845136831 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.078848566 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.640192805 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.016508535 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.73496082 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.027479546 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.117438271 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.056445743 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.548851305 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.65769561 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.137815237 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.095787422 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.177224707 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.948378361 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.083322125 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.882437353 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.654304431 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.992816539 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.060427546 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.569036337 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.012845179 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.156749971 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.719752774 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.294348077 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.016182316 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.994617539 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.051990918 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.028931476 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.238116388 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.012154739 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.119666277 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.741562922 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.117870088 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.748202271 seconds)
  done (took 107.591686755 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.985767081 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.980598163 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.980866704 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.980278878 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.990300758 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.982044716 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.9819859 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.980111799 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.981170307 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.980604317 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.982684394 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.990186419 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.981854193 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.989882153 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.98068823 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.982121692 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.980573266 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.991308472 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.983597622 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.981946445 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.98046343 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.981892563 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.977276568 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.982190836 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.982303467 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.982230468 seconds)
  done (took 53.471456816 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.976651976 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.138914113 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.223225873 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.998706817 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.979329332 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.983059235 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.997369583 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.982005321 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.981469845 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.98170326 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.084933336 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.984012944 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.998574124 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.223482901 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.997332832 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.977350991 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.977148954 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.97938678 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.138887113 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.995222239 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.000527036 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.983662266 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.998660243 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.993527751 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.982393985 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.980474768 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.983023839 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.459393357 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.989706994 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.08372198 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.024753804 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.003663392 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.399641282 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.234438889 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.035489175 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.988642561 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.978685002 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.088340216 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.987817956 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.980314876 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.999178642 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.98705895 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.224007947 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.50892516 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.995471012 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.979021894 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.472206176 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.098220428 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.023822339 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.995003114 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.225559461 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.999513283 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.98116257 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.982357366 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.019125744 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.99272218 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.982997956 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.345489142 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.995316326 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.000986931 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.985828494 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.983450549 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.148945274 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.991823578 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.139453889 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.992964775 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.98833837 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.982780478 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.226079619 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.999454912 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.527528104 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.997756678 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.980920894 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.085783841 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.14034193 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.497851934 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.99573024 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.150723656 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.418070744 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.007805372 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.990270555 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.450159207 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.010194864 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.991085569 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.98255108 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.983988352 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.981840062 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.022595658 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.999603682 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.443511001 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.524836042 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.363767841 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.013147233 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.001757405 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.985242967 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.346663718 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.990065691 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.983762106 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.220921963 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.537625651 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.999743618 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.991470369 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.502188101 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.000288899 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.003621133 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.992985885 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.235046077 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.001483124 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.024696114 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.983412226 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.991218067 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.989119715 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.004084293 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.991774028 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.982672088 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.494243631 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.109447815 seconds)
  done (took 245.851921883 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.984165719 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.985691134 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.9847733 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.98536117 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.983321955 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.984911843 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.984185461 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.983334961 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.985328576 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.983608405 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.983975375 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.98598379 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.987208471 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.986117997 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.553886102 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.986975648 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.585838264 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.986136508 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.984421226 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.98978811 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.661800079 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.989854121 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.988589035 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.984796658 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.986929465 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.986871841 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.98879601 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.991151225 seconds)
  done (took 171.364115932 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.985270668 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.17116991 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.008093767 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.016556829 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.992342971 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.985349232 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.12422667 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.010384032 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.992445244 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.98522361 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.985579015 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.047039312 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.001359476 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.083578112 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.022680804 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.091800761 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.09523664 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.997453821 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.985421138 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.986313172 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.015975308 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.99487862 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.049286613 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.115181928 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.009180257 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.101208843 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.010010005 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.98637948 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.988622525 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.10129865 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.00877195 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.047531744 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.020880594 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.005530895 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.106078061 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.104191073 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.095367471 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.09650485 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.99806046 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.988891409 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.986461954 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.988997796 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.102048707 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.00919122 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.989515798 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.10408155 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.008730209 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.987961181 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.988187901 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.98770418 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.003221896 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.007403694 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.055996801 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.123626611 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.027548785 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.012033932 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.087314116 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.119250039 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.98932476 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.087238415 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.995691614 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.101595071 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.010720892 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.989525628 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.989719656 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.992192857 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.018452275 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.093732542 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.095209488 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.998572355 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.088084875 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.025584456 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.996729431 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.989651348 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.989160995 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.10258773 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.110282388 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.025351062 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.027199002 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.021417869 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.99822571 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.99192376 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.991248752 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.008267372 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.994265947 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.102699479 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.111397162 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.999852108 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.989848096 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.989596826 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.989867919 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.016487331 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.113387236 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.030144675 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.097114886 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.058672408 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.068773911 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.007407096 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.004018205 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.995067308 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.054444219 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.008471393 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.002688337 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.304173538 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.052060894 seconds)
  done (took 215.632041392 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.365193362 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.040961387 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.049367684 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.317879581 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.356070127 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.239317351 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.041357484 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.040299399 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.063047193 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.225579512 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.11969996 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.058426431 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.026298166 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.013718764 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.040035138 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.061056157 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.047729078 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.385320405 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.256191031 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.234273565 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.036543858 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.31927673 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.368722051 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.617985164 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.089896694 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.4590938 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.655374817 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.175755671 seconds)
  done (took 65.626447179 seconds)
done (took 861.438652024 seconds)
SAVING RESULT...
DONE!
