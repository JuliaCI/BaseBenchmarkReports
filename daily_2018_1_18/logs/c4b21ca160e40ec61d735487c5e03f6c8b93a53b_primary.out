cset: moving following pidspec: 29914
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.168522967 seconds)
loading group "string"... done (took 0.52384497 seconds)
loading group "linalg"... done (took 9.864374236 seconds)
loading group "parallel"... done (took 0.175077585 seconds)
loading group "find"... done (took 2.535524163 seconds)
loading group "tuple"... done (took 2.309306308 seconds)
loading group "dates"... done (took 1.446417005 seconds)
loading group "micro"... done (took 0.601256688 seconds)
loading group "io"... done (took 0.586987449 seconds)
loading group "scalar"... done (took 54.800353202 seconds)
loading group "sparse"... done (took 13.653564651 seconds)
loading group "broadcast"... done (took 1.342024264 seconds)
loading group "union"... done (took 2.573015795 seconds)
loading group "simd"... done (took 3.597035437 seconds)
loading group "random"... done (took 13.798032022 seconds)
loading group "problem"... done (took 2.261656085 seconds)
loading group "array"... done (took 23.424069579 seconds)
loading group "misc"... done (took 1.114299159 seconds)
loading group "sort"... done (took 3.75104272 seconds)
loading group "collection"... done (took 20.678631121 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.781283126 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.160344159 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.246135273 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.890743903 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.302139351 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.204210612 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.197158399 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.175076964 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.63160952 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.214772062 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.19560352 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.40162492 seconds)
done (took 7.211336027 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.376720391 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.091165426 seconds)
    (2/2) benchmarking "String"...
    done (took 0.212762618 seconds)
  done (took 0.95347866 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.092332102 seconds)
    (2/2) benchmarking "String"...
    done (took 0.143898596 seconds)
  done (took 0.887009971 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.136259603 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.169457343 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.147142729 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.131951815 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.147912611 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.131514238 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.147737639 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.147939525 seconds)
  done (took 1.674344155 seconds)
done (took 4.678960072 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.528011808 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.928465957 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.544547643 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.205433491 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.35834116 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.360848417 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320353154 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.275215337 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.134510847 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.09759881 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.227653395 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.482538326 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.472633826 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.957996377 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098289392 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.152981781 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.173919278 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.821635899 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.123260312 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.155828427 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.536221147 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.242403195 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.161440884 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.135300639 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.245191997 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.171741015 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.166452701 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.208400545 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.73108991 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.182430867 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.242056561 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.127146393 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.16745797 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.209703633 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.283641414 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154438611 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.737202954 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.248976035 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.127988762 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.144300801 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.728559249 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.16543191 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.243390102 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.148499254 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113697963 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181903596 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.142592966 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.121783944 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.154045003 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.143985667 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205042855 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.486287603 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.148772357 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.232524019 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.15381283 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.736777902 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.140610978 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.322555747 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.168122794 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.151775375 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.136061515 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.133386032 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.211566601 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.139140248 seconds)
  done (took 22.828483736 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.210068294 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.231084057 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.140292863 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.187775362 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.191498624 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.141667864 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.133170801 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.138541022 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.159908139 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.240980461 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.185440378 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.237795483 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.123267224 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.152084129 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.200504919 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.279997955 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.17073158 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.168842078 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.133969724 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.156124858 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.17261824 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.15992175 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.140368589 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.15560683 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.216768853 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.250913686 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.154571156 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.169856334 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.150322334 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.144374492 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.188225204 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.210277111 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.122211049 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.148995878 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.220008408 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.168699779 seconds)
  done (took 7.035828161 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.267805262 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.14811509 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.279068343 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.234448601 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.19227393 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.22433324 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.228634139 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.318062618 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.34544904 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.248317884 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.236531217 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.211759902 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.17270852 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.158465617 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124753943 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.144476081 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.125674963 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.139818692 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.862649261 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.216362054 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20340676 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.219529838 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156669457 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.127078752 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.424919587 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.146419362 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.129534795 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.155435441 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.095228926 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.253599875 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.157245203 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.52706454 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127850973 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.159113848 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174105744 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.237943579 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.181231599 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.167310239 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.153829571 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.130609619 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.256492591 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162475644 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.122148909 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.140194867 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175759378 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.160334197 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.152957293 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166164016 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179608788 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.130177765 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168800029 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.126817387 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.906704162 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.255763805 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.182333148 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.147113747 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32348983 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.148963775 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.161480801 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.152295253 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.240381853 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.184329702 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.142620803 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.124817816 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.155638046 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.123627551 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.164500782 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.502812395 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.127234625 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.205916381 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.12730098 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.157718399 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.163389071 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.393513755 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131889412 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.146819361 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.166510437 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.131115423 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139726171 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.130991645 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.140565923 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.134050006 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.135016071 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.130942613 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.141331149 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.193537024 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.159328052 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.147949419 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.171336385 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.149705273 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.128361282 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174411609 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.142342671 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.133152921 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.222676913 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157961572 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.121233033 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.160577092 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.191091796 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.146408302 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.274569507 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.145351761 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.154928553 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.147741392 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.173658333 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.1592668 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.125430698 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.147159798 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.122769798 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.143838185 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.192515366 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.146840654 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.125872266 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.150656486 seconds)
  done (took 27.75171186 seconds)
done (took 58.264300708 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.470637353 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.110292829 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.128478116 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108527563 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10801319 seconds)
  done (took 1.653982336 seconds)
done (took 2.361320494 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.249295378 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.341015733 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.249631563 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.148930779 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.214295344 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.214679932 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.199981563 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.211766054 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.219670738 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.218611353 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.145634173 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.23765736 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.22678898 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.197510676 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.144984712 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.253765088 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.213167295 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.199784912 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.255909989 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.143183361 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.140174684 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.162281116 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.141261379 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.144881326 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.141073447 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160277076 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.140712684 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16076455 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.13649957 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.147190911 seconds)
  done (took 2.345241264 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.172825966 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.144414501 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.141820079 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.151159695 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.139346261 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.145278529 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.139017321 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159831564 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.144603623 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159092188 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.138798432 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.146553392 seconds)
  done (took 2.336719227 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.122975365 seconds)
done (took 9.862440894 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.096695667 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.598620369 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.218582426 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.274482838 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.392951735 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.304308278 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.601384378 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.235797744 seconds)
  done (took 14.563974101 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.16348372 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.207157537 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.139899619 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.159850953 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.141221755 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.158892308 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.137480647 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.157061289 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.13678214 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.156888848 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.137549814 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.155009233 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.137002046 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.154548106 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.141399211 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.158164222 seconds)
  done (took 3.220543815 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.1824326 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.180756311 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.143580192 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.163520272 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.141994216 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.16277494 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.148479369 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.1611309 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.139731159 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.158103613 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.148379183 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.160127105 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.143309736 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.157645241 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.143401019 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.182748685 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.156391499 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.14544309 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.178375202 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.145455876 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.161114004 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.143180846 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.159414423 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.14450498 seconds)
  done (took 4.545102585 seconds)
done (took 23.057772401 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.200916356 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.149050854 seconds)
  done (took 1.088206693 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.20335308 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.2217394 seconds)
  done (took 1.167911751 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.162136592 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.152737157 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.168538838 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.165100769 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.138654392 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.154486613 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.161528944 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.155734596 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.137528454 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.154621278 seconds)
  done (took 2.2995041 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.142828512 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.157146164 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.152708251 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.208471539 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.145938744 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.158005653 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.143537029 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.157650214 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.143261455 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.155049063 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.142104159 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.171195225 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.158875667 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.156292357 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.157950805 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.142856654 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.161780206 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.140237118 seconds)
  done (took 3.538841929 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.14015259 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.138412021 seconds)
  done (took 1.028081131 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.142475147 seconds)
    (2/7) benchmarking "second"...
    done (took 0.136535552 seconds)
    (3/7) benchmarking "month"...
    done (took 0.156031285 seconds)
    (4/7) benchmarking "year"...
    done (took 0.156078782 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.138226806 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.136594017 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.154566167 seconds)
  done (took 1.770246175 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.619002882 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.271335217 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.424255707 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.120269122 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.136157127 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.364748135 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.155815549 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105295269 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103951631 seconds)
  done (took 3.077418476 seconds)
done (took 14.715562982 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.140805903 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.227117122 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.680786591 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.159955935 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.155708447 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.199341895 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.364441058 seconds)
done (took 2.688283549 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353651681 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.184747057 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.117951044 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.137070926 seconds)
  done (took 1.545438647 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.13010119 seconds)
    (2/2) benchmarking "read"...
    done (took 0.146280903 seconds)
  done (took 1.035707312 seconds)
done (took 3.340124567 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.155733284 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.155865637 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.141182863 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.159356197 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.141897613 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.158514094 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.140925472 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.156438932 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.141358555 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.155314787 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.141043264 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.157730825 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.138856189 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.158103146 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138401376 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.15784507 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.141739328 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154627289 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.139628999 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.157864937 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.141759563 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15538571 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.142882615 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.157737565 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.142371756 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.15780723 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.139433065 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.156345133 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.141036099 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.158869067 seconds)
  done (took 5.240667749 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.148165048 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.132412136 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.155664384 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.145784913 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.152114952 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.138747156 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.151736644 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.135647703 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.155593387 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.137467792 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.156967014 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.137355888 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.152799897 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.137954083 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.156840149 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.141048942 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.163844657 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.135196646 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.152582707 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.139409342 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.157499665 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.135626358 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.137227965 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.155458998 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.137942182 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.153068913 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.138583882 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.155224047 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.139031042 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.155077614 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.14176576 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.157645601 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.138217636 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.2831626 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.141434793 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.15488745 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.144499514 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.153629018 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.139350306 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.152184165 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.136741593 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.136925694 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.15281474 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.142840269 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.156498176 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.138527002 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.153106584 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.1397955 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.156303007 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.140777336 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.153092268 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.134575734 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.157242777 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.139329047 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.158205266 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.135059191 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.157265624 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.135189297 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.156447127 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.138492217 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.134150677 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.154143441 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.143940815 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.156279926 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.152533084 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.161339108 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.135816505 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.157441247 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.138511557 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.161548986 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.140473152 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.166494266 seconds)
  done (took 11.48775647 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.141907167 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.137640714 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.15596435 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.138443693 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.155995799 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.138606774 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.155784229 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138783243 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.156038122 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.138702918 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156685484 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.139343047 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.154376997 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.139063999 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.13813314 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.155260244 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.138908933 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.155451049 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.137882136 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.156225599 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.139598823 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.155357303 seconds)
  done (took 4.002393438 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.289089056 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.146534203 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.207040104 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.151496501 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.176258537 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.168697586 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.144347394 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.163780741 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.146779412 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.166445548 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.148398988 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.163871242 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.175760654 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.148851832 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.168275046 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.149503355 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.164079139 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.149458688 seconds)
  done (took 3.807668802 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.145369846 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.138604137 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.159071523 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.139937392 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.157873591 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.139108644 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.157454711 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.140101637 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.156652947 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.139258351 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.15785511 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13930456 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.156637726 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.138974937 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.139497077 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.157952601 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.139584921 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.158731352 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.139945217 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.158108665 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.139432127 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.158600962 seconds)
  done (took 4.04088146 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158678745 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.159523969 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.160538273 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.163792581 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.140387768 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.159100354 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.146651686 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.160330988 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.148669228 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.159489145 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.14166379 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.158858315 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.156023932 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.160588392 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.146547497 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.159105918 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.142698734 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.161194381 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.14240736 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.158968771 seconds)
  done (took 3.872802663 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.236636902 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.178227641 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.176166225 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.165042414 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.176929793 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.156826104 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.183899901 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.157292608 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.177424315 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.168332569 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.176578684 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.174759286 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.166151117 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.181465662 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.157264662 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18501702 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.163964581 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.183920871 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.177020782 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.159066729 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.18725772 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.158204346 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.183821849 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.156267679 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.176902398 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.175899413 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.158319626 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.182328327 seconds)
  done (took 5.66684001 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.156835148 seconds)
    (2/2) benchmarking "in"...
    done (took 0.1685724 seconds)
  done (took 1.114635563 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.147971815 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.142846788 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.162890678 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.142628925 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.161647421 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.142971694 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.163287918 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.141953461 seconds)
  done (took 1.996027531 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.211541129 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.231829491 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.1681071 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.154298257 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.230889008 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.220699885 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.202083045 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.150056512 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.161343869 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.135143467 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.224876704 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.133538072 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.163483625 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.138887799 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.163955437 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.147962996 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.164228314 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.149493828 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.168059648 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.143982606 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.166347711 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.147270061 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.164933677 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.149803641 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.158407576 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.145355033 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.166198531 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.172672205 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.139764525 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.163103393 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.142396834 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.162360865 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.147192425 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.166297474 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.143840026 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.232137863 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.150813674 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.160316519 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.143545636 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.168321611 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.168480077 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.163434159 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.144777417 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.161501611 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.146567625 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.167147035 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.145990486 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.163060378 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.134011601 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.158621061 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.142892406 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.158825395 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.141430224 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.163361321 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.143383904 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.17088318 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.143923439 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.161849701 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.147581679 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.158922305 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.142061695 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.160392887 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.165543628 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.146232316 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.164704342 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.145976267 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.161481399 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.14419412 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.163360508 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.144367626 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.16288976 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.161069513 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.165793824 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.146888522 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.16707755 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.143911663 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159776216 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.14929956 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.162096276 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.146535153 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.167368562 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.165042903 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.166024951 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.139936245 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.159318923 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.15047031 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.16490457 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.146646829 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.155107154 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.152663213 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.164717435 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.144818823 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.157658553 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.142997208 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.159386589 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.146062045 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.156657729 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.145514312 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.162131269 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.14959684 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.16810147 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.144449009 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.167312497 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.148510868 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.17037703 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.143938153 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.210711165 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.141291614 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.160626457 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.144363175 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.170263919 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.139294979 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.165240055 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.143854764 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.162161809 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.140818419 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.168197398 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.146000106 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.166008205 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.147600779 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.166389716 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.148324735 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.166768997 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.14382621 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.161479002 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.148376057 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.172698973 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.146895505 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.165624054 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.144815625 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.164583746 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.144097151 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.168487553 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.14189623 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.169618457 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.142483231 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.164493362 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.145218442 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.169555409 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.147076004 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.159486388 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.143226722 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.166297984 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.143790381 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.167279075 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.146482399 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.159884532 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.136770545 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.165773193 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.140054758 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.165783027 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.152107964 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.160928723 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.147637646 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.161495848 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.152232306 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.161312165 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.15029147 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.166858912 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.151070237 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.180103877 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.136708956 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.162134111 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.146992419 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.167594103 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.142386317 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.165306941 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.146324284 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.170478656 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.139056981 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.168087859 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.137938425 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.162797375 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.149210967 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.166516985 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.147805064 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.160461364 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.177899015 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.176176842 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.149603905 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.165997781 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.146625858 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.169521627 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.14484636 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.170141978 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.150063207 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.170193214 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.143149114 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.164274661 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.151037398 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.161937049 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.146142446 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.164185449 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.146958417 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.157759707 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.146156853 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.156865887 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.148783289 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.168367582 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.149509296 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.170559291 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146412864 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.164282168 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.153389664 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.161265513 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.1498305 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.156432965 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.150450065 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.17515278 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.151993194 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.16957449 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.147717302 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.162553654 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.147178577 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.173281564 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146897142 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.16514311 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.146908749 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.137935512 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.160080603 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.150578352 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.168289306 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.140555885 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.164947413 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.146797456 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168923804 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.143257264 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.158994785 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.149458157 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.170101081 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.141373167 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.168057524 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.141950564 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.166132518 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.172851613 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.138981614 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.162488006 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.14966862 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.169591585 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.145767094 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.166084869 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.148786557 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.150232818 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.169680849 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.147253096 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.16483089 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.152536798 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.164883597 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.144289604 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.16239817 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.148803392 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.160559437 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.147828102 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.167569281 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.144662646 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.162700433 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.149532879 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.17238842 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.150434267 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.164840157 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.148952183 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.171208697 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.151963064 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.164504317 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.152103767 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.161561297 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.138460012 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.162573681 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.139035278 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.1685591 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.142557067 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.171543939 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.145393797 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.165476601 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.150472786 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.169297155 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.145173095 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.172769816 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.15738436 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.161112439 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.139845109 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164747475 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145430023 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.163534671 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.143247562 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.172273691 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.147852106 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.171981113 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.148964469 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.166014685 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.146172204 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.175191686 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.143175666 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.172846484 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.151445592 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.172835666 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.143608441 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.171698155 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.144653786 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.171885165 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.139022434 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.167284008 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.144973899 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.168885073 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.14323524 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.167270216 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.162105753 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.139982491 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.142696797 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.172868113 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.14455251 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.170990524 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.145894689 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.165510213 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.162739919 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.14344567 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.152225033 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.166162225 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.154183517 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.167166757 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.140798221 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.161086707 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.151799339 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.169078302 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.152824868 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.162358478 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.150690226 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.174393796 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.152346678 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.168013038 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.15672519 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.176056239 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.151757444 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.17413063 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.140606284 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.165533978 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.151346627 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.16864973 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.149919769 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.169476854 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.141851327 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.170772753 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.15306696 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.169932298 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.145799516 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.161414012 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.148704047 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.17367422 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.150308694 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.170639966 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.14985301 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.170162126 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.143814662 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.17063735 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.15472496 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.168120164 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.154407294 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.169299793 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.153052496 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.165707124 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.154802987 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.168176175 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.142543754 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.160818922 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.147412133 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.174763947 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.144040105 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.172883974 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.153865404 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.165156275 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.147617122 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.173048346 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.145047481 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.170585334 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.153243918 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.165956333 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.158103299 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.169445872 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.148510359 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.172489837 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.154266744 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.141370248 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.169330693 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.16816301 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.156303324 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.167083233 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.153444518 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.168826494 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.154540378 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.149563886 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.174418936 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.1531581 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.17492652 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.142339589 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.177990993 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.152608446 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.172451683 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.147564956 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.168090135 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.142627562 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.168682892 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.154587679 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.167225846 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.157209874 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.174865679 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.147805917 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.168143524 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.153335776 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.168519077 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.154829448 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.167205298 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.151123346 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.164444391 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.151435804 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.169978215 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.154050559 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.168365264 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.144236864 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.174766384 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.153516512 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.175030817 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.15326321 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.177439221 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.143438249 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.163573734 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.151661524 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.167140805 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.15757682 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.174222762 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.148541004 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.169634976 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.150376907 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.171968897 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.155586405 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.16514511 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.146942604 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.172372585 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.151422611 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.169473227 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.145040578 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.174539899 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.148936644 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.172040909 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.148434721 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.165227712 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.14921562 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.177810895 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.148019109 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.167454031 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.146742594 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.177601732 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.149693024 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.168715561 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.144816969 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.176876836 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.152285509 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.177325155 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.146714685 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.173030981 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.146949937 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.173186418 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.156199281 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.169778382 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.150898553 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.169525117 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.154629002 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.176793413 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.140702007 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.169663832 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.159210016 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.175393489 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.153491103 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.174670156 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.149340759 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.178353302 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.155482361 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.173852274 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.143538598 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.165893492 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.148361616 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.165642089 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.1521942 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.176738631 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.149337164 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.170365049 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.154222295 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.175180126 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.152218633 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.173023165 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.144428373 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.177713498 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.14783786 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.175379492 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.14408223 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.164842307 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.153745212 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.176674414 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.149239617 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.171630295 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.152411495 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.175033031 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.146340133 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.169927785 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.154381287 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.17516292 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.155608751 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.170371946 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.149778967 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.174142507 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.159798634 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.173391609 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.151730748 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.178996251 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.15696697 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.174180623 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.151483723 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.176475663 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.158020162 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.174275052 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.157475678 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.170811456 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.151154736 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.178341183 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.159205887 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.180958157 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.150139741 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.166244013 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.155402062 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.170671026 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.146126392 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.177754837 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.158104164 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.178252981 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.150751408 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.168988229 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.159337702 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.177908754 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.151510129 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.171697796 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.148648739 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.177260676 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.148809058 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.175366411 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.148386726 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.180466989 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.159211886 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.177775739 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.158488148 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.166934436 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.156838727 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.174922522 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.158212334 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.173381787 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.147959987 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.166325557 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.154747403 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.179938367 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.157490869 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.176265871 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.155865485 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.177195035 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.153968486 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.172449145 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.150567257 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.178609489 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.156661471 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.171930273 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.154505212 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.170555843 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.153901783 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.172955638 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.158066037 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.177974512 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.15447105 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.181974752 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.158463 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.171689111 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.151254214 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.172902751 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.15508116 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.17388293 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.157079153 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.149389573 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.168530169 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.156073106 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.181402996 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.150907232 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.180280328 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.157167142 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.172956104 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.153472312 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.181251696 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.155058656 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.176085614 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.153861049 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.176820856 seconds)
  done (took 95.868422469 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.205023598 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.182777989 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.155369985 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.175653087 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.171036585 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177925764 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.154193255 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.175963861 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.154523719 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.184940224 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.152880753 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.174759595 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.168849202 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.196629088 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.192178442 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.164789408 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.175463296 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.155841149 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.17539593 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.15597271 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.189355048 seconds)
  done (took 4.530631866 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.158812583 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.152926524 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.175662053 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.153415228 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.17540422 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.153769988 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.176050247 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.153810688 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.175483603 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.15446403 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.175776086 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.155544252 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.174396587 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.154764986 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153209562 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.177417574 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.153884125 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.177098181 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.153771494 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.176665972 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.15362166 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.176772041 seconds)
  done (took 4.503123011 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.183634425 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.157111442 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.175715607 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.15348555 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.180383422 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.153826621 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.181095087 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.154791289 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.185126329 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.150033506 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.168231116 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.150204426 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.177034229 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.156146043 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.172453432 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.154897339 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.184549066 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.158949003 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.180822533 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.155014473 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.167319218 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.155833418 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.177126764 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.147452337 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.16005098 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.183014648 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.158733011 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.181103486 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.146494664 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.182366372 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.155872525 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.170748778 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.147353284 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.168876484 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.146507709 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.179770413 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.158428829 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.176567679 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.156891921 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.168655153 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.158025026 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.180739632 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.147321976 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.156024853 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.178790757 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.149463866 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.181418135 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.154776106 seconds)
  done (took 8.82469373 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.188092982 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.215176867 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.15777373 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.207722016 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.19220662 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.166268152 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.181823903 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.184642798 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.181263167 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.157754277 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.193415945 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.169199854 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.184391312 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.161708675 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.182688074 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.181656366 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.16173773 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.178959324 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.164097321 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.180537291 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.16483229 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.183886221 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.169069685 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.191815249 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.161135877 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.18202255 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.158620629 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.183641738 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.167900204 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.186880191 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.163676364 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.188427958 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.192166227 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.163362995 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.183575447 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.162548963 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.19264319 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.161446189 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.184533984 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.159087814 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.182864998 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.162606076 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.184163762 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.170494225 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.184429366 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.161695512 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.183716567 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.157103591 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.190910639 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.16027309 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.187797064 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.192433442 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.163212253 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.18276463 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.165401968 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.192106201 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.159894984 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.180876676 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.162111577 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.190431741 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.157719166 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.183979379 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.169968678 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.183324447 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.165110567 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.192161702 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.184856937 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.164018536 seconds)
  done (took 12.99838495 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.198291913 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.186257359 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.171280169 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.194684597 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.162320939 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.186876873 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.163071676 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.186184038 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.164360145 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.190893185 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.186635949 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.297666324 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.168017141 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.190730149 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.164318685 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.187708284 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.16541302 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.187101175 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.165918795 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.187919088 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.16490943 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.195289415 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.16375999 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.195073752 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.19823315 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.16171453 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.18608053 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.165789793 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.195868024 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.164381491 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.200036582 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.164114568 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.187625503 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.194154171 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.1758481 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.187976025 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.160649829 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18740671 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.164698302 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.187587867 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.161368989 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.194906561 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.165719812 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.184689831 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.164039602 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.187411681 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.193634952 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.177377263 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.192372408 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.169379784 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.189456666 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172803009 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.18800225 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.164457566 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.19747134 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.200299838 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.172138212 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.194885975 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.165676431 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.194475299 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.194454451 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.179960213 seconds)
  done (took 12.231543407 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.166336499 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.159359499 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.1830231 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.159528303 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.182873313 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.160491288 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.186830119 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.159983751 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.184667773 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161212702 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.184232889 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.161567044 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.182273218 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.161476502 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.182409717 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.161691669 seconds)
  done (took 3.665053308 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.186240644 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.200365705 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.26558678 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.163973551 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.425699952 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.168490094 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.1841449 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.164055573 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.157022086 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.19093961 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.162853192 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.186294279 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.200914622 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.16271144 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.181603088 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.163614868 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.179913975 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.164828423 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.182764814 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.241862304 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.189103425 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.162095331 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.184205051 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.163575808 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.185532 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.163099594 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.191326954 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.159481274 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.185839259 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.16112479 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.184840827 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.166818116 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.181350871 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.163373294 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.184651053 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.161408516 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.183994058 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.160524506 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.185882955 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.160300911 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.185288407 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.161594545 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.183996685 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.161706151 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.181834507 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.162423395 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.183222614 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.164700646 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.185809092 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.162180714 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.183915424 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.16634521 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.18795372 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.167849329 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.189942284 seconds)
  done (took 10.973587208 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.177821196 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.184574634 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.173779888 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.18130123 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.162712009 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.18488095 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.163201126 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.18370299 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.163800976 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.158363166 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.185922381 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.163272215 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.186449022 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.162238479 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.186191082 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.162412072 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.183144411 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.161027886 seconds)
  done (took 4.062162679 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.167349983 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.158551576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.184156239 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.159367309 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.184465605 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.159763827 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.183592425 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.159628951 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.183237389 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.15995344 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.18174682 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.162089833 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1822644 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.160806714 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.159096008 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.184803887 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.159712685 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.184109274 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.159749459 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.183777068 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.159933073 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.183824576 seconds)
  done (took 4.702036445 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.178003142 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.263201792 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.190257868 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.246574406 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.18459837 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.157288616 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.193121985 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.181358838 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.177665375 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.181255214 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.158295542 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.179639076 seconds)
  done (took 3.234695638 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1952777 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.218630376 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.163500719 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.186332143 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171193204 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18996535 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.167598171 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192372053 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1727042 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201676667 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19057233 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175697981 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196374836 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173294424 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194023917 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172348605 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190116097 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165565364 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187129153 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.204449697 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168784683 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196443677 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167452757 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190008308 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166414664 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.199253385 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172981116 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.203154344 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189720543 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175393482 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194046469 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167487478 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197731797 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17909799 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.187296175 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172748541 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191832843 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.203775008 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172897663 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.199901847 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.164158147 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194413654 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174505242 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195974398 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19770685 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168942126 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194944724 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168868615 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190684864 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188944453 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19628447 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197330892 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173656827 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19615362 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176576895 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.211329832 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.200748578 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176233734 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195993578 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.177696596 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198287299 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171076532 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199528961 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.20295311 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171316025 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198925549 seconds)
  done (took 13.234768422 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.207404494 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.188583906 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169627077 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203124538 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175310693 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192468714 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167420411 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192134109 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190654876 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167335522 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.234488536 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169263878 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201316889 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176245052 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192651043 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167997433 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191765055 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198318781 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165569706 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.21235719 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168523608 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199858125 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175196658 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.200450509 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.202157248 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171305046 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191323109 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168823098 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193382231 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169417523 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198308199 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167667926 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.20125526 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.188820933 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.179072584 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192217298 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168951047 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198180785 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170361237 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196886283 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176650809 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.206960418 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192346539 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.169602752 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201577896 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16913612 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194422114 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1665161 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192222355 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166331486 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.204072014 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201911947 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.181389104 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.201378997 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170032531 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192220396 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168925895 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192554697 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168291708 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197230086 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.176975822 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193393689 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.212897282 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169986974 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193301077 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174979484 seconds)
  done (took 13.260018415 seconds)
done (took 234.077694985 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.32054023 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.345485155 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.154779505 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.542023515 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.156086893 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.871270631 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.826216003 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.249265385 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.180652624 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.154618127 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.179016501 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.173740443 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.538684367 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.155096619 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.179514515 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.173321619 seconds)
  done (took 32.153466236 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.356822799 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.398639343 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.172610555 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.185334953 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.161572074 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.186515225 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.159368659 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.188302832 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.15980865 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.190702578 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.16106807 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.180442251 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.164972714 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.180172707 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.159996537 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.18495087 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.165885843 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.184484221 seconds)
  done (took 4.5094992 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.185436812 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.234162617 seconds)
  done (took 1.391274467 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.196779422 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.284200958 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.384327909 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.234732416 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.181728304 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.203874312 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.20990744 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.198055712 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.273603032 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.170894194 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.196140346 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.181077059 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.186655904 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.190275662 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.177441652 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.181516016 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.188465512 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.200660334 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.176087603 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.186629795 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.185901995 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.186511041 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.164616807 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.200540001 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.266057266 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.173278497 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.189666511 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.161912461 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.186736621 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.177707991 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.192589893 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.20053396 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.174786134 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.242795626 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.187759978 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.21429982 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.191592962 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.184070514 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.178264247 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.184301902 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.165736836 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.189507108 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.172185315 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.181849512 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.160434977 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.188986638 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.160720011 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.18496362 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.170930687 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.189860051 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.168772076 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.193964487 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.239639527 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.164609939 seconds)
  done (took 11.544694093 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.010141393 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.209113001 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.188216582 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.151624684 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.207122451 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.173588139 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.020124495 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.188095915 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.317046427 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.085296653 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.176279897 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.19572826 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.308352481 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.34448834 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.368136019 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.424332707 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.849640517 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.196777251 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194797943 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.229893836 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165755678 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.20424908 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.201310762 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.494775103 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.1877373 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.159903186 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.191851059 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.193012305 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.218035372 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.187814951 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.164313165 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.287712997 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.336379338 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.300532784 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.16250845 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.184073617 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.161606762 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.251560528 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.336848118 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.308542412 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.230974727 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.18360574 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.160565332 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.191236255 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.176128846 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.183881426 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.248085077 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.258410015 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.258908088 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.164553853 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.195581684 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.168475781 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.191700278 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.24638564 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.159519684 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.456847857 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.431676297 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.185381643 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168350037 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.199604548 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.335143323 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.186785401 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.305393416 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.208244283 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.281146752 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.161399605 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.873743001 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.252154779 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.186883589 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.165900619 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.191513178 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191503706 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.167899446 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.246788501 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.49584991 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.170547138 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.189901229 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.16301871 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.2928849 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.186978576 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.162389608 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.24591801 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.188293536 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.168860046 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.194722109 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16920813 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.256680906 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.342042981 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.194311123 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.169923638 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.193280286 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.171039879 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.190252333 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.297807344 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.299248509 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.244606732 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.296971255 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.192150255 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.248483936 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.252906776 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.169544269 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.258309919 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.190447038 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.17526978 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.190813794 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.295866214 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.223919991 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16571694 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.192992931 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.168450268 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.228257265 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.190533933 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.170060503 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.257047664 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.559207046 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.255185159 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.184437569 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.169253007 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.193148282 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.219611572 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.194668127 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.32884641 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.194670233 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.25399566 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.167302998 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.185311552 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.168104813 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.249348131 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.196135802 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.168350077 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.193581288 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.171568375 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.345589604 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.311075608 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.173461725 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.313039852 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.261605687 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.193154782 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.26129717 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.168967 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.253985448 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197260744 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16745579 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.208220304 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.891077892 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.197618552 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.170112818 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.192147045 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.24589937 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.18898681 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.165700788 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.189275526 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.160867767 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.869251129 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.192898972 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.160397069 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.192551141 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.168232752 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.194748597 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.192899839 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.170106243 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.249257867 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.313347194 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.198086321 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.19249248 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.16475166 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.248911334 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.166835139 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.191058594 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163279689 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.191867106 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.170063224 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.194567115 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.165735948 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.256285553 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.244564679 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.328474391 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.637574045 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.163427469 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.19099731 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310150385 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.190566252 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.3944402 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.194185854 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.307673442 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.252425411 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.161836701 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.453713402 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.254421422 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.271089925 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.168334212 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.26319884 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.161860736 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.194919883 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.250083922 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.163395286 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.197391989 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.247348134 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.171702415 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.197603156 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.339113759 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.19168523 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.31569354 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.161778707 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.258961584 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.192251076 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.171077044 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.422426478 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.16600991 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.200963814 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.250331033 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.168322627 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.189815622 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.036010617 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.165103128 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.198948437 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.170153564 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.330130386 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.251053546 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.170865778 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.197428392 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.173556386 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.249699832 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.296533278 seconds)
  done (took 62.557927155 seconds)
done (took 113.123726316 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.32756324 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.233480735 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.428068357 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241014257 seconds)
  done (took 2.297943711 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.351795807 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.207275747 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.305043975 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.186381685 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.283745609 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.1896811 seconds)
  done (took 2.541225384 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.23925447 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.234440288 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231597632 seconds)
  done (took 1.724867211 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.274436168 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.277160267 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.416599188 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.328982655 seconds)
  done (took 2.380470572 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.343395391 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.180863098 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.221746625 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.292874362 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.309964435 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.274918017 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.187828202 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.240922748 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.220034006 seconds)
  done (took 3.330617886 seconds)
done (took 13.296506486 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.212914594 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.222758101 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.187561681 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.20483391 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.198081589 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.225557831 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.192720283 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.222405059 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.193936936 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.205917204 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.19142384 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.20068162 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.284798976 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.195611696 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.20117771 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.192922188 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.201491869 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.203197465 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.22193711 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.174849 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.22482722 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.174201459 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.202300101 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.185124147 seconds)
  done (took 5.934699359 seconds)
done (took 6.961298147 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.277130492 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.180650129 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.173023298 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.201332551 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.282276476 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.182329514 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.216907444 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.176344235 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.212018733 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.175426801 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.189090956 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.188849854 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.199582018 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.276168431 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.178754633 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.191027265 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.166747241 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.210822444 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.192065209 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.216139354 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.25656756 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.19769436 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.1843257 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.194054441 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.284623656 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.168566691 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.200966396 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.175103935 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.215423387 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.175849156 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.201726786 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.166190659 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.216676501 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.19036551 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.193472377 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.175817984 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.191244782 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.135298761 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.200895906 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.177621579 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.212878139 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.178087172 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.199545778 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.167584331 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.201240292 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.176590007 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.210301391 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.181914337 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.189558308 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.177477716 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.193979645 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.192483314 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.201491536 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.166588318 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.189407048 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.169672976 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.209692638 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.168349142 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.212335505 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.168194905 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.165581871 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.193590607 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.178068401 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.19426202 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.1752339 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.193065548 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.175550913 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.204018575 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.173635006 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.197294354 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166173801 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.201922695 seconds)
done (took 15.009184945 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.176258397 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.241251406 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.279390579 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.257810149 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.225782882 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.208276949 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.18216937 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.217340539 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.18090795 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.211317913 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.20381212 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.227701891 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.290582959 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.182900709 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.212302582 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.178400312 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.205795019 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.175689583 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.287013897 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.220754182 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.190014919 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.21139275 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.191051918 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.213457735 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.169774645 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.225026563 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.202131609 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.18205699 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.195209091 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.191057864 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.219440141 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.172845548 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.199696313 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.190845995 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.21683861 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.181600014 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.210821514 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.178978474 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.19763532 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.171241314 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.205082291 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.186138775 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.198165889 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.208317033 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.182265413 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.210886284 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.180410919 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.208077127 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.17568179 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.17736371 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.199785007 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.220517378 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.184474199 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.216212301 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.184264941 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.210386364 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.185673298 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.209436213 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.17522167 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.210070289 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.171883167 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.197014546 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.173125283 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.21862594 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.176112691 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.213433076 seconds)
  done (took 14.388151758 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.195793481 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.229392351 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.182022273 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.209482183 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.176904377 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.192584609 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.165362369 seconds)
  done (took 2.409246096 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.172376817 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.29613675 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.293658064 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.293998179 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.287964206 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.301944355 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.191712214 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.194663276 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.206449617 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.206456809 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.295868348 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.32917334 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.179267463 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.210517766 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.298332176 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.168604099 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.29757328 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.276304165 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.184384266 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.294948929 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.215860051 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.200866759 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.209107801 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.167314853 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.288938266 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.197611862 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.347019919 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.185937143 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.2061699 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.182518204 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.211664006 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.277360494 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.289590316 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.183962233 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.202173377 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.262566761 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.289320247 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.212564491 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.302837133 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.17246081 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.287050107 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.21086611 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.183993201 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.211177696 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.184025483 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.279063187 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.216621748 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.185210931 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.209837893 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.300616094 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.180463276 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.292773253 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.179938342 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.213338532 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.178584185 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213673422 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.216196801 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.186174868 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.300701443 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.185233042 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.29111401 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.294304386 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.297933057 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.294929183 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.222140851 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.265178019 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.28102218 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.212430485 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.291670415 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.18569934 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.296487704 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.20961865 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.182005774 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.28586202 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.213310183 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.270167311 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.298779588 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.213284618 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.183333106 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.201724345 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.181319442 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.199447364 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.298797959 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.184200541 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.209025845 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.190858221 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.211161586 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.182944957 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.286095509 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.222933682 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.183091448 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.211436914 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.188833087 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.212072774 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.186804104 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.298675876 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.210810882 seconds)
  done (took 23.714062464 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.175866087 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.168600111 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.202143492 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.170769937 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.19884705 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.169498771 seconds)
  done (took 2.175692806 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.213644368 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.213502539 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.194224363 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.213134576 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.23635307 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.299349441 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.306803929 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.208028778 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.201760368 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.223879604 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.30528102 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.304640062 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.302710402 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.189297345 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.308264317 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.18555379 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.307082906 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.213331104 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.192434559 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.212356115 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.183475206 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.218537194 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.182437081 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.292320858 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.216861366 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.185920596 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.208309556 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.222834988 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.195211478 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.207000472 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.189536426 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.213270717 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.178054222 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.207174724 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.308983233 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.177570322 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208882325 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.188216766 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.216614049 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.185880023 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.307541245 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.211580408 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.192633689 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.217094208 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.180023338 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.208061866 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.18752477 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.206481 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.313059965 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.187217687 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.21913715 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.184723991 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.215990614 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.186715572 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.206492313 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.204858551 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.18896707 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.311590719 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.188120205 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.20832929 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.212682283 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.188418366 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.206607319 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.190307927 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.21265428 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.188897879 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.205678949 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.187308768 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210998196 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.186903756 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.217485504 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.185987365 seconds)
  done (took 16.836826281 seconds)
done (took 60.568228686 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.723251035 seconds)
  done (took 2.814268723 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.1968472 seconds)
  done (took 2.292481861 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.271057745 seconds)
  done (took 19.402153859 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.493061769 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.420432424 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.109376356 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.244158441 seconds)
  done (took 3.36394489 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.150641676 seconds)
  done (took 2.259460756 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.475686479 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.344009888 seconds)
  done (took 1.921606111 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.827845307 seconds)
  done (took 1.941903615 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.823533309 seconds)
  done (took 2.925909423 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.370421765 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.287098173 seconds)
  done (took 1.777505368 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.690881137 seconds)
  done (took 1.814020834 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.441825879 seconds)
  done (took 14.566314782 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.324213794 seconds)
  done (took 1.442916065 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.363072509 seconds)
  done (took 1.484437977 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.700822991 seconds)
  done (took 4.825662955 seconds)
done (took 63.943603441 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.193288028 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.216230774 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.191443861 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.213284313 seconds)
  done (took 1.927726628 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.195510799 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.211265544 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.190079035 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.21024574 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.192641965 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.21229451 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.185105414 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.214886644 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.186146947 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.213745752 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.186727533 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.183524566 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.217393298 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.184428601 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.212040634 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.186782635 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.21901226 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.184233253 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.214591748 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.184291205 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.215345835 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.185700879 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.218011067 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.214999609 seconds)
  done (took 5.941038969 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.186908955 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.175513831 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.209709297 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.173405589 seconds)
  done (took 1.868700268 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.203046227 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.226482705 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.199821281 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.221893818 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.201269938 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.228657821 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.185099191 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.210246779 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.186558142 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.224131319 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.201511503 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.230671063 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.200456169 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.219888494 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.198418604 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.211132799 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.190319549 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.229350766 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.196081227 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.227733385 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.188972883 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.22379939 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.185709506 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.226037745 seconds)
  done (took 6.149814637 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.266350005 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.227513931 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.212438421 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.244688446 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.183125881 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.243551627 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.2608853 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.193112054 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.220873006 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.199067552 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.215830842 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.18731535 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.260627769 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.190778287 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.217935825 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.185702023 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.224813143 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.218216697 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.231841132 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.218374272 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.193351131 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.22671636 seconds)
  done (took 5.958803823 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.282674184 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.207910275 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.174936847 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.206564063 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.217143121 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.182891383 seconds)
  done (took 2.410823651 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.182877533 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.169791785 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.200844591 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.17115813 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.20441456 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.171751373 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.199778347 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.172121903 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.200129813 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.171449026 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.199749885 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.171607469 seconds)
  done (took 3.356838758 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270973561 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219998869 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.353978696 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.469146134 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262608439 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258943748 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.353400713 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.257183354 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.279041314 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23423646 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252622099 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259934985 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253723031 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287699936 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213518352 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.243935517 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240527985 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.312186818 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240865492 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316125614 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255322852 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248125563 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.291155824 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.249815415 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205821648 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26037403 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.218555254 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19685293 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265790887 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264134731 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270852549 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218705708 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240863558 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2873665 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325248066 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270166319 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.369061707 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202003816 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.258492996 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.293650353 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.332238717 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239886336 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.291286634 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222265134 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227591965 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291763688 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217911856 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.284267257 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.231479966 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213191999 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279082132 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279835924 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.268173679 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205685054 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.402693583 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233579809 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.239062416 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250507201 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28734795 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302737233 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280408607 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.191381293 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273066866 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290646465 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315117895 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.240432566 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.232182958 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222863845 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265314025 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.309701489 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281663414 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230276867 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.287858632 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231579914 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24032077 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264250608 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251839477 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307921013 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269551049 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.189856206 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247528364 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204583729 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224642373 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.255090147 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220590033 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320793681 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199217589 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.271262908 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278813992 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.25169931 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230675483 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25977833 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262478833 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217225427 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.185131859 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212057594 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.259615902 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255221311 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199806663 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250891036 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208258951 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.225682275 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248602008 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.193645421 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26886985 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.189939067 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258041315 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270520085 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.203069538 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282747633 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246935488 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.232581841 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268947066 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297859245 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229263306 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201687611 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320649926 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269981977 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.204395773 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270955968 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.300223693 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.235847416 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205366643 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265729732 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295268253 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212064126 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301569952 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23785977 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204161166 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.224356815 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273072762 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22856602 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.261769068 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227057029 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.234691 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286566442 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.227942318 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207108783 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284107196 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233575274 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195349412 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235704853 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204073942 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.242876385 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.249993757 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.207173485 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253675699 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266000056 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237180301 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255117086 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233914453 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24107351 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232798279 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.270619486 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218996767 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.219706445 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.274847055 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300433514 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199421837 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283713277 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.259982043 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279499208 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243483824 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231351963 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.284332266 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199518873 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.220210242 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229521918 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.271768182 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264583359 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.288614221 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274535182 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.234215133 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.264616521 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249391433 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267896281 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.254828105 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257181374 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.240190727 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273177809 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238506203 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.221314087 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.192044106 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.227956097 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20512403 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231157435 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204908313 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274571007 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264828035 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274478297 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.270764891 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206007262 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.296274129 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.223961537 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229069798 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.276558542 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239203488 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.290476581 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261231816 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280946189 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242305165 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260904482 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.191704287 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226022302 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.203528335 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.262899355 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206040525 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235879406 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241234359 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.29376456 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238440766 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249930587 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289032336 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266401692 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.303846501 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.191641283 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.258461737 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233488029 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269672185 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.290320885 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204583526 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.260992921 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.297077418 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210461156 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296199879 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271540931 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283180704 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294941969 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.238046827 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23210779 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214745584 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262262122 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239096044 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228284169 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.243243222 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229770698 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216873435 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.23957268 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20895981 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284998931 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247178421 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276603833 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.224768977 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268444515 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.226494721 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211364423 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276822121 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247021069 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.16176506 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267150503 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291070459 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219266367 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253765778 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27021353 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199848081 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.450315812 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284729976 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273650436 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204939108 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24032124 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274542436 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.228670385 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260063543 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.290468329 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211718141 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309478751 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.275369178 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.239911661 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202745572 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251281995 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220438796 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.227796432 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.25287868 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.232634347 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.245333344 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289513406 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205139707 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.277962914 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279980706 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.241527516 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.2201467 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239666931 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329876553 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239944984 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274490154 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.268983332 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.263268096 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254753647 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226094528 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196477275 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.233812687 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.288042737 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201479027 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281285351 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.26481222 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282556119 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276624606 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233594618 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243738205 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.198336693 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.270919418 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251981485 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28462153 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206984521 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.240013733 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291150336 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.184320166 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235167051 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231398914 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393815293 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249760259 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27140873 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.164087654 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.387273803 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199306447 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235208168 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.261201388 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239500565 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.233475937 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.261215067 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276343447 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245353272 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.230335699 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238186839 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.278880831 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28268756 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268756481 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243502811 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.248150729 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.265395571 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227062884 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273343249 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249286899 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.217470514 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261132506 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301708529 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.27746129 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.202791677 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274388292 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272745864 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242662058 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273504453 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243200416 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255580825 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232253896 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26816041 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208378103 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227707044 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228774422 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.268488901 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233517647 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276115089 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272921451 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204008119 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228570522 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218457024 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270335218 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241577637 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.203180147 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287759517 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.199029882 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2855951 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314588741 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232275519 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239695946 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246988603 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200317526 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242708722 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24659757 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203929417 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.27875711 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248733554 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.233273767 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276324132 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268065051 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235961289 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256321356 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243757683 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.34318085 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.23246118 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298185252 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22400031 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302675414 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.253385373 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248201776 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.275744521 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254057396 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234853713 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249805522 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.321071222 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26679344 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.241452271 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236250357 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214819695 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24265557 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.235495277 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225515341 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274583788 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211688093 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.24047356 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.273031956 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215600963 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.251843276 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242638572 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274903588 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256272931 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29236245 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.291292052 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210584997 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281344152 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279197038 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19974955 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.268575855 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276120876 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214298641 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255575227 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.237498432 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.211184293 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319511225 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.2282426 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232541296 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280028129 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.275842909 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24525376 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.240321137 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284261284 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211419032 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28235144 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230995987 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.22311461 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.275006523 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238330289 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.199859737 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277985528 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260634858 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.239968904 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.246053947 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.250102559 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301008737 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.22802761 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205843538 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394476313 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265380504 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300145795 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.192740824 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23987106 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218393446 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264200464 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.267585778 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24563284 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.234972976 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201424696 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.251092067 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.24660267 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.198641013 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.278173154 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255689576 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262511849 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292677436 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.202543884 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.357491396 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246624227 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.24475564 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.209089225 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.201087537 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246129309 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206612371 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247457269 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.283196229 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322535296 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.269771773 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.220135591 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240806363 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.199360933 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235250641 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.264766528 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224096907 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275553735 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251121278 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.163246468 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211905244 seconds)
  done (took 122.360125444 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254424811 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.244658759 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.263482956 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.317819789 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286759157 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.388525794 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.323175279 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.340982805 seconds)
  done (took 3.686398954 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.197008018 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.240219296 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.244626073 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.19055804 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.215171907 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.553844069 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.240974989 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.192826406 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.268075195 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.231008724 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.187725298 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.656710659 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.225707257 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.221749573 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.225463879 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.183094463 seconds)
  done (took 5.530046268 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.205152727 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.636615482 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.220321078 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.371763984 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.342972306 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.291406787 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.895183052 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.272648033 seconds)
  done (took 13.509369719 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.252767171 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.284534069 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.453098844 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.388046234 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.296811583 seconds)
  done (took 2.950211501 seconds)
done (took 176.764486925 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.204210877 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.198506486 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.231369359 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.231481243 seconds)
  done (took 2.121596949 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.243885839 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.151159847 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.185409323 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.150419982 seconds)
  done (took 1.998506384 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.485897768 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.151525917 seconds)
  done (took 1.936104859 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.226630571 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.241014978 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.210249278 seconds)
  done (took 1.965009661 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.215396575 seconds)
  done (took 1.496593868 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.200665252 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.193384856 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.322068743 seconds)
  done (took 1.998988303 seconds)
done (took 12.794992543 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.223253437 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.051571169 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.666934892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.208339847 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.827937973 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.47279567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.543540634 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254746664 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.282284872 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.216870872 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.251238613 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.768188415 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.526662027 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.954815891 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.511861928 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.955459505 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.800543783 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186664433 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.22463853 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188521344 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.51983113 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185783445 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218529516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186521908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.797650998 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.49454463 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.217585654 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.966313241 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.216079568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194527564 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.505706625 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185974252 seconds)
  done (took 24.06666325 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.193557742 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.276062587 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.241364845 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.220792368 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.194842216 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.219933184 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197694718 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.233323973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.325875479 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.187400693 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.242100732 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.185782174 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.223752853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.187255179 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.24418604 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.186742884 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.220985975 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186634099 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.22646521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189623097 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.239916773 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185482596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.22081368 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186910593 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.218439363 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.205567258 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.218378563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.198307371 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.219182356 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.196331278 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.225089216 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.186780775 seconds)
  done (took 8.174990171 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.235676853 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.287090988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.244254633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.259642415 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.275865004 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.190363325 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.310457789 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.255528749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.299688567 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.22005111 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.208929377 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.221601342 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.227335572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.22194628 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.211328518 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.221651329 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.189219848 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.221993927 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.226617547 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.191288206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.241178646 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.187917584 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.220223182 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.189356599 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.218591779 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.209503409 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.219170153 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.199963693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.218606243 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.197465954 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.224127743 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18805757 seconds)
  done (took 8.532035408 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.205558593 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.202477315 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.245665459 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.243709174 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.198644431 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.200399732 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.236741303 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.196310315 seconds)
  done (took 3.031806403 seconds)
done (took 45.091404946 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.212316875 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.200141981 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.238389716 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.19920261 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.314053347 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.22563694 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.204346669 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.224138902 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.199354331 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.240318211 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.188176335 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.223755371 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.204877074 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.227947135 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.285322402 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.235158069 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.323438075 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.318350587 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.193669038 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.233432986 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.193928942 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.324188321 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.197362552 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.22719012 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.263891462 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.22935417 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.309458579 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.194987396 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.227911408 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.190948886 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.319735487 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.243737474 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.192980634 seconds)
  done (took 9.090531364 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.305687033 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.231799937 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.195826864 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.231920497 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.197503715 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.229859975 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.337484318 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.197302008 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.229612564 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.198242677 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.195894696 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.320970479 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.238464284 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.192430065 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.232688036 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.172163549 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.340949195 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.197077287 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.224976903 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.155576579 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.225944396 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.198596968 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.351471855 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.191856938 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.231640056 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.196955851 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.232975779 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.202168556 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.231079858 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.200478995 seconds)
  done (took 8.205879423 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.206845145 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.210962245 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.251755719 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.298518113 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.227357252 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.243017093 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.214768152 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.243620573 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.21840725 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.226085279 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.205664089 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.260465828 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.206948346 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.235310261 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.190032912 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.239997314 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.206765855 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.2256396 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.19865533 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.242909888 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.20950085 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.240709229 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.212196535 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.235871973 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.188772492 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.231530839 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.201707564 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.234727477 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.197779392 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.240189984 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.192607252 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.226697348 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.193097838 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.25942011 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.191214549 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.238669005 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.21104878 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.239114351 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.203430901 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.258794463 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.227018576 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.193748836 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.251823471 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.251165172 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.22668603 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.20252692 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.226061927 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.208674677 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.22173273 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.210024511 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.267032888 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.191827909 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.245541735 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.190587394 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.222328062 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.200203862 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.226235378 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.196058672 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.239669415 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.193242013 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.24516312 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.200814442 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.235564371 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.19500046 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.235780087 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.19150471 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.189334716 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.228834623 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.218184746 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.233093189 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.263329329 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.191556679 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.236540916 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.206531425 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.202795302 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.238937075 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.190395655 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.237292297 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.201689941 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.230066891 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.204640963 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.746674173 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.191859782 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.241714667 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.212275758 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.239292235 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.23579452 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.203808187 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.191682989 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.225970289 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.20839881 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.228478121 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.194849383 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.240395305 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.19189651 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.229904457 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.201856367 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.235808518 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.189553284 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.253278582 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.194478392 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.225547526 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.218131925 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.228915278 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.195204994 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.235846349 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.23255324 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.226913652 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.20023796 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.235859951 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.1923185 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.233547153 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.194309818 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.225251191 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.208461592 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.24292387 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.19932741 seconds)
  done (took 27.606724748 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.420936753 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.409429584 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.296490106 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.458525141 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.241650746 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.332039613 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.408615991 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.41220564 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.191326609 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.263076584 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.282749942 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.374483334 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.193190394 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.255711796 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.414520387 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.492259328 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.223033334 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.266915704 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.263138367 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.206594335 seconds)
  done (took 7.743033133 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.203573799 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.261418505 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.218130117 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.243064547 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.204033934 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.239612412 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.194654 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.247143254 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.204114606 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.234451463 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.196193269 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.233562234 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.207068156 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.239280845 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.210339038 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.250532632 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.199977004 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.231395449 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.216199195 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.231628771 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.211515112 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.252303915 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.200865526 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.249746995 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.209688062 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.237236012 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.190814072 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.231109384 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.199879333 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.23638984 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.197010291 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.23409205 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.200401632 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.202931007 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.206058552 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.241424147 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.200175302 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.227949438 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.200294279 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.194844564 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.241873415 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.204398362 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.234828132 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.201124872 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.247654363 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.175025452 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.207116483 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.240009949 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.17025192 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.246879314 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.205450394 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.241695022 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.201789611 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.24830068 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.201620182 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.24360187 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.203711801 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.242673803 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.199450212 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.224993174 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.191895724 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.230327063 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.202897815 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.240569074 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.206505681 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.235640005 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.20224735 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.226429912 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.198328013 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.229482257 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.196798334 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.239785436 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.214930696 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.237227807 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.201602919 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.23737937 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.202776413 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.158885373 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.23608977 seconds)
  done (took 18.614799996 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.22358539 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.233607537 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.212626146 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.259805831 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.203407794 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.232911375 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.201102627 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.211398932 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.240324953 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.20737212 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.23896415 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.240642487 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.217307249 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.239122905 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.201602557 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.242610481 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.202352911 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.265486906 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.207439126 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.25604725 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.206060466 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.23408412 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.206543866 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.239468817 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.223534267 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.241095429 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.222731819 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.23652746 seconds)
  done (took 7.707836086 seconds)
done (took 80.27315534 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.56771761 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.683025004 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.453657372 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.460023798 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.481862829 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.470933057 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.450072302 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.460418331 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.055583953 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.423570136 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.453648235 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.447311742 seconds)
done (took 31.808490255 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.516918175 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.116054822 seconds)
    (2/2) benchmarking "String"...
    done (took 2.16172178 seconds)
  done (took 5.629739104 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.123403839 seconds)
    (2/2) benchmarking "String"...
    done (took 2.124386431 seconds)
  done (took 5.587925661 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.441276301 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.447326354 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.830895268 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.443288149 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.441465872 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.442984766 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.441410636 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.443881589 seconds)
  done (took 17.833900653 seconds)
done (took 35.351457497 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.48695013 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.771179662 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.726218249 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.43778172 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.442045425 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.442263541 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.447092033 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.503008017 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.447499365 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.447402624 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.892662556 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.729427034 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.449380087 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.866812222 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.442286545 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.459690818 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.458275073 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.784212363 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.44528858 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.455341085 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.445530549 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.433338475 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.464730881 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.437077383 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.475270999 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.445957557 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.485278284 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.442859202 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.725249444 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.453593336 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.435259638 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.464256635 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.477874089 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.445723019 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.461195919 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.453254377 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.731157128 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.458787751 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.451621174 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.460886236 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.732900797 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.464666788 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.444305767 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.444891226 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.453239249 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.482743226 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.442332335 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.567401859 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.480654225 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.460016843 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.52302428 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.8830426 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.450332679 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.455451709 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.461838119 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.773249965 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.479744531 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.557751183 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.498235045 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.455973868 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.445274895 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.445306483 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.48597571 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.454262495 seconds)
  done (took 160.46857353 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.447567419 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.44792616 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.447758044 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.45169365 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.448096443 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.448955761 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.44930881 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.44850885 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.451175361 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.449320291 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.450460908 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.449227291 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.448037527 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.417483504 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.45896818 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.466215368 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.447301922 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.466769597 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.475630764 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.446615143 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.458456836 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.449486955 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.447149747 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.448461182 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.456859091 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.54080935 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.462812576 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.467938624 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.458632498 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.448889445 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.456436094 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.453371215 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.143543483 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.317460521 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.461034036 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.492594396 seconds)
  done (took 89.326266361 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.449585447 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.449933973 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.449051066 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.487589465 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.451207687 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.090652633 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.090553749 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.525801861 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.997829352 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.854951534 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.44887299 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.017632943 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.772008716 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.450536161 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.54867969 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.449234132 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.464641378 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.451981719 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.549732289 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.474736384 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.45183006 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.451402714 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.091687756 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.466876516 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.463690604 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.638539685 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.450360944 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.489804559 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.859982609 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.45086803 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.487835913 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.798066855 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.488669555 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.449663879 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.875306552 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.01348949 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.565862939 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.452674934 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.489552742 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.45309066 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.743945991 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.45278786 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.453576588 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.455807921 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.172576772 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.452827609 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.094871722 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.453802069 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.466670287 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.451244714 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.454247097 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.453805326 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.851640681 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.322211762 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.453850539 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.453169323 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.457707866 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.452849737 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.452804109 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.490292516 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.992712825 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.378073705 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.452346202 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.457640126 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.490948118 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.455616522 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.454937456 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.882182875 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.518130758 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.616555467 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.455955995 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.095758517 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.456054606 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.484994492 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.552239546 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.575510622 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.452490927 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.457868484 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.455848651 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.455266247 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.571123789 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.45479546 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.917764074 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.640016748 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.453755717 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.02295919 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.557668859 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.454516704 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.848581889 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.454318941 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.452883053 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.226006498 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.555115719 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.453137552 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.456568415 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.457838088 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.919441168 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.0992892 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.773887778 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.457742494 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.168285014 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.456802254 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.925506303 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.07321015 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.17630275 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.457514619 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.57425626 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.643854345 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.45851562 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.461064734 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.024769571 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.459310499 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.520000628 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.457052485 seconds)
  done (took 401.984328225 seconds)
done (took 653.119733788 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.450720341 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.447417354 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.446601123 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.447103553 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.471108093 seconds)
  done (took 13.613371307 seconds)
done (took 14.966827079 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.461388251 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.458801599 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.458743153 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.174275902 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.459594605 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.461036862 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.46057731 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.459490371 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.458691739 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.459398957 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.171383911 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.460612288 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.461150563 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.348227533 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.158744747 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.460000261 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.280915209 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.461143571 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.462166533 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.76849188 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.80417544 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.525785693 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.760899512 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.505018027 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.781173035 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.792164462 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.674330788 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.621640647 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.490007662 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.482068287 seconds)
  done (took 19.562038038 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.272958414 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.765795236 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.806445884 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.528515998 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.760938986 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.503557279 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.767773618 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.835649037 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.674221261 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.62322742 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.490824886 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.483391164 seconds)
  done (took 19.597582318 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.179823002 seconds)
done (took 90.545837326 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.503687451 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.57029079 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.499511754 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.479694453 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.480062456 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.479619851 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.482790815 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.479871779 seconds)
  done (took 13.332187481 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.479710169 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.478213254 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.47809434 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.479049859 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.478141431 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.478311709 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.479588051 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.478692282 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.478373044 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.478984006 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.479731127 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.480262362 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.478655158 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.482078495 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.479658859 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.480069793 seconds)
  done (took 25.024450008 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.483466042 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.480739658 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.480642417 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.480239333 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.478137896 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.480002585 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.481086073 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.478438911 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.480680913 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.481791807 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.48083754 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.480285428 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.481496907 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.481512458 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.480299097 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.481819442 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.480901003 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.480281583 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.485192872 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.480894258 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.479741874 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.482032484 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.479232555 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.481401948 seconds)
  done (took 36.900558505 seconds)
done (took 76.614932508 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.469627556 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.463416285 seconds)
  done (took 6.292152383 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.542002287 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.541164977 seconds)
  done (took 4.445414299 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.483064096 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.480773282 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.481892734 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.480493657 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.482889739 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.480210903 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.482876855 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.482719319 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.48136583 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.482870668 seconds)
  done (took 16.17911735 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.48528428 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.483455102 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.480915524 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.483309662 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.481238867 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.483888424 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.482237524 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.483670023 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.483808421 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.483315332 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.485051995 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.481269647 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.48383338 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.484039994 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.483119354 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.482045264 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.483262777 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.484096973 seconds)
  done (took 28.05783154 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.499963601 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.503079178 seconds)
  done (took 4.36376994 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.612412281 seconds)
    (2/7) benchmarking "second"...
    done (took 1.526229475 seconds)
    (3/7) benchmarking "month"...
    done (took 1.589234488 seconds)
    (4/7) benchmarking "year"...
    done (took 1.580671018 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.528069332 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.503672262 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.527165016 seconds)
  done (took 12.228590703 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.484964716 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.775404993 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.967911318 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.650610156 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.472617596 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.494792319 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.457419573 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.495794558 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.496253493 seconds)
  done (took 16.657779156 seconds)
done (took 89.58380175 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.469459282 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.506895542 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.485591141 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.505606819 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.834406151 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.528587286 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.472141472 seconds)
done (took 18.168088373 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.477956446 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.476448489 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.459573511 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.481917709 seconds)
  done (took 11.258665083 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.473527632 seconds)
    (2/2) benchmarking "read"...
    done (took 1.793189528 seconds)
  done (took 5.629807875 seconds)
done (took 18.254832625 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.488132323 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.48762976 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.486802937 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.487741519 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.486232998 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.487018068 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.488391269 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.4877855 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.488132007 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.485449773 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.484944121 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.487635223 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.486847157 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.48669031 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.489792098 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.486569574 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.487757681 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.486176374 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.488414229 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.488278442 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.487830397 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.488108368 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.487432286 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.487338107 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.487599359 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.490391812 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.487522823 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.490425807 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.488708166 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.487833335 seconds)
  done (took 45.993195732 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.49352295 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.491261207 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.488981763 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.48992766 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.489926323 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.48936058 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.489264994 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.486450194 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.491844019 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.490078501 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.490138226 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.490095123 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.490677599 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.487503197 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.490810154 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.489481796 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.489333772 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.490183524 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.491523986 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.488963359 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.491073852 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.488973202 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.490068656 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.489969822 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.490979256 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.490025512 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.487907245 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.490810796 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.491736765 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.489866569 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.490351753 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.488918564 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.490682935 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.489391779 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.490915711 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.490672038 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.496487332 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.493054206 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.494390517 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.492854826 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.490759749 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.490686056 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.491513576 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.491860904 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.492074216 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.491811628 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.493881052 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.494872632 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.491983433 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.491855169 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.490768184 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.494336907 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.492895468 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.493396929 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.491807482 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.49143495 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.494620432 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.493096517 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.491822413 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.493484352 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.493315453 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.493279728 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.491297171 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.493011842 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.493664745 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.493394708 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.492666177 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.493660849 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.495002617 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.493116282 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.494936114 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.493550775 seconds)
  done (took 108.755753442 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.498323243 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.494746113 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.494196515 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.493385961 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.493714955 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.495721557 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.493792212 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.494533793 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.4958027 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.495819374 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.49576493 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.493900328 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.495396706 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.49578758 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.494506479 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.494305752 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.495663523 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.495227356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.496678249 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.496212853 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.495029491 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.496258625 seconds)
  done (took 34.264849797 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.498480575 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.495468038 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.493339229 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.497500061 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.497452788 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.495560375 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.497756418 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.496227646 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.495933108 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.495944394 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.495752287 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.496083183 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.496878212 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.495166135 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.496765276 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.497299837 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.494465418 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.497555792 seconds)
  done (took 28.306827125 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.495670662 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.496706369 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.49842438 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.494970306 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.49752279 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.496091528 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.496094367 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.497416992 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.496886029 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.49752981 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.501083897 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.497381284 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.496938259 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.497219529 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.497758627 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.497406675 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.496618229 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.497643246 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.497486403 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.496714515 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.498297152 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.49846396 seconds)
  done (took 34.315720025 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.500812768 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.497971613 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.49903675 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.498343649 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.497996654 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.498712625 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.4979913 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.498503666 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.500789637 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.498869158 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.499509037 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.497674001 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.50231242 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.498715283 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.497968489 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.498778586 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.499341847 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.498896983 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.500328808 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.500615099 seconds)
  done (took 31.357604497 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.501760949 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.499211413 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.500563304 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.50051903 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.50110525 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.500113864 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.501327416 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.502407988 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.500699273 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.499296425 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.500274442 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.501619569 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.501644299 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.499761528 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.502231562 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.501142483 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.502738904 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.500890278 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.502159194 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.502725558 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.50201245 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.500920722 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.503616691 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.501222138 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.50170031 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.503203261 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.501672188 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.501096268 seconds)
  done (took 43.412771638 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.520683601 seconds)
    (2/2) benchmarking "in"...
    done (took 1.518968543 seconds)
  done (took 4.41842583 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.505006509 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.502963023 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.50398595 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.503191882 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.50275996 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.50293238 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.502697379 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.504153029 seconds)
  done (took 13.405859334 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.500760744 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.503327161 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.504055767 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.504142017 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.505966964 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.495382852 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.50249769 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.507479181 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.499152387 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.499017116 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.50321621 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.501493002 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.49945526 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.500085713 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.497370193 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.503558524 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.506925401 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.507719892 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.50540453 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.505611303 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.507902377 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.500568589 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.50225786 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.505230528 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.500197977 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.511237493 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.504518196 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.507906909 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.500886156 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.504600631 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.501228061 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.507432986 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.506683851 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.507003161 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.505428 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.507217955 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.511573671 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.505920747 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.510118038 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.509364118 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.511313839 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.508233933 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.502813416 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.506462919 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.502985276 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.512849576 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.507210823 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.506551713 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.500261443 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.502928374 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.51161521 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.499578493 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.511874326 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.507341325 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.506307222 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.513482431 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.513467606 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.504353839 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.507217377 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.512724021 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.522600772 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.514188125 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.512180117 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.51055084 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.513153036 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.51814885 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.515347784 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.5142336 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.514290555 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.511437592 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.511270665 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.526535214 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.51912105 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.51387518 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.511770823 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.509108976 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.50764972 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.51539736 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.510635978 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.51447282 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.514575011 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.510090474 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.507623215 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.512783141 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.505870587 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.513567624 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.511325121 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.511540459 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.503852202 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.515699386 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.51982691 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.512236198 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.50474348 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.506916162 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.510218933 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.51353471 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.503143731 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.50976715 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.514789185 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.510953285 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.511662251 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.506803618 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.512305151 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.517239417 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.513716545 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.515611188 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.516336552 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.506562588 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.519411957 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.518140717 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.513785644 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.50614263 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.512597443 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.516993863 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.506287812 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.512816568 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.518823811 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.509214291 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.51826417 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.515241577 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.510217834 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.522007982 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.5182873 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.51344991 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.50959283 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.521140991 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.513868788 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.51167556 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.517914255 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.513814461 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.513250823 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.510324101 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.520981442 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.510010302 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.519740005 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.510275719 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.519584507 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.513978788 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.515538788 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.511233761 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.515084797 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.512490973 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.517127977 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.516836073 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.518542488 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.512911686 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.525817594 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.515971404 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.5153777 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.517866243 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.52080899 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.515950306 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.516006153 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.520805413 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.510299158 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.518969195 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.510360001 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.520468693 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.516741982 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.516936938 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.516264148 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.507826515 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.514681497 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.520774217 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.515486925 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.516912311 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.521892332 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.518691123 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.516527321 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.509276066 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.518082035 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.507656191 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.514072805 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.526065842 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.516596978 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.519060816 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.515466418 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.521802551 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.518749891 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.521257971 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.513023312 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.519552359 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.522154841 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.524681839 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.524163332 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.519213167 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.518043892 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.512573787 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.515428059 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.521667333 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.516217302 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.528103569 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.533901827 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.532697261 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.5156526 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.525149501 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.514452817 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.522301927 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.51819982 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.525270361 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.520684698 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.522080445 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.515124093 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.527915967 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.515989077 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.523650662 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.510982357 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.52027621 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.522221026 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.520595758 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.5195434 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.514229821 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.52014222 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.523559989 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.521479511 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.523364415 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.515132475 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.52567629 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.511353675 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.516099847 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.524780628 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.523218484 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.52275662 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.528331868 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.518636892 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.523060445 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.522837847 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.51949789 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.52613019 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.519432018 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.520156758 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.529286216 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.523351163 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.520144262 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.530965545 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.524696724 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.516349064 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.526582938 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.529156807 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.522066142 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.51847267 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.527541839 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.522041763 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.523343431 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.523040926 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.515052542 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.526838666 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.526602573 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.530322474 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.518203485 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.529711902 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.520222114 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.530070861 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.523317606 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.528787419 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.523029944 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.525825442 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.529570124 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.522663583 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.520746652 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.527433262 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.525001349 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.523679536 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.517560103 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.530022012 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.527384481 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.523582731 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.522538938 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.526510332 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.529000098 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.517777349 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.527992952 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.520672048 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.54114849 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.542986647 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.534555783 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.530074146 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.528773816 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.5294177 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.527359021 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.5216745 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.522366157 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.525385288 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.522247513 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.526126201 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.530848693 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.523305639 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.531524511 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.526683266 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.526854753 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.530821673 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.52772844 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.522140018 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.533276891 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.528685918 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.528087079 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.519475138 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.52941867 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.524713718 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.527726506 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.526290725 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.522275089 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.535064341 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.530910161 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.526516149 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.526273355 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.52282994 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.523058573 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.526030352 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.536859199 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.522616865 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.53436794 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.521212817 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.526951918 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.525072855 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.532594922 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.535009891 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.523028725 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.533477394 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.528849788 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.520030513 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.524352407 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.529764269 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.532146271 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.538375643 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.523521411 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.530857402 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.527380876 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.529160338 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.531415843 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.531888806 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.528021673 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.533669425 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.541503203 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.531795433 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.529285394 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.532796833 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.536832633 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.530374946 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.532869017 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.523808099 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.537761512 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.536862637 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.527305463 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.532951016 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.530049002 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.532982034 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.530309494 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.533750993 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.532786516 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.534618264 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.535155111 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.534165502 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.538692023 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.533033056 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.53950564 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.540106771 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.536655894 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.540281139 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.52778597 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.538037483 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.532841416 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.52536916 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.529142155 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.531201589 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.536175471 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.524423271 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.538650875 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.531658121 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.531286305 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.535020426 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.541065917 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.52273436 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.534644214 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.543981719 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.525459243 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.53735125 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.532465966 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.526334323 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.536152511 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.53278248 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.525563136 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.528903957 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.533707755 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.538915648 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.526774806 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.537352031 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.529611752 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.539285155 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.534055482 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.536042873 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.532919228 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.535942553 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.528046485 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.536570168 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.536127827 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.542505323 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.530446085 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.535441776 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.531081068 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.542735521 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.544150371 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.530718593 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.541607029 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.534292977 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.53032019 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.536033855 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.539515306 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.531304055 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.540825933 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.530433935 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.532960028 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.53280945 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.537254672 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.538078879 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.54033348 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.529017752 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.531576 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.540187087 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.53701275 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.536304733 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.534007985 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.543724702 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.528977422 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.530638146 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.539871193 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.532237933 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.54198702 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.531795884 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.536131073 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.535004718 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.543385873 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.537232951 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.53737306 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.531566476 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.533632661 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.545030075 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.540708801 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.536510274 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.534064554 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.541019217 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.531204796 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.539603764 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.538760458 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.533160372 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.535269322 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.541596828 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.533658064 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.535364764 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.536655372 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.53922186 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.542094345 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.539826824 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.533023124 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.548424559 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.546641932 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.546405398 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.534180444 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.536022402 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.53631867 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.541007075 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.539851478 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.534233227 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.547523872 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.542937324 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.544399701 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.538347581 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.538085671 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.533579102 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.542054645 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.539808267 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.538661248 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.548383316 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.537866523 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.548965865 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.540294419 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.541298126 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.533698137 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.535432295 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.53786562 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.541794264 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.54267872 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.540284113 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.541420088 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.542551147 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.550400744 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.542220017 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.53958129 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.541108805 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.53527104 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.543540245 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.533968325 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.543449047 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.541218225 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.536631423 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.545848822 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.541940934 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.535160993 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.540449498 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.546621323 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.542840995 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.536617727 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.541913785 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.548069531 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.547630839 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.542391271 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.534946735 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.542621494 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.547969439 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.542285794 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.543340175 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.53866571 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.554105629 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.553658008 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.541702473 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.542053487 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.547302213 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.549880876 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.542362095 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.543248089 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.541457891 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.545605308 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.548386061 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.546411176 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.549016647 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.547217556 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.540215894 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.546999276 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.539352989 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.542816411 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.544776741 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.553001891 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.545631121 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.537520364 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.556766116 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.552148254 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.546903933 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.559830265 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.548515388 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.545574508 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.551912499 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.537011767 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.548202398 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.542101144 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.551319358 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.546007901 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.547135199 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.546017146 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.538935991 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.547771692 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.553410908 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.554183005 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.548897856 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.539266717 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.544000241 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.549858718 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.546145802 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.549461467 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.546505675 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.548149571 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.548002444 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.541743154 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.56429892 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.56372542 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.552728359 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.548426125 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.54765476 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.549330545 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.552100758 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.547562382 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.553290678 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.548863532 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.549511518 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.547875063 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.558576138 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.54976592 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.543567858 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.542948481 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.543242677 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.552720586 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.561232355 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.566663396 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.550878843 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.550306343 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.551951472 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.549917221 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.54461284 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.552004331 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.547668593 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.546352878 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.543943182 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.553962647 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.552085582 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.549003645 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.544123619 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.555738916 seconds)
  done (took 911.926949543 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.551833034 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.551067692 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.549193256 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.550430649 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.550548407 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.551503269 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.551427196 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.55120561 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.552465719 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.550614517 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.551088792 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.550703618 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.551332623 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.551597801 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.552232916 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.551007839 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.550977952 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.55177429 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.553483973 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.549589251 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.550760386 seconds)
  done (took 33.994184564 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.553589816 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.550682562 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.552262911 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.552302991 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.551386211 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.552575059 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.552481788 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.553964863 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.552089134 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.55180002 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.552514395 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.551211648 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.551104849 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.551049366 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.552814877 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.551417972 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.55355964 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.552816064 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.552180713 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.553950087 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.555101928 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.552329773 seconds)
  done (took 35.572558618 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.554121737 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.552893388 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.546277623 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.556315571 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.553750526 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.553448271 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.555260591 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.552760006 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.555327391 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.546586504 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.547098224 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.548003134 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.550618318 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.559628625 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.551179019 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.560601267 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.554234902 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.554523387 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.555636037 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.553403935 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.557229347 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.562385503 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.555032479 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.547903575 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.556221228 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.556787014 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.554825558 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.555181972 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.548702162 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.557911655 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.554414689 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.548985565 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.558842258 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.555227017 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.549397813 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.558566124 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.55631573 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.555206054 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.555708505 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.554097872 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.565200481 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.5577552 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.56217156 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.565124468 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.556981362 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.550737948 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.560553346 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.555937142 seconds)
  done (took 76.056506938 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.557362179 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.556280083 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.557589876 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.557618365 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.557070701 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.554965717 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.555696659 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.556270655 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.558293746 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.558270069 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.557009911 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.558455629 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.557927688 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.558250396 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.556851019 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.557213686 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.557868999 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.556730685 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.556990129 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.55773912 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.558000459 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.558404163 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.5579076 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.559760758 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.558448236 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.559323396 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.557737299 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.558817797 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.55885794 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.559288497 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.559396029 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.559156944 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.560122963 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.55964991 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.561521919 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.560398977 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.558119187 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.558981271 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.559026949 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.559440056 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.560148895 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.560070665 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.560766887 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.55758656 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.560451541 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.560675269 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.559826471 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.560332725 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.558343611 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.559855752 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.560808736 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.562075023 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.55957294 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.559662708 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.560583988 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.561629547 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.561123017 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.559478268 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.560892842 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.562217272 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.560072658 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.561499445 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.561751441 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.558129302 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.561488264 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.561968846 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.561577917 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.562701705 seconds)
  done (took 107.447280833 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.562272201 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.563177654 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.561943304 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.564277743 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.562608703 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.562369673 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.561724304 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.561483464 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.561730744 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.563033121 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.562024337 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.562737525 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.562538878 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.562455539 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.563286818 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.562528168 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.56235077 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.563927669 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.56579675 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.56455652 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.564516046 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.563163764 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.564476581 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.564514765 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.564649397 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.564260959 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.564775517 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.565856817 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.563642277 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.564370726 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.565450506 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.565122302 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.56452254 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.566610774 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.564403737 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.565223215 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.565586791 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.564838085 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.566358059 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.56432174 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.56549219 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.566449469 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.565474782 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.566643982 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.56590778 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.567131709 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.566914899 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.567815757 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.565969604 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.568057111 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.565513703 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.5678831 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.565615763 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.566514241 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.56542351 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.567556269 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.568293523 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.566775302 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.567837207 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.565923747 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.565502252 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.566212955 seconds)
  done (took 98.448250726 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.566525926 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.567506398 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.565923416 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.568432683 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.569515106 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.566649003 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.566830339 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.566933266 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.567686598 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.567454212 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.566349261 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.566896479 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.568954583 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.566869167 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.569912442 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.567517077 seconds)
  done (took 26.51170729 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.56805892 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.566944186 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.570118379 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.569105992 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.568623798 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.570299206 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.567089159 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.569298557 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.568799131 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.56943746 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.568420929 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.569175965 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.568421323 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.5693261 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.566889404 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.567472879 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.565941804 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.569073071 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.570172843 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.56977224 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.570135754 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.570095192 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.56884397 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.570024674 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.569907157 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.568291054 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.568556731 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.570024718 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.571547375 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.570652889 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.570440095 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.570540836 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.568448441 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.569345289 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.57229118 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.570160967 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.57137923 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.570605112 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.57166345 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.572594001 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.570188909 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.569696674 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.571333082 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.571677988 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.570988016 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.572822803 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.571209807 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.571690528 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.570470066 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.572967138 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.571151003 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.571872007 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.572626596 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.573634934 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.571056212 seconds)
  done (took 87.786310999 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.575646728 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.573703524 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.573248077 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.572828394 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.572928507 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.572222568 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.573374362 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.574605484 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.573342231 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.572544301 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.574223702 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.576483211 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.57430393 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.573960471 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.573072034 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.573367905 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.573818062 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.572242284 seconds)
  done (took 29.763414134 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.574103344 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.575402447 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.574460468 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.576505912 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.573864077 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.576578429 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.574036007 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.574731495 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.572191429 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.574298068 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.576518789 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.574507182 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.573640396 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.574467389 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.574194312 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.572843026 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.577298398 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.575910357 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.575294282 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.573760283 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.57736564 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.574343041 seconds)
  done (took 36.084144947 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.565734506 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.565896492 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.566192647 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.581340536 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.57693948 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.566881663 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.566991617 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.564719401 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.582779784 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.590565412 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.588270981 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.575723129 seconds)
  done (took 20.33186266 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.574541732 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574213816 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.575590371 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574629288 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575363035 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.5771382 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.575502865 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.575915863 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.576943426 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.576871143 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.574749347 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.576120226 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.576396373 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.576918876 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.576125807 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575897528 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.575978263 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.577081806 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.576689845 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.575503064 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.576785087 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.577797498 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.578251637 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.578212774 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.579290486 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.576709071 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.575471922 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.576646226 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.578862884 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.577120906 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.57883839 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.57798067 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.580150681 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.580545585 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.580665293 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.579611366 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.615323168 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.577173601 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.582328313 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.578881671 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.57828553 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.579361923 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.579029423 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.580040583 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.579422991 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.579227516 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.579313697 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.578767958 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.580698813 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.580243984 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.580455603 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.581906997 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.580572417 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.579824768 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.57901627 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.57991882 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.583082378 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.581031831 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.580930054 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.580237718 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.580310666 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.580620746 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.581368767 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.579602758 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.582175079 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.581779956 seconds)
  done (took 105.654135234 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.581042523 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.581480928 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.581612677 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.581682388 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.579772086 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.583610249 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.581202098 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.580774868 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.581493582 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.581988801 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.580960449 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.58078526 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.583240147 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.583480008 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.580356881 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.582803699 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.584003221 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.580745134 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.582780569 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.582574226 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.581034576 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.582889255 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.584150104 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.583036492 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.581588656 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.583799579 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.581896589 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.584677632 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.58329875 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.58288383 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.583221328 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.581619886 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.584367868 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.584272544 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.584429323 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.585135162 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.582906391 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.586000263 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.584647202 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.584979369 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.583580087 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.584694007 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.583902704 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.585124013 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.586182067 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.584980428 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.584184858 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.586068427 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.585149465 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.586241133 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.586290253 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.584457034 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.586494427 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.585157165 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.585366158 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.585754034 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.586487649 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.586312939 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.585970179 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.58670923 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.586670559 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.58629883 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.585826011 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.585846133 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.586332536 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.585455546 seconds)
  done (took 105.979446179 seconds)
done (took 2021.152374739 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.573752591 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.571999078 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.574812687 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.985782261 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.573466606 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.236497901 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.269872175 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.574416091 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.575673055 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.577077084 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.575217695 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.569468998 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.934104833 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.574343667 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.578862811 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.574165876 seconds)
  done (took 58.767510591 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.611621209 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.585703019 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.720964384 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.582878503 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.610477073 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.804032956 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.64845182 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.587726671 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.786251575 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.583524457 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.582700145 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.606296455 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.579526184 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.577896544 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.600847541 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.803530768 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.895430687 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.585750069 seconds)
  done (took 34.202012146 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.129546584 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.599338472 seconds)
  done (took 6.179185462 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.60583015 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.583792706 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.587074569 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.583050261 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.57584631 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.572188065 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.583495559 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.580760583 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.585531965 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.733187831 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.586469658 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.597636196 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.583576175 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.584167376 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.591140668 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.63348202 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.720233858 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.592082931 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.592240804 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.588288248 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.581908616 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.785165766 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.62980151 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.59338758 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.733855648 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.590235201 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.591318174 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.59854386 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.735793328 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.591788466 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.585067539 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.585323149 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.585916244 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.578784992 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.15904123 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.57580515 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.6320009 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.59117211 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.592507166 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.742968328 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.586330562 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.593526892 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.591587263 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.154562339 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.713247801 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.82190009 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.57718376 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.586479934 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.585992453 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.734097479 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.585421056 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.58690827 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.652421301 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.577408717 seconds)
  done (took 99.927602995 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.637891835 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.576127974 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.769214222 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.595948699 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.576085836 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.577718042 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.598465589 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.929369531 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.646975295 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.580481437 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.91830296 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.282267705 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.57911994 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.628488072 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.626096945 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.632957787 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.5812404 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.583944024 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.57846404 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.584238524 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.197062232 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.580142362 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.595996555 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.774439917 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.622122128 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.189004686 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.57778987 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.580731883 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.579524674 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.581327691 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.244972804 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.579517072 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.645009445 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.580522112 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.89798632 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.035428244 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.993879887 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.580003037 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.637756793 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.579834655 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.613615583 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.189924956 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.019001002 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.578808819 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.580587792 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.190545196 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.579321644 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.589335794 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.582633601 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.858974215 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.58178415 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.585200538 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.57834773 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.585978502 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.582329721 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.650513051 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.659072239 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.192360967 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.58182278 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.580720124 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.6362117 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.586514307 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.583715265 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.586293985 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.584587122 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.020737557 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.801586166 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.588293996 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.022991284 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.234280796 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.581602389 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.316382048 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.582244432 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.607007086 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.698142502 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.583866492 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.582750115 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.184047847 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.59400776 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.582717759 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.002382165 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.581880685 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.925665893 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.601940041 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.582823307 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.218710124 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.588813663 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.652709023 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.584384306 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.589531875 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.58366716 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.590745713 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.904271165 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.614285028 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.584640818 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.5867936 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.623021616 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.584299669 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.585175753 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.591279637 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.330649119 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.586176709 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.588355413 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.588218789 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.585931679 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.585783199 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.589243452 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.58632528 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.880174836 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.585146613 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.590885515 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.591611184 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.58584132 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.597978555 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.796703242 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.593888101 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.959026138 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.584326977 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.60494195 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.58594663 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.588867856 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.592069154 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.584970852 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.594816443 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.541062112 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.905962991 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.607340613 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.608717382 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.59086855 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.588941688 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.586861422 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.587855045 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.631769896 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.589939886 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.475431614 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.612409872 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.617945296 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.588556719 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.601884968 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.589290596 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.589032768 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.592268587 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.922206515 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.904042389 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.80890338 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.593585209 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.59205985 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.466105431 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.621668816 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.77623888 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.60880384 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.586129302 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.897739586 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.796825414 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.593370218 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.587239097 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.591883202 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.879218459 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.588423974 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.92807428 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.275382721 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.588875987 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.597169527 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.484811715 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.362005561 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.590801702 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.593820705 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.927396188 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.607175795 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.592808084 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.592734202 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.592180105 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.588239196 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.596207058 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.5960685 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.594009511 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.594395258 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.662676988 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.795836271 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.608314485 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.593959781 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.215014401 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.605894941 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.59094657 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.598260006 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.591039769 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.592456838 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.648103149 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.595994599 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.617655599 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.59169973 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.591308956 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.25026516 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.594164416 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.589031186 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.793883947 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.423384716 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.594361464 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.594452614 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.593121135 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.629033252 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.242807009 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.596222771 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.982066205 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.602023325 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.638494555 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.591356078 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.625433226 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.246383753 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.593348067 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.615542667 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.408658951 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.591444692 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.369707871 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.589672661 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.601817605 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.333166349 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.592023226 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.597366908 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.594055342 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.591267973 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.911954494 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.592350628 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.603027508 seconds)
  done (took 558.147291044 seconds)
done (took 758.672644335 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.594802095 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.597818642 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.596773983 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.597017881 seconds)
  done (took 11.853967697 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.61027335 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.601126064 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.609850176 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.601621983 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.611831533 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.601026895 seconds)
  done (took 11.105763935 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.594951169 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.595763227 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.597055656 seconds)
  done (took 9.257899549 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.849028964 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.603683958 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.01807735 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.614019187 seconds)
  done (took 10.556070491 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.611385582 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.612259297 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.612440436 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.613130764 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.613640849 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.612929749 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.614952098 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.613660174 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.613174844 seconds)
  done (took 15.984938291 seconds)
done (took 60.226147162 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.680848104 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.683526678 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.596134661 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.640898847 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.743423596 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.688696032 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.68818588 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.690445746 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.684686432 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.63548186 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.684208202 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.627692557 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.682922529 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.807945008 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.638114245 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.685674336 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.627242674 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.779837976 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.684244768 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.638334537 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.706669382 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.638373606 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.639973422 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.599641505 seconds)
  done (took 43.644806957 seconds)
done (took 45.11726468 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.640009845 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.699282883 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.607323927 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.607635023 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.61003393 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.599547045 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.630330375 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.609549309 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.624000761 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.625193581 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.599860672 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.617939318 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.627874541 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.620812864 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.64407339 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.609289813 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.610285919 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.621530592 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.624884622 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.628271302 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.612804736 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.609273675 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.638663034 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.610905969 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.620039762 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.618826714 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.614141482 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.607258232 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.617341808 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.626408764 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.614182055 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.614403236 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.627270574 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.621429344 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.613115042 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.622356037 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.612407812 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.700526505 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.632250333 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.624462082 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.618233232 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.627785168 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.615177607 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.615270417 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.62334359 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.637821709 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.619448983 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.625845525 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.615714206 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.612702556 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.629298644 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.624833951 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.620361169 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.616712282 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.615185209 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.62395448 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.62550333 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.633827678 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.618272435 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.615620112 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.646122124 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.632325838 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.621986274 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.620483258 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.621675676 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.62838302 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.622077025 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.631445908 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.62207005 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.618044914 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.614922466 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.621133976 seconds)
done (took 126.339862366 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.73639459 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.606753429 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.764709342 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.617379868 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.785532772 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.739905909 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.619862712 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.620501748 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.620733524 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.4088795 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.619542571 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.620600129 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.611065394 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.621282577 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.73711839 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.622055312 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.620390428 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.308683766 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.620638757 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.750966699 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.604915953 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.620466508 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.621717332 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.420854254 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.609762512 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.609116712 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.751021171 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.621212853 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.322082489 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.606911119 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.611555774 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.320611459 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.750080505 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.642392261 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.633219919 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.631520248 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.786496316 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.622698287 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.738584166 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.738922238 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.765000655 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.661348984 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.609546116 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.613837943 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.624485622 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.623272303 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.624377418 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.650556128 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.614132768 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.623238581 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.311020572 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.632549531 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.632460417 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.639725149 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.623350127 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.642798539 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.624329987 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.626367839 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.750662569 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.624839015 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.740100592 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.42129169 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.412849477 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.62329242 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.612001703 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.625062544 seconds)
  done (took 127.346969477 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.686606131 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.691740881 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.741943531 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.617770892 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.666846928 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.741397066 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.617987431 seconds)
  done (took 13.24492355 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.625782643 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.625388568 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.665056276 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.665966999 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.624383838 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.790579777 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.624179013 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.628074062 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.624948346 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.668048133 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.627473839 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.625750392 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.633241057 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.617071902 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.665923422 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.627512905 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.734225275 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.619220053 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.626221156 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.774609536 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.627350557 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.635533281 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.667660094 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.630288746 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.628462624 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.625516123 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.375593195 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.626312273 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.627386304 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.625394852 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.628166136 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.687908409 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.628329386 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.622742884 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.629165195 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.732840127 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.628589049 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.631177144 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.628358057 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.619965455 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.628404927 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.629807145 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.628162819 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.630662315 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.627634578 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.645191519 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.627439331 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.629663424 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.629197381 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.629487688 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.669732562 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.626302231 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.629560095 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.627989526 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.676904554 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.636411339 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.62888006 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.627566363 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.628910006 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.629299389 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.776720559 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.666328181 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.628866538 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.670550346 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.628719904 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.630324101 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.630662644 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.628860512 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.711079297 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.629525762 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.671214948 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.627986968 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.802219423 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.646018829 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.630654455 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.627624686 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.625507881 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.630229535 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.618407849 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.627020468 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.62922302 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.623808272 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.628241396 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.632612939 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.630711551 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.781294756 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.730891197 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.629927951 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.639692989 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.630403371 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.631439832 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.673509712 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.630933582 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.631664597 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.674013267 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.738927576 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.674072105 seconds)
  done (took 166.092119576 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.637508074 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.636190466 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.626864072 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.648423563 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.625429175 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.626165113 seconds)
  done (took 11.28752081 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.627886704 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.636618722 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.631779205 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.633748324 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.633807452 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.633995268 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.632839014 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.625757232 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.635912508 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.633836957 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.633605476 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.634559836 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.632702782 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.63537591 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.631497587 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.631971948 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.633837989 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.63482402 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.634394586 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.635965477 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.622598395 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.634772357 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.637112267 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.627649734 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.639147244 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.634871478 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.650335028 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.634923297 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.636680993 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.636134709 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.63732485 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.63672129 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.63058683 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.633243672 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.638673588 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.627789011 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.63868523 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.637151173 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.636772951 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.637561959 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.637281587 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.636850638 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.636332908 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.638952838 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.630104841 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.633300112 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.643174332 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.65412649 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.636862206 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.637684308 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.637934239 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.635753777 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.637426769 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.638219992 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.633088987 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.632355357 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.642111592 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.638047294 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.637844407 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.630229313 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.639164187 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.638886256 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.63172507 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.641743876 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.638947917 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.640282907 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.630366783 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.641379317 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.639665804 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.63702022 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.640529641 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.638305867 seconds)
  done (took 120.268705172 seconds)
done (took 439.717216666 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.106148662 seconds)
  done (took 4.598907528 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.754156579 seconds)
  done (took 4.247697224 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.389418084 seconds)
  done (took 25.890750689 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.689553073 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.625853796 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.626826674 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.627047932 seconds)
  done (took 12.064783478 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.227710582 seconds)
  done (took 4.725652582 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.631799265 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.645263406 seconds)
  done (took 6.772404626 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.025098294 seconds)
  done (took 4.520641726 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.361918049 seconds)
  done (took 4.861211135 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.637804458 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.641377616 seconds)
  done (took 6.782590408 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.615497096 seconds)
  done (took 4.110988618 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.987106994 seconds)
  done (took 16.482337175 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.648433252 seconds)
  done (took 4.147709745 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.720174947 seconds)
  done (took 4.215662917 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.696182887 seconds)
  done (took 7.191792445 seconds)
done (took 112.108385236 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.626384335 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.624664706 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.624327656 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.624079526 seconds)
  done (took 11.992965581 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.706169087 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.707815504 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.716871193 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.701928522 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.69969608 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.707351972 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.669874796 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.670154768 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.697297254 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.69414019 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.713784096 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.700347697 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.709764224 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.670657585 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.694285084 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.710023486 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.699463632 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.716703568 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.670026972 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.700320727 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.644108685 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.700518071 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.696246299 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.643704748 seconds)
  done (took 42.136912025 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.133650462 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.705733567 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.787436281 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.685369955 seconds)
  done (took 8.808216438 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.748774361 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.749406721 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.767384902 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.803910578 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.850767687 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.763329566 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.669933785 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.667145885 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.655876601 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.750280436 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.82260837 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.748896423 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.967650817 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.644914267 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.961238407 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.646974877 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.644313986 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.748997185 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.799877242 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.830614524 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.645549367 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.748716329 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.753484718 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.748478808 seconds)
  done (took 43.635861946 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.651748898 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.663244019 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.647295799 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.646782752 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.647714045 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.649181296 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.660630033 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.647646125 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.653491655 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.648460422 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.647012585 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.648632452 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.661560993 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.648854508 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.650564959 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.654942994 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.650908602 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.655746693 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.657170161 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.650926074 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.648267849 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.65663073 seconds)
  done (took 37.84613991 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.63435951 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.634214424 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.983865398 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.884990819 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.630628604 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.63461323 seconds)
  done (took 15.901952707 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.719568211 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.882261222 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.637866733 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.072108041 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.156587946 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.639335683 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.639711307 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.925410991 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.282467998 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.314561038 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.6919916 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.718995024 seconds)
  done (took 24.183678798 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72593873 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.645845366 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.642394986 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682653244 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63881979 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.641502238 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.695312406 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.169700893 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.646678173 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921453825 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646209367 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722738735 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.892154091 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647790539 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.64762091 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.636566865 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868889086 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230767299 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644564668 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644804375 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673964871 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.646264588 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.645812891 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.889486788 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.645119391 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.645073189 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.91240343 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.644811085 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98103798 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954568887 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953092923 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646966752 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922084533 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13484592 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750357029 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889940231 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639294549 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.643332251 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.642979063 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.656877602 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65496277 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.646960015 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957554325 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645893643 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.64573081 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658372547 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181933377 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.65270288 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.646774289 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.646305365 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959055959 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730292877 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.653699733 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.647402122 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710315692 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645998156 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.654293342 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769253355 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283413776 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661288331 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654171076 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.650341294 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.651908726 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648424945 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398905108 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.657048925 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.656833158 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653065075 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647435198 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.644570021 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689242224 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651051296 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.6650981 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650211829 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557258165 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.659848458 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648380241 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.285893899 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650192377 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.651850632 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879712007 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64700056 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647490176 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.647719716 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.65019095 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.551980796 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.655303657 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.632006433 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679642581 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.178627971 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.894117762 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666996171 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.680417933 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.873640987 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.631412702 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651587846 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.653169303 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650378574 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666759802 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.183978225 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64691099 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.656283811 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901133338 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.863505722 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65249208 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.642220009 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18488602 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659176261 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.67232813 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.651005907 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.900038558 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.375159916 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976284342 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653334426 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686197213 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.650628203 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.621411864 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650962166 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.658859799 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.66595677 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966435189 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.628843957 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652008524 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726922297 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653127977 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.653104998 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653962965 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652939506 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.653961148 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.889076094 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661670484 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.967869121 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.654923176 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65181155 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.655220924 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655782742 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.652406805 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.880666139 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661035957 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926114664 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652897314 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655821537 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653267657 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.874287309 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.663899884 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.658015724 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999514258 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65269798 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.65644428 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969883897 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687163786 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.768443044 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687983404 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.656686243 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.907941464 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.661231309 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.661829351 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.675961551 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.662125534 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661639872 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.661802031 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670803543 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376657223 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646799968 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.658831954 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.655488672 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.671424884 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729290052 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665055734 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904069718 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.656671373 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647303979 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.660780928 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.663110097 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880460544 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967047464 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.655710113 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827695987 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.191439415 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37742923 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673587153 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.658037464 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.656826033 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.655216305 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655912961 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658865624 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.65639122 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905187655 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97738841 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.664400011 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386663806 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663448262 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.657649011 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.66615201 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971947863 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.665609707 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657733022 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.668400409 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659871515 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668275425 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.97457418 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878025846 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.675788183 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.658387064 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.178416195 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665479206 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.657004469 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.660158001 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683685788 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.659684334 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28030452 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996738819 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657131234 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973132411 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.662164623 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.678544341 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.660054736 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673304463 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666062528 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.673430108 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666178948 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.905776177 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.659739516 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661893 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294855935 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.591108251 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.325488807 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671865353 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.661634204 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.660708689 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.200173617 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657763416 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661285676 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947662327 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.199117013 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658449213 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193953569 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.668704988 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.579790339 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979807098 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890246962 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.67126836 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.673634515 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97460418 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.875497621 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688466226 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.676721458 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66224639 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.639461068 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286133727 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669465604 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.838310298 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200509248 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674817899 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.66124566 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.661581936 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.672860499 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1285739 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.659318814 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663550577 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.661374016 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.682122782 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286705125 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.668281146 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666754009 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.424920636 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.667033834 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.207644461 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662007273 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.913674605 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.982482092 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.968889368 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.677950392 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.673077832 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.909552902 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980823494 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668842155 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.6672755 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.331624028 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.614344574 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.673660329 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667860712 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.631366396 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682021194 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007265915 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.67648361 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.678666645 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673395318 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.667679061 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666957096 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.668007748 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.674199306 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660855806 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250842875 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.659880505 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655285266 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669782184 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669468404 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.917182203 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.682036699 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393044835 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897980436 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.665615891 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697416569 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.671841836 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665245522 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.646357728 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.666550893 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.6681918 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.752088358 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.888035985 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.668238101 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.645397451 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.713347047 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.878002129 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.669071677 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.685615307 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926941243 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.668220259 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.687354546 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598254666 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697440743 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.689097588 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66873525 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.659455862 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.698538313 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739441297 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91720628 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.9838174 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.982740129 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137603459 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682660374 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66904157 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.686460334 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.75033309 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667756302 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.66934719 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.666274049 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396000676 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.598168148 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404203417 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992090784 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.670147571 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680389504 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668885137 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907471315 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669022508 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.946710117 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671913346 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.668456743 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.690173249 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671566847 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686045808 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886607488 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.94485622 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669973864 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670163972 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670142676 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.671863263 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994469625 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.887178199 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.265362131 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.315857569 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671397224 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.671868568 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.215997827 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945966983 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673097695 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671598821 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675160371 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.697910315 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.681960369 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.678386935 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672461715 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896532324 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991885139 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169788812 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.986227384 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.697102704 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.548158231 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684898252 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.9232365 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503932818 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.923066726 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412370629 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.509600136 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92612206 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.747982161 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926449037 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.674971119 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909723967 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.689585095 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.674186167 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.673941187 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67537319 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.671991202 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.989747269 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413170206 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931328404 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.679714697 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.692637063 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705554714 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.926481698 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.89867584 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.58164314 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.894139049 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99876923 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.683485813 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.677364678 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41581991 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999602036 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677277085 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.680448946 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937910408 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.679221983 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.713835628 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.559818884 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.674018688 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325932911 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.886592664 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695553356 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.690433571 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.51270942 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41730684 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.6993503 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.270138948 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.674882926 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675454676 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.955121987 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.68365449 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.689625821 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96727056 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.683338004 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.689023703 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930889214 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.411869962 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.610835268 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.681056443 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679880784 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.67737661 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678982109 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712402628 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675250083 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.677048058 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.148812909 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.675126946 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680659798 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690761344 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.680281352 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.690743686 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.678889833 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676997193 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.684298082 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.661310166 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.657451183 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.696082432 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802910087 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305857078 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680475964 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.293548999 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.015608921 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.930472249 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.694475796 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.662723034 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.688789631 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.681492775 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679652612 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.676910558 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.668363347 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.32618898 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.678811763 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.022814789 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6865133 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.892583853 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892407949 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.67878144 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931899515 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.686029253 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703341091 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.662000729 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681039347 seconds)
  done (took 1125.685374337 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.708129422 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.694841275 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.701153229 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.744211068 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.71455198 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.733532169 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.764400793 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.733000981 seconds)
  done (took 23.329026739 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.682229027 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.683245809 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.679345705 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.685536459 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.682185066 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.249291038 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.67546874 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.681424184 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.702474546 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.681884671 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.673998519 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.419084097 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.684035628 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.684103191 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.694129458 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.684659538 seconds)
  done (took 37.787117236 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.887054466 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.865342731 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.285045081 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.758436001 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.714969978 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.671881961 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.058524153 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.696707498 seconds)
  done (took 30.476044994 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.693175905 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.689415208 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.689914181 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.691714653 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.690044125 seconds)
  done (took 9.991632729 seconds)
done (took 1413.270522503 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.68998423 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.692292731 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.691242064 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.691191936 seconds)
  done (took 8.301829523 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.665461313 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.665146658 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.668053695 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.677718585 seconds)
  done (took 11.215573735 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.137595027 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.338042575 seconds)
  done (took 6.013226419 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.687718808 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.447729426 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.437397949 seconds)
  done (took 9.111705041 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.9989429 seconds)
  done (took 3.537138115 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.079633803 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.167224189 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.676902211 seconds)
  done (took 8.463015672 seconds)
done (took 48.18113061 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.675782653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.442359258 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.832555969 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.691009326 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.837127674 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.834196384 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.958149105 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.682072907 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.675313597 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.674203715 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.690286557 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.838139057 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.950030469 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.444667201 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.949732558 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.445936531 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.841466818 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.677202008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.693966988 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.682950904 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.958202288 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.688891493 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.675376907 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.696383899 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.835553944 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.825050316 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.692682983 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.445141074 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.695120465 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.689505546 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.819708194 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.678632311 seconds)
  done (took 92.755206168 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.696562322 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.684053363 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.675567617 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.675236653 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.68952307 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.675395716 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.677279294 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.687472488 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.680858663 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.682536681 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.679433289 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.68023578 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.684570627 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.682053758 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.684274775 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.683537895 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.694368014 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.682325346 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.683755915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.680223934 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.682235007 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.682927232 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.682461281 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.685374314 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.682200686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.683306282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.683566028 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.684259354 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.67974519 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.683110258 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.677906188 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.679085457 seconds)
  done (took 87.388332055 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.680946674 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.677207425 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.682683289 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.699882074 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.677883414 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.681277381 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.700054042 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.680056005 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.679851673 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.684619053 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.69979344 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.682910159 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.685610683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.688624039 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.6858311 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.688217381 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.697543907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.68390903 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.704813131 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.686465227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.68520657 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.701743283 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.687037388 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.684796026 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.696501298 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.684630176 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.685090508 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.694281647 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.685434478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.687970178 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.686237459 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.684806631 seconds)
  done (took 87.556416088 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.93150182 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.704164469 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.705497576 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.69710637 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.706381238 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.702456773 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.69878821 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.931146792 seconds)
  done (took 17.628480312 seconds)
done (took 286.867479381 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.700014253 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.718846303 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.72763072 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.713177082 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.718769577 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.72693397 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.936376251 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.730267467 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.925440936 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.701911616 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.717615139 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.703555035 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.666786481 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.845722393 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.691989847 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.697872076 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.690240047 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.691228876 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.699834286 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.957244448 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.727549652 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.69186755 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.697824386 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.699809263 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.688283823 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.773291884 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.777439767 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.869723071 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.830853283 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.774292815 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.693786235 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.704645758 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.704800474 seconds)
  done (took 77.145128373 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.700532163 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.708133419 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.710670173 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.710296655 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.709881857 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.708035825 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.701322249 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.710372902 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.710923199 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.710006384 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.708783934 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.712743276 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.708869921 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.710577301 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.70820285 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.694012691 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.699755646 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.708137157 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.702761084 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.693194062 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.710526193 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.711588211 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.712870106 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.712131862 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.710268895 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.708860944 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.70896501 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.711574414 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.708444166 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.710901695 seconds)
  done (took 52.788650036 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.712252362 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.697527921 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.691605163 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.706226687 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.702254356 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.706256407 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.065735493 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.710014966 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.706383403 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.704354441 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.694204492 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.711654113 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.757856841 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.696052664 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.704090895 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.709204865 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.714653859 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.705112666 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.696848767 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.719011416 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.065050198 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.708839065 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.065915201 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.720227301 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.705268268 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.704211774 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.709988704 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.695689942 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.704026364 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.694812664 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.706768208 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.048841786 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.696560124 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.695983965 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.705753647 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.70693065 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.707771818 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.695286767 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.701306589 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.700957967 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.050735119 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.699461651 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.70808436 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.691439474 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.702198758 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.708127562 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.695123043 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.694679882 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.996763108 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.70716765 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.698000863 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.704062655 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.709910724 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.703123505 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.998535717 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.703370897 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.699080785 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.694268578 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.706523225 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.054288487 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.709451643 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.703506555 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.69243996 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.703127816 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.695008302 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.723939242 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.717512808 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.703009677 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.710125071 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.703891548 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.694121062 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.704012088 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.71184952 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.710236684 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.713808251 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.696858063 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.730055155 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.698296728 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.696649728 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.049777718 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.708967164 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.70924542 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.06437405 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.708903034 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.712742297 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.713098263 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.709750281 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.779990253 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.052354124 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.667928485 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.717018175 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.697426797 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.054709973 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.712817928 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.70708582 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.701086007 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.712410092 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.714364002 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.710591514 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.695413066 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.705337046 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.720642093 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.699034977 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.708959283 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.057216093 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.711613821 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.707722126 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.706685725 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.776871658 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.71244409 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.7196054 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.709163272 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.066656753 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.708905135 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.711981081 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.698011063 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.700868233 seconds)
  done (took 244.074587888 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.721763832 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.697119205 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.701887516 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.723172723 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.701873266 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.710955997 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.701136228 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.706441369 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.707367281 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.701648261 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.70406491 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.712341812 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.708351296 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.700290316 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.712818682 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.703206142 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.702122686 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.721905303 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.70243193 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.70355735 seconds)
  done (took 51.704355558 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.717759048 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.387836957 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.35754143 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.71662401 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.71667617 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.710829119 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.77932303 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.719358906 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.717443421 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.073356368 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.92365769 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.720609923 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.718150304 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.717592057 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.361209218 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.717132486 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.071649271 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.385276072 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.717365977 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.389088765 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.718182883 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.716536959 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.709422425 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.38937223 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.081978737 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.059844844 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.781337513 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.390512699 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.718676316 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.718293154 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.389317587 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.717913531 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.71220125 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.38553293 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.716402341 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.732751564 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.719142602 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.783923644 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.789251098 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.078950151 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.39444031 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.069744979 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.729270655 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.902823175 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.721436802 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.704171008 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.398963037 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.718057403 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.706619525 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.721335827 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.728224987 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.372522012 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.712693314 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.375209079 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.718586599 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.724014494 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.391250264 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.372762672 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.365817377 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.923055361 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.710994248 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.064409475 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.719849827 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.403035477 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.721036566 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.721053926 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.72040386 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.928296011 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.393288326 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.06488821 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.076555826 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.077069096 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.722466034 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.794776806 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.721684272 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.076627962 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.791307425 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.15154914 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.079177244 seconds)
  done (took 155.180323208 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.020831314 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.820763939 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.154065649 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.348277742 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.276347476 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.866814886 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.827514126 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.99113768 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.724693806 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.821737488 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.478711394 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.826134797 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.532805552 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.794578417 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.837623575 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.866874362 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.18390505 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.710219718 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.45415644 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.450420536 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.716279387 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.827768703 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.55060034 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.133907379 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.709853799 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.519933961 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.710739415 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.301861371 seconds)
  done (took 64.024963127 seconds)
done (took 646.469189125 seconds)
SAVING RESULT...
DONE!
