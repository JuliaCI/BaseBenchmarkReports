cset: moving following pidspec: 10469
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341065228 seconds)
loading group "string"... done (took 0.592846012 seconds)
loading group "linalg"... done (took 7.556550258 seconds)
loading group "parallel"... done (took 0.175400959 seconds)
loading group "find"... done (took 1.213432797 seconds)
loading group "tuple"... done (took 1.887057907 seconds)
loading group "dates"... done (took 1.2792634 seconds)
loading group "micro"... done (took 0.238306068 seconds)
loading group "io"... done (took 0.981939037 seconds)
loading group "scalar"... done (took 39.856869962 seconds)
loading group "sparse"... done (took 12.653095312 seconds)
loading group "broadcast"... done (took 0.997772111 seconds)
loading group "union"... done (took 13.77404004 seconds)
loading group "simd"... done (took 4.658401144 seconds)
loading group "random"... done (took 9.406686167 seconds)
loading group "problem"... done (took 1.954167069 seconds)
loading group "array"... done (took 22.179763566 seconds)
loading group "misc"... done (took 1.998244254 seconds)
loading group "sort"... done (took 3.388803125 seconds)
loading group "collection"... done (took 19.178491716 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.559064001 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145385214 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121463808 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.142586996 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18736612 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133330861 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143657291 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08654044 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.917301219 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160932146 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140321542 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.517063293 seconds)
done (took 4.972416796 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.192932758 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089678713 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099239701 seconds)
  done (took 0.853954969 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066553145 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129622605 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082558571 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068207184 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068693908 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082446103 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06730497 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067377581 seconds)
  done (took 1.23899376 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074438241 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070484677 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08573183 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068781274 seconds)
  done (took 0.972555495 seconds)
done (took 4.003391467 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.938421477 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.253896471 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194684786 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.486844425 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132642833 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.192460092 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67143442 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.328349037 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216890936 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103604259 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107065721 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.393166642 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109685267 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674091259 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078673911 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106470405 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158802408 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.429248396 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081794704 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083351557 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105076791 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140858993 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104886046 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080589952 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.17094808 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070203759 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.154444297 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.0960697 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068165524 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.251404308 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191193478 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685923397 seconds)
  done (took 10.573681315 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099525683 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121563451 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069358361 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141735528 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123461075 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071573469 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073100702 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084416985 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094013673 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161872888 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.119687351 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124924806 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066869956 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071164473 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102414916 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232724872 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.093280476 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10239153 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073276812 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091888763 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110162428 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.100137262 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081072365 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095535873 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15111157 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195156921 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101420077 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.114086441 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072555243 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100592149 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130334544 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135905432 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069504571 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08395508 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.159360368 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096873409 seconds)
  done (took 4.602352377 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.11074023 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.17647362 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093541862 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157860717 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086416653 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.129989207 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067313753 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100498589 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253801258 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.173107525 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.116395751 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.492251537 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114400841 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104145699 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070152638 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088334474 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069293556 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.626121172 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147843337 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.124517327 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085631021 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093109222 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072446338 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.374969723 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083391147 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06814852 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071244274 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.076820127 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150158047 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070603556 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.273299422 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090366846 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089890634 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120948801 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.179877757 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100267393 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080609899 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12736134 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067524855 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067182364 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174514725 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092098483 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068390336 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108543606 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120523102 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.107439941 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086106314 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069562695 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.187251031 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067747408 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101492065 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.936648743 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168125938 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09912413 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068663579 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.300169207 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103479355 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068711986 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066362275 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.258090266 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.187076025 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085484605 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.073046215 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083880125 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070877046 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.370635155 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067914303 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.676208396 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072745534 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080279948 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088285555 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068696471 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089987872 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075042385 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103406415 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06742955 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069686331 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084592748 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067484154 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08640117 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088201466 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.210467455 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085633782 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071864732 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083280727 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087595295 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113985625 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07148936 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067433688 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118320794 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070332441 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084196641 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103649345 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087047651 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103415858 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071679823 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129145097 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069440866 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108614096 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.144578879 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082556643 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100863299 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081875372 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.092200093 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101393881 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097329007 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069772605 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157510314 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066481284 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083160315 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06803152 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083948938 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069621845 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069443532 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100139874 seconds)
  done (took 21.493188539 seconds)
done (took 38.451951693 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.311290165 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09540314 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095211679 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.094728663 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079346406 seconds)
  done (took 1.426520448 seconds)
done (took 2.146929136 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.150177383 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103535063 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081800519 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098106937 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081904933 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104011792 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119024034 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082058393 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119196948 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064891436 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115293832 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064782316 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081576732 seconds)
  done (took 2.017048693 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083504688 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086209613 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08633754 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082552935 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080398869 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083087835 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080749732 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106663503 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080579584 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090057323 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064521497 seconds)
  done (took 1.64332056 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082501334 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084823363 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086864442 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080988581 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080079073 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080991323 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08040714 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102852735 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081256989 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090497609 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064628887 seconds)
  done (took 1.637558157 seconds)
done (took 6.010815054 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08027625 seconds)
  done (took 0.792487779 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.751969696 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.465270492 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085519354 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.138494477 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.22358102 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.160179691 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.461808244 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112708479 seconds)
  done (took 10.323131927 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.116472046 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087954728 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074065239 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089153472 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070180005 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087034347 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070944409 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07487233 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084932573 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07020016 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087948669 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072735652 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08563754 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072558816 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08725737 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070373384 seconds)
  done (took 2.086396415 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.105405484 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.105166451 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091739262 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076862412 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090507652 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074486575 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093078454 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075911208 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08850323 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074879776 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092362367 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076469745 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088626961 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066929211 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090810806 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078673148 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087592662 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078184827 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.09156581 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078235782 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091521932 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06728225 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088729349 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077410676 seconds)
  done (took 2.863127853 seconds)
done (took 16.782594402 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133638578 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078155258 seconds)
  done (took 0.932066755 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084043079 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099727375 seconds)
  done (took 0.913507394 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085695854 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081537104 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092468614 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094789135 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08298873 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06811985 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103655352 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068943468 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082325927 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067385765 seconds)
  done (took 1.557779314 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070380226 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095111631 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072226047 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098245547 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074300435 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081256516 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075324256 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084538041 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081353981 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079834423 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073894218 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099543821 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072645787 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101438274 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090572677 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071299158 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087842042 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069643677 seconds)
  done (took 2.210321998 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068765001 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069274422 seconds)
  done (took 0.872630848 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06983295 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065844878 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084350423 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068384935 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080752439 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06527835 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080388381 seconds)
  done (took 1.249956406 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413273736 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11094067 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267241421 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073339339 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.107402686 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.296840658 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067821995 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072243358 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090482946 seconds)
  done (took 2.272916728 seconds)
done (took 10.735906254 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08066364 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087035184 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111262138 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.442587282 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106032122 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067381401 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144665615 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.217991504 seconds)
done (took 1.989357489 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128077507 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.629584591 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.414139995 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.23185148 seconds)
  done (took 2.014048925 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.385473796 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092107766 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073827144 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069081633 seconds)
  done (took 1.353572557 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066824313 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072366395 seconds)
  done (took 0.878434566 seconds)
done (took 5.111927487 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068590458 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.115032851 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067147967 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065116107 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084524856 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064916812 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065577702 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084691237 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068362271 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.084484563 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.067325398 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067807091 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081142283 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066062207 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067485382 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080387958 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067554629 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065487514 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080482271 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065047311 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082758531 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067556366 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066038266 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080952167 seconds)
  done (took 2.548681483 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08785666 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084268974 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072701417 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089088932 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072045318 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08907713 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073609331 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068825279 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088470623 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070781211 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088082978 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072420004 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085237924 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073087602 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086004933 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073183928 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089080911 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068820246 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08534852 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072527558 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07348522 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083808457 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072830362 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088973042 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072118651 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087206277 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069954392 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084874528 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073267057 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086735213 seconds)
  done (took 3.122640792 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07273177 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065694809 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081940464 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072524071 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065690768 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083217851 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066308984 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082394671 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066785982 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064977405 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083451202 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065498624 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066661033 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081912039 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067949722 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084864705 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082584615 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066619349 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081053622 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06571167 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085152491 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065225825 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065576389 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081956432 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065184422 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065937564 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081608644 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06569728 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081099668 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064953462 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068341917 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085348316 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064383708 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072921178 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084118734 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065752958 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08575347 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065568051 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06660379 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080513835 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065461851 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065571393 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081039015 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072842562 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065602752 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084171327 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065830986 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082317157 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065661469 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069078275 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08064326 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06541807 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082466132 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066254843 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06968611 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080404327 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065741212 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065335738 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082675035 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065756717 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080774511 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064762001 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068562285 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081376837 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080539439 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087708735 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064759482 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067637562 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.082778357 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068324139 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066984184 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095841028 seconds)
  done (took 6.023941827 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122062564 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094072776 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083836287 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067166558 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080291262 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065965957 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069085957 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080749078 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06761441 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086864371 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06559207 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083199897 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067102564 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080635361 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081976007 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067642449 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088498562 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06424725 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065782583 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084673788 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06636873 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085168791 seconds)
  done (took 2.468380199 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.190967236 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090086598 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113103892 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091657983 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085251366 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075897573 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088171139 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07207605 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072894569 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085723992 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071146972 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087096576 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070003156 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085195719 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070277522 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086259256 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072453678 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085946502 seconds)
  done (took 2.341696096 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08014487 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067759475 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106743745 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068227774 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084369883 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071134876 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089679311 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077635916 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085959945 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06857783 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092538665 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.179956335 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086884359 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068450777 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085915548 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068644157 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070530554 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084955259 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077046487 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088737446 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073567296 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092551649 seconds)
  done (took 2.619098299 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083043618 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069852963 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10253155 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086693262 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064104759 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066250928 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090883332 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069472805 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090866136 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070170083 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084525447 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067640955 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073507286 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083067552 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073051423 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08385293 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069991126 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0841384 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070287894 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064324826 seconds)
  done (took 2.298656309 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090025623 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086171271 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06951256 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094912692 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069444162 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086502008 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078547565 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08596088 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069698009 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110478923 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069831815 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085662104 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079542363 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091316912 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069166775 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093389874 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094015978 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078429627 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08607609 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070773918 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110839651 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069362537 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094173686 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070515178 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086298101 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069574289 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086251523 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075417804 seconds)
  done (took 3.076447957 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068451522 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067906437 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082002492 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066003964 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064978769 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082322959 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065305467 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065191898 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084738313 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066405601 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084184015 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068449706 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068295041 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084266363 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06827988 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067910209 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083880873 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065161238 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065380875 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081429005 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068107718 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083846394 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067979807 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065441311 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081989672 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067694347 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066208333 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081159802 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067714428 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065121691 seconds)
  done (took 2.922466116 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077921397 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092140112 seconds)
  done (took 0.927446753 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066721044 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083158907 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082174212 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072598602 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08881704 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068594887 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093497886 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073653581 seconds)
  done (took 1.383763751 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083517706 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080510194 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085653255 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.096363589 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080153351 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086223768 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159393514 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08562765 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075420723 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083615324 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083194362 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084186134 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074133221 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068743228 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091146742 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075190136 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082905365 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07538024 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071134885 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083675329 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070187171 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0968962 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073046906 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.081993924 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069409164 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078051503 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096578402 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069870756 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088279721 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076835879 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090403051 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063400207 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084088945 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069465459 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067412542 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095237321 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084846245 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088346539 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078403884 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086459745 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078940221 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081273428 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074093789 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091284248 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078770667 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068958502 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08649205 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064018743 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082762168 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07153805 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06486126 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084217707 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063800153 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09192589 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072541717 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095506284 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067624673 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070172127 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087957811 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072028366 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091445574 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070255672 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070984406 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08444514 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075352416 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089408691 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077735378 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080370487 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062625079 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06673499 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095263931 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09164898 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09069535 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069231648 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086426821 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066206843 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088685729 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069051638 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074715408 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091515509 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069534647 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090298555 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076674646 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085571609 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070967712 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093028835 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065965392 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070665722 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082918441 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085961754 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083344618 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06692186 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082489238 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079528051 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071993091 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084928326 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066848616 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092295127 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062323094 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069315111 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086120015 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068882676 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095639768 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073644407 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091465189 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077755406 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09278877 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069066499 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088676977 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065405668 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07026809 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084335598 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076470572 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078770352 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071905413 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068924029 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085511776 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07834582 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083262131 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068637295 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093181477 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074596021 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067937753 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081366367 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072458137 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084947667 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072231152 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093452819 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066739261 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064281279 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080687188 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071534161 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085220261 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072361722 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090935562 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071368767 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063053962 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083533409 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072569385 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093923193 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068832987 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086408705 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074800481 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069775583 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084031169 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075072019 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087632269 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068346881 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075416503 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085638271 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064528258 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088222029 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072068577 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084371414 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073409754 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072532602 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088313904 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069985223 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084806809 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07396917 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08684979 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067656321 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068471702 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083861785 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079880966 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087686215 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064091231 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065448359 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.0933452 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065935368 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085394738 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067680125 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071792508 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085694307 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06690952 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084123663 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070772902 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09795898 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073397815 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087386956 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074474244 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097369469 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069300343 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073125466 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085286767 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070997014 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087390443 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079568476 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074623348 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091377578 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071677384 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082399946 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075687362 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093594538 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068344744 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066754808 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084917772 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072398038 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09090116 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072900838 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.08671787 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066274806 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069189508 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08931009 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071278457 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084966395 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067638707 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090767327 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068517621 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092697455 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069586057 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079633777 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089714939 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064707158 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088210484 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066987622 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.09210146 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064245696 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066551202 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084939166 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071043692 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067813142 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088434835 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063029647 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092490615 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077216162 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085388939 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067353471 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068957814 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092629196 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070361687 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090208782 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072289844 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091855294 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079221465 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067877987 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088985915 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080312895 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085718258 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063315275 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091595311 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067461424 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068847104 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084861396 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066842333 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088410349 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078403545 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092858943 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062839272 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071651505 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084269736 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067568854 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080550871 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072658055 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071499768 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086215388 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075349267 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087166239 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070582555 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073261468 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085664915 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069456738 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087234638 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072215148 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086258727 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07048052 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068039779 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088852453 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06739981 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083909384 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069828911 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069081049 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086121865 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074987146 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085220314 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069592116 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071004096 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086112603 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069612893 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085993615 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067847941 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088494043 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069725278 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069366312 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088500647 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063815219 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093510991 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067937151 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076218467 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086351204 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066263018 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091327397 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071701457 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090732338 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069396449 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070272411 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087058662 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068296898 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088295592 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076091693 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066558934 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096889982 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077179743 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08633994 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071443622 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086161962 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070814038 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068808803 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086262486 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068982478 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086154091 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068417737 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089952008 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071215721 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069587554 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08857206 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069913277 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085225341 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070272581 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063607851 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085489111 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068748882 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085549685 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079502346 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069990622 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085463077 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06777028 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088106449 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068253334 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066463747 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094143651 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095042092 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070429095 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077242612 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085648828 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070435996 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09746824 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066451593 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084482619 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067093328 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066201339 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094838233 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069605125 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095997523 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068732493 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068300752 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083773869 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070858741 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084659097 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06307297 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06673041 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090000389 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068304337 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085465529 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069537799 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072393818 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08767927 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079086012 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086029729 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070227635 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08638288 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065560798 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067772041 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085348666 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072573661 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087688245 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066959439 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066355493 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085900076 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069512592 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069625841 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086464487 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07034086 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093134787 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069269269 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089772998 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073378287 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063113515 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.088665838 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069390928 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08556241 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068515391 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072624936 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089717685 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069378772 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095716082 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06832718 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088161495 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069487957 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066265577 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085939722 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068939392 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086515685 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069053057 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070794907 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095257476 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067484147 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089812077 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069443278 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086224166 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077181492 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069356027 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08935755 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076545743 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086877066 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071192231 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094540619 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071965355 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089984489 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070595287 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070576815 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092300316 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067467194 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093124675 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069281602 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069587278 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088602003 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066810219 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085544077 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069440234 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068465632 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092908612 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069677405 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08569204 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068698214 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066978421 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087463242 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072674512 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093793376 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071095222 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090408245 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064779433 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066411355 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087567482 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066597155 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087594491 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072565011 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074168721 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089024219 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069872824 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086045367 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078470117 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09220318 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07277235 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066500779 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089616289 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069918351 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088817418 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069833959 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068599064 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088510215 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072444958 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088400538 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069084759 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093286448 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07297329 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07028873 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088417006 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070397834 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086318261 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065534072 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069921958 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089660766 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073993349 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089901798 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068623969 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097703182 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066140896 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068415195 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090640672 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068231289 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091110044 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064536328 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070255357 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087678131 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070606467 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082360792 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06874804 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066840324 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088951774 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068581609 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082194014 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080377629 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097346741 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072614898 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067960032 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085149392 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064114646 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082515304 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068225873 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070960121 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088160556 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079849007 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086006039 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067956209 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08245564 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069564047 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071807519 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.088972697 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066642257 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081733771 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067218106 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072544515 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093091805 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06757285 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086813842 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072474782 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071471684 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085086913 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074016886 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083559807 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073228161 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101028858 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06943392 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068840389 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093364143 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078046211 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08741776 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064993311 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08786198 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072026481 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069205013 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088142783 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069990111 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103209126 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072269072 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08633974 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067464924 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071302572 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086872523 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077140631 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087449654 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069621506 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091384326 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071721804 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095200805 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07204821 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078084225 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09080635 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072376486 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086058482 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069820332 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085219919 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068873721 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070501792 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08770911 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073261374 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095161685 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068691015 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098610378 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078871193 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08906946 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065956799 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068614292 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086801814 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064569032 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070026373 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085893583 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066700035 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08540039 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068115478 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070509689 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09208561 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070574329 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088540825 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068829173 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063212284 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088268694 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071847887 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087317998 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066374644 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069447885 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087366144 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072399303 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090540272 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066883347 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088839669 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071660357 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069586121 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083499804 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075858096 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08595732 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07179134 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068741763 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086627788 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07021503 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090798134 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074307581 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087836559 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072040244 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077471626 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088985679 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066771195 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084501643 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074015762 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066930453 seconds)
  done (took 47.412429502 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111201675 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083810939 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064232889 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082751674 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077028194 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084177201 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064813638 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065378731 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083427686 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067178657 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083330907 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063834208 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092491211 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08840963 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095920333 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087204237 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064358567 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06518844 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082850069 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065883844 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092509643 seconds)
  done (took 2.468794606 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089514124 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.102787827 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079784973 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101836913 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09314359 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08044403 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097489551 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080872493 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101168536 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094384427 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083050543 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096933288 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076495 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093812503 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075828492 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096244563 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100672437 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074222828 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.099335127 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080381231 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095133866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098584123 seconds)
  done (took 2.791490441 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068679288 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068016903 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087914882 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063756379 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067883545 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081691974 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072444679 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084252433 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071350949 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067285738 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.094278052 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067685241 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088085551 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066668984 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068267412 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084442219 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134292555 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071896692 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086842431 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069106514 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063532288 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088830983 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063479527 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082819282 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067863619 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071651132 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088031933 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066677807 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085907503 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066953419 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068516316 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084496606 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069675069 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068946339 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086427802 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06774112 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086698497 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069187197 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064464855 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.085376982 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069806068 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082458984 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069490953 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070055897 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085214268 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066426545 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088253715 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069588203 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06418071 seconds)
  done (took 4.52852393 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088997066 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.143468403 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090515779 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.12519346 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084660728 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096579094 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072082784 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124318777 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.08569013 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067363376 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105238674 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.084400944 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08739759 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073007328 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09406978 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068177214 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088694811 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067121119 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090776135 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067962281 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.091404788 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074840851 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102488696 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100856848 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072979476 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066890132 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087039017 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07405695 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100901039 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091765043 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074193743 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092922704 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084890958 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092978662 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068013701 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089062054 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086458884 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08789669 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071602073 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084447893 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071275632 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091822726 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075209758 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104752993 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068988027 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09187574 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068049971 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084743053 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081807739 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089294929 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07635963 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101401987 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090765968 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069396211 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09242855 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.085149905 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.0877843 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067556453 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089970876 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082825361 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.084530548 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072493463 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102012846 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070734739 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094500706 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.084033848 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092115412 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072625977 seconds)
  done (took 6.781052688 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078088083 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093541179 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084502154 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103230659 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094241172 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076246517 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09379087 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075367914 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093336119 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080526552 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094576781 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117075646 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071006344 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096846249 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074405338 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093636398 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074573085 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094553604 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093250802 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075306383 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093924641 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083629753 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094169821 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102759231 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105503987 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088880916 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074751951 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093366003 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101320648 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076428656 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106897191 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074822641 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09462913 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102779518 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088335357 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094702296 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067523882 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093431975 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075305156 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093270245 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069781866 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103236886 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093387097 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070360253 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093670993 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074493409 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102660834 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.105060374 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079110044 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098970403 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074899904 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102684167 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093472619 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075658924 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10313181 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.126642119 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08459263 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102465226 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092744978 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084599115 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102966736 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110023811 seconds)
  done (took 6.420790732 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091355294 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096796943 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098842095 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065475043 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066266009 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092338811 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066343061 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085424573 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07874206 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097058433 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08116083 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091645101 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075413185 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098827555 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090974443 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075319317 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092217763 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073703541 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096905281 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072551034 seconds)
  done (took 2.498145532 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077648987 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106611595 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070663464 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09501192 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073033504 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074537972 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091119826 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072370381 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088067633 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071837238 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098490777 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079880634 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089263874 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075907364 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098470798 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075558589 seconds)
  done (took 2.153678243 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08079286 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099708845 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083835697 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088192509 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066637849 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085165461 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06853268 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06435501 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085329614 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083443208 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089520543 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071668858 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08759601 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067146542 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065653924 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091335409 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064809292 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086106848 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068314597 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103078456 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079438763 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086475598 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070010527 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090781873 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069223804 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093481558 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069355532 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066711155 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087571609 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068867316 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088559958 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076359114 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084992516 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068027943 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086141229 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065970949 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069202595 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088081977 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072012704 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087648148 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06784738 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.08764764 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068978648 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069954188 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083611506 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069059912 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084053357 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07484292 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067032315 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088412742 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067916134 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090707834 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069998712 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097670595 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072574662 seconds)
  done (took 5.148072645 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082821183 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071760679 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08433016 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066707348 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091285558 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071582801 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072112089 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090988852 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070199084 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085217277 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071160473 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090760709 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071632986 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071401611 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089334817 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071651518 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083461455 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070784773 seconds)
  done (took 2.227214508 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07448582 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069253777 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09595265 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069149906 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088306396 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071538326 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064316277 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086809544 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067720702 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088082779 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068997915 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070700024 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086235156 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071587301 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088326721 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068961475 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070588116 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086505051 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068669527 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083982069 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070922214 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067399714 seconds)
  done (took 2.500020167 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07458573 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096333217 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.168116114 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110723268 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084988682 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.102804846 seconds)
  done (took 1.460098432 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093242322 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103015831 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069350956 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109824527 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078173127 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089473642 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070713487 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089580523 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08091588 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103820428 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07036513 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099966101 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098965984 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082622313 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096315572 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077523477 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091147872 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070539464 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089642219 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10940971 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071234468 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098919871 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072740253 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089925502 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071902696 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098764058 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0995534 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084937972 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090279817 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080365361 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095960308 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071091114 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100577101 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104202636 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07202823 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099535102 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071760891 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109147706 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096483383 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08009291 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090879491 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077421453 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099869442 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076870863 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099955644 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090562785 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076842554 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091512788 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071020221 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116834436 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097428757 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080709185 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097382615 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100086643 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08181132 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115107987 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104594974 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080746338 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097371454 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104682324 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079765726 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097117044 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098858016 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086169046 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096548999 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079885472 seconds)
  done (took 6.747236424 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085578112 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108029489 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07167107 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104917778 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099418007 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070999801 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090846432 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070575675 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090467778 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070988201 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132973077 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071356788 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099544817 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099338131 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071550077 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089670553 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07223633 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099877815 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070374942 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11660848 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091019188 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079936932 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098287793 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099098663 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085678334 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097309896 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07022134 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09110019 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088559322 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071740287 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095151316 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072649763 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099320379 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070580843 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098731738 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071737875 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089718248 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076635552 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090671806 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096378393 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08094647 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110084827 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070751434 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090626788 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104140869 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071727045 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090266971 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07165711 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090896582 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071082037 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104257504 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085668946 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104127539 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099333201 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071156599 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090220696 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07106424 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090196198 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071022768 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097153816 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097668504 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070794533 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116906673 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091383531 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071988926 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0995337 seconds)
  done (took 6.63602293 seconds)
done (took 130.243859416 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202084743 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185547277 seconds)
  done (took 1.208976183 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070474588 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.11907612 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082164942 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130691795 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090314246 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102078459 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121450941 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082096879 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069130367 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089571086 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.0699546 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091574009 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133244263 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070573058 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090007172 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071548351 seconds)
  done (took 2.314144301 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106861212 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.203012196 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113512898 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067447099 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103425197 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081915686 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08846201 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079661019 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095601233 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068475412 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100997526 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078032556 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068435771 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098514426 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09483373 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080588672 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068336867 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101687254 seconds)
  done (took 2.53295458 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097344454 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.111360632 seconds)
  done (took 1.042294799 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203911755 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.125129604 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.213458601 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.482110777 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.246713432 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.292978942 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175983158 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.176740026 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154261549 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175643852 seconds)
  done (took 3.078065973 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102099627 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175549078 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.323314066 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.143024675 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091067422 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11963253 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.142760064 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113353935 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085370318 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10511363 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104982576 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079731987 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120596596 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077459967 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097898844 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080169232 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124359398 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076222447 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097336859 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078544374 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121943135 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069801476 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097840214 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076042251 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.101262216 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082791503 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08870828 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068704658 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.098056601 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077404006 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.100995752 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117957301 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081263237 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.135690443 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105977074 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.137847582 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100725575 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076051055 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077708515 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095733356 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08088593 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100742619 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106553081 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080627055 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067611156 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101125435 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068614883 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088677835 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083339357 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.10083658 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082088145 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.101391878 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135627233 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100989334 seconds)
  done (took 6.384669944 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.763733726 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137872473 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074045111 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.828481223 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119292675 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085508021 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.752407153 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096046242 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240659338 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760586122 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115229391 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079779113 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.210891355 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.220521167 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.907757928 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291629848 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.649282524 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107748062 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111049006 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136705214 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165815947 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1595504 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153664169 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.412617979 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098356619 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074209337 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142201786 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100429953 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143642274 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.109515074 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076520724 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160915429 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.252709079 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.165300392 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099087619 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073586136 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072620686 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.172874786 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224387297 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.197175179 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163567722 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069887515 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093449058 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146566552 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135316336 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070102537 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.147714087 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17648719 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.155503708 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076058059 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100411922 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14467606 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.145324488 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.147960693 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10435398 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291431538 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.295028903 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072973745 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124738527 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.088830894 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2403378 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105458467 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.187013678 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143613335 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192889359 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072502836 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759302235 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.152421833 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093677087 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078162155 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124961114 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098129102 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.14426032 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.148475845 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.387826981 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.149950604 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075790284 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092870731 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.188301394 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106791098 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073351862 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145591381 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09876413 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127893724 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.150522129 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.152334302 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.152389334 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233944158 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.149868935 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144501488 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097347446 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129087377 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.078869645 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.195530086 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201570109 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.146612707 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.19572932 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166849673 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.148315745 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.152972459 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081036641 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.175889759 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124677609 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084992367 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143907354 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200767692 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127953244 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106175776 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.078341805 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.144161065 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130536565 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110454633 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.144086284 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.153134428 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.437385802 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171912873 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070052387 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110199685 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146885787 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146723264 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100347117 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223491696 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128891271 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.152914955 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126982725 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090629178 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125650267 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.147516941 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.083841054 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125751342 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.165019415 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080555461 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.21894235 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.19793087 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.082808742 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221326497 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166635103 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079056847 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.153806332 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125123703 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151054889 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100973932 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144089311 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099568937 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.731372501 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.170557135 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126184931 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076585151 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169935561 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074282763 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106008764 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086356994 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089801678 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765913562 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109064779 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103338922 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08507055 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099824905 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125532507 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142243992 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075920187 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165114332 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.188620613 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101586999 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125312769 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085461756 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.143696844 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09778964 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10601771 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086321843 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107580847 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127774756 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077266183 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106462361 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151160921 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.146480766 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.200795424 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.556503874 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093690374 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086308949 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210596964 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094607454 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.249031193 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141758219 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.208452343 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146194877 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104026053 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.29994401 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.1494291 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.169535146 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088835385 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15808095 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090078619 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142085595 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.149010484 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093648055 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078156465 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.147045718 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.170419645 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149380619 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.948252346 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074010568 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209351485 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090728232 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.156422402 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078399758 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102713983 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270813111 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073624604 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151760582 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.148664695 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095939705 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106588008 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.836377293 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087484544 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1664495 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079040086 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204372522 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.147686823 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.142708482 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163261133 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.080570559 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.144264846 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.193547529 seconds)
  done (took 41.690939056 seconds)
done (took 59.076909622 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.283531256 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217488539 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.235841902 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150529065 seconds)
  done (took 1.819241148 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.150416981 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109715422 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121081611 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088341194 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108837524 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088248587 seconds)
  done (took 1.523765336 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.433215955 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.303077757 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242435211 seconds)
  done (took 1.836243083 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.307177668 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235343319 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.460715614 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.308535447 seconds)
  done (took 2.276611712 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.197905809 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118262893 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.09210838 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087587022 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.189028577 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247142874 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.131532271 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.19167503 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.101846868 seconds)
  done (took 2.260976725 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.185948255 seconds)
done (took 10.75869913 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.157539578 seconds)
    (2/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.246763258 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.142706483 seconds)
    (4/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.245184732 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.229399347 seconds)
    (6/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.220422045 seconds)
    (7/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.134490604 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.086084026 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.140436043 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.203612636 seconds)
    (11/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.156859753 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103877084 seconds)
    (13/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07457883 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100747363 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.155878641 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.182927782 seconds)
    (17/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.17482156 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.100492964 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.211221791 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.225235491 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.133233287 seconds)
    (22/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.152803313 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.188622026 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11906126 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.211270424 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120899566 seconds)
    (27/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080955271 seconds)
    (28/309) benchmarking ("sort", BigInt, false)...
    done (took 0.216579767 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.099331774 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079053994 seconds)
    (31/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.216765603 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.115631294 seconds)
    (33/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078654755 seconds)
    (34/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108069607 seconds)
    (35/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.135400471 seconds)
    (36/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.075557865 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075961654 seconds)
    (38/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.11059803 seconds)
    (39/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07621044 seconds)
    (40/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.102485991 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.175942628 seconds)
    (42/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.116425888 seconds)
    (43/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.183030995 seconds)
    (44/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070983534 seconds)
    (45/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.193456623 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.182977327 seconds)
    (47/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078722522 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.122241758 seconds)
    (49/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.174536662 seconds)
    (50/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.142924399 seconds)
    (51/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.166877438 seconds)
    (52/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.100298692 seconds)
    (53/309) benchmarking ("sort", Int8, false)...
    done (took 0.169436932 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.098306432 seconds)
    (55/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.141792196 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117744186 seconds)
    (57/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.118243549 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114504156 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.196451065 seconds)
    (60/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.105413135 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136718303 seconds)
    (62/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.135146073 seconds)
    (63/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196715751 seconds)
    (64/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.141380261 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097791734 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087117035 seconds)
    (67/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079059685 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092286817 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.129056373 seconds)
    (70/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.127982759 seconds)
    (71/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.173690338 seconds)
    (72/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.123043663 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.180374438 seconds)
    (74/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077997434 seconds)
    (75/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075874104 seconds)
    (76/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.185308086 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078789278 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.119663565 seconds)
    (79/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.14747357 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.16332695 seconds)
    (81/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.104760312 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.196767343 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06000158 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.192309399 seconds)
    (85/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074299506 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06829636 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.091377535 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.157888431 seconds)
    (89/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097747586 seconds)
    (90/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.119435485 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077612261 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119322128 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.120291682 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072513772 seconds)
    (95/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05356937 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089653366 seconds)
    (97/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073839597 seconds)
    (98/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.161543526 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074853682 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091526489 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089903274 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.170092671 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094922625 seconds)
    (104/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.181175487 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07696725 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101236161 seconds)
    (107/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.165250405 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.217574979 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148967557 seconds)
    (110/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.104670228 seconds)
    (111/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064353239 seconds)
    (112/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.090183481 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.150285839 seconds)
    (114/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.176123222 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.155083398 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090041183 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.122557545 seconds)
    (118/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070120235 seconds)
    (119/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089312013 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102304154 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.162257828 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077331535 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.098119676 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.141766372 seconds)
    (125/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053895459 seconds)
    (126/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077073853 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.104398498 seconds)
    (128/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056563213 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095656282 seconds)
    (130/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080475042 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076564374 seconds)
    (132/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.134789046 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068887549 seconds)
    (134/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091966246 seconds)
    (135/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176607541 seconds)
    (136/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077277204 seconds)
    (137/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.133585482 seconds)
    (138/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078917339 seconds)
    (139/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.109157125 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.097845312 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076920988 seconds)
    (142/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11491106 seconds)
    (143/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055121128 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067932116 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126091453 seconds)
    (146/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063729468 seconds)
    (147/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.141777795 seconds)
    (148/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.10266828 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068474846 seconds)
    (150/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.177317775 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098962161 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.362493337 seconds)
    (153/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.125181903 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054383804 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068672997 seconds)
    (156/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091288207 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077976555 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160151937 seconds)
    (159/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.110201478 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.115062905 seconds)
    (161/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055481215 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068713566 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.159197649 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076693092 seconds)
    (165/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071050484 seconds)
    (166/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09198094 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.124258782 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.071958475 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.091635593 seconds)
    (170/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054092704 seconds)
    (171/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.1129931 seconds)
    (172/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063032623 seconds)
    (173/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065111651 seconds)
    (174/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.075423675 seconds)
    (175/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054938803 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053781847 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068289019 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.164742766 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054234739 seconds)
    (180/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116235345 seconds)
    (181/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077849038 seconds)
    (182/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.085965549 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119024191 seconds)
    (184/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.084967934 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118719904 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074995007 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.169450456 seconds)
    (188/309) benchmarking ("sort", Float64, false)...
    done (took 0.152993945 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068573737 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098060957 seconds)
    (191/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054108815 seconds)
    (192/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053750491 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.118903857 seconds)
    (194/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05390281 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07744761 seconds)
    (196/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.100243909 seconds)
    (197/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.169001533 seconds)
    (198/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07183422 seconds)
    (199/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077744933 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091789797 seconds)
    (201/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07411002 seconds)
    (202/309) benchmarking ("sort", Float32, false)...
    done (took 0.15418072 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074501875 seconds)
    (204/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055861243 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.090194159 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054080404 seconds)
    (207/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055053507 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.076925762 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090276898 seconds)
    (210/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07559056 seconds)
    (211/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.076938283 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083438898 seconds)
    (213/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.075313199 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092391012 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055311942 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090587657 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077855015 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075580419 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.113070077 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159741065 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054680226 seconds)
    (222/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073844849 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.091754646 seconds)
    (224/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076518454 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.119231052 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069380276 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054378874 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096789446 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074913568 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067275605 seconds)
    (231/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078155688 seconds)
    (232/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075640251 seconds)
    (233/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053376754 seconds)
    (234/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094074464 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063306614 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.166589442 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072213481 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068936998 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.103884054 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053542855 seconds)
    (241/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.098413925 seconds)
    (242/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053703808 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067639391 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089939648 seconds)
    (245/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083223551 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068932675 seconds)
    (247/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09329213 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077789802 seconds)
    (249/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054097551 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.075878444 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069492019 seconds)
    (252/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054775514 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.077562314 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067509497 seconds)
    (255/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066939118 seconds)
    (256/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097646283 seconds)
    (257/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079217116 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114448538 seconds)
    (259/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091456943 seconds)
    (260/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.086227685 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149870819 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09727298 seconds)
    (263/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093087626 seconds)
    (264/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.0916747 seconds)
    (265/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054098644 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053882674 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098662927 seconds)
    (268/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054891128 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092485963 seconds)
    (270/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.092550084 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067412367 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.114630987 seconds)
    (273/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055292416 seconds)
    (274/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054367157 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077075438 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068637489 seconds)
    (277/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084581571 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090477178 seconds)
    (279/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055382119 seconds)
    (280/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069697257 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090354382 seconds)
    (282/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055188196 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075979679 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089895318 seconds)
    (285/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069594763 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088657439 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076465488 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.149213639 seconds)
    (289/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072800864 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068712974 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077814095 seconds)
    (292/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054190371 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073967756 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.092889583 seconds)
    (295/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069831086 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054520466 seconds)
    (297/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094983943 seconds)
    (298/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083906976 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098773237 seconds)
    (300/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054786166 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055505051 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071195023 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097668581 seconds)
    (304/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053942133 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096587335 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182739423 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091605251 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.204459367 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05495002 seconds)
  done (took 33.993728069 seconds)
done (took 34.852717857 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08365929 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118035884 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079228888 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119316984 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084849375 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105225653 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075578539 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104408532 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084095359 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107456146 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082479495 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056681627 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100705933 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077987962 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100550473 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096030231 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103411941 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074733603 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.098766777 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068055317 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07671186 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.0906891 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069915719 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057108297 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102831791 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07520807 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097569673 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076989974 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068106296 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090887389 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072271842 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098165813 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067925573 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082380605 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096367982 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076300864 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099992181 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079274747 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070421168 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091271566 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076699668 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091038386 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076018193 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076839662 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096910809 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073458802 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.09860078 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083317006 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118606215 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071623905 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077109485 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.102100012 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080817985 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.09836138 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0731556 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098919795 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074167928 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118219772 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077332907 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071167744 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.100639809 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078257326 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.09874197 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077497315 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078100179 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103212127 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.08007295 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096493927 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078100428 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074327589 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.09076077 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07694641 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.095062637 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06804081 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079637155 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.102162446 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068204698 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.096492938 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075407133 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074775879 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.091573967 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071420681 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070443354 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096629427 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070014882 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058060854 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.095583467 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075305986 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.09033905 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077225113 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075168435 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.098232574 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070877841 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102260829 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068789237 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074357536 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.091186156 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068381746 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070675887 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095442919 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067788838 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093029661 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07796928 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069972303 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.097255124 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083002479 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090552312 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075318635 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067260994 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090518825 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085879244 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101156255 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069402861 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07135588 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.09034492 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075921701 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068324729 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090990228 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068729496 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090925292 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075328792 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068050123 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09301837 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075413461 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082308317 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.093909544 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072383491 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093393514 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069209451 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074888908 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091447873 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069116924 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070616903 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088327127 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069863767 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069129659 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098124085 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070551892 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099504538 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070493029 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076808051 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094880628 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074379044 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.096674747 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06838076 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060990944 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093625525 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070404996 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070256262 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091255054 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071213193 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069269955 seconds)
done (took 13.573455988 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068913035 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175990351 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131629306 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100752173 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113836938 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068735567 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103921521 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.133248822 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070058134 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.133580228 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090502759 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.111728349 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.143870159 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067645497 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068323136 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095837638 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069723674 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.116522776 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.108090715 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113801147 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147320151 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068439722 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125993243 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117757918 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093996633 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.131012213 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069742987 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.095764489 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071923314 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12124546 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08905068 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072805075 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.092229461 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128800999 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099771869 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.113508778 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068648259 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.110854171 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069050772 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.090785412 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.096480817 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127251631 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108555904 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.086179215 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094991844 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072475243 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069763822 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112787617 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.118024129 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.084810344 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11460221 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140725453 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073271803 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109387048 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06789327 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115265759 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.0864265 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.094539261 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06909732 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07185795 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.091545927 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07179663 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.116310232 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.120292052 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07293383 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.110269385 seconds)
  done (took 7.472169309 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088054296 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119373048 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088526803 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110503433 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068340945 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06951042 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092059089 seconds)
  done (took 1.553574883 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069408396 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091505721 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116083634 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092897371 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.112747667 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092029215 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103170487 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069932463 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.110514505 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070821553 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115074797 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109288059 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094408338 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078076199 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119293922 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069406079 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09480676 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093778736 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073340309 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116896911 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073363609 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115210645 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071575604 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069888921 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107903833 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070387344 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143316478 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07454792 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094604264 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073336308 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067771929 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.144832157 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107451025 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08166261 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093398375 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085207127 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.109068433 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068569245 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086542496 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098604787 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084333055 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.094081026 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070735849 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068518117 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.098008017 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081786545 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093857814 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070854328 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072894273 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114023942 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070958939 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108344641 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071089233 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07404902 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094597169 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076011364 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103027976 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071830198 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090913441 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094274465 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088641673 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.111460821 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084983901 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110614156 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072678215 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108180374 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085899364 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073990456 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0954332 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074091593 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111398362 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067777289 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072484012 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105062073 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072503338 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117121439 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094771047 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094925517 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080762844 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070788427 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.094090035 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070166035 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.117581442 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074495639 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093373785 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073852684 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072957982 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090954576 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069281156 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07409151 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.092051631 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071185295 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073754852 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.093636925 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073037619 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111145946 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070887988 seconds)
  done (took 9.567012062 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071922862 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071479638 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095577051 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070616742 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07063748 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094722522 seconds)
  done (took 1.40915491 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101927406 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095789127 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084573489 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099220428 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111557514 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.1093875 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086017954 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109584977 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088668761 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106285448 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08627622 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110074894 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092747738 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099230089 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085791386 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.099345021 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086064866 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104756634 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082160951 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100054492 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092322997 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099520449 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076708809 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111043578 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073646316 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099829239 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081649274 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106973037 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082854907 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.109917059 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076549522 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097354622 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075899607 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109271831 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086030563 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098788844 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076464978 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074877506 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104006822 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07377672 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109710901 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077355495 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.105555187 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074508257 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110188457 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075181682 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098626687 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081057944 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108899805 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074798923 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097441648 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076158277 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096901211 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075025174 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075738834 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109525209 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09723191 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085720468 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.099654348 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075367401 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074448404 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.098671277 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086173968 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.09768648 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084467546 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.098054972 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075235531 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.100878405 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076714538 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100051993 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074905684 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096965036 seconds)
  done (took 7.550126288 seconds)
done (took 28.46683579 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.659576475 seconds)
  done (took 1.587382872 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.802350199 seconds)
  done (took 1.732721915 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.973320366 seconds)
  done (took 16.908645392 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.656551601 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.81033959 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.827574333 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161419004 seconds)
  done (took 3.385856981 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.884823976 seconds)
  done (took 1.838564033 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24640152 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.256179052 seconds)
  done (took 1.439590551 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.723952975 seconds)
  done (took 1.664446458 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.300241822 seconds)
  done (took 2.235492398 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.343154486 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189554971 seconds)
  done (took 1.474985136 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.532406045 seconds)
  done (took 1.47513585 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.568863863 seconds)
  done (took 7.516259283 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234418931 seconds)
  done (took 1.190724489 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.276212674 seconds)
  done (took 1.224228957 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.277337716 seconds)
  done (took 4.223460573 seconds)
done (took 48.82901695 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082009826 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085093114 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107683258 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080966785 seconds)
  done (took 1.29774802 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.0806716 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077158468 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103961279 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075016591 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105062961 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077556682 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102738327 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081549642 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099857379 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076852805 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076322164 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099374924 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078850259 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102664936 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074245189 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078653426 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.1038508 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075680604 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.103468073 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07725673 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.097621256 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078507567 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103771509 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075265981 seconds)
  done (took 3.060766652 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080671684 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076284038 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101176034 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074948594 seconds)
  done (took 1.288951314 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079714198 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119444199 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094005929 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.105340704 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096889057 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114964836 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072417986 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072397638 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098080131 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080337668 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094599853 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104328798 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11574823 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081073565 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10586281 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069276609 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.096380567 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091791209 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081331615 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104219489 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074093791 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.104107331 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071274803 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.117915785 seconds)
  done (took 3.202203271 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081092984 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129284885 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082381642 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116856299 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095681221 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068719945 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104032738 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095968792 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.154243587 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.091950137 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073212426 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069129255 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099207598 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068850437 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079258738 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.137643261 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140625027 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071368185 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.124774883 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068929114 seconds)
  done (took 2.907482723 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077364757 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072140578 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091974894 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070681984 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079922105 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098732464 seconds)
  done (took 1.45058047 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070325879 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069754384 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093513332 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069725274 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074036326 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093042069 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069396341 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070086311 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09395768 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069007984 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093307254 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069313163 seconds)
  done (took 1.893057726 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.459660095 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071349172 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095971927 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069130507 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073831046 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094048537 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083933262 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071077972 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11827414 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069047217 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093251329 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072153606 seconds)
  done (took 2.332086308 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274448088 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080492197 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.337327855 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172857121 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144073228 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1622271 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132365907 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120506185 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202617963 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144025883 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236557269 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231385165 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113911054 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198924138 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093394296 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.137899619 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217991215 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205189385 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135148588 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233202809 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190752498 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16197472 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210474675 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132485799 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139168278 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151501532 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074413481 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108725431 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242477184 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166968287 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208396901 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142328435 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099991865 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24156423 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22959241 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20189723 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167344171 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089134845 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.162234924 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170950969 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26683352 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116791143 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229922243 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11350145 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109796084 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176878231 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150937574 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.151998149 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140895921 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118184969 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205158497 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248500686 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173332777 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091064554 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140269119 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143516617 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148938178 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131856463 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255573267 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226237304 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163581735 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074312877 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126041827 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219208343 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167150763 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148595987 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160723968 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124048107 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176593289 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221103662 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149581911 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181446176 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190759305 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094073663 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152811285 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203488415 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160297795 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239866682 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159737693 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077151598 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158614818 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132702075 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110745757 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14917597 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103425847 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2447754 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103861161 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.145196768 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142174131 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141269854 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142115531 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228217553 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186470091 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13569177 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069707874 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132962243 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155019499 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207604 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091643542 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1408098 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153765159 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107914191 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173412238 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104222616 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158957157 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081741977 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181894787 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169377804 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079287644 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158092431 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131996461 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132373161 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170560553 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22756094 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094992435 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111511732 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235706585 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161335406 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136229629 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182566737 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222118347 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131765565 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106829315 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212160555 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251754986 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119264484 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205998273 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135693396 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113785194 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093298944 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184798908 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119881118 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152338748 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111436641 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.157885507 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236588919 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078493536 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125162074 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170655605 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110596365 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110194507 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145366704 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106267679 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.125456579 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130308012 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136668372 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176299122 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158478344 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138456813 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161181735 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129849501 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230401673 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118864392 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.133831997 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111462405 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097882722 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171650328 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226493033 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08401385 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235763763 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161731862 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13545897 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15388185 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087594981 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20183695 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083454226 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098801326 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181731323 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14439176 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142617758 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194357318 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134308711 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161211671 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157165099 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195676729 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16849317 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167589242 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136751429 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.118439421 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1448245 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161341752 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076595464 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125872769 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112088421 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110934685 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124102159 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112589507 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178503575 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161748921 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126817509 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14434962 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127536843 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18767455 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10560674 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166919239 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.152716705 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125309635 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.194629603 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22376271 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170401783 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132275123 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208929919 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075819216 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077773411 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.120300035 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162554987 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112066423 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087146926 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174764543 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189780917 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16115586 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199162479 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116403134 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156342708 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22227363 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074534943 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148471022 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215038243 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160374702 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.135820791 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114615217 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.1294104 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183267928 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136503242 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257096623 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148452558 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158917476 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216459765 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.135256208 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084718173 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134971449 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174269473 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137160408 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216778968 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132175992 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093224143 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143503396 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110966219 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136291005 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164149888 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152171679 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198552505 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124445978 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193130249 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080569045 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149957367 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18138235 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156122042 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067745607 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152940443 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231327837 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127393003 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152880214 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195576596 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108909657 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156342146 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250964071 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18453601 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115933838 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141449526 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154882177 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166399156 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153064954 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177297826 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142419324 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19492278 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117300467 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.116388152 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118840854 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104663093 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138380514 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127041227 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145955926 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150757536 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124975865 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167356347 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144524507 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142923805 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152771789 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127477389 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096907779 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127940205 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244819789 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156576099 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244291257 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105077128 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.215254014 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237051922 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08053504 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109581762 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.085195141 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20229112 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088607588 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195673352 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100566256 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136156269 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160569203 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206248707 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100513921 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097122089 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116006648 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196164632 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142726372 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105529007 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138063066 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232273222 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135094166 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08412857 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159730988 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13609849 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134211144 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244930465 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065066067 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128893659 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079914965 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110943859 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165997841 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223376295 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.088232037 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.157818897 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150871659 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155803817 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166169146 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130702027 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127290972 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143459826 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186861968 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164802925 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.122196569 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145538254 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164954815 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224492927 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139167271 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12596439 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213256211 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221540389 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.232714763 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092425753 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148293816 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148517085 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144651355 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207061091 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087907959 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236515929 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11246507 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175035971 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135119657 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123444724 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162260935 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.12698006 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119683167 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204532354 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152591597 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113223332 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083519233 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147949707 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156067365 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133791996 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104631488 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176062419 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102365894 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174192811 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236865866 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085133028 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138339008 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12799947 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086823825 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140195845 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136046271 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117514129 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.125072288 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23766308 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.12198098 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217885255 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17881652 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147751765 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202765606 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132819882 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668176319 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082263495 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22377653 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1522804 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250628659 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130466244 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153752372 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143257721 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15802387 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179494478 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138510658 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209249533 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167032309 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156535312 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109465342 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135830397 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146195347 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095081403 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139180518 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146858751 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149378019 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131664635 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155849084 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191655848 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086616477 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12625482 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199491497 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150894935 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208327831 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177719898 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116577482 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153313387 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179324295 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110549527 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157075707 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22455857 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142397728 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130961715 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086629541 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13841032 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239380321 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076682565 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230805106 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159716834 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14300629 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147284655 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.182873594 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169303179 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14054662 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162127224 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126463209 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146945229 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14992893 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089953296 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107331596 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139415037 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146688215 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.131183732 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110638989 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.149014572 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219689481 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075454925 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126904685 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110074905 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210200554 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250386271 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094086057 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113067751 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151971187 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147583101 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148843572 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161580811 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111473004 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088455201 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.112690226 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.118771979 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141051592 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150005528 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133721727 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143619275 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240251085 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089481414 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.256355022 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127492129 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141482282 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07262039 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110031801 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101003494 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127955812 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138326102 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12965075 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239172268 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.101343372 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121221678 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124475762 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076777483 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113489978 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167163091 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144539448 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156924094 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128118239 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06703511 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141425629 seconds)
  done (took 74.154189472 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136580908 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105971158 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.120440914 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.175932367 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151025939 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243913083 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.183737425 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227511913 seconds)
  done (took 2.379227318 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07161078 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.120556701 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106202776 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.119246702 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092311076 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071847878 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.309891527 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113485204 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.093440017 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09486096 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.123141994 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094074102 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.483523134 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06927168 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09686125 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.087204743 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069743861 seconds)
  done (took 3.243059635 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.446124923 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.637534288 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.450591752 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.10188339 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.887982797 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111269114 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.341328253 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.164053056 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09289817 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.425067734 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.737602749 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149738522 seconds)
  done (took 17.580213513 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077452856 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072403053 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113175914 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086942756 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101990712 seconds)
  done (took 1.486300883 seconds)
done (took 117.215227836 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082370545 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.381113607 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055640831 seconds)
  done (took 1.506078935 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086785093 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088863498 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115402438 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088170821 seconds)
  done (took 1.422682203 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078045664 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08031996 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114675315 seconds)
  done (took 1.313755634 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.2986065 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170876905 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092468704 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086605647 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081620816 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107387061 seconds)
  done (took 1.315740169 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075431615 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077878351 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102551188 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079649619 seconds)
  done (took 1.36917649 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07897225 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055151708 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057628238 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08501822 seconds)
  done (took 1.317502176 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093363947 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108995324 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083791963 seconds)
  done (took 1.323458579 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111953223 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116185939 seconds)
  done (took 1.268363532 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085159268 seconds)
  done (took 1.122415993 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095585 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.147021481 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.168226405 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.14352172 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.17649687 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.142885515 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118007526 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092509741 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107218597 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.120845613 seconds)
  done (took 2.35489802 seconds)
done (took 15.988317989 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081317006 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.398723979 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364084677 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121187246 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.678269144 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.387287524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.980000955 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122931571 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113071375 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098090817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08731783 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67955272 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.970199867 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.352913272 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958272264 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326667805 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679560258 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071403658 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097872353 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070994854 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.967414709 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097202853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070376985 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097837381 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651064276 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375432803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098113148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321777211 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097459633 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073011921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358207096 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097595698 seconds)
  done (took 15.9746039 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073287179 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14834839 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078313378 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087633564 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099937374 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072610709 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101852442 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072466821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153172222 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071395545 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115765976 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071200416 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102707443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07254433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090465434 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098291017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072530135 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098119597 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07203371 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072074011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116554288 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070871758 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097847145 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072457526 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071776475 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110196168 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07207602 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098444264 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071742195 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073783756 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100369877 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072502111 seconds)
  done (took 3.89539228 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11813231 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.158148263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077616489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132408751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.144663263 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073665373 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.175524711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096947308 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156093389 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071864635 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115299316 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071652184 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132605388 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072579788 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118311462 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071493021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098285874 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073157924 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071444439 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099123116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089868064 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098087293 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07184017 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07245738 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097207109 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085330478 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097565611 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074844219 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098138277 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07409469 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074123485 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098346368 seconds)
  done (took 4.208456123 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075251475 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077702961 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113258796 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087090613 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099959978 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075644493 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076205651 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099866509 seconds)
  done (took 1.747714659 seconds)
done (took 26.858962754 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081128344 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073331861 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103901185 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084297793 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103086334 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082843413 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071178164 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104799728 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078654038 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102777322 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079689133 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070483988 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.101514407 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07046555 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079306914 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098242812 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083703605 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101878561 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083552581 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.111372223 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073330316 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078377574 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104601816 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082759957 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110138526 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083771016 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109567878 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077370592 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072812188 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099861038 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080081616 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116131616 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072222022 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10972162 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071298893 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070990818 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097238493 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070635977 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083848688 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.104761374 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073575695 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104740677 seconds)
  done (took 4.751446928 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092777444 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096811597 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.117272979 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065349835 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099086336 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064513384 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.121207906 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063970921 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065122818 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.121677031 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058571564 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060578149 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090188965 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056933699 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060768867 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059551149 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.091321782 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059090533 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060591042 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087820383 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063284401 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056665192 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090841294 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062530956 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058903697 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065539585 seconds)
  done (took 3.040944778 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07787498 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08604704 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118755241 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132450689 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135761934 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079312717 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108001322 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090193738 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115115079 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069697521 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101947109 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100369954 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090522318 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104995166 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070647966 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113926098 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086458816 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.0725126 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104576428 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092330455 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114439238 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081100782 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120681695 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083410053 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070783092 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100580822 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074887535 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112431824 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076366764 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080759084 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.102138821 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075007851 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099909211 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08306634 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102857606 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073555427 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.125281512 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081032704 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079773713 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098447076 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073619441 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072376323 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.119351474 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.11637472 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097267909 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07823522 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105420908 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080609271 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098048445 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089654268 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080831548 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.098232241 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07352648 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070122101 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097643113 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085077851 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099879323 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073146721 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.08054438 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100320612 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082734396 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101846248 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086298098 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070293048 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105439171 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069666531 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.099066757 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070149574 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093922183 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099118332 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112653721 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099283236 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071469616 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107642281 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079015649 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077246692 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098358159 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086789954 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10861508 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074972253 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.107309606 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075447769 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074492486 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.11716031 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073181302 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072693358 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.099748373 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077131462 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101494406 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072406447 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085205114 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099087399 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074891971 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116372707 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070996164 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072216993 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.103885737 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074883197 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098321744 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083746025 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103184447 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071794192 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080994204 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098771679 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074140937 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108304325 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07539453 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06993368 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103996061 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076864815 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.098391486 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072217277 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073503368 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100702947 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080538542 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07778528 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.102298055 seconds)
  done (took 11.653979718 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.203170327 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.193654819 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074223108 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.184612252 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083312922 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110964358 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.185913527 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104306937 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099762125 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070524509 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099858671 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110949701 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.132860131 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.145188432 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082742227 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070659143 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.117370442 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.141116529 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.189697534 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.1527937 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.119122984 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078896456 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101345152 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071762096 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073484876 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.108695484 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.115406761 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082945789 seconds)
  done (took 4.374405009 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084706758 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131485535 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077005868 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.120404175 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094976633 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098658904 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076426179 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07287711 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111584369 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084478845 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098955062 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076414842 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105745044 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.080232801 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071671811 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108188581 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080456473 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.100376864 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074737099 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076150506 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105645006 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.085131202 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103122094 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069702704 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078083348 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097824411 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068921884 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.11674083 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071738871 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120175684 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069310785 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10617272 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080952973 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072140333 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.0982707 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073077657 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100037728 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072842331 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072868839 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097872664 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069492915 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060702201 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.097282399 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084651246 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104712957 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062139014 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077024882 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.104169741 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075842052 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.096548484 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073671839 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073577583 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102224176 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078366072 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076110274 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104394116 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074913028 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098060548 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077945092 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073614078 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.095653082 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070265384 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076574781 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.097312986 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.0784751 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103357621 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070480335 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073169117 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.103990572 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.0769793 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.101041698 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073932733 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069124087 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101183976 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076786194 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076213703 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.101641368 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069829692 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.097978342 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072059922 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05827564 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09908922 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057508475 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074259431 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.097626024 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070368796 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073590055 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.107118185 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085093131 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.099670519 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076779446 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.099340954 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070533228 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074072055 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.093933888 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074219303 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085934819 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.115902319 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098986975 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068975917 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084405728 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.104090454 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070141181 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05935173 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106853012 seconds)
  done (took 10.11837728 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096053715 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.123281691 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07346235 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08642275 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126509744 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096431346 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106452154 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077681832 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072803117 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116976562 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071682956 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107978285 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075289164 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08092055 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.122964286 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079606776 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101963864 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080356395 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.107694421 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.108931226 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085577236 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.11323101 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082329162 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100397319 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075879272 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111576138 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099803707 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081348102 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109406375 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086002441 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10957613 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099573825 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.11541904 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.075379859 seconds)
  done (took 4.332082251 seconds)
done (took 39.311276953 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.137744513 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.33644941 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.123138388 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.970820912 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.133979339 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.159955344 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.136524848 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.121907798 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.577007676 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.122350636 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.390208911 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.719686058 seconds)
done (took 58.996393506 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.186936213 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.263236214 seconds)
    (2/2) benchmarking "String"...
    done (took 1.396509759 seconds)
  done (took 3.72871485 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.526394826 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.085775304 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.405315062 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.124621835 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.124641283 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.564785964 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.661551658 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.932428113 seconds)
  done (took 26.968658055 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.13514965 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.471696095 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.405240026 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.397605555 seconds)
  done (took 17.481182016 seconds)
done (took 57.964212726 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.11693289 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.170537149 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.131840288 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.109708838 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.232330722 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.146644247 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.389085826 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.35601288 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.129100863 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.114762953 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.145769141 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.128406323 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.141485692 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.397309904 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.132895462 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.126819474 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.156328503 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.641059004 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.511674025 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.151686882 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.139841162 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.176444068 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.134587873 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.126515611 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.208012176 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.131759153 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.135939219 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.132740219 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.322050073 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.132124627 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.215089901 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.577624159 seconds)
  done (took 188.933368378 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.126677699 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.139863707 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.265047555 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.158491944 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.622180751 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.326449887 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.261555419 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.699654998 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.143692055 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.147904399 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.258173442 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.128558752 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.314372797 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.11788471 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.136949816 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.127623323 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.411010933 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.332076714 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.141241811 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.398128751 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.141776045 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.147245059 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.096700876 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.240454813 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.151668455 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.170978495 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.15236777 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.152031841 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.319565568 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.350728011 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.131504611 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.158425098 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.687251145 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.988092168 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.129740231 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.134308884 seconds)
  done (took 146.481630786 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.391179959 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.127133725 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.128381852 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.125507775 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.155278162 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.125495272 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.64768663 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.649740654 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.623922932 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.641097257 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.126441657 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185612594 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.359931301 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.128544895 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216733506 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.137803001 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.126842271 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.140964761 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.153395497 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.126662402 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.126692958 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.645287944 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.140583898 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.200766234 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.13220267 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.126088571 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.154077233 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.516896217 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.125915908 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.154170689 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.437243629 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.167905944 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.126417903 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.400428027 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.180577851 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233477792 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.124393553 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.127585465 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.152403077 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.123314516 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.388872638 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.125456465 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.124820297 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.128139893 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.691334619 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.126532013 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.634602408 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.127043355 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.008110144 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.127569987 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.125432116 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.481653423 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.561637225 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.126433564 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.123983408 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.127490833 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.124810395 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.126323238 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.153805583 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.381941697 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.22196504 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.125640706 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.128052374 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.152614827 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.124751655 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.159160193 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.126905677 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.591224454 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.181287791 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.350222817 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.631037194 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.127205428 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217259735 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240837843 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.125364523 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.124686175 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.124240189 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.126370218 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.229041489 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.125874719 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.498701868 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.130759825 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.12572084 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.182427164 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.218179364 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.125778248 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.408928683 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.127194687 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.126090072 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.814596987 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217602048 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.12587673 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.125047045 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.125813189 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.504869299 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.633679052 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.276304073 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.128259291 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.125117884 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.533684188 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.12820583 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.508645492 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.124230891 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.605309195 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.698156788 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.126925092 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227750425 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.129207503 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.125703345 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.123179492 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.154350882 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.124971871 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.181828216 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.124378618 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.517536481 seconds)
  done (took 335.909156323 seconds)
done (took 673.787378485 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.811129409 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.769832838 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.893151399 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.785270274 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.770412868 seconds)
  done (took 10.09924831 seconds)
done (took 11.168959576 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.297087093 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.299644366 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.179826216 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.300246022 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.154160171 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.313665191 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.280584827 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.149238031 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.219860292 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.197133017 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.242729104 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.173002547 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.152881332 seconds)
  done (took 17.030076764 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.432964416 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.424413379 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.192695135 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.448705786 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.168809225 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.442921843 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.324041479 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.356932151 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.319424965 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.141243726 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.139601909 seconds)
  done (took 15.462694546 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.443938676 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.434381093 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.195616109 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.43972495 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.170209599 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.452172965 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.32882418 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.333118267 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.326046411 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.141443769 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.139841592 seconds)
  done (took 15.475458429 seconds)
done (took 49.038790189 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.136194986 seconds)
  done (took 2.207130253 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.168485839 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.32820143 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.15140777 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.141218188 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.137476063 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.140079391 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.141457552 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.136535778 seconds)
  done (took 10.417094898 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.135874158 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.133408014 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.135082335 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.134451987 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.132851852 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.132577522 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.132611993 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.135686677 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.133073266 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.132038631 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.135375358 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.135280724 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.133107843 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.135810668 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.135420638 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.132759973 seconds)
  done (took 19.217815014 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.134249959 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.131992275 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.132637376 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.133485986 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.132630601 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.133210137 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.133023147 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.132832231 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.133030135 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.133772074 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.134120453 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.135313651 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.133268386 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.132173062 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.133062616 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.134145815 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.132453565 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.132668492 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.136703592 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.132999942 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.133483237 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.132479335 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.133287461 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.132680448 seconds)
  done (took 28.27264694 seconds)
done (took 61.185566911 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.05950046 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.626223637 seconds)
  done (took 8.756676994 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.134886797 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.134574547 seconds)
  done (took 3.343065522 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.134350403 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.13534289 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.134207116 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.134511311 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.134507421 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.134440927 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.133879885 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.133765648 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.135130461 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.13429956 seconds)
  done (took 12.4158044 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.13289998 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.133473831 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.131692833 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.133702084 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.134513414 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.130884978 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.134301024 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.133705518 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.134264432 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.131863154 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.133071263 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.13157485 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.134139561 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.13228924 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.134026623 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.131595781 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.132560071 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.13131812 seconds)
  done (took 21.464076786 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.134354993 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.133887713 seconds)
  done (took 3.338673126 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.131321334 seconds)
    (2/7) benchmarking "second"...
    done (took 1.13159448 seconds)
    (3/7) benchmarking "month"...
    done (took 1.132043104 seconds)
    (4/7) benchmarking "year"...
    done (took 1.144679322 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.136914351 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.132030963 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.131292652 seconds)
  done (took 9.010017789 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.135938305 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.31391814 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.394144904 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.752993867 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.135479987 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.138432293 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.001074333 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.138270649 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.139687126 seconds)
  done (took 13.220383901 seconds)
done (took 72.620828705 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.105708435 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.129553996 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.905286273 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.133669253 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.143861086 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.468483893 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.164609617 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.2443313 seconds)
done (took 36.366925878 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.137460214 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.79784884 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.848044525 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.128299332 seconds)
  done (took 10.845187343 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.121091946 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.000659231 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.125963991 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.08940232 seconds)
  done (took 17.409027295 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.696061996 seconds)
    (2/2) benchmarking "read"...
    done (took 1.460488607 seconds)
  done (took 4.228264895 seconds)
done (took 39.691622165 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.135906557 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.134014753 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.13597765 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.133580786 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.136113165 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.132942807 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.132324913 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.135447363 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.13517657 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.135206438 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.134817929 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.136417013 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.132666911 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.132983959 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.135026845 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.132800194 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.13466887 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.132253851 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.133228407 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.133586941 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.134929405 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.136169639 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.132218225 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.133190705 seconds)
  done (took 28.293807632 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.135305272 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.133820997 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.135431609 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.135106226 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.133502962 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.136489272 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.135016762 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.132684873 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.13688303 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.135528311 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.133277941 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.1335214 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.136489292 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.133629881 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.135981236 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.132575097 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.136104865 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.133202474 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.135644562 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.133971348 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.135849954 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.133401794 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.133706723 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.136340789 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.134001974 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.132582576 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.135821368 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.134810159 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.136654199 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.133759136 seconds)
  done (took 35.113652666 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.140675011 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.142552448 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.136138009 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.135226487 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.135661631 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.135408871 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.134768857 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.135869141 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.135801315 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.136317518 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.135926041 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.135693906 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.135953724 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.136511975 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.136131186 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.135578549 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.135742029 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.13620038 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.137205308 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.135277994 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.135596097 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.135614705 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.135609476 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.135439934 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.135418613 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.135353561 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.135864078 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.136134534 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.134566995 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.135268768 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.135469417 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.136560985 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.134686528 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.135681174 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.135275313 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.135504047 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.140190616 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.140740697 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.134522971 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.134802366 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.135363116 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.135620008 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.135188192 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.13553113 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.13584035 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.135793499 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.135313813 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.135018321 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.134986378 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.135665241 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.13523565 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.13577041 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.136235845 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.135670776 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.136207927 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.136630842 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.135490766 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.135430623 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.135803702 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.13582608 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.136374566 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.136607764 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.136789419 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.134847373 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.135895826 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.136252752 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.13506435 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.136414144 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.136125431 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.1363235 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.136201793 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.139439817 seconds)
  done (took 82.870539319 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.136406711 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.132615422 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.134050141 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.13339319 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.133080792 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.135744834 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.133143654 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.135900065 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.132707287 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.136116241 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.136936432 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.133451147 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.133218038 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.135962123 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.135392464 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.13486355 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.136476345 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.133614035 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.136132822 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.136735667 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.135890887 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.134721983 seconds)
  done (took 26.038356031 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.136525807 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.135656909 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.134233871 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.136209309 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.133772447 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.136648498 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.137364336 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.136728691 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.138714819 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.134288926 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.134553923 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.136595436 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.134251063 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.134207985 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.13424269 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.135570376 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.138447226 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.134686385 seconds)
  done (took 21.515692524 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.135552528 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.134842468 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.138055501 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.135429255 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.135222467 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.137973141 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.135350672 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.138197966 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.138693481 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.136881199 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.137277362 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.138100803 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.13844554 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.134861925 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.137456957 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.135864201 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.137805591 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.135898125 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.138584167 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.135638898 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.135717879 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.138697366 seconds)
  done (took 26.084219763 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.138740078 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.138580228 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.135374472 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.13597195 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.135939467 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.13836841 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.138150746 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.136159779 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.138761939 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.139021478 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.136517825 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.13981291 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.135500895 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.13691897 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.136304037 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.136663674 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.139729789 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.137817041 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.139489853 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.13628108 seconds)
  done (took 23.825985078 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.140437414 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.141358219 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.141168019 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.140278513 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.1402151 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.141032814 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.140924481 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.140515886 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.141636078 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.141330133 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.140760841 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.1410491 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.141797998 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.141543835 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.141651154 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.14154436 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.142208602 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.141409855 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.141907528 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.140945882 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.141547593 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.141606611 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.141465225 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.142151408 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.141613088 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.142322218 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.141638631 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.142107342 seconds)
  done (took 33.034992268 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.141727495 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.141096458 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.139319576 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.13917444 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.138951453 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.138592179 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.138989377 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.139261636 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.142174852 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.13923439 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.142232367 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.141500969 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.140879264 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.141734 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.140763912 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.141621364 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141663867 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.139913901 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.13891918 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.13893316 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.141780722 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.141502033 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.14233985 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.138966833 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.140220058 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.14277159 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.140044601 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.139808356 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.143169927 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.140172227 seconds)
  done (took 35.294715871 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.160912278 seconds)
    (2/2) benchmarking "in"...
    done (took 1.160956461 seconds)
  done (took 3.400252534 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.139654886 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.142558528 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.142533871 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.140154436 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.140098711 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.142084762 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.143169253 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.139700776 seconds)
  done (took 10.208621923 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.141414639 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.142588822 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.143143873 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.142672057 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.1430797 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.141934085 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.150949852 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.158949211 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.142843626 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.143032155 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.147324427 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.148278077 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.144118937 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.143333125 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.142425598 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.145480108 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.142937996 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.144125109 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.14393242 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.144126171 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.144995655 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.14563291 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.145191782 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.142142395 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.143690128 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.152862542 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.148215329 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.143493136 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.143739586 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.148079743 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.144408914 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.141787209 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.145197341 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.145804141 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.144783048 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.145804888 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.154406422 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.15793258 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.150304016 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.145797853 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.145271608 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.142051633 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.144357106 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.144750996 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.144625831 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.144630532 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.145490058 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.142431429 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.144208866 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.147445922 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.148955778 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.143628789 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.143435866 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.148718709 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.145692493 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.151865263 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.160800961 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.146146741 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.151239431 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.153539347 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.15714663 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.151450477 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.146201528 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.146667377 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.154326831 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.165058271 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.153094679 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.158931859 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.143409158 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.14616026 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.151568049 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.158039624 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.153632823 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.146724509 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.1464883 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.146170565 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.145347484 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.146450061 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.153099716 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.163168187 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.146253975 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.148074868 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.154955788 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.163867315 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.145564164 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.147298758 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.146756254 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.147717704 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.146915756 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.155746219 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.161459658 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.147315757 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.145780186 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.147676601 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.148175561 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.147560827 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.145776417 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.147702658 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.145964909 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.148653802 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.147868096 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.15038378 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.154310224 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.14819819 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.148347779 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.153122859 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.148373103 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.146639667 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.154455824 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.147607958 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.148582965 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.147614439 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.152546361 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.145876165 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.150724705 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.154940506 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.148990725 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.148745365 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.148692841 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.150034549 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.157233121 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.169790394 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.149792874 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.148878683 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.152369535 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.157901262 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.14982398 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.151712563 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.148909605 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.146695769 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.146797758 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.149812689 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.150023244 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.148960523 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.149574531 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.148888476 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.147038614 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.149306201 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.150722481 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.149754657 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.14999097 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.149146633 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.148926988 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.150355851 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.149969716 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.150204647 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.155555949 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.150107648 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.15014287 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.149775719 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.147499155 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.150186114 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.150121823 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.152272332 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.150320241 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.15070714 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.149807791 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.151882791 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.150302042 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.152437133 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.151435672 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.150579254 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.153161268 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.151245852 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.153469615 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.149872589 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.148409836 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.15132484 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.150607833 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.149644944 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.152000638 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.149515223 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.153106114 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.158281631 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.15147087 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.151727905 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.153737972 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.151512319 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.15201177 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.153099328 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.153422862 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.157284325 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.150634894 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.158344238 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.152428711 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.152757565 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.152448857 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.151183103 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.151216543 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.151677531 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.154048034 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.159138331 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.163300336 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.15882186 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.152310574 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.155435295 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.152545169 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.156354214 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.155548073 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.1530644 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.152408208 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.152727131 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.152094431 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.15245264 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.153688323 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.153481104 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.152684007 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.152362874 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.15264696 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.153110107 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.153682529 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.152851389 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.153526639 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.150357425 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.154053806 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.153722927 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.152105448 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.151625496 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.15182693 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.152385982 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.154540605 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.15403157 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.158687077 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.151992282 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.153842281 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.153564053 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.153065054 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.151692202 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.154502788 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.155231382 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.153811867 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.160306402 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.168473905 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.153552418 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.160087736 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.168283398 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.153032865 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.155735243 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.154130149 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.152945344 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.156414376 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.161556217 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.154473113 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.155450894 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.156375177 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.153979366 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.155006014 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.161211527 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.152718572 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.15320903 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.15633746 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.155594856 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.15254933 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.155001861 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.154864087 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.154518513 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.156173663 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.155713261 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.155660646 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.156073139 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.155369265 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.156180832 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.15687112 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.156958983 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.162009083 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.160034688 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.155381642 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.157293531 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.155919245 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.160203565 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.156574088 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.156242955 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.155009828 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.1682818 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.16392867 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.16265753 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.158586387 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.155856917 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.160552771 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.157013327 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.15980607 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.155825428 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.155836949 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.15604066 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.157437504 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.154676036 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.156767158 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.156258841 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.15643957 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.157891639 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.160330284 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.157314548 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.15665909 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.157036943 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.157996409 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.15750059 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.156338117 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.157351755 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.159493879 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.15825178 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.15566699 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.157270279 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.162704232 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.171035303 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.158331802 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.156757886 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.157606678 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.155473529 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.15851288 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.158031576 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.160217831 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.16498914 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.160042069 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.165845105 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.158476614 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.16549114 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.157682935 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.160327938 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.165362578 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.15626748 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.157486998 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.158719031 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.158563525 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.165397488 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.174331358 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.159187121 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.162711431 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.159165897 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.159188473 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.159658864 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.159924017 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.159739754 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.159610944 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.167238241 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.17447462 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.162511947 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.160522047 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.158764942 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.154176537 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.154148636 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.152635291 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.157027898 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.153467207 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.154790479 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.153812455 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.153539456 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.154097676 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.154850557 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.155193392 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.153478681 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.154079482 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.160741418 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.169087407 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.157633173 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.155059619 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.161572351 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.155147603 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.160444566 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.169415017 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.156473801 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.155542691 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.156531729 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.155811007 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.154469584 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.156286061 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.155935419 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.157241505 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.159849274 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.156584492 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.157681059 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.156232689 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.156592751 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.155315415 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.163529199 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.176423727 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.157534182 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.160016486 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.154246855 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.156419743 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.15993191 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.157087932 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.154712585 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.158807716 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.164930926 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.163209653 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.155784972 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.156932594 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.156201625 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.157204996 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.156378166 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.157000803 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.156584167 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.157723798 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.157049909 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.157958035 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.15967972 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.157557764 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.157103437 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.157514588 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.15697997 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.166150619 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.157438923 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.158193024 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.158106784 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.157840511 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.156877769 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.157285715 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.158578964 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.157647383 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.158674141 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.158243487 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.162126581 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.162087822 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.15915791 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.156812874 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.158529171 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.158631727 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.157205882 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.159088351 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.158590004 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.159532012 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.158521332 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.15851357 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.158179333 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.157195612 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.158521771 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.158496098 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.158687974 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.160227907 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.164094499 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.158612586 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.157431327 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.158108239 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.158183817 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.156592993 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.158373553 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.165563461 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.161005401 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.166771679 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.166386752 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.162305925 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.159439446 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.160948518 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.16539145 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.157958376 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.158639934 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.160016946 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.160120125 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.15884843 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.162448715 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.160196148 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.165549743 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.158801933 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.158971382 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.166071139 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.173628207 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.160518741 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.160658759 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.163155737 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.159006333 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.158209234 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.16056613 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.158936217 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.16680373 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.17646806 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.161510537 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.161306237 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.159208351 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.160826105 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.163632541 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.161433296 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.161066079 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.159055098 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.160697935 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.160737363 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.160983626 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.1585303 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.159360056 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.159497459 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.161993251 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.166506425 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.159176407 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.161346017 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.161022898 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.161102929 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.161207487 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.162538748 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.159886142 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.158759256 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.160365951 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.162162371 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.161925763 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.163756452 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.159788747 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.161554083 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.163094379 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.161963667 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.164476382 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.169903247 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.169117848 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.160157221 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.161386694 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.161643271 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.163460766 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.162361793 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.162866231 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.161284444 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.163430226 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.161738255 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.162089443 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.163463375 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.163238606 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.17673876 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.177268061 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.16281454 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.162304747 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.165424754 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.163611716 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.161133684 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.163044562 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.16404133 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.165672307 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.16988944 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.163575442 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.168949379 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.177002042 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.163702884 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.166970399 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.165107533 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.169825806 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.165489175 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.164312624 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.163664316 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.167216394 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.17667086 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.163066745 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.172322826 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.190433245 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.177374117 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.16456093 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.164560203 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.162739587 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.164179512 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.164534036 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.164905521 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.16465525 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.164364265 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.164725599 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.1651698 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.170100549 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.166188529 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.165025021 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.165736202 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.163343538 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.165260249 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.162803475 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.16461371 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.165009659 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.165242522 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.16531798 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.165464999 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.164771652 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.176021974 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.172061157 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.165719336 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.165607116 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.162407461 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.167478922 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.167082676 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.17480163 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.172088551 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.165777794 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.166070024 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.167776149 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.165250302 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.163919546 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.166362205 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.165183929 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.165269736 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.164559659 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.176027342 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.173307439 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.169659991 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.16600353 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.16655229 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.166526229 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.167092858 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.16651019 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.167728056 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.166669946 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.166695607 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.16922264 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.167218087 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.165924831 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.168239653 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.173707929 seconds)
  done (took 690.636613898 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.165198243 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.164195178 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.165221628 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.164884369 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.164703816 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.164640246 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.164464529 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.165447585 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.165613169 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.164887472 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.165196499 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.165036647 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.163957766 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.165439321 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.165333744 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.164853349 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.164696551 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.166296382 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.16686943 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.164913676 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.166640653 seconds)
  done (took 25.572084615 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.168185831 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.166384861 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.164902844 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.168908829 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.166134245 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.168248645 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.166696117 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.16916155 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.169615752 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.16582996 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.16885381 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168119419 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.166842821 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.166883386 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.166440123 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.168297263 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.168748822 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.166237414 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.169424885 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.167386462 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.168729608 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.167477513 seconds)
  done (took 26.792233747 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.168861537 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.169822487 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.168007761 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.166601952 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.169984852 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.166518334 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.169654543 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.169619824 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.169383078 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.169090099 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.168396407 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.168942963 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.17419278 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.173622409 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.171158019 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.169853399 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.313786624 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.170043677 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.169234787 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.169557493 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.167579857 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.173214098 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.16784738 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.167783387 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.16871133 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.169745018 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.170584724 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.169443183 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.17065606 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.170073976 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.173168771 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.17165809 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.169382486 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.171197048 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.169521738 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.17038301 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.173995501 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.171229772 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.168963809 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.170867917 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.179368098 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.187627781 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.171403531 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.176648291 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.170259921 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.170267784 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.173909562 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.17740559 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.169431046 seconds)
  done (took 58.624334025 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.171375152 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.170728296 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.169533834 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.172222085 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.172849024 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.171809234 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.171136627 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.172680785 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.169320858 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.169493372 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.172507252 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.170074981 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.170768361 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.171852009 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.171938806 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.169892401 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.170389113 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.169917734 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.170351696 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.169227369 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.170175847 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.173770057 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.172659995 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.170317774 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.172991556 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.169626431 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.170444525 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.172240935 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.170941657 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.17023743 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.173157221 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.173317619 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.173481956 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.171062817 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.170801668 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.173239078 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.173727849 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.170354818 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.17276934 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.169860825 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.173321094 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.17421691 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.173532507 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.17433274 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.170724811 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.171449388 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.171223446 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.171539555 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.172150524 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.172827859 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.174672498 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.171723715 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.174685238 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.171795334 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.173739241 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.174096817 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.172091756 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.171447019 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.175140699 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.173265372 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.172349358 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.174770266 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.172030685 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.17502715 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.175254697 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.172818622 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.172078468 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.174835228 seconds)
  done (took 80.808792773 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.174767614 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.174907785 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.175346242 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.1753516 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.173935807 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.175741901 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.175629118 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.174643122 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.175812452 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.175636688 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.175264745 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.175815322 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.174520083 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.176031558 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.175180514 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.175149175 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.174852506 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.175033589 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.176160764 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.174950158 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.175622804 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.175379381 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.175059485 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.175806152 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.176642158 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.176215266 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.175119066 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.175551698 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.17582874 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.177014708 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.17667629 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.175981985 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.176338379 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.175506029 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.176424756 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.177860445 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.175996286 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.175851253 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.176130007 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.176705041 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.176126813 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.177020748 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.176613342 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.177406499 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.176498441 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.177256669 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.177442713 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.177736424 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.178271208 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.1770671 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.176921039 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.17700717 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.177852708 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.176666796 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.176553573 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.176791754 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.177309219 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.176988044 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.177786614 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.176759594 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.177954194 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.177251415 seconds)
  done (took 74.035504165 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.177077418 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.177552508 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.175391935 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.174809704 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.17697732 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.174933837 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.176887331 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.177375696 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.178619028 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.17841293 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.177855179 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.174603037 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.175258007 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178604744 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.174748431 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.17536513 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.17562164 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.176141864 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.177839664 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.175286968 seconds)
  done (took 24.642320606 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.176056105 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.179419143 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.175026803 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.175880245 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.178412067 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.176529709 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.178877282 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.178918955 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.176169391 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178629875 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.178807876 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.178668302 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.176029646 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.176431615 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.179360636 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.177171902 seconds)
  done (took 19.953928323 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.175562862 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.178891822 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.179378578 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.179236485 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.177174724 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.176944324 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.179283206 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.176351562 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.177569439 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.179790559 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.179789291 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.179990412 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.179666755 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.180304513 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.17769868 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.180978021 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.177566688 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.177644696 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.180193444 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.180784368 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.178552625 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.176988895 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.180004989 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.180630223 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.177653188 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.178183097 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.178591875 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.178121961 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.178161147 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.179819886 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.178325356 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.178845717 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.178871489 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.178865776 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.180826565 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.178118241 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.180365944 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.180464453 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.180810891 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.180069749 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.181337431 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.177838216 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.180927698 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.181472816 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.178124767 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.18095895 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.178128945 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.179609521 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.178416495 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.179408745 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.181245813 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.181228837 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.182153157 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.181959346 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.182013467 seconds)
  done (took 65.977074333 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.180744553 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.181589399 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.179070167 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.181801455 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.181686856 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.179281499 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.180972161 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.178258961 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.178847744 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.181549878 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.180688772 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.182982532 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.180075074 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.182491592 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.180199802 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.181536645 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.178471305 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.179433549 seconds)
  done (took 22.36656885 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.179991322 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.181035437 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.182863739 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.180179693 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.179925949 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.182785287 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.17977138 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.182196622 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.181781499 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.180417186 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.179660104 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.183323604 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182591815 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.182643128 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.181048729 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.181066209 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.182946909 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.183392559 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.18110944 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.180159932 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.183783254 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.184229278 seconds)
  done (took 27.113609014 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.181128616 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.181792239 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.196874215 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.219434423 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.208464172 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.181681465 seconds)
  done (took 8.287429537 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.181862599 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.183318285 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.18169877 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.184978311 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.18369853 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.181817655 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.181764797 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182435181 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.18408615 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.18247198 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182731306 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.184355102 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.184517493 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181893578 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.185876218 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.184757917 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.182528826 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182774857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.181887737 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.185778278 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181567101 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.185225948 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182381764 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182922527 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.181426647 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182915364 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.18517314 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.182732801 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.182387487 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.185673971 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.184908428 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.182200631 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.185193516 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.184361052 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.185259033 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.185465957 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182872215 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.185582276 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.185713824 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182626167 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.185609123 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.185870299 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.185918241 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184206674 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186755763 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.183118525 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.183249077 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.184446611 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.184116118 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.186639335 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.185829272 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.183495942 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.186461874 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.186192984 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.187495641 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.187301249 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.184909227 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.183896582 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187312852 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.18479969 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184049515 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.187248745 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.1842525 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.18449145 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.186534109 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.184838887 seconds)
  done (took 79.281765311 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.185547645 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.184407266 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.185460622 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.186360761 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.185527742 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.184885926 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185099029 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.185607464 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.186422983 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.185592777 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.187942049 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185446534 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.185514883 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185400684 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.18677751 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.1855396 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.185533758 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.186248774 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.186340216 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.188957243 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.185939309 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.186775553 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.18687624 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.186066608 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187572698 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.189501994 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.185876331 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186313626 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186624665 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.186929871 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.187006978 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.186891703 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.186449725 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.186455456 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.187295417 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.187112112 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.186656009 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185810095 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.186726086 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.189435496 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.187137811 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.189554344 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.187006719 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.186586754 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.188292147 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187376726 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.187166385 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.187838243 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.186996973 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.187562153 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.187614192 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.187397873 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.187392121 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187866444 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.187894657 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187062483 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.187669948 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.18707177 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.187368476 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.188879748 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.188886668 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.187949152 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.190679502 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.187173156 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.188289398 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.186561723 seconds)
  done (took 79.462364231 seconds)
done (took 1610.307490204 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.281559533 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.198185143 seconds)
  done (took 13.603957269 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.350669048 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.304171792 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.187676531 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.2342492 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.188148757 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.205762479 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.211333188 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.188147154 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.188346748 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.188634211 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.188266024 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.376421791 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.184546916 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.18687351 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.187685065 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.2795339 seconds)
  done (took 40.776193719 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.213065989 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.195036346 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.289572763 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.207647776 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.212578672 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.350556899 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.241779467 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.193391509 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.338245288 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.228891413 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.580185437 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.215411619 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.192906325 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.177401701 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.20899666 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.351267411 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.409672427 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.585730737 seconds)
  done (took 27.316168679 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.572746299 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.189246706 seconds)
  done (took 8.887129959 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.200359468 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.205944552 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.191445527 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.207680206 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.22071156 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.220800704 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.203629615 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.222971823 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.225416592 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.182470349 seconds)
  done (took 63.208017923 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.211173159 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.194052213 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.194708522 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.192015909 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.182714057 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.183893745 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.191477878 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.1887899 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.279449276 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.301003109 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.209619209 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.200299952 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.193533456 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.194063021 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.190346494 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.224291762 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.318743235 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.191418662 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.192337968 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.198237639 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.192961183 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.277148865 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.227013144 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.192429198 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.299011239 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.293108326 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.197102928 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.199861032 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.303583512 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.191573354 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.192105585 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.193026275 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.199654754 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.745371054 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.641137145 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.198935842 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.215030666 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.202884661 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.192810611 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.334848282 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.193373052 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.199759733 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.19185102 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.614145473 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.342924281 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.291698328 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.325482168 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.196918063 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.195211831 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.24964744 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.197092454 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.194533313 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.220912193 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.90142382 seconds)
  done (took 102.165079261 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.225810326 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.673803599 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.3532947 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.201685942 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.935516369 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.838925756 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.189138779 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.430937876 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.237108525 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.187033016 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.500153678 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.645704478 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.192939641 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.191049166 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.238313313 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.282125299 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.190387903 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.867817847 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.189068024 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.190925772 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.584269445 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.201703546 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.189296926 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.350724448 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.22192695 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.603852618 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.544250309 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.587597568 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.180512096 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.175195784 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.59712697 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.175952947 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.249371583 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.174048224 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.424433648 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.483810087 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.464569379 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.177625247 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.19931726 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.173253571 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.2060794 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.589420527 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.473573169 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.174496381 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.184665294 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.594780176 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.173730507 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.174307438 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.179665891 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.371355724 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.150195756 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.173982041 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.490988107 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.176389699 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.514408322 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.244928728 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.225799091 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.620113582 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.173777833 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.207193306 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.197727587 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.176581574 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.17924055 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.176384743 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.177527162 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.479788009 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.289577958 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.178842854 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.479149738 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.588961566 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.176443259 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.659476479 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.980206423 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.181450719 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.248211586 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.180775017 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.701896006 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.622056159 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.205759324 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.174607263 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.464833152 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.18022068 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.474957209 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.187561894 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.176950921 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.58011776 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.191010118 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.205217143 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.176499856 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.182253728 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.800773686 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.179407069 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.424144885 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.225800194 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.176290099 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.175924377 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.175021667 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.188742211 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.177286078 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.176737189 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.662832141 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.179134926 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.449903361 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.195634013 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.177421866 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.178781484 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.176424061 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.176357141 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.388603534 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.609328454 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.181062785 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.177489665 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.176890577 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.194935549 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.309558261 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.180719349 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.440801909 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.178768952 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.177295759 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.183842101 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.838306011 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.19363525 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.177096755 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.17650993 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.023271903 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.384136811 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.204664061 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.17759531 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.179363037 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.188866545 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.34339594 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.17884148 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.213321903 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.178473112 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.838087142 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.18089498 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.191916309 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.826121193 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.178465289 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.056295249 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.201285955 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.177200106 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.465403889 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.436497118 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.228112093 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.179223988 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.196278736 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.806041478 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.198594348 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.324098558 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.19459361 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.214775239 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.37564434 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.625297509 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.179573462 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.750962586 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.180809695 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.388737883 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.180242382 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.491279021 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.62101924 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.179496149 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.183308747 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.832659419 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.846495321 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.797631112 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.180972085 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.49303465 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.145563342 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.629811889 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.180739308 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.180535165 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.616229446 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.182524369 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.189073625 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.180572425 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.18123038 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.335942635 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.352370039 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.76434988 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.189033187 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.600454267 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.185134496 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.182511828 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.20032762 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.185864129 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.532664652 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.273014744 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.184156373 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.222341863 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.182493506 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.1821791 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.6137319 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.066331104 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.183892106 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.333296837 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.770816177 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.183839239 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.182033219 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.78760073 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.454197872 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.647013518 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.236336387 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.448926703 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.189747725 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.219843437 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.865368264 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.251589349 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.61380962 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.184458314 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.182724738 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.720611112 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.181976077 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.549376321 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.180078586 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.179579296 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.656765094 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.175956858 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.178813002 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.349284635 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.173842887 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.432031471 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.173452331 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.182342786 seconds)
  done (took 1073.994538352 seconds)
done (took 1331.075459367 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.173580459 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.175682071 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.164607867 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.176535359 seconds)
  done (took 25.807275403 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.186159955 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.182790859 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.183401212 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.181843613 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.185158034 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.182736696 seconds)
  done (took 8.219759121 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.204498746 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.175348441 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.178057516 seconds)
  done (took 18.676206485 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.379030792 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.325479428 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.522868294 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.115310011 seconds)
  done (took 9.461325213 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.182925317 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.182681654 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.183326296 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.186635077 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.188337478 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.189693626 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.186120744 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.185653993 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.189698931 seconds)
  done (took 11.79282121 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.68694589 seconds)
done (took 79.761970526 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.227165957 seconds)
    (2/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.204456617 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.269050601 seconds)
    (4/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.163737532 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.275475981 seconds)
    (6/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.550585766 seconds)
    (7/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.221818232 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.407593863 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.012490936 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.785685121 seconds)
    (11/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.512283055 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.221894531 seconds)
    (13/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.57659633 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.205174793 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.289459195 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.200866112 seconds)
    (17/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.180105173 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.208002582 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.398535832 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.399163037 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.018486806 seconds)
    (22/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.183490733 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.762139757 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.296259675 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.169623895 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.57344338 seconds)
    (27/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.214311384 seconds)
    (28/309) benchmarking ("sort", BigInt, false)...
    done (took 6.196018483 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.221526465 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.211071631 seconds)
    (31/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.376959449 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.517047563 seconds)
    (33/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.22327277 seconds)
    (34/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.443899321 seconds)
    (35/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.172814832 seconds)
    (36/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.175217202 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.313156023 seconds)
    (38/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.280162313 seconds)
    (39/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.193105913 seconds)
    (40/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.193523875 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.547913499 seconds)
    (42/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.344313841 seconds)
    (43/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.358023035 seconds)
    (44/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.184889296 seconds)
    (45/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.556550358 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.625231181 seconds)
    (47/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.193684029 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.02477206 seconds)
    (49/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.511096032 seconds)
    (50/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.32305564 seconds)
    (51/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.359994457 seconds)
    (52/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.358715849 seconds)
    (53/309) benchmarking ("sort", Int8, false)...
    done (took 4.193381604 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.292382184 seconds)
    (55/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.333548321 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.444545474 seconds)
    (57/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.69949655 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.16838451 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.183713473 seconds)
    (60/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.328978975 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.288230041 seconds)
    (62/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.928121347 seconds)
    (63/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.183741726 seconds)
    (64/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.333313157 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.208705867 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.42562768 seconds)
    (67/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.21144664 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.238067415 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.193674831 seconds)
    (70/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.90952094 seconds)
    (71/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.719362846 seconds)
    (72/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.717391587 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.469588097 seconds)
    (74/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.167903236 seconds)
    (75/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.207176456 seconds)
    (76/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.626344047 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.183517849 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.567918209 seconds)
    (79/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.267482051 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.481248321 seconds)
    (81/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.208868378 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.182453256 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.659295275 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.470433279 seconds)
    (85/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.427503411 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.383885297 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.30480998 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.869687003 seconds)
    (89/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.193209809 seconds)
    (90/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.839936126 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.169530198 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.259328919 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.999486927 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.261148092 seconds)
    (95/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.347491902 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.631021323 seconds)
    (97/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.300028018 seconds)
    (98/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.521995871 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.86197058 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.184183938 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.466355171 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.346286854 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.308497894 seconds)
    (104/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.737360291 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.408529413 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.515703467 seconds)
    (107/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.459902499 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.480182583 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.194847432 seconds)
    (110/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.187823103 seconds)
    (111/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.369079572 seconds)
    (112/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.191301186 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.186144524 seconds)
    (114/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.750655286 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.196564338 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.406000042 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.236127915 seconds)
    (118/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.184488941 seconds)
    (119/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.511167919 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.653641255 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 1.690691399 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.208831399 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.440762427 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.169594742 seconds)
    (125/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.969612612 seconds)
    (126/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.185473114 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.299427321 seconds)
    (128/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.174795461 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.865062603 seconds)
    (130/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.271843235 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.44774442 seconds)
    (132/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.896358242 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.716570868 seconds)
    (134/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.266787925 seconds)
    (135/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.185007773 seconds)
    (136/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.704333147 seconds)
    (137/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.199233442 seconds)
    (138/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.014216456 seconds)
    (139/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.182920752 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.891990726 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.292436038 seconds)
    (142/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.203077843 seconds)
    (143/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.013951897 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.872452751 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.180601055 seconds)
    (146/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.869016478 seconds)
    (147/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.402711478 seconds)
    (148/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.958531791 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.862935563 seconds)
    (150/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.702274398 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.214719028 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.184961634 seconds)
    (153/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.731661006 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.410847165 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.971536874 seconds)
    (156/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.456008169 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.210791567 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.186715527 seconds)
    (159/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.55942069 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.920263114 seconds)
    (161/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.174009237 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.004780696 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.281938677 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.183233228 seconds)
    (165/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.313094214 seconds)
    (166/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.202536836 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.186120684 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.764608808 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.198441765 seconds)
    (170/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.462222079 seconds)
    (171/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.383021447 seconds)
    (172/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.533003161 seconds)
    (173/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.180503336 seconds)
    (174/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.863363546 seconds)
    (175/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.515872265 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.593375324 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.584434795 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.708126044 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.386077691 seconds)
    (180/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.23006714 seconds)
    (181/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.313904662 seconds)
    (182/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.334440154 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.285057313 seconds)
    (184/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.528637106 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.264095383 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.853785922 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.200539497 seconds)
    (188/309) benchmarking ("sort", Float64, false)...
    done (took 5.413650364 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.696881316 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.213913893 seconds)
    (191/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.548459376 seconds)
    (192/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.186306992 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.245331985 seconds)
    (194/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.355417721 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.231201323 seconds)
    (196/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.237298703 seconds)
    (197/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.754049548 seconds)
    (198/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.173968918 seconds)
    (199/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.191793687 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.194697839 seconds)
    (201/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.309348587 seconds)
    (202/309) benchmarking ("sort", Float32, false)...
    done (took 5.156861642 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.213338268 seconds)
    (204/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.755648375 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.247017769 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.98817008 seconds)
    (207/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.241665124 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.512621938 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.51450219 seconds)
    (210/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.310557813 seconds)
    (211/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.365380154 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.20115554 seconds)
    (213/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.450354881 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.151192056 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.1998009 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.536218999 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.842402075 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.389104528 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.887464445 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.187903752 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.789182748 seconds)
    (222/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.296725337 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.274495526 seconds)
    (224/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.30806619 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.860454137 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.207717675 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.19338768 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.216216769 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.215760463 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.231612144 seconds)
    (231/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.175143259 seconds)
    (232/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.250972789 seconds)
    (233/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.417539049 seconds)
    (234/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.2571382 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.527351276 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.20580784 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.255079852 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.039571696 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.298680347 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.768672655 seconds)
    (241/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.286163014 seconds)
    (242/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.961382227 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.273707482 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.7784673 seconds)
    (245/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.879829822 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.211220255 seconds)
    (247/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.257288458 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.297938007 seconds)
    (249/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.695789957 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.950858691 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.208867767 seconds)
    (252/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.533346879 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.17563438 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.385785481 seconds)
    (255/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.30277799 seconds)
    (256/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.216885968 seconds)
    (257/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.191123094 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.366455837 seconds)
    (259/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.206936191 seconds)
    (260/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.350278651 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.192674819 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.217686514 seconds)
    (263/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.198410682 seconds)
    (264/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.203300915 seconds)
    (265/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.4322981 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.597663877 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.579348557 seconds)
    (268/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.760599986 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.48556448 seconds)
    (270/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.299792689 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.96269534 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.469799779 seconds)
    (273/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.634895283 seconds)
    (274/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.351349646 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.490221061 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.754684135 seconds)
    (277/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.217504517 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.039427886 seconds)
    (279/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.165776056 seconds)
    (280/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.191904327 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.581597895 seconds)
    (282/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.675571027 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.276690732 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.274776546 seconds)
    (285/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.27704603 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.302817268 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.913933872 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.217175989 seconds)
    (289/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.210385356 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.581119109 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.802142649 seconds)
    (292/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.710535568 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.237027576 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.252061454 seconds)
    (295/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.200377958 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.398845826 seconds)
    (297/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.277618598 seconds)
    (298/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.883657661 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.233386692 seconds)
    (300/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.319751419 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.179245386 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.301695175 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.216413592 seconds)
    (304/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.699112279 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.210582078 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.192845403 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.000441215 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.193972238 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.650582126 seconds)
  done (took 862.675504432 seconds)
done (took 863.797435166 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.225567694 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.219827059 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.203062792 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.225657673 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.31546711 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.235288812 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.21494893 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.205640867 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.251056021 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.252706855 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.201284551 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.234617529 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.205205279 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.20399108 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.202441038 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.217963255 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.141438406 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.206204703 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.221641115 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.214369655 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.220549224 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.202731625 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.25419451 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.235846976 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.208068342 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.207203064 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.20759957 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.224517577 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.316336087 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.208290689 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.208588373 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.21561092 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.142726561 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.205004467 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.200004851 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.22411093 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.216007032 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.215271081 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.207581454 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.236736019 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.48659807 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.205214357 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.205783377 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.205669769 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.205340789 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.210156124 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.206231651 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.212756639 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.218896545 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.219581891 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.50281067 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.222144995 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.20949567 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.206196814 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.21596696 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.206333919 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.210773177 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.221720815 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.226618009 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.22281801 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.141315351 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.213881199 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.208514842 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.223433189 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.214304113 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.51507117 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.201720933 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.212339168 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.488207054 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.210602282 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.516767705 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.215728912 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.208624832 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.222134399 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.237993359 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.150571467 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.203248637 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.206866382 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.215711109 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.205104686 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.217399713 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.220712183 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.212168731 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.207722176 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.221146051 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.240472246 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.218033857 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.208798028 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.216782156 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.226922396 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.216100648 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.218036232 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.210830252 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.204748558 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.216934279 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.211740611 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.21040434 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.211057509 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.213378814 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.21909168 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.491511064 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.22423597 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.205785741 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.203895626 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.206987684 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.222369363 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.491574371 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.209444341 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.230591019 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.256506869 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.210184818 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.149346243 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.214199638 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.224920329 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.218510527 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.211872314 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.204253524 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.149148064 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.487505383 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.223935838 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.211088354 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.208889899 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.225325623 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.211415569 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.204694175 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.156872627 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.21315847 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.223768064 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.330124397 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.221423593 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.241402725 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.208703928 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.213378367 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.238067094 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.226761712 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.242054355 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.213317824 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.225151236 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.227394614 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.208469907 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.222596711 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.221505503 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.212148558 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.215911279 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.205709155 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.239068441 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.223411426 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.223103378 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.232183421 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.332543156 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.208512468 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.155301484 seconds)
done (took 204.233930599 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.270739933 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.203740753 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.293154713 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.208304979 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.304995183 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.304209065 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.206488306 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.205390455 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.206088214 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.587782172 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.206413098 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.206638503 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.207936941 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.205849774 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.290628631 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.208586816 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.205904687 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.549882122 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.2101632 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.279554085 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.208855975 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.205133371 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.208820878 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.588671426 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.20440928 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.205563575 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.280580845 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.20845111 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.551787007 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.205008493 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.208113235 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.553501615 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.298097055 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.226542245 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.21860686 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.215421498 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.306574055 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.223262145 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.295406693 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.295425749 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.296088079 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.247347045 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.202543191 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.205991738 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.212092284 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.210659183 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.207718414 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.236570887 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.203456135 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.207155704 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.55041181 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.219541523 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.217792207 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.20892238 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.208321674 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.230410008 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.209030598 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.210314749 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.298541516 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.210787643 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.273817159 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.589814018 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.591559068 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.211264858 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.208903512 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.209124424 seconds)
  done (took 140.09236761 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.274890537 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.282322409 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.3154009 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.210552295 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.259815984 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.31910604 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.210623267 seconds)
  done (took 10.017041265 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.217577499 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.211129214 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.260260546 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.260989068 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.211447413 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.357729353 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.2122696 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.222534762 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.209495666 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.263527344 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.212780277 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.213023938 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.220349225 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.204871334 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.259340618 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.222574812 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.326823589 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.212619522 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.212587596 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.362907603 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.21057351 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.219269314 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.263187517 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.223063315 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.214115179 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.21800966 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.776069493 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.213146914 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.21054286 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.212237954 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.2102695 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.250229548 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.213996009 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.210318258 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.210286996 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.327390996 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.21338827 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.209927776 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.212997815 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.210507214 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.214069289 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.213423679 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.213802637 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.21043521 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.212977496 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.235037902 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.213077814 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.213862212 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.215117967 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.213776001 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.263248881 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.21412945 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.211943682 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.212813354 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.26879872 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.22085615 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.214728348 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.211068958 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.214338218 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.211764973 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.364767826 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.260371597 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.214209166 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.261749214 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.214659402 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.214977369 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.214670892 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.215131356 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.2676004 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.213875474 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.26241842 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.211933144 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.368556526 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.23745198 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.215771905 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.216176097 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.216837019 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.215523604 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.209340344 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.220426882 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.211704412 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.215400424 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.221317855 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.21375458 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.213053824 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.31706709 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.323668859 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.21219878 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.227824581 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.22239641 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.212692165 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.267627493 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.21598779 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.213057585 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.267009484 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.329883521 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.268739249 seconds)
  done (took 141.421013307 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.220392678 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.223608726 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.216733004 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.231175851 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.216658672 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.215991857 seconds)
  done (took 8.473235557 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.217455431 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.216961738 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.21648972 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.215948071 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.216764274 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.218661255 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.217101009 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.217517386 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.219739932 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.216607961 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.21843985 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.219937741 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.219364302 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.216877247 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.216805933 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.2163764 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.217877932 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.215372472 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.217477454 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.217054723 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.310721517 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.217358438 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.217154668 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.217769998 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.222282961 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.217991204 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.224704156 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.217404597 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.217577153 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.223792615 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.220163979 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.220486955 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.217578409 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.222802849 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.22221702 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.218419128 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.222011235 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.220634264 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.216489171 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.220197131 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.22130609 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.219360938 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.218993617 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.221318189 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.219955945 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.221922029 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.223346219 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.226185711 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.218202132 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.222067131 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.221255091 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.219305912 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.220761361 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.221472684 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.219138491 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.22204883 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.225375023 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.219666044 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.219009623 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.219901823 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.219783041 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.220623863 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.220742175 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.222661019 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.226162033 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.22172181 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.22078195 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.223179006 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.220785854 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.220112526 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.221670613 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.218518067 seconds)
  done (took 90.065454565 seconds)
done (took 391.210218893 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.449037028 seconds)
  done (took 7.602666298 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.268663508 seconds)
  done (took 7.423770899 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.9273726 seconds)
  done (took 20.087543343 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.239227078 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.238221145 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.214669901 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.21919256 seconds)
  done (took 26.065072033 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.442595958 seconds)
  done (took 7.596675693 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.209252828 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.208422512 seconds)
  done (took 13.569979687 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.555089664 seconds)
  done (took 7.702395048 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.552184805 seconds)
  done (took 7.705589072 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.22780868 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.226394334 seconds)
  done (took 13.84540277 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.193058035 seconds)
  done (took 7.340019564 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.848076892 seconds)
  done (took 7.99623675 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.214439937 seconds)
  done (took 7.363556859 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.226583706 seconds)
  done (took 7.374000233 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.684876036 seconds)
  done (took 8.82919694 seconds)
done (took 151.656559954 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.199821608 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.200703178 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.202580638 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.200609024 seconds)
  done (took 25.944835556 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.241491261 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.241890362 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.242044294 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.252909601 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.245228857 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.240541906 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.234970893 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.23406953 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.253231706 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.24482008 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.243615302 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.24445891 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.240830495 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.235040679 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.24555401 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.244473291 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.251951776 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.244357117 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.234881283 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.24547849 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.210110377 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.25340933 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.246016181 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.210076063 seconds)
  done (took 30.924063354 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.407207257 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.279741421 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.363968993 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.261641916 seconds)
  done (took 6.454600971 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.261224285 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.263257519 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.272652696 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.313926968 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.338343965 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.271944367 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.236164271 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.230488762 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.216746377 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.263540191 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.339840489 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.27979239 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.36591024 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.210801887 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.413566948 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.209885595 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.210921343 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.262470976 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.313892493 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.325901469 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.211521268 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.261796508 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.265773503 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.279626673 seconds)
  done (took 31.763105768 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.209352415 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.217342911 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.215960886 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.210285043 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.209857094 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.209907086 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.21615156 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.210616343 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.231308418 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.210419964 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.209512765 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.209386296 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.209682451 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.209517638 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.209253638 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.222528179 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.224408541 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.210717688 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.213274067 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.216837309 seconds)
  done (took 25.420082577 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.202880532 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.058528868 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.555298935 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.460361198 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.204395742 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.204129774 seconds)
  done (took 26.83016187 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.271589252 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.397101727 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.213319226 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.530880183 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.607366913 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.212550167 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.212390644 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.429184425 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.701752133 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.695240578 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.259817295 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.270008797 seconds)
  done (took 17.946008128 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.203032543 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.204982021 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.211271774 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.220575291 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.2596099 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.213914791 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.217513489 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.203646868 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.260229757 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.263253024 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.215586476 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.259929498 seconds)
  done (took 35.87970693 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.292471182 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.251070401 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.139381905 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933128291 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.92445952 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.417736813 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.962926343 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612529939 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.212092972 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.48008655 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.918442777 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.307283641 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.461203511 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.207198842 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.209118674 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.088300617 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433676096 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668887014 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.209657711 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87508942 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.233495425 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.209107499 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.943336992 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.235237791 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.418755517 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.184535165 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.46729134 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.982720204 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465096835 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.219831164 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.219057316 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.207711164 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.481800759 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842685879 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.304956281 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.217148581 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.889541895 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.837588383 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.199310764 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.882209961 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.692713474 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.212251619 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.217770811 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.209187491 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.157230625 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.214139079 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623314623 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.214810565 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.918352083 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.207147676 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.219260123 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.302334587 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.211387043 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.198081998 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233591035 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.21273327 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.205974861 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.21519386 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838818294 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.759728901 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.221092494 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.14304707 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.571303565 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.971826596 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786214651 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.31145179 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.212024612 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.211261758 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.142090757 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.938699142 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.225913272 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355528063 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.234263109 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.858916855 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860981368 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.930598736 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.150908473 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.738546179 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.213311109 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.144946022 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435541394 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.985880103 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.143871626 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.153637675 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.142393885 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863325675 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.218231513 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.55483157 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.216850558 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616124008 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.221238717 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.228087485 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.232880074 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.432637418 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.095782089 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.209351038 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.677027527 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348779149 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.231446166 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617824551 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145179195 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.213313215 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.465992356 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.422009439 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.209542395 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.079948469 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39548131 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.21195965 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.227761975 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.219783926 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.221248548 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.736962912 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.224472283 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.346969347 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.229620818 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.987668328 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90495009 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.211719401 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.312747328 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.921721887 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.451640131 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.932902507 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.094374524 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.279721926 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.214214176 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.210720942 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.988188724 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.062553832 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.093940747 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.212042041 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.213711988 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.223826636 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.212775047 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157948581 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.209718797 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.976317834 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.992745809 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.435619808 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.211440731 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.500755005 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.146917625 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359201784 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.2221147 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.434343925 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.326381393 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.212878588 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471531673 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.218011281 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.221506963 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.224815897 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.230697884 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.310799981 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.234502309 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.22101063 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.470246036 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.217101091 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.217896293 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.022361389 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.991728918 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.215955129 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.217458963 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.025388854 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.745337674 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192481027 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.224331401 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101222597 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.227369109 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.280964363 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.21936232 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.224035166 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.878589873 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.011746862 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.219564654 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.215703138 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440911155 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.223869174 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.927172072 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294473091 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.394823627 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.749143278 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.229231336 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.149456457 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.924547631 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.906687278 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.214550628 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.412681902 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.213872188 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.224186734 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.227829674 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.731237531 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.744205542 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.217901742 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.949332604 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.222298736 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.225579278 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.220823648 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.214964428 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.855389549 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.368029684 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.228087063 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.227791014 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35913994 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.228627145 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.149409316 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.731924868 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.219829544 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.214938147 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.992592111 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.250598985 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.943258886 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675222197 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47537994 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.889328554 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.227084823 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.077154476 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.245556463 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.237284537 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.721357212 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.23029893 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.235439972 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.225108742 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.226799882 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.98475279 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.655720636 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786788736 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879359301 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697515048 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045938735 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.218939075 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.099966085 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629534445 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.151546879 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.872219531 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387597747 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633570218 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.1619884 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399113097 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.33734397 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920192237 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.228539016 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.444346755 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043544551 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.730938825 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.243204602 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.427724731 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.251118485 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.221107355 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.147662522 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.504409412 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.428523066 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.73643362 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298873655 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629829302 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.745289084 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.008820267 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.21643401 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.532176019 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374926975 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.762975 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.604740061 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.228522227 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.984243199 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686185103 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.228295764 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.744764596 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797085706 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.220897286 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.401435049 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155755333 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.229593231 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.229023354 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.219189257 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.373043021 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.218061856 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.473510138 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.230856845 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.15103219 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.22740417 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.699769821 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.076389554 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.224154012 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.220919264 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919800577 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.222114024 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480914193 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.231861854 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.844314387 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.223893056 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.153482731 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154968398 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.912031017 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.220986889 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196048139 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.690250577 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.566412472 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.199436162 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.251527063 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065847504 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.474454452 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.23448165 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.756732917 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44721113 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.011022671 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.243702447 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.320442522 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.780230108 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.220258247 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.115646319 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.456116708 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029877729 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.444698928 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.17544775 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.126975842 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.218657587 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.432965155 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.117029087 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.015241937 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463122373 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.932761208 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.224152723 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87572361 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.248293069 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.015238483 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.24431765 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.586080759 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.227956214 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.291828498 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.230227295 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.232220098 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.23191125 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377721551 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.033728575 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.236312796 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.23535031 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.314179081 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.398685514 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.849511832 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.99625986 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.76364306 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910159424 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.759352712 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.234906458 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.222090512 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.231355191 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155934333 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370318924 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.746925378 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.495861802 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353049413 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.653822173 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.24371206 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.813483818 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.23940633 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435272226 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496992191 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.091398277 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.229809103 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.882664188 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.123973949 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.232984572 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.433147342 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.692958174 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.752537203 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340225811 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.228075249 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634526677 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498525226 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.314086382 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.222444819 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.813492923 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.235833841 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.548054284 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.230308499 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.04289636 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371830525 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.233139228 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864492012 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.234408245 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.383622352 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.996418106 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.041711605 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.48026501 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659574587 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.237075866 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.76437561 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.87167262 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.489117943 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.294453097 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.234751867 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.3275135 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369848645 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.234532978 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.123022071 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.224457204 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071444139 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.933742753 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.234825697 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.765185003 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.489998601 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.220831205 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.223461852 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.249368261 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.23371958 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.448080409 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898900228 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.449084269 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.23370634 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.226882599 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.214278741 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.766514213 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.240439982 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.159536935 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.229361058 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451708627 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.462769333 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.252139685 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.678214593 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.936040312 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754361917 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.197787755 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.247051718 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.224839033 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.885769016 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.766450543 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.85693617 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695986618 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.883786043 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.229415646 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.50091351 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.230998542 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.228047574 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.504108232 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.230157074 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.228163799 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.238294838 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.768399341 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937049718 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.234157921 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.972989285 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.166314608 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.453409513 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.847776893 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.16362271 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.237060346 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.396272578 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.228873279 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357156589 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.238374857 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.225837168 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.227716789 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.963771915 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508252974 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.232989445 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.226730757 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.853132664 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.238786634 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.235259135 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.442740631 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.234342246 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.901365418 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.577120885 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.48402196 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.239981782 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.214868073 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.231596115 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.229370091 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.945990217 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.196969849 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.733049286 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759074955 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.237605484 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.240373065 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.231496523 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.444780375 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440094616 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.053125367 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.253196596 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.229249315 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.246261027 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.136768827 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.99510473 seconds)
  done (took 1513.697575749 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.249715352 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.26354108 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.249744698 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.290933643 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.280274119 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.252974635 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.244020512 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.260163717 seconds)
  done (took 51.259468173 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.234979044 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.381947409 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.259379623 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.239767674 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.240030071 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.233311585 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.650461498 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.232276025 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.239583835 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.239714253 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.237556022 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.231765059 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.832743676 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.240186216 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.23511782 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.215528833 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.238198741 seconds)
  done (took 63.359403531 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.240956262 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.431967997 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.319090193 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.234172508 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.873774362 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.247956912 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.476849096 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.248172739 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.229537428 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.54983203 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.88671127 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.233894663 seconds)
  done (took 82.142339764 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.23875609 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.238724397 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.238410703 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.23874018 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.239783816 seconds)
  done (took 7.364708046 seconds)
done (took 1920.130386524 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.473553122 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.85146946 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.809496817 seconds)
  done (took 4.831867061 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.378340847 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.427982841 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.547116421 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.552836169 seconds)
  done (took 7.077081258 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.515708458 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.615844997 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.424389889 seconds)
  done (took 5.727339814 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.533580059 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.24890428 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.351352913 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.232651229 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.232192232 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.232986134 seconds)
  done (took 19.869851615 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.236848576 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.238783212 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.235709598 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.238501467 seconds)
  done (took 6.121509747 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.217785871 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.92568 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.21953908 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.235735467 seconds)
  done (took 17.77017758 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.984356207 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.995250049 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.979481383 seconds)
  done (took 7.131060396 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.236961984 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.0727156 seconds)
  done (took 9.481175568 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.518511058 seconds)
  done (took 2.690949723 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.368250248 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.56141126 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.223287672 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.165952288 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.219010457 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.705410159 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.715228178 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.333607066 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.150859661 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.195425765 seconds)
  done (took 25.811418912 seconds)
done (took 119.290743724 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.774458679 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.479025118 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.438161575 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.743493103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.459309713 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.438691141 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.444991818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.714050733 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.321290461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.249563882 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.746287489 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.461058721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.392848988 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.476756781 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.393924296 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.477958316 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.46438003 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.822465833 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.431948119 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.644130902 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.445440717 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.3916714 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.581986555 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.480709904 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.496670456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.391171021 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.961022896 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.476813605 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.60651125 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.049962556 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.392857726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.817028198 seconds)
  done (took 186.640309594 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.235394699 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.234206059 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.246655834 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.234893064 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.23542809 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.240458812 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.236131517 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.234172207 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.234767905 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.237162495 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.23350139 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.240263377 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.236888437 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.247385145 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.237897553 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.23558173 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.234688793 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.236933314 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.235111169 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.248952109 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.249687503 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.235494827 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.247340581 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.234976924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.237516014 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.23550269 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.248223184 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.235595261 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.254117981 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.237660516 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.238541654 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.237410282 seconds)
  done (took 200.824301293 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.235438567 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.2426127 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.236105004 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.238050517 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.241154283 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.236351425 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.237227791 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.241237539 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.242991716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.237661378 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.235466942 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.247164887 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.239081467 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.236118356 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.23551513 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.23641799 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.235950447 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.240247359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.23795866 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.23797797 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.238310419 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.237731728 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.249539757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.249752114 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.238541143 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.236035575 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.262507147 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.245332814 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.236432274 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.248269024 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.237295092 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.244089048 seconds)
  done (took 200.872201253 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.431304993 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.245189841 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.245818285 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.17993498 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.247216682 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.245872217 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.24187903 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.441252469 seconds)
  done (took 13.457531327 seconds)
done (took 602.967462807 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.452472204 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.159554622 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.43828337 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.26751478 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.942693583 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.267918311 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.266690491 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.423482647 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.144367894 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.42387545 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.452996527 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.264961013 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.593965592 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.265986434 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.51156119 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.356398367 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.12073996 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.231620161 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.577263721 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.746358618 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.523662076 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.695193054 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.424073912 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.155179593 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.601665305 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.696046075 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.916419727 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.121199745 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.267996168 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.577244586 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.827676445 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.179855972 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.317443417 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.301735791 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.356080544 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.339791737 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.140175069 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.299694667 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.44495724 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.456798266 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.731012645 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.97137029 seconds)
  done (took 86.4329377 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.235267478 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.235115479 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.23365841 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.236865072 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.237516168 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.235123746 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.234483401 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.235576411 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.234920421 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.235147855 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.235730568 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.236270541 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.235444491 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.237422066 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.235576364 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.234814679 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.235350385 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.237876592 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.235735834 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.235616066 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.238754911 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.235713235 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.236429845 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.236814263 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.235772249 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.237572617 seconds)
  done (took 33.316651165 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.249889519 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.494460257 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.666028151 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.25559638 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.248766933 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.252859753 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.319812569 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.252444106 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.250680366 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.254017228 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.409148501 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.253433966 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.284421631 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.687562297 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.253566207 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.251321194 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.249836303 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.250392029 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.507961994 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.261247962 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.339078874 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.253243307 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.322007524 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.259962372 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.269723524 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.252274003 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.25667265 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.762122097 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.25325762 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.408154013 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.945460207 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.318938318 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.711513374 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.680791533 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.948375567 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.254840064 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.256546684 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.404886869 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.253185211 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.25217088 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.320100269 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.252863205 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.667813726 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.903050395 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.268878745 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.251318295 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.789665223 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.409763319 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.472580052 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.261506665 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.698456482 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.255469343 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.253845503 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.254269152 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.473033173 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.259797694 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.251553863 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.793117774 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.271413086 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.321197839 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.256577669 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.253154099 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.508305101 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.254301944 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.497644977 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.255233343 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.26102422 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.253667882 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.669704251 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.256432226 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.891620367 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.267371811 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.253483996 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.400110476 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.4933435 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.818295369 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.258011158 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.50925809 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.723826276 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.320165869 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.257278148 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.754948677 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.325612252 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.257749542 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.255763658 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.255830683 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.25465145 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.302200748 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.320750549 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.837075684 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.884100055 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.795547603 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.340991131 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.267724699 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.254747869 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.772729131 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.267942689 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.255114712 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.664357576 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.888536569 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.269812698 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.261965031 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.891490393 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.271740697 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.324253783 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.261251076 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.683675047 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.25653479 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.303744724 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.254882775 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.261513639 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.258200448 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.326363333 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.260194487 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.255743862 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.894239773 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.425608512 seconds)
  done (took 165.748289361 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.248144279 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.248119496 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.258363526 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.248466249 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.248553317 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.254768499 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.247804246 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.248895351 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.25374837 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.248596513 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.248553399 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.247416825 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.250927994 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.24988494 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.259049157 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.256073144 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.858706491 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.248057906 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.247725106 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.249439638 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.026746323 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.251172574 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.248992694 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.249533124 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.250813503 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.250613898 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.267514364 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.252729065 seconds)
  done (took 149.608314998 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.255980999 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.77367083 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.259289287 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.374847478 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.27565618 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.254372161 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.372538836 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.307608964 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.260733064 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.256367693 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.254422731 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.535006334 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.259852822 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.728248778 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.42574991 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.374552326 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.729715797 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.259516302 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.255650746 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.255067394 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.376784157 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.265855587 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.536133375 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.779117129 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.260671336 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.779111763 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.249253029 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.25852415 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.256579377 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.780201771 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.257596843 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.536473058 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.327970885 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.313115588 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.781736398 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.729646672 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.732392234 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.388795794 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.258751897 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.257001605 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.256415855 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.24760561 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.778961 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.26187534 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.259448025 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.773515015 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.273779921 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.259126586 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.267534278 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.25772305 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.311419881 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.313947552 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.541658993 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.786866554 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.328586525 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.281721171 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.376132735 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.640410374 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.263522299 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.732078078 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.247957907 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.782099591 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.263333943 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.248112694 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.260362191 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.26421428 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.393430387 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.37837906 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.735909916 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.262790859 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.73424989 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.394229416 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.260158215 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.258795131 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.261351187 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.784916401 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.736772155 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.39559393 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.38176999 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.432252717 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.249810014 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.2580908 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.247413524 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.328594674 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.259804424 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.786982697 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.738876214 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.261849166 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.261177316 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.261479193 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.260767672 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.417148569 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.79076541 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.331179006 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.728451471 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.555834912 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.544264732 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.264070504 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.313811952 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.261938758 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.545631933 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.26351367 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.312385026 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.702239099 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.545484791 seconds)
  done (took 149.968611906 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.503357705 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.377789118 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.344114686 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.375546324 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.838982223 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.819068883 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.482838333 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.37514397 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.360511543 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.493295736 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.348584202 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.351948769 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.42318925 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.334182538 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.944547014 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.326381987 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.350459817 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.380384807 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.353271311 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.238365748 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.864686731 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.539905596 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.431139252 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.178214353 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.351739808 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.009811609 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.793675874 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.826383564 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.430430881 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.489427849 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.774722159 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.333727084 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.198207146 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.886092593 seconds)
  done (took 61.327157573 seconds)
done (took 647.580941738 seconds)
SAVING RESULT...
DONE!
