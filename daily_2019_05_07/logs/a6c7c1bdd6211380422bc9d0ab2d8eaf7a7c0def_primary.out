cset: moving following pidspec: 19020
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.289784379 seconds)
loading group "string"... done (took 0.581681267 seconds)
loading group "linalg"... done (took 7.117172953 seconds)
loading group "parallel"... done (took 0.164568029 seconds)
loading group "find"... done (took 1.117782336 seconds)
loading group "tuple"... done (took 1.977515608 seconds)
loading group "dates"... done (took 1.263154512 seconds)
loading group "micro"... done (took 0.235198099 seconds)
loading group "io"... done (took 0.96473647 seconds)
loading group "scalar"... done (took 38.332623791 seconds)
loading group "sparse"... done (took 12.521894437 seconds)
loading group "broadcast"... done (took 0.968690512 seconds)
loading group "union"... done (took 13.075826717 seconds)
loading group "simd"... done (took 4.401959571 seconds)
loading group "random"... done (took 8.927919374 seconds)
loading group "problem"... done (took 1.931134625 seconds)
loading group "array"... done (took 21.132450814 seconds)
loading group "misc"... done (took 1.926389121 seconds)
loading group "sort"... done (took 3.194607108 seconds)
loading group "collection"... done (took 17.90945684 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.529227679 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139387635 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116517485 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13791093 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183250768 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130541909 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144123569 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084225679 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.052273721 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.169324508 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137643368 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.47642698 seconds)
done (took 5.054989223 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.228605026 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086239195 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095605295 seconds)
  done (took 0.882617918 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065223694 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126143099 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079659357 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067869267 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065856429 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079772756 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06647089 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065794214 seconds)
  done (took 1.258717651 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073081177 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06768574 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083459583 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067543696 seconds)
  done (took 0.999507322 seconds)
done (took 4.153289957 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.894733747 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.231940186 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188485892 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452238392 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147203358 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187393483 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670081343 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.310589576 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209253762 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099199394 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103876171 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.377359337 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10574427 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669721199 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075024748 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.104627601 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158086487 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.411901515 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080243979 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081747356 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103326756 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140673502 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100045954 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076673146 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167932357 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069469378 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14607381 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094647779 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067503998 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.241885927 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.1889082 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679291159 seconds)
  done (took 10.379324404 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098437716 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115469028 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068009478 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138336694 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100715908 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085185167 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070013557 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08176739 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09048832 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.156901768 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113469202 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104955377 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08080511 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070055098 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099954612 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210156694 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105774176 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084570082 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085942276 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07534936 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121514992 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081448702 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093638878 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078075323 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150550584 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194046958 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11376933 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110213837 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068304587 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079917902 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130199154 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141152718 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065367355 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080410856 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.137746224 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109073325 seconds)
  done (took 4.507374269 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.028874553 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15948541 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090351534 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151327129 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084543972 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084300365 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125799115 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.081514879 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100356272 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.231876822 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.147661324 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.481574298 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127267365 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.086337056 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067133089 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085653729 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066925144 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.542650118 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.110959529 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13554828 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084263682 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090993896 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070481574 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362937382 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082731845 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066450408 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068431188 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.075691939 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145954067 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069182827 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.209633324 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089872526 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067543709 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120433791 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194092485 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09524599 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12219152 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066522666 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081899368 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170433864 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091677506 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091182324 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066940396 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088072102 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081309721 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117313854 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.104538349 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082577595 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067540628 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180567111 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065816858 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09902903 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.886540949 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165640363 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076512517 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065719275 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285975484 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100269163 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066671253 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063649978 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.270118564 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.155147999 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069315756 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084604266 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066704677 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06704473 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380793146 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067526123 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.902241213 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071080556 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076971705 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085020289 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066983184 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088375072 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071889304 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099745527 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066650654 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067347862 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081897406 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065631565 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08318607 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08497256 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20099971 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082830338 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066426603 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063593763 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101336033 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109949503 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069035733 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064889019 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115867364 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064358136 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083087723 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067705528 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118103504 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067095154 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100767724 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083989873 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113722285 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08123048 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.123456793 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067969794 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111599711 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076405255 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113411166 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092862068 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067186449 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152236343 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064169625 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080924547 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066308701 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063931678 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083117955 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067895537 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097344133 seconds)
  done (took 21.063314664 seconds)
done (took 37.686252275 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.289613366 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090185327 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090139348 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075581165 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090970672 seconds)
  done (took 1.419276921 seconds)
done (took 2.176232131 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120050704 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116063754 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063225656 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111240626 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063660664 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11680287 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113798784 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081624472 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117475884 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063910853 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11189144 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064461214 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063345912 seconds)
  done (took 1.988493278 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082374757 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084635019 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084331908 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080931501 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077680595 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082091138 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079340763 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103269497 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079802846 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086775 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063075529 seconds)
  done (took 1.658279861 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08100864 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083011173 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083985558 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080815933 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077359098 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081351714 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079809052 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101372085 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080121178 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087914229 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063375756 seconds)
  done (took 1.654485751 seconds)
done (took 6.045894218 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077569547 seconds)
  done (took 0.826438071 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.696181933 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.498348136 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08245407 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133843636 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.220211196 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.152035006 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.435485397 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108901512 seconds)
  done (took 10.249175927 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089155675 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083941092 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068784082 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097705216 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068537811 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086639501 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069426967 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069501416 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085888046 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06876907 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085726187 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070523644 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086297491 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070377889 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068121253 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086370041 seconds)
  done (took 2.072047982 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093742214 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091313732 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090060062 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075553795 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088487999 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07226874 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09116054 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074157405 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086417537 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072180848 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091072768 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074032335 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086461629 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065189272 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089399735 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075542117 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086957448 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075397416 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090052532 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075844923 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090012739 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064437886 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086516801 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075059568 seconds)
  done (took 2.821565465 seconds)
done (took 16.724704077 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.129908255 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075202428 seconds)
  done (took 0.961604625 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080648804 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096458796 seconds)
  done (took 0.939439409 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082130303 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.079673978 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08920801 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.091695895 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080384641 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065382444 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101084791 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066278352 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080370678 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065949624 seconds)
  done (took 1.56476144 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068021189 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092207545 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070330552 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09682278 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072997669 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079338474 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072614441 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082899836 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077517417 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077606192 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071797383 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.0983519 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070745977 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099536212 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073197356 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083383672 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085505638 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066798995 seconds)
  done (took 2.205232257 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064521502 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066519412 seconds)
  done (took 0.900284654 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066242016 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063409482 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080715481 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066627226 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077436589 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063057436 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079010173 seconds)
  done (took 1.265088487 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396673383 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108435215 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.241939606 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086435842 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102700874 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260186189 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082775117 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070440824 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087121807 seconds)
  done (took 2.242028261 seconds)
done (took 10.841954853 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078672207 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085387792 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109361609 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41604741 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104085446 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065449092 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14032893 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.204721043 seconds)
done (took 1.972714775 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126428482 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.60473406 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.397538438 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209967016 seconds)
  done (took 1.983592755 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.367189804 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090527078 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074441338 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066565215 seconds)
  done (took 1.374276926 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065580537 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069123558 seconds)
  done (took 0.908434367 seconds)
done (took 5.165696259 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066088499 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066676351 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078817134 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065521011 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101711712 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063188141 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063464925 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083886644 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065640987 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065763464 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.081562675 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06876189 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082680251 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063401284 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064078615 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078514654 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065173616 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063133826 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078792665 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063271314 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064019441 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080925744 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063668847 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063169589 seconds)
  done (took 2.508268815 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085791989 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.0828436 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071359002 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087028727 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070208541 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087029283 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071330351 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066386802 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086756909 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068834348 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086033738 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070779413 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084814525 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071106043 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084709146 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071520252 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091423934 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066935648 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068244067 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085376554 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071742875 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081432805 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070488995 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086768213 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070591282 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084479105 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068967422 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081819875 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072082862 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085884681 seconds)
  done (took 3.109256118 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070601964 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06355419 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079716707 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069580394 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063468386 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081196291 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063928332 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079747455 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064512509 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063647632 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080314901 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063766922 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063532111 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079833817 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064364239 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082738487 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079607783 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064388903 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07944269 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064267364 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06687086 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079333044 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064105204 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079297761 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063867102 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064105111 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079010611 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064362926 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064029807 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079542556 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06601829 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066709362 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079324488 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069871055 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083377874 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063123113 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067899768 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078325638 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063898651 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062941735 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078530851 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063330605 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063005162 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085553921 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064146989 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08175995 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063677552 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064597085 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079857842 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06693742 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079477276 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063672086 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066131966 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08022272 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067412804 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062826972 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079577991 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063252521 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081158789 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063819926 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063284449 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079325574 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065532159 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064100794 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094216193 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070242559 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078868589 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065023118 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064487191 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081785368 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065440523 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077361058 seconds)
  done (took 5.893098694 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116061022 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090456152 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081701489 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064906193 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078492722 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063763326 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06745391 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079228578 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06605691 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085432819 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064259862 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065553707 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080884627 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076228706 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080459044 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065765021 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085441245 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062045793 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064564294 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083480455 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064567914 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083151036 seconds)
  done (took 2.457102589 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.185169757 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087210173 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108895415 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089701802 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083810429 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073268544 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085384919 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07096144 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070432979 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084629479 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068834395 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085868737 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068351017 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083113856 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069309772 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083721577 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070873496 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083405629 seconds)
  done (took 2.333084074 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077796904 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06590995 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105609356 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066031728 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083111766 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068740416 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08689917 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074962898 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084282252 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066773815 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08991446 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068465579 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084400653 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06607669 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068790499 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082040831 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068614334 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082482572 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074572377 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086942106 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071273111 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089612528 seconds)
  done (took 2.495223661 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080535191 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067619617 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100797385 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084352393 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062388516 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065021192 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087403424 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06664467 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088289861 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067385632 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065894158 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080057738 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071174043 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082131854 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070878018 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082518774 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067598368 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066390725 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083596303 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062059018 seconds)
  done (took 2.286005432 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087179262 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083655904 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067483554 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091803041 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067784256 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083301782 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075431046 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082500265 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06682756 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107297238 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067755897 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082742957 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075462149 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087535757 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067572652 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090880384 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076125713 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091047816 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067786502 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083005848 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.217420113 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067556717 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091539684 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06723172 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082819754 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067004351 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067206138 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086975581 seconds)
  done (took 3.139866692 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066404841 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066370581 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079494782 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063732736 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064073113 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079538322 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064181933 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064334034 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082412506 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064199688 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065581463 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081809024 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06666108 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081965093 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065757223 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066151642 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081777463 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063961348 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064006141 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079800621 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066860197 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066749802 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082345012 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064182093 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079464448 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065946424 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064582905 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08016366 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06646521 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064124612 seconds)
  done (took 2.900280208 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076224831 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090100618 seconds)
  done (took 0.95691779 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063728386 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080132442 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079945831 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070178842 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087068339 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067210973 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090643845 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07096376 seconds)
  done (took 1.398034132 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081098277 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077500812 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083444954 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078638878 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093311469 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083434286 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153049336 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083815955 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072854441 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081488583 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079246108 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065466164 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.088886198 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067035113 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088720891 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072290052 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064746456 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087687307 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069322053 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081234317 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068106829 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090795344 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068448785 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063934629 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084874768 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.07518682 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094133343 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067812828 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08624864 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074202343 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071771599 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077609465 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067427888 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083054315 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065255111 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093012424 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081962949 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085880714 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07530666 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068256879 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092994726 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062143418 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087172247 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072750028 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092361895 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066818643 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067819445 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078102152 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064532738 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084589389 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06193716 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066800446 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077897634 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073701913 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086060032 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07716024 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067457262 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084644465 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069683088 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085864558 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072791232 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084219496 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068720582 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066433715 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091944934 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071128445 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091706673 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062193479 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060637079 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.07995454 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07613066 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104851337 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072288178 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083216552 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06742256 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080611948 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069708562 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067989878 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087893013 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073160825 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08251836 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07213399 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089904055 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066402107 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068419988 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089417841 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065422993 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084555311 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064326359 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09870601 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06570076 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080657518 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06420346 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076110723 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085537913 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066272641 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080386704 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073338409 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061082367 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082981278 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067337777 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082840378 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076545111 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088050088 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072034801 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091007422 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074070918 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066216961 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0862368 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064181082 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083889601 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065399946 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072689815 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077341661 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069662609 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083780591 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067197478 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090707742 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064639643 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066972746 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090180873 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071336234 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081118331 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062828611 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069599582 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082712319 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0703916 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.0906486 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065623445 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061846355 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077680515 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070037693 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08232691 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070703887 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086945479 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069167726 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061577836 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081033671 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07142938 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090999321 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066703135 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066504243 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089704153 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068082111 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081499224 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073287815 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085074172 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066024136 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072035169 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083039739 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061961022 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085329805 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068803973 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064810786 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086573696 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070549813 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084897766 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067262209 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082002671 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071804153 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067458392 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082228909 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066922215 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081689747 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076509742 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068892391 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078531259 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064109545 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089525723 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064919104 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066097816 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082084939 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069090269 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083916882 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065017638 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06576233 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084199526 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077655258 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08753145 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068107689 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088657714 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077572866 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083157147 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068912693 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066253893 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084479152 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067245822 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091501526 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072328731 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088341628 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069046474 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062816308 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088788162 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074078838 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082994073 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063864377 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065157095 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08703193 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071958912 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086753007 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067428477 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081159341 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067905751 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068747476 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085734188 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067205457 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082464801 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07142813 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082389043 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072838188 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067625491 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093291608 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069567434 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078351549 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069345661 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080418775 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07215083 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061462894 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080803407 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066628842 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084419174 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065760463 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06992196 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077413427 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073619974 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090539806 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066797087 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066287383 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083310537 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073492909 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084349304 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070030544 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069548391 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089635116 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077068149 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082087274 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070106065 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093116047 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066998387 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061041932 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088101106 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06558974 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08209642 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065497075 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064646647 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085975569 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07466636 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089744152 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062034594 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085988556 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065274424 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066552847 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079121163 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071654243 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.0856162 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067092171 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073661853 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083534339 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067549655 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086854492 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067133337 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067933559 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084843549 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070529796 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083983133 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068999999 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065227924 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086413728 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065249541 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080974068 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068428422 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06698601 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083377545 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072232776 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082912476 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066337553 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086131538 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068181426 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067611191 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083888476 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.0661272 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086316582 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067589055 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067341908 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085787452 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062061833 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090304396 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066371604 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073612302 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083799208 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063524917 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088280771 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069031389 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071441433 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084167108 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06706385 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084723389 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066271246 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085385613 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073217818 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06445613 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093372801 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074151547 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083363039 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069606184 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083306665 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.0679066 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066248194 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084160161 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067782924 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066613184 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083726971 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070956614 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085442203 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06719246 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067982676 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085169037 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067153097 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08496639 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061864006 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066340854 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083355407 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067013782 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092709854 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067968906 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08329684 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065713215 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068728063 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081917346 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063588878 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.0905562 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07569731 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084197264 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074100049 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081740251 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068208493 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076853346 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078146185 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065374582 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082039138 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063928077 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073258538 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08411262 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075599711 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083877696 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065509792 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063846683 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084458124 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06559293 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060859099 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081344504 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070599765 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082814395 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065793236 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065860847 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087021897 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068208474 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093134442 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066355722 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083966808 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06721672 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063834218 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08258207 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066056851 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086191292 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067382253 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064614327 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081240614 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066739893 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066919916 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084514827 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066303492 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084877283 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073362452 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08301305 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069540842 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069953008 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081174769 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069548509 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083291255 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066505779 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066087144 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087472398 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070743894 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0849528 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075167036 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083963666 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067202159 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067384223 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.0821251 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066937256 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066288688 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084222401 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066658439 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084593403 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075258778 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081000565 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070031217 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066756406 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083882242 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073828721 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084592723 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069903234 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090441087 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066811908 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068709489 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090444616 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070394376 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086938919 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068162485 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067307003 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08959506 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065975814 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089625409 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067354519 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084258163 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068098372 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064655057 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082959054 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067093259 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065533531 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089492129 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067617873 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082830173 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066842026 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080549375 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067128244 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069831845 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091063332 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069658811 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086933835 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062646711 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063475828 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084920476 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065185131 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085481662 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069641933 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071261189 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08642783 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06777873 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08317761 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075712987 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088929988 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070166506 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064613033 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087433746 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067825928 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086150488 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067386663 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067196805 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084364425 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070732264 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085189246 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066702915 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073130665 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087137605 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067908151 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085759464 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067940543 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066490743 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079090959 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067332692 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085779109 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071402629 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068389064 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084162984 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077187079 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082111054 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067736856 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086857643 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066908175 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071112156 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079044713 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068596482 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084682399 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068161125 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062240796 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083421406 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065997451 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087368941 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065832082 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06302354 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094233034 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.0759123 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086938781 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065904652 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065110948 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080028006 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062766803 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083125225 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068482759 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068758142 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09427079 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066229962 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083107761 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063075902 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066907602 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087043453 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070199367 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081124832 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063090302 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065731371 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087450024 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072751303 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08289782 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066830871 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069465179 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086281041 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064574504 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087400541 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063811173 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086924854 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079666103 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06759116 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084455955 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07273364 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090423597 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067687152 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07962314 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068122523 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069653247 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084473771 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068158096 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084760446 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081699757 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086976293 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065093074 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065718799 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086134036 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066745845 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091828885 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067715378 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066770128 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088611703 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068378757 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092668398 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07017938 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090550338 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070088657 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087337189 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066206077 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067038626 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082475148 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066173375 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085509555 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068076524 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070988803 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09170987 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065885384 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094216898 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07583766 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08615479 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064032054 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066185059 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083135076 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062549502 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085127701 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064810422 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064682705 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082660066 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066278976 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084922184 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072235085 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068444944 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084638101 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066665168 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078597053 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068889767 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069043181 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085131057 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06409419 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066889919 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085169135 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071345792 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087244137 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065290306 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085619587 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068412283 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067455611 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079734803 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073080189 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064801978 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08690442 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066670642 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084156553 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067899442 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087132409 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072064502 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06762627 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086316124 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075798169 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086409145 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064855469 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063856806 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090473942 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064938582 seconds)
  done (took 45.87806208 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107934043 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080994074 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062337742 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079826811 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075131678 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081399431 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061689258 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062514896 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080969238 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065616481 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079976334 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063025847 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089393534 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086898584 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09250601 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066935402 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079912393 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063267038 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080179038 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064010714 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088707845 seconds)
  done (took 2.451057428 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07495732 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.08887015 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074198278 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094453668 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067578676 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08914084 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072876402 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08833642 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094669929 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067678369 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094434382 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071043728 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085205986 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06763494 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085179097 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071898682 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094187251 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067914471 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088742475 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073735657 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088233209 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073905998 seconds)
  done (took 2.608824427 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067437312 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065807071 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085194854 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061667208 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065249829 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.078539307 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069990251 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.082424942 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069351974 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064905252 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082999754 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073586842 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085473785 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061418993 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066132896 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081683453 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.129727599 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069651786 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065432 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085648955 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062014784 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085903329 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062179799 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06237337 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.0826628 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070165638 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084564398 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064183025 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065881082 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083691402 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066740733 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081369941 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06741578 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066342233 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082479731 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065223539 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065501374 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08392252 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06174427 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.08162449 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067093593 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062103179 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084407488 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067782981 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064277873 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.081862681 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068233599 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083219815 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061969792 seconds)
  done (took 4.439924024 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083803799 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128084896 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086757767 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089801367 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.100318489 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09172192 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.0706715 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110230127 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063845133 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083216606 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082173873 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.101767093 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085002254 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070940918 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.087068323 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066293845 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066707799 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083594084 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069989358 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083098823 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07033659 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090154612 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.097132749 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080892749 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087938277 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065569678 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083303473 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070729773 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09755533 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071284619 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.0888099 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072468757 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100050525 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071305286 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083370534 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068414579 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100398731 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066195079 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086658375 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064135117 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086105452 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07084313 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090227813 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083349754 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084159783 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072192974 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08407653 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064232524 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097828848 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068329199 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092063239 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10021002 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070076233 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085035215 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071289415 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099783978 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066884965 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083063748 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068989636 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098047113 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06432107 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088002427 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080907406 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085579581 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073996467 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098569141 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071921065 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087820286 seconds)
  done (took 6.576362502 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075078206 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09082452 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080641013 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099883762 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091247053 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072856327 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090504463 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072987819 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08994141 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077640746 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090716375 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112094185 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069336924 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093233206 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072979146 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090758278 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073106944 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091515897 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072058229 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091608402 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090431034 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081644534 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090889107 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.099497897 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103065613 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08568994 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072883083 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090752009 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081035421 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091179971 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103289976 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072800588 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091172696 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099892761 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084682246 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090630105 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066012804 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090647715 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072786897 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090099566 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068429064 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099379187 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072056305 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086258959 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072713214 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090784998 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098847329 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084446513 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093814577 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095749889 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073952975 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099517547 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072394604 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091769987 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099159901 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106970333 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099551302 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098993853 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073155669 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10000524 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099035903 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107359259 seconds)
  done (took 6.281760681 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087431442 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093733353 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095702616 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062582846 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064476126 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089034426 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065734818 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082596779 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075423589 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093278517 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078447624 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089039338 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073344486 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095627433 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088557179 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073461757 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088392959 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070693222 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0937405 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070334196 seconds)
  done (took 2.482762845 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07654032 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102114311 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067455381 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072352185 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088291895 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071843323 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087981016 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069703555 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085557221 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069300232 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094441882 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07589542 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085201738 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073510415 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094905107 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072704973 seconds)
  done (took 2.143023243 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078198286 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.094680081 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080987747 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086303868 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065329799 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081902499 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066117169 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062034645 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081526998 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081467152 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085375323 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069128127 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085211323 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064906492 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062872165 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087226697 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063193639 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082516751 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066854182 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099473613 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078293522 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.082898485 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066967562 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066945321 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086136048 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071214666 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085460235 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064374349 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083839937 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067005432 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085214394 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074363851 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.081711025 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065509751 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065058066 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082422188 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067019576 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085399096 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069583041 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065829174 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083327197 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066571809 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085282989 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068547295 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081022047 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067533134 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062853615 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09111404 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065001021 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08529111 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066698737 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087259532 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068116979 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076135608 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089991705 seconds)
  done (took 5.043423584 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080400617 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069413337 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08082081 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064621549 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087527248 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068355563 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069543995 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08661317 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068219604 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082797873 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068479504 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087376673 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068638455 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069279682 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086621075 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070161052 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080185657 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068068806 seconds)
  done (took 2.218121124 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071639829 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066637589 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09253661 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067022832 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084310575 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068616127 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062057365 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084001232 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065048394 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084805088 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066284325 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068448004 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083370134 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06942924 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085053452 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067081478 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068433415 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083584838 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066781602 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080033759 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069154844 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064812395 seconds)
  done (took 2.481993608 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072240309 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092894077 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160506453 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106328624 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082489577 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.098420526 seconds)
  done (took 1.476378067 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089667336 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098363342 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067294519 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106432893 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073681062 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086172488 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06825938 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086316322 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077386155 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100367295 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068030135 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095405526 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095225397 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077569441 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092711049 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074339797 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087675517 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067938708 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085327985 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105945712 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068704912 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095060883 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067878109 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086585004 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069338306 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09477578 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076946545 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1003267 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087353027 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076608361 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092186919 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068763837 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095759909 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100408379 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070113657 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095503419 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068673516 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105213226 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074089807 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094680401 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069393405 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09343393 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094859896 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073144163 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095192408 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068620007 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091608411 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068021676 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087533418 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11135769 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07472048 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09577061 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092814295 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077674444 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094545469 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113024551 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081680733 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096051661 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092428081 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082380483 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095985535 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073676943 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09576736 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100525951 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07465208 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094869946 seconds)
  done (took 6.548123397 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084697743 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104709831 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069434128 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100332376 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095107718 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068364849 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086529655 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068961294 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087011968 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068075785 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127618306 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068671412 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095257977 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095815483 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06934692 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086914532 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069124724 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095197095 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068824814 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112406793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087596291 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078140366 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095227091 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095817807 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082452187 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093034604 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068936607 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087081583 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069034666 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086978585 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072914336 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088824739 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095207651 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068131929 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094801551 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068961333 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08643086 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073818246 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08642647 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074544756 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096003751 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104760956 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069137498 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086670896 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08141029 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0871158 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067800356 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086626381 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067878688 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086458252 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082246248 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10042804 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100502739 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095108302 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068178924 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08687244 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06912281 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086590197 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068214218 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092290628 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077580059 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086734085 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112434029 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06922056 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087151692 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077266721 seconds)
  done (took 6.439489406 seconds)
done (took 127.320558993 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210730886 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184356636 seconds)
  done (took 1.260140249 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068009327 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094937368 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09684821 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128933122 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085946735 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10000171 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11767961 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078605711 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066990021 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085089765 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06655698 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087619595 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132054554 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066386431 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085216487 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06876103 seconds)
  done (took 2.300835437 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101332479 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.193779521 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107514533 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065278485 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097800833 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077932745 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084396667 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076304969 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093163646 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065452586 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076838079 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094084487 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064344543 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094673226 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074798122 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097627184 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064903401 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096784907 seconds)
  done (took 2.50214626 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102582465 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139742831 seconds)
  done (took 1.115235867 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.19807247 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.121535842 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201237538 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.409339572 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205188049 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.274166484 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.170375964 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.170322204 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154356043 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.167880539 seconds)
  done (took 2.942583953 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098813281 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169917063 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30846456 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.137005081 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086261743 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115293672 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.136990083 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089012789 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.100460438 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099899431 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080761002 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096563726 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097182597 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094651931 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074646411 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096612193 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12023329 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074281628 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095766758 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075666837 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117495512 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066996513 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093568531 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074105813 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077107877 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097361666 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065625731 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085370211 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076235266 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094027759 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07881295 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113692813 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096035904 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129196649 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081148385 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.13081081 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097464726 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072840347 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095191501 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073074986 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097257445 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077707295 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103125679 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094678241 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066373261 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077048966 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085565816 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066718583 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098741363 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077380231 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098501423 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078713895 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129106671 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096540984 seconds)
  done (took 6.184470844 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.745178215 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110262532 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09299821 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.80339931 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089568035 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104970105 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.711700417 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116369969 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208804911 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.765352198 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088793198 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096923832 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.180977425 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.234069107 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.913631637 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286222512 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.630688913 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10410317 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107934735 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131652656 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137686287 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175401114 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149728967 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437498566 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074477332 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091929367 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13706132 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.093959616 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.139158235 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.083399629 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09334853 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154696786 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.226392873 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.15466839 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095638492 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070203446 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090869441 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148181285 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242866159 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.1709994 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157273604 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067302852 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089725766 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140332014 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130982974 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067783704 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138589196 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174102547 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.14678362 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073098814 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094879305 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141576612 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138562068 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142019272 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101106636 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.272304806 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.283182763 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090917503 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098210488 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103406791 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236159952 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082618407 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.199429304 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139614657 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.16672011 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090161002 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.732926377 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145539597 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090533408 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073429099 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118252838 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093563275 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138826232 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143614221 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.368336915 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141429051 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073446543 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089852865 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208499079 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103122342 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070321101 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139879733 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094399121 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10076201 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163590215 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142618427 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146801024 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.208748522 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140039151 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.157983998 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074718019 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122853229 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093890019 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.192279237 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.173173348 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139959279 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207270514 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139050587 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141641728 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147618676 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095669007 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.14951998 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117938685 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079824284 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13674158 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.190953722 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.121771991 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082838175 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093121107 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140213756 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.1248808 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084401091 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.159362727 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.150118723 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459917256 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146173023 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087842943 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085811943 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137818014 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16126126 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075633943 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232721552 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100567663 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167825076 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119254512 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068250645 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118519398 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140006307 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076931542 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12108906 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.157282887 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077405999 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.212840475 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.188739213 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076680944 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213491031 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160426607 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074784605 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.147891323 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119103683 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145127623 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097585624 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139321089 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075256652 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772270594 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142785823 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120056383 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072896464 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.175708149 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089883085 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081879853 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103250262 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067241989 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774057108 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084624006 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100260996 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102583544 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074387093 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121443657 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135281112 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09858995 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139350928 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.180675226 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096713695 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117149925 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083239982 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.138549061 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096144295 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103077839 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084372678 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103449288 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1232627 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074247627 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103691819 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147573462 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140047485 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191599776 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.543639588 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06918815 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104617093 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.19979019 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071055101 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.261027323 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13786549 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.19758954 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141034658 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080229142 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288397797 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.141324915 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.17757529 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105385126 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151512768 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069359956 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13639086 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.140803351 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091566205 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075126329 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.138882001 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.16374439 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142042237 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.931188167 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071639933 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203309279 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.0670503 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170266543 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075902997 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095032348 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.24612124 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091266496 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145085789 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142870303 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092690241 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083392659 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.677963735 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10425653 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137575774 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093953705 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.170811032 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.1608213 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135229888 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138418286 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074541707 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.157685705 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.186323394 seconds)
  done (took 40.299399093 seconds)
done (took 57.477766681 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.255547702 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177326712 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240261555 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142625898 seconds)
  done (took 1.78331378 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142429278 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103428591 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.115561103 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085447882 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103212515 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084913561 seconds)
  done (took 1.5320174 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.400442005 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263784731 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230812418 seconds)
  done (took 1.791525242 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259192176 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210026979 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.443770242 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.295265876 seconds)
  done (took 2.229840174 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.174623159 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112750329 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067698925 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105113223 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158157599 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249748 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127542103 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186526358 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078210714 seconds)
  done (took 2.205719737 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195753123 seconds)
done (took 10.636714896 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.098632648 seconds)
    (2/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.261754429 seconds)
    (3/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079688516 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.23202886 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.206025376 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.103418034 seconds)
    (7/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.089330342 seconds)
    (8/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078287751 seconds)
    (9/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.179308275 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.09799992 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075931382 seconds)
    (12/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.214789003 seconds)
    (13/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179684178 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.169218876 seconds)
    (15/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.173214194 seconds)
    (16/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.112204715 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.118430103 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200009014 seconds)
    (19/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.1003581 seconds)
    (20/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.220969438 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.083262627 seconds)
    (22/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.136593456 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.132541762 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138137528 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.161299729 seconds)
    (26/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.190091397 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072982764 seconds)
    (28/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096979503 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080636157 seconds)
    (30/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.152877536 seconds)
    (31/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073135313 seconds)
    (32/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086012767 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106117084 seconds)
    (34/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.127461892 seconds)
    (35/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.0763503 seconds)
    (36/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112970438 seconds)
    (37/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098136958 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075176114 seconds)
    (39/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114876612 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06681467 seconds)
    (41/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.127906312 seconds)
    (42/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.154067581 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093558216 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.142133838 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093965774 seconds)
    (46/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.168322659 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.16546677 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051191221 seconds)
    (49/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.095924048 seconds)
    (50/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.229246014 seconds)
    (51/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071543 seconds)
    (52/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.098004482 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.158915728 seconds)
    (54/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140514189 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066304837 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087816602 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.165922766 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.135983649 seconds)
    (59/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073518132 seconds)
    (60/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.181555941 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135905468 seconds)
    (62/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.133333895 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.181279586 seconds)
    (64/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.098036473 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088796177 seconds)
    (66/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.070996957 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.116273122 seconds)
    (68/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072428161 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094761621 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117893033 seconds)
    (71/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.0661144 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051936921 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086077135 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.169715006 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.222743341 seconds)
    (76/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114359642 seconds)
    (77/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.136562546 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07276564 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.121329193 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.067217427 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.156725197 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074840886 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.113714911 seconds)
    (84/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109176311 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199780322 seconds)
    (86/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073825599 seconds)
    (87/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.095234321 seconds)
    (88/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111929192 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063104255 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 0.150281964 seconds)
    (91/309) benchmarking ("sort", Float64, false)...
    done (took 0.14715723 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147395198 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.197976702 seconds)
    (94/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.101250521 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093476234 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.131476232 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.116110573 seconds)
    (98/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051762459 seconds)
    (99/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090754893 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075488551 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114514251 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.10598766 seconds)
    (103/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072704446 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.096136467 seconds)
    (105/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089662885 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052934818 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.113465575 seconds)
    (108/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.179128699 seconds)
    (109/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.126680747 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135369378 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.167831252 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.131686206 seconds)
    (113/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074036804 seconds)
    (114/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064442252 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.086891453 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 0.156987683 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074928538 seconds)
    (118/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072753349 seconds)
    (119/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09446012 seconds)
    (120/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.177389952 seconds)
    (121/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.139219709 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093260362 seconds)
    (123/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074340422 seconds)
    (124/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.222175221 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11891391 seconds)
    (126/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080626781 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.136183696 seconds)
    (128/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072707308 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.099826958 seconds)
    (130/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109491162 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088872169 seconds)
    (132/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051706955 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088986091 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.073188647 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066733277 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065244611 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094703011 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090444499 seconds)
    (139/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.072568807 seconds)
    (140/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053590133 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116281372 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.17527269 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.073775156 seconds)
    (144/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051778714 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.153456528 seconds)
    (146/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052192989 seconds)
    (147/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.122770671 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072521061 seconds)
    (149/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074545971 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095226211 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.226136413 seconds)
    (152/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168307222 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.179834362 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.160993632 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.18831034 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067177335 seconds)
    (157/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062350871 seconds)
    (158/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.091550998 seconds)
    (159/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052068571 seconds)
    (160/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053329249 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052065321 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093417353 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06656565 seconds)
    (164/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.073026888 seconds)
    (165/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067730378 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097766294 seconds)
    (167/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.08836681 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067888833 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.167843799 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065629818 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.168564729 seconds)
    (172/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157659761 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052691776 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054411308 seconds)
    (175/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.121672788 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109614832 seconds)
    (177/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099390311 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.071267155 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157340232 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052112463 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072904918 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.117976574 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067504655 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099128209 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07325125 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135442288 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087934616 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065581782 seconds)
    (189/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.073408678 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054925008 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077068455 seconds)
    (192/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.07334893 seconds)
    (193/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051930129 seconds)
    (194/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079338386 seconds)
    (195/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193617956 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087640101 seconds)
    (197/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079269005 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064944206 seconds)
    (199/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091594013 seconds)
    (200/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.0534494 seconds)
    (201/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069293076 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.0988084 seconds)
    (203/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.288231373 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065428167 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.110344291 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064897154 seconds)
    (207/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.072797898 seconds)
    (208/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.169546328 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.088112446 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087503392 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096333632 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074622914 seconds)
    (213/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062977341 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.189883701 seconds)
    (215/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052650167 seconds)
    (216/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105398795 seconds)
    (217/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.098298522 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094128139 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072662176 seconds)
    (220/309) benchmarking ("sort", Int8, false)...
    done (took 0.163653858 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.190270411 seconds)
    (222/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208269886 seconds)
    (223/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067062841 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092665052 seconds)
    (225/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074871208 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.151575363 seconds)
    (227/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051684282 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064218381 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.072769554 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088696848 seconds)
    (231/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.072891059 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.135971969 seconds)
    (233/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053518779 seconds)
    (234/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103407829 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072856471 seconds)
    (236/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.072379821 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065182996 seconds)
    (238/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052875792 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.160745757 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.137308598 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.102504614 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051260054 seconds)
    (243/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.073162172 seconds)
    (244/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069744276 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06643475 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077768181 seconds)
    (247/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067046641 seconds)
    (248/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061235879 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05218374 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093533135 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.132462282 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066672219 seconds)
    (253/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051429232 seconds)
    (254/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100691873 seconds)
    (255/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051434024 seconds)
    (256/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052493188 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072681577 seconds)
    (258/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099620177 seconds)
    (259/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062771539 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086656137 seconds)
    (261/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068354351 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067035583 seconds)
    (263/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.074297685 seconds)
    (264/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062709444 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052890002 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093243891 seconds)
    (267/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067143012 seconds)
    (268/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052701756 seconds)
    (269/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.071955287 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066037472 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068831384 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.088419799 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074252953 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.109894554 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051626778 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091315688 seconds)
    (277/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095101799 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065991404 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06666193 seconds)
    (280/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.07412767 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051659185 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079431348 seconds)
    (283/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085966642 seconds)
    (284/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082736446 seconds)
    (285/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090861584 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065674948 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.110486342 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073342414 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168474833 seconds)
    (290/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07178509 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064931931 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.074266903 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064783591 seconds)
    (294/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053333027 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095484192 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065845475 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073556715 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088329715 seconds)
    (299/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051827832 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070250653 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090497185 seconds)
    (302/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051226109 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.114253536 seconds)
    (304/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072339359 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085712861 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092215644 seconds)
    (307/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067361511 seconds)
    (308/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07591528 seconds)
    (309/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.0714465 seconds)
  done (took 32.907485872 seconds)
done (took 33.817409934 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081879782 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113739647 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074505486 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.113706749 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081059952 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099412155 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073374714 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078186649 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081003228 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082465852 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100654386 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054468585 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096927915 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075569678 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096311724 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091895047 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100617329 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073038621 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074010508 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08699978 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074998052 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087584977 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069534192 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055123022 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099475344 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072829845 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07203072 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.096971773 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066458975 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088127672 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069109149 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073006315 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087279785 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079367729 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093050165 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074196532 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076021356 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098719903 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06762994 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08746957 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073640167 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066023294 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093815893 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073584784 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071312697 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093036347 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074121532 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101809479 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091571252 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089821658 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074351908 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.097613411 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077067606 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072303463 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091123421 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07415887 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091457342 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091428464 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095659442 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067790742 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073465614 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095839157 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071223199 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096161379 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074072837 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07623124 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097440008 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071987375 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096262961 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070881259 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06582834 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095386911 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069583378 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064952848 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097187998 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076508095 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085841239 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070754644 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072213129 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092779284 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065716562 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088515639 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067867928 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072377159 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088925175 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055210333 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.0704357 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093287958 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064724937 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074489403 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093611392 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073219375 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088361606 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076816654 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065866738 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092554227 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066659455 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065815623 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089675176 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070009567 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065404868 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089746446 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074924419 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089237189 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071745986 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079839567 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087848956 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072691381 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086498004 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065421876 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082040467 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097257853 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066286124 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089686696 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065156206 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073788379 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086636747 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066133542 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066302117 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08740769 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072130751 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065453892 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089178693 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073319766 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100446738 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065894426 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068992739 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089572001 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065799555 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071084918 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.08784775 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066424492 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.088828725 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062959915 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067991835 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087668911 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073023238 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068169794 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096164781 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06771429 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096590195 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070269584 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071638289 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093053552 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065225692 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059267111 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090735178 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067708496 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068507007 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088216085 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067851119 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065422075 seconds)
done (took 13.103155283 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065699383 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167081975 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.125060178 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095825264 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109226019 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066906874 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099850662 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102889131 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090574793 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126699801 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087999031 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.106706217 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113600308 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087532153 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06666613 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069798889 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.08886133 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089117261 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123004346 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.108454664 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116727972 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087300399 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119757037 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090158497 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.110509851 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103244613 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088355766 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070775604 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.09061673 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093732987 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107539346 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069360204 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066860197 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121817418 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115953639 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085586945 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087623371 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084499808 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087593939 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066336274 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113403257 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09980356 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104162818 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.104179991 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073083185 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069392193 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088928624 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086245472 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112900852 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08081464 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110612073 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132430528 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069486866 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104563931 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065650872 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109682028 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103996641 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068874289 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066796399 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090394385 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066142209 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069508054 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110294789 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114398314 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070919456 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104499201 seconds)
  done (took 7.205721328 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084486675 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115457418 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084217818 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106334734 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066001403 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067242238 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.088767331 seconds)
  done (took 1.581801604 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067289817 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088612682 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111745415 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089646299 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.107432596 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087091505 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098756379 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067031596 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.105840511 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067891316 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08812132 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126526351 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068187335 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096056057 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090912617 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089313069 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090226202 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08927036 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07015877 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112647511 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069683958 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.110124874 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068683282 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067432151 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103634722 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067816637 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137374129 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071799247 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090306384 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070455564 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065417851 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.138766101 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103290929 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078082351 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067500964 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103307522 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081626702 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087640361 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083650907 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09454902 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081077009 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067805541 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090123097 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065789938 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07167474 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100064638 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069491799 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089524518 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069930242 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087317128 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09004066 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081552722 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08904263 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071085878 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068169144 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095196867 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077138879 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090230972 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087827923 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069017327 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107149153 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083577222 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104440001 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083583909 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092894655 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08159622 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104168166 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069697368 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068595562 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093825421 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084519918 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087653792 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069507483 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078095829 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091124176 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090135636 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112702363 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069468968 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.09956127 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067143799 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067617869 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.08984137 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09055991 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093630333 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067275253 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071707002 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093844177 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065454184 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066293741 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093130807 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065645495 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090211996 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070697997 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067978754 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092383372 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084606573 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067810211 seconds)
  done (took 9.23714199 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067847092 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068967322 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091824792 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068346645 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067889124 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.090568471 seconds)
  done (took 1.443363558 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097218587 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091650384 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082065716 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.094798572 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105462739 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104621652 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083008602 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10502445 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084715485 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10144832 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082582542 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105340314 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087942824 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.095605816 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081980844 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094747817 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082994831 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098926715 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079333777 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096893656 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088737263 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096167931 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073327362 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.105943085 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070368966 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073126585 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099829561 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080430829 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101173519 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083475936 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.094723106 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071385145 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09423795 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083224052 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104138162 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073045044 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095824381 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072434461 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099621485 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070865758 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105356269 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073476911 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077984867 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094652667 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10482929 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07194125 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071735279 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099361227 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082121673 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094015329 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072139647 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094755686 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071358103 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094202814 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071837905 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105355415 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.0716396 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105508325 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073096878 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072119675 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.092671641 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071296229 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104629997 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071361666 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103666483 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07204437 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094507531 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074411517 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095737194 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073135893 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071663676 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091910586 seconds)
  done (took 7.2973966 seconds)
done (took 27.732303625 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.646712547 seconds)
  done (took 1.628654953 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.775770169 seconds)
  done (took 1.760284761 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.83810464 seconds)
  done (took 15.826352175 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.608662449 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.756806139 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.805086123 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135565592 seconds)
  done (took 3.28961743 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.884090544 seconds)
  done (took 1.892691273 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232669479 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223001886 seconds)
  done (took 1.446072702 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.729982125 seconds)
  done (took 1.727059112 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.273759075 seconds)
  done (took 2.261074575 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.317740568 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180435548 seconds)
  done (took 1.494145246 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.519094765 seconds)
  done (took 1.514809793 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.560013453 seconds)
  done (took 7.559230363 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22731876 seconds)
  done (took 1.23758077 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267190153 seconds)
  done (took 1.26713293 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.126578377 seconds)
  done (took 4.123540917 seconds)
done (took 48.018593587 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078266162 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082051945 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103840243 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078871294 seconds)
  done (took 1.335534865 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077935217 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07361052 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099952259 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073313351 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100658771 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073839923 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098461545 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077203548 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072664079 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096990041 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073149295 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095848073 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076089427 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098440452 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070679327 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076281099 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099159302 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074126542 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099651652 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073379189 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071377904 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097684878 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076271214 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095062445 seconds)
  done (took 3.026168357 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077463534 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073472297 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096955164 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073170315 seconds)
  done (took 1.325157557 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076635422 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.114770123 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088871691 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078233242 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.115428223 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110106007 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069461972 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069564025 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094178336 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077379332 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091312007 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098063821 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110075759 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077776916 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102048538 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066440385 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06853656 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110477496 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078392265 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.099929928 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06994126 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079457753 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091688308 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090596551 seconds)
  done (took 3.139518612 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076545573 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126675158 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078221774 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.11299376 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091726677 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088709082 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075052082 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.114451159 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125135626 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.090033534 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070137047 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066200967 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.09588677 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066093122 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076547426 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.131677902 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.134712349 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069000821 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120984743 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064974289 seconds)
  done (took 2.888369127 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074151814 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070171672 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088418131 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068769551 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076850379 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.095685258 seconds)
  done (took 1.488132921 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067703159 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067709657 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089792629 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066194739 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071546083 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090496323 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065607504 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067326004 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090089591 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067854955 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066474791 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088537344 seconds)
  done (took 1.908845399 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.382146812 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.091719106 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069745599 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.08768917 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071342314 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090332647 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080375108 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068297921 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113713158 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066584551 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.089943413 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068959926 seconds)
  done (took 2.294129172 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260500824 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077937637 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322250024 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167473818 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139595499 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154665289 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105594653 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138961497 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196513831 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137710111 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199152837 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223523708 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132587667 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166309723 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114142159 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132361824 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184508051 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219959278 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128821482 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198792285 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204331944 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154951613 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17964996 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126675979 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134000918 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150336411 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07207499 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104954214 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230798923 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159327672 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200566187 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138089398 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096511496 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22867257 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223379804 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194679661 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162010532 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08544736 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156713959 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16207996 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255169892 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113458526 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193224894 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132778 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104877652 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17205081 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145012523 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146748512 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135988091 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114983486 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17294223 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238287236 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165352372 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112614288 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137523823 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140903765 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142586566 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104372045 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266129483 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19454942 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159072182 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095321617 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124005736 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185659163 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158178216 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140435871 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.152233612 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119088445 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167109254 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210987723 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145617276 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172843832 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178627016 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08951053 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14655541 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194221628 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155630207 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228092257 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154902865 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074375882 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151554079 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129355595 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105918478 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144087317 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100183375 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207832813 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12409281 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138264747 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13933156 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135115198 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136358233 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193869174 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200875324 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129573037 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066848814 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130422939 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.14983551 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175407585 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113725792 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134567914 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147548811 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103639735 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165959326 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076539979 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152653731 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104250752 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151454373 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1621892 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100666929 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154480444 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102445328 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127703114 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163012818 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218602437 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115181185 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083905178 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2267561 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155289041 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131165587 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175081755 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212939372 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102831613 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128879516 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204939109 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24239627 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090244966 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222341441 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134311803 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108405356 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08870824 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15492506 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13878921 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148929902 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10766055 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.154333978 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226720667 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075639496 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120646887 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165335464 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106610543 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081323867 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13946163 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127056868 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.12125188 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101255007 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133949287 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194287323 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15465039 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132894506 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153390992 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124887442 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201147882 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11450554 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130753875 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130486202 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070888416 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.164334906 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217140451 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08041053 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226254482 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.154607737 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13084551 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147490302 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083182814 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194253876 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08023157 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09658633 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172693929 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137592209 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137706977 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185024303 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131053318 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155181599 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152475457 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18724728 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159399153 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162475947 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132498312 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088074443 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13914045 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177287318 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073573987 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120894159 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084042644 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130218256 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122763819 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084299301 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197043811 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154897672 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126844185 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140280526 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098461456 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204642534 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077873768 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157776751 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.171172791 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095708369 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.210951338 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187086621 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188719415 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101361608 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201188093 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071674839 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099377049 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092106491 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182312318 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08452817 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109786793 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145510104 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178697728 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156072667 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193037372 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112806288 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148033338 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212393482 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072341102 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143048147 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177855777 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178925276 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.131746252 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112070105 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100413141 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199536419 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135822528 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246788481 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143686113 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152479825 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181055272 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130543644 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106177634 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106236364 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192389071 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133869231 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180801211 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126755479 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11441729 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13753549 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081854269 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130845815 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154893981 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14828181 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187563541 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144806232 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160263181 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077855482 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169209856 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151453649 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150055218 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064671571 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147541665 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220917185 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120408576 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145738872 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185716698 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105276612 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153510451 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236618511 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175165461 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110497712 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142450651 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150514414 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158314259 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146731213 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169630535 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138108883 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162879829 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138080398 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111027468 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088229088 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124664184 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133544184 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096189505 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.163574544 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145319802 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095636011 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158472801 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138123934 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137521598 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145650382 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125041594 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092308683 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123531184 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235478096 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150054655 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23353732 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12753585 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179077274 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226529255 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074823163 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105246096 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.10594442 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169284447 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084767618 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187215657 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098384168 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131632235 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154587034 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17088507 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121568163 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068756855 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135674927 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188900845 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113382477 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124367589 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132969701 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22073958 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10421804 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10443029 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152424308 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131683796 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103677077 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230628654 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.086980392 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098986936 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100791273 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081380377 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157875298 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211772987 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108254867 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.131007832 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141501589 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173314349 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158646228 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129177063 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10068183 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142238897 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204247159 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156510483 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090540018 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139790501 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183290224 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186811781 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133107626 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12210554 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230825506 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185869278 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.220881968 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114997464 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118060687 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143278587 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136141743 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195636969 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083834266 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22668864 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109189579 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166638897 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131190479 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11994916 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157885272 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125253129 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089237607 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20549989 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148163454 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12414187 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081001265 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145813361 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149789981 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133539143 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100846912 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168840991 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072978359 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191843123 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201161358 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106864006 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133538528 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097359253 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107541711 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136110486 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130906128 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112924242 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.118669604 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228868032 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.116894315 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181017537 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196700864 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141939916 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167547774 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126288949 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662841342 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079158468 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211165834 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147092464 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236830143 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12406702 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146525675 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138593281 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151525537 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174267806 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13193198 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203880249 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161117245 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.147898837 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10510719 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130879717 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138097201 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092153431 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133268159 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141761786 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14378029 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.12756389 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.148900959 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154284692 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108594986 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096508236 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215259824 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145155536 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171545121 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195859115 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085591397 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146803928 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19521339 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081074164 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175270245 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188202697 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134179173 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125165731 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082043268 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131654966 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232023054 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098128013 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194083309 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152846741 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137727229 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141782104 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.170774881 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162591365 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135986505 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154876516 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122369745 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140084137 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143154542 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085067068 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104841068 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132903948 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140459878 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101027335 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12889892 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142609431 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183987609 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097150143 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097757946 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130412492 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173912575 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236568414 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115833198 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109684524 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146173766 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140638479 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144580038 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154307726 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082626169 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110318662 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108809838 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.113415503 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136489924 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142067465 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131202554 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112298133 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224932069 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111738374 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249285542 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09654662 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134338552 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069905214 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.1061153 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123422283 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09851624 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134305545 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126731348 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232241904 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097985054 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116126352 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119482115 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073683538 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11023906 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158657952 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138512445 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150474004 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125229542 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063329821 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137349489 seconds)
  done (took 71.035990368 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134141367 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.102878927 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.115918921 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.171482177 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14414629 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236862253 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.179091763 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222021585 seconds)
  done (took 2.400292863 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06849074 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116294275 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101638456 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115137829 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089492119 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068259465 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293105248 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109402037 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066202494 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.113515984 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.117644931 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091146429 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.467550047 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066149813 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093823547 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084338521 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067215296 seconds)
  done (took 3.213907419 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.424762824 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.627421504 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.448284511 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072959083 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.8916216 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.106303539 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.371463549 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161457976 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09002833 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.427841394 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.72259194 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.148824139 seconds)
  done (took 17.589075248 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07472166 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068478455 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108309524 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082941881 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097663567 seconds)
  done (took 1.527294249 seconds)
done (took 114.165521236 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07937491 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.341114375 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053306028 seconds)
  done (took 1.521465229 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082653601 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08441369 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109908863 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083248645 seconds)
  done (took 1.46203784 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074456157 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076104049 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110392878 seconds)
  done (took 1.360864579 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.275783402 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164506905 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087311063 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082359692 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077656021 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103892811 seconds)
  done (took 1.365413393 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072295404 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075043816 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09825415 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076898392 seconds)
  done (took 1.41861198 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075922484 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052036445 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055000845 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.080986778 seconds)
  done (took 1.366005253 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088732426 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105248383 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080220426 seconds)
  done (took 1.37246225 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106412008 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11164801 seconds)
  done (took 1.319437394 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080355887 seconds)
  done (took 1.176322791 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093948789 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.138865384 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.154955493 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.135466407 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164734617 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135438333 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.112667246 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088227732 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.102890775 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.115426336 seconds)
  done (took 2.343934495 seconds)
done (took 16.405311337 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077942948 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.391245698 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359863863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116149083 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668643936 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356061598 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.002761212 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11905526 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119468752 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09388115 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083351116 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674922424 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.003834369 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348488755 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.991431242 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.418651877 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675123348 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067913177 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092298394 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067903406 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.962783229 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092965873 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067238931 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067798385 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67349526 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371239739 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093869769 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.419134184 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067918694 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094861295 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354947708 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093673103 seconds)
  done (took 16.181783489 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069237067 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143121056 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072974348 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083349657 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096235626 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069400944 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097692496 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069248652 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151614025 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067622484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110211008 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06718688 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.096961427 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068282933 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087205642 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093897617 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06881253 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068287642 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093704537 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06795605 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111645144 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067447988 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068298653 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094024471 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068642185 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105751067 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068433503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068232282 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093923525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070692641 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096163404 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069240436 seconds)
  done (took 3.823531762 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115076964 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151803097 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073536108 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128363959 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113883002 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096086591 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169662554 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092261213 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153786037 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06830801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110554734 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067904082 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127016242 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06849827 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113057043 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0683383 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069248661 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094098942 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068605562 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094034469 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086838105 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093595743 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068476676 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069382246 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094362689 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08104004 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093444574 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068334134 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068860351 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095732303 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071910545 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094559475 seconds)
  done (took 4.135416172 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072192261 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074899026 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108570648 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083681295 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094961568 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072180428 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072086975 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095436687 seconds)
  done (took 1.775140453 seconds)
done (took 27.013192581 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077945872 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069608335 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098803027 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080856708 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098616556 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078720459 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067434058 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100888925 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076645852 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073017836 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101498816 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068079095 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.096980599 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067256376 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075062753 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093582392 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079773417 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098124668 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079769157 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07877607 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096010028 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076945818 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100001788 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079353629 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105210118 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079439148 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082018783 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100678863 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069689895 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095939995 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076959709 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109764179 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068734658 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079898058 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.09459785 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067669502 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067515975 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093320723 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079593236 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099532828 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070491284 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100332386 seconds)
  done (took 4.651196175 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087785992 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090904245 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111347965 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065730313 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097732813 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06556494 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.1147419 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063066905 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059494567 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114960165 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055859909 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059341375 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.088810144 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05460944 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059148606 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056228967 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.087479424 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056234442 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059150506 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.08548714 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057489729 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053842922 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087155508 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062823797 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056447636 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087538252 seconds)
  done (took 3.04812964 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075548399 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083296901 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113240221 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126799864 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131486781 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077835708 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.104906392 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.0872196 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112111644 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067218189 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071337281 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121894067 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08768193 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100610708 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067381875 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114014818 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081297368 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069580675 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100289093 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09019422 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.110704234 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078567832 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118526278 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080940626 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06720871 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096524782 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071416751 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107479992 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072348556 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076737894 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09811828 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070873262 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.095637752 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07842936 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071605961 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095822824 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089709772 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103488278 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078168262 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067754454 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.09739401 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068239922 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114426936 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111654332 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093708054 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073798904 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074906533 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103419997 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067466464 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112241235 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075820008 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067492601 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097072839 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.0670199 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093644059 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08013621 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069648985 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096654557 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076234309 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.096941165 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079701773 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071569908 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109276115 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067267599 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101708824 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066684423 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068218103 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092925408 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09094689 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068321948 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.14358556 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095322341 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068389911 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.0768075 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101958187 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073199743 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094731322 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083051556 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078201417 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097614733 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076588925 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097584382 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071220886 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086864684 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096473491 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069321866 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069510592 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100811443 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070907181 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096042372 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081608783 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067609509 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097661815 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085014877 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094169159 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069605235 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073680623 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099571719 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067759915 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10566061 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072841475 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094643841 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076525424 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067617824 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.096691815 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07751342 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.098544286 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066859101 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073255515 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101080909 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06845394 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068864167 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097237454 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068972102 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103537288 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073715292 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072204274 seconds)
  done (took 11.252497677 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.189976615 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.184976873 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070357318 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.176710798 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076260892 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.106321781 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.178826728 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096679964 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096092828 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068748872 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06854401 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129641908 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.123686784 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105678261 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105996788 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067195478 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11382313 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.10468717 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.181120505 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174379741 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115089602 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076491923 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070369623 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097271492 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069946019 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077795977 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112251148 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076557313 seconds)
  done (took 4.242654167 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08189981 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.127965092 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073464268 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088025931 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.11773558 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067959709 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.100709691 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069474308 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107377129 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079747827 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09452868 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073836762 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074605028 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.104753958 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068512585 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104982753 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077138724 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069754736 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.097778754 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073196856 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104385098 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080332402 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.098986975 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067304792 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074062868 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.093964338 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064918676 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.112390704 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067832644 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116716543 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06676805 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073940696 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108832534 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069382487 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094413664 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071773058 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071003455 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098005289 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069719654 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066220576 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093445147 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057443605 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067436057 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106950977 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074437597 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.086474447 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073492768 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073064939 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099648522 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066138579 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09729183 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070858734 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070364681 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103801803 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072349049 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073141165 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099019482 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065488326 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102589127 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070857192 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063975616 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093421047 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072435807 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066543312 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102884066 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072023496 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093518419 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071385841 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072709324 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.100692635 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071811979 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070495639 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092356425 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069845347 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099849687 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072294081 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071620604 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094018635 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067461545 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06783824 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082521013 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067211554 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054034122 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098256162 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066588088 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066762886 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097384142 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074153039 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.107450027 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06902088 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.100859319 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068664394 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066825506 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097857382 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06423034 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.0709222 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110556604 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110691549 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068306964 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066174979 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109920841 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072850397 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067435906 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084048834 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074951297 seconds)
  done (took 9.785506299 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095512458 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092960651 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097297009 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083018787 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122968474 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09306321 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10347813 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074475284 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069629792 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11222033 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068507516 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103787941 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068051903 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076782748 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124150472 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07501386 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097535395 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077070779 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072682321 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134686728 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082513295 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108592948 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080405107 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095535312 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072642438 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080135504 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.123551923 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079181645 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.105407546 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084333611 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079870102 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.122887197 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085409439 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098860052 seconds)
  done (took 4.279485712 seconds)
done (took 38.359633713 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.188945171 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.39701043 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.180445392 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.04970142 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.210949087 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.1911504 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.211722293 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.1817349 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.401341133 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.185160104 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.412786781 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.789886433 seconds)
done (took 58.528772423 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.255296244 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.326692004 seconds)
    (2/2) benchmarking "String"...
    done (took 1.455292918 seconds)
  done (took 3.910361919 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.546799315 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.071597637 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.441894386 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.186629198 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.186725098 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.495386311 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.785113582 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.04858919 seconds)
  done (took 27.345774303 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.195806718 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.542280821 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.490113764 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.492667363 seconds)
  done (took 17.853446029 seconds)
done (took 59.03911197 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.220370173 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.20397572 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.190596585 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.175057423 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.306402651 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.209623741 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.463692394 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.205545767 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.185200594 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.181629494 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.20788158 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.193373119 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.204448075 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.512236261 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.187539972 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.189697067 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.249560874 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.699857963 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.573691208 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.197549874 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.212640177 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.237912588 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.200843228 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.197978674 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.211477877 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.187122033 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.188377033 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.195739056 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.380905231 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.190392615 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.277382564 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.698477295 seconds)
  done (took 189.867499244 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.188010864 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.126417208 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.234867197 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.242206662 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.67091341 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.386267727 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.329134537 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.742283386 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.201979297 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.206103368 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.495009102 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.188516913 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.509097151 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.14806484 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.198031729 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.287593016 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.390944914 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.512392857 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.201231703 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.449867794 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.211309864 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.534552853 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.299046695 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.437723037 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.219147595 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.200351284 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.19552173 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.227179495 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.377068233 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.343431779 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.200818488 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.207263421 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.746337134 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.04209861 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.200445813 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.204317508 seconds)
  done (took 149.485422427 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.455464993 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.190444064 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.189813112 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.189855441 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.219878968 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.192009328 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.189458355 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.714521214 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.714105137 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.697745302 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.485110905 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.249839181 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.384468334 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.188185762 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283609706 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.201154409 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.189058837 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.201753291 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.218063953 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.187208021 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190127925 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.715763845 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.204556956 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.291400131 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196358762 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.191656024 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220831093 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.59011445 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189677962 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219974173 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.514719996 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.233980672 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19021405 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.467013662 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.363315115 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299512018 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.193043198 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220943617 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.191845951 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.459791979 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.191439136 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190654961 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.189593902 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.196639798 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.190130247 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.741550937 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.190661232 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.717786038 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195649932 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.066648695 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.188034069 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192067766 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.568832355 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.608565959 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.189080074 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.192223701 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.189245775 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.191440695 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.192668905 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.223591811 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.519848562 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.28894319 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.19506582 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.195577087 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221616149 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.191862973 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.283096188 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.192547377 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.448758151 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.249924793 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.402349809 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.720811333 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195313073 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287721178 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313751248 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.190687074 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.193040296 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192713468 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.193359825 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.295743148 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.192327017 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.583750821 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198387264 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.194792114 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.253532811 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.28885558 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.193079573 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.493851761 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.19279294 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.193210976 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.878333664 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.19269403 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287271125 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.190827631 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.189506384 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192258167 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.58064205 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.718836822 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.364938529 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.192929501 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.535802105 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.190616693 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.589571321 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.697867877 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.763592568 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.193892856 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301728303 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198985559 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.195506846 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.190535724 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222141212 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.19370728 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.253938497 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194820295 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.592048518 seconds)
  done (took 343.437974631 seconds)
done (took 685.378478493 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.887909376 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.872166965 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.973703996 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.870306013 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.852069562 seconds)
  done (took 10.594836841 seconds)
done (took 11.73304374 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.374954022 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.370726351 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.252606514 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.376066679 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224194638 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.391640404 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.349249595 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.215037489 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.295547247 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.26836742 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.296346519 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.242277119 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221827077 seconds)
  done (took 18.017952199 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.509425096 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.507211539 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261945996 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.511435582 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236998451 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.510792298 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.391448367 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400629474 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.392014491 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209412329 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210331187 seconds)
  done (took 16.282116644 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517248118 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.508691371 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262295781 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.515321678 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23776677 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518664732 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393411272 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.411150148 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.3869247 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.210981318 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208149441 seconds)
  done (took 16.310177802 seconds)
done (took 51.750491844 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.205524598 seconds)
  done (took 2.346063203 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.235579443 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.40084884 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.216451851 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.2086784 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.206174609 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.202668052 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.209282486 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.205490945 seconds)
  done (took 11.026467686 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.201619682 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.202454885 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.200019161 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.205884268 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.204326112 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.20081154 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.197181338 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.202111235 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.20648455 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.203899932 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.200786747 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.204458826 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.202697639 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.206806908 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20333769 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.205067777 seconds)
  done (took 20.390851582 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.200985297 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.202776396 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.20377477 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.202065876 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.201947699 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.202070941 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.200945203 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.200258826 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.202303542 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.203317388 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.2038477 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.199484719 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.201093279 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.200847436 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.200226849 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.20090262 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.201065122 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.200819224 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.203399219 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.198874011 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.200984529 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.201978476 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.202303006 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.201118827 seconds)
  done (took 29.981307487 seconds)
done (took 64.88584528 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.212341443 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.75965873 seconds)
  done (took 9.109522199 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.202172947 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.201673116 seconds)
  done (took 3.542342772 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.200685044 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.201781436 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.201988218 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.203419694 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.200717179 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.203705319 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.202305244 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.20262454 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.200268203 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.202499752 seconds)
  done (took 13.160970106 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.201853645 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.20245976 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.201382632 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.203420821 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.20208538 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.198897387 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.202461299 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.202468439 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.202756352 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.200988489 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.201025189 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.19958208 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.201678747 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.201581506 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.200995273 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.199466733 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.202838328 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.200009001 seconds)
  done (took 22.764031581 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.20188016 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.202361421 seconds)
  done (took 3.542637842 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.200961731 seconds)
    (2/7) benchmarking "second"...
    done (took 1.200561485 seconds)
    (3/7) benchmarking "month"...
    done (took 1.200860532 seconds)
    (4/7) benchmarking "year"...
    done (took 1.199215229 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.199378677 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.201131569 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.201643888 seconds)
  done (took 9.542329073 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.203581743 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.379377537 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.460807744 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.795439181 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.204502897 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.206459497 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.991154899 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.206834424 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.209765647 seconds)
  done (took 13.797027028 seconds)
done (took 76.598650548 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.201278475 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.197029398 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.0102999 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.204128299 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.212410242 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.541715725 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.249102872 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.312763913 seconds)
done (took 37.068715518 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.204374031 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.913695069 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.91138282 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.196686533 seconds)
  done (took 11.160237642 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.193923874 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.088559721 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.189592494 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.173525423 seconds)
  done (took 17.786474226 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.790188829 seconds)
    (2/2) benchmarking "read"...
    done (took 1.526979581 seconds)
  done (took 4.455902734 seconds)
done (took 40.746787252 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202879515 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.203373307 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.202350611 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.205304019 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.203602599 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.201051281 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.202938294 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.205250425 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.204224029 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.204614878 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.205903564 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.203945195 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205223293 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201571439 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203498915 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.20091088 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205175915 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.201561233 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.20206292 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201344635 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201875444 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204945825 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.203800103 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.203747534 seconds)
  done (took 30.020628236 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.20423113 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.20419916 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.204780811 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.20492917 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.20224431 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.206559277 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.20665614 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.200507087 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.206654249 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.205382876 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201430824 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.202505331 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.203172234 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.202361461 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205176436 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.201952978 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.203868244 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202815967 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206136971 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.203436351 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.20489444 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201843258 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.205019666 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206402027 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.200754506 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202556075 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.203601679 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.202845434 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205051394 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.20432898 seconds)
  done (took 37.255526462 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.2109883 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.211635802 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.206873227 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.205222309 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.205731447 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.204982447 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.206146714 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.204519207 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.206618179 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.204419526 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.205079347 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.203230229 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.205408809 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.203891888 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.206397557 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.20426169 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.208341058 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.206038069 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.205463704 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.206202667 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.205845999 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.203559622 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.205024809 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.206395011 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.205254043 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.203590951 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.204184466 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.208278123 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.20767742 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.207285092 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.207029699 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.207277213 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.207339938 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.208158592 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.207184943 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.207388482 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.212516021 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.217315575 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.20577334 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.207261881 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.207242605 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.207866724 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.207111726 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.209014786 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.205692242 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.204326031 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.207146815 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.206188019 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.207663497 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.206556283 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.206352737 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.206349258 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.205856864 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.205258213 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.20742147 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.206996991 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.207627998 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.206110776 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.207032919 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.205790119 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.20425603 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.206926579 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.205877297 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.207362998 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.206162646 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.208451899 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.206333597 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.204918794 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.204746905 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.205824011 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.208408795 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.205398454 seconds)
  done (took 88.015894414 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.20623828 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.204674358 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.205989384 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.205963012 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204158411 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.206867944 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.20738314 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208586242 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207021043 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.209456205 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208286065 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.207495067 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207799092 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.210863865 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206652278 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.205125805 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.207261385 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205432734 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.207808248 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.207211564 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207063719 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.207128748 seconds)
  done (took 27.695395915 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207080814 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.206783804 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.205921723 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20760006 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.205612578 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.208556561 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.208029729 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.209318293 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212467359 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208335806 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207306492 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209390572 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207096521 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207316467 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205121927 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.20447678 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20922674 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.205594648 seconds)
  done (took 22.877056076 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.205200411 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.206649014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.208529804 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.207200881 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.206150809 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.20996913 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20684631 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.209715617 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.208613693 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.20575935 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.210306906 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208819566 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.210959985 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206519856 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208748005 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.206378007 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.209274059 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207693117 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207993471 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206435847 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.208699065 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210096934 seconds)
  done (took 27.7216481 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209800341 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.208544633 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.207525342 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.20703627 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.205753811 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.210039256 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.209807598 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.207980656 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.20933312 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.209770157 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207936233 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.210025095 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.207671051 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.208596318 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.209391443 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207697603 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.20973735 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.208250553 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21018281 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.206167694 seconds)
  done (took 25.313753524 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.210954311 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211580085 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.211537685 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21120249 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.211872055 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.211987024 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211559521 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.211703953 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.211896192 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.211795546 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.211074295 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.211705409 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211651155 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.210175842 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212822157 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213292927 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212825802 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.211971654 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.212079138 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.212170578 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.212313265 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.212220078 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.210925614 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.213675912 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.210329485 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.212570999 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.214242884 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.212852813 seconds)
  done (took 35.079383445 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212769938 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.21131509 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.210241363 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.211913213 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.209344144 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.210876956 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.210400707 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.20989251 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.213882949 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.21005517 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.212969598 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.213635227 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.213002506 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.212526626 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.215511985 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.213839928 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212871876 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.212626409 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211703622 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211121114 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.215323934 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213119508 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.213482336 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.213196543 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212280642 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.212560484 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211294762 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.212124203 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212341728 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.211708008 seconds)
  done (took 37.518532383 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.23202255 seconds)
    (2/2) benchmarking "in"...
    done (took 1.233815578 seconds)
  done (took 3.614032324 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.209454314 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214132665 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.215363027 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.211303637 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.213087916 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.214397956 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.215202919 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211852278 seconds)
  done (took 10.852229427 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.213538122 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.213627252 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.214349414 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.214009483 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.214386111 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.214423967 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223558437 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.229677636 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.217738634 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.215486384 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.220979026 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.223633738 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.219269393 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.215953967 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.216385777 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.219414853 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.216445212 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.215953478 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.215807508 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.216321206 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.215636396 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.218617707 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.218533663 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.214602801 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.216800223 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.230818914 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.222940588 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.217048639 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.214040877 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.221539101 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.216393371 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.212876708 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.216240117 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.215385658 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.215784107 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.216807871 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227670296 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229153414 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.224004376 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.216790719 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.216646157 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.214659341 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.219051634 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.220038161 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.219298508 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.217181258 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.216942636 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.213686678 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.218108715 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.219372503 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.222802957 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217161962 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.214274382 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223270466 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.218591176 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.226050675 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.233373365 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.220622016 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.22631507 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.229323861 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.234146436 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.227205576 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.221319017 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.21716712 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22833261 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.242293905 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.22610982 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.228797707 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.215742284 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.219134688 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.226890505 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231538191 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.229540694 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.217593865 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.218078294 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.217571973 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.219098189 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218370572 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229040397 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.238136372 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.218371653 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.218742625 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.229563127 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242431635 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.219090603 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.217609879 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.219826807 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.217956487 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.219739257 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.231284826 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.236111054 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.219442985 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.218870683 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.218476059 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.224179413 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.218109525 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.217984169 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222060534 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.216084601 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.220104816 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22000393 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.223635931 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.229960005 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222512509 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.221031218 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.228443144 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.218737279 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.219274172 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.231308809 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.220100183 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.221830803 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.220807204 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.229120583 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.216067057 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.223111106 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.230882671 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.22179125 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.221703213 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.2209782 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.221966208 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23068162 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.251041718 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.221431048 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.221627888 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.227293799 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.234025627 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22319305 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.227446465 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.222556136 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.220558999 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.222532611 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.224678175 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.22456951 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.225871193 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223610853 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224444007 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.21879852 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.22253749 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.223792074 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.225029803 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.223677202 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.224489686 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.22504542 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.228226538 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.22321965 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.223466399 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.234156875 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.225261905 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.223596428 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.225108431 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.221047039 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.223879842 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.225017193 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.223026577 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.223819899 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223865567 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.222547061 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.226073485 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.224639702 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.225319342 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.225164852 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.224954106 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226586261 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.22473152 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.231005785 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.222610076 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.22051262 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.224694523 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.224861515 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.224692773 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.224374498 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.223376567 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.225511407 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.230766327 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.223396032 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.224659166 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.22958297 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224400583 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.224148666 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223950012 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.227004898 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.232684201 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.225865607 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.233304969 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.226234369 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.223635687 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.224490596 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.223743855 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.225071751 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223672303 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.226600948 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.233169792 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23816754 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.235167102 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.224948792 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.229082658 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.226275239 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.229940407 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.232021974 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.226141535 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.225437583 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224779576 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225045503 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.224962944 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.229608905 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.224690559 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.224460775 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.225826372 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.225964793 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.225607786 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226548901 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.228689881 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.227898989 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.222439724 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.226099104 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.226128822 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.22505054 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.223478442 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.226528747 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.227297617 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.225793793 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.228191754 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.238430337 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.224591594 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228312464 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228701506 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.226344283 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.223534623 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.226235203 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230489149 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.226966829 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236031504 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.242991282 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.228796175 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234418459 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.242775643 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.226734292 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.231901545 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.227650005 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.225031505 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.229017017 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.236196924 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.228715791 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.22870223 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.22672884 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228165748 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227606579 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.23588932 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.228143019 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.229604312 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.227701042 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.231520503 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.225753833 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.228370736 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.23057765 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.229962094 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23151154 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228729771 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.229211844 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.232797228 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.229656853 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.228642704 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.228693426 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.230783663 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.23630471 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.236136862 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.231556256 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.232323338 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.231020897 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.231294185 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.229516391 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.228706521 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.228258984 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243646292 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.240962508 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236434332 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.234713741 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.229818023 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237960317 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.230080134 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.234551132 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229503402 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23053989 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.230551217 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.229092081 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.227777593 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.232466567 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.231501304 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23305187 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.231087082 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.235623047 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.229735177 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.230047055 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.23211064 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.230292756 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.231611528 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.229396788 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.231413417 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.236403383 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.233366116 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.232196945 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.231372575 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241038985 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242230604 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.232742907 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.23274375 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.231586692 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.231309264 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.230848128 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.23275005 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.23564271 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.238012735 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.234804041 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.244709783 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.234306471 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243706821 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.231688509 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.234493765 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.2410147 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.229220879 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.230368672 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.232564546 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.231073267 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24097577 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.243719879 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.233988624 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.235643557 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233493006 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.233050798 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.231609719 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.230678301 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23189223 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.232998364 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243975671 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.245797232 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.237414402 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235276737 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.230432864 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.233298513 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.232398357 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.23354306 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238304584 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.233040379 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.234391789 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.231970468 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.232214761 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.231396229 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.232089892 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.23393644 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.229759199 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.233246571 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242967295 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.249293197 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.237486356 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.234006103 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.247344337 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23375152 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242372169 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.250312839 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.23388943 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.233773264 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.232502356 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.237628073 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.233260673 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.235614628 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.234227111 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.234792909 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.238763865 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.234775831 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.238278625 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.235060203 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.234125193 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.234365919 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245836294 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255410687 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.235146892 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241292622 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.233490751 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.235138989 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.239999589 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.231495789 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.23343651 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.236054851 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245304361 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243902906 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.23626703 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.235544628 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235660814 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235340262 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.235386868 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.2361981 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.237032629 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.236669483 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.239310989 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.23547539 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241909637 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.235611539 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.237269948 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23874227 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.238047915 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.248907702 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.234958063 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.237194998 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23598448 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.233543218 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.239050418 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.235235505 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.236568416 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235265658 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237497537 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.236668512 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243543187 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.24303845 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.239540054 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.235980987 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.235689066 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.236661077 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.239731947 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236012955 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.235898568 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.236663606 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.238297728 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.238181343 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.239237997 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.236020979 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.236254204 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.23784834 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236299204 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239940074 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.245021896 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238159199 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.233508504 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.235410214 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239294756 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.235690984 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.238029317 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.249132805 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240344174 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.249048045 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.248006851 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.243579538 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.237503182 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239530309 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.247081691 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.237243759 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.239444152 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.237667629 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.241251039 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.240675004 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.242429469 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238379063 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.247501888 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.239286657 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.240219587 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249748247 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.255630176 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238418253 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.240097857 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.243705644 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.241062719 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.238065801 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.240884133 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.241212535 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249553063 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.257831059 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241152814 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241308465 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.238635364 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.242702179 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245587032 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239030777 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.242401584 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.237714125 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.242694386 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240558184 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238759362 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.238953122 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.241530548 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.241544134 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.243563875 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.248749886 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.236878376 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243891451 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.242142601 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.242762394 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241460308 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241000474 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.237928522 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.238057541 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.241629648 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239598835 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.241755774 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.243835934 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.242189149 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.242883286 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.242252054 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242576827 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243275622 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.25366085 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.250744458 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.237970839 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.242499889 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.243213739 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.246566417 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242683948 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.243097444 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24218945 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.244129823 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.242276354 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241167031 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.242030084 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.246608339 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263944836 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.25600845 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242427664 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.24399614 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248880038 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.241100389 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.239638421 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.242358781 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.245777166 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.246743262 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.249522742 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.240587913 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250688758 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25861824 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.243756517 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.244822151 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.246929352 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.252679475 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.246957543 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243203093 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.242280403 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.248419144 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.265541029 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243822183 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253725028 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276191197 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.260711459 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.245699504 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.243788788 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243755145 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.243572586 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.248532736 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.242806451 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.243398146 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245722773 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.24205865 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.244629524 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251799271 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.247461907 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.245975132 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.245221986 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.244704285 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.248478467 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.241865151 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.24352553 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.245713 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.244515822 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.243135367 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.244159479 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.245539355 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258828448 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.258285021 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.243688837 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.245358779 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.242851425 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.253138602 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.249653068 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257806121 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.252457766 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.247272007 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.246546648 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.24920175 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245374106 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.242106872 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.246790533 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.246004044 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246013479 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.243476625 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.26017981 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255406785 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.253769164 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.247515437 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245934708 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.245391402 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248376797 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246279545 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246376371 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.248553963 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.248211838 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249708478 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.245450524 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.246765022 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.249695742 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.254451342 seconds)
  done (took 736.286073409 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244205363 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243473941 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.243385913 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.243779159 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243465339 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242647488 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244323617 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.244197251 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.243870151 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245194411 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.245236896 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245978867 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245699512 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.244928271 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244470806 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.245432267 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246508264 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243734623 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.245476486 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246478365 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243569139 seconds)
  done (took 27.316505526 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.24890361 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.245906535 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.245309007 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247576431 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244939738 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.248235263 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.244948139 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247785266 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247280916 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245234226 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.248232574 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248017578 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.245578784 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.245833116 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245360895 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247346032 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.248292259 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246230702 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.248507264 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.244925388 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246846404 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.24546607 seconds)
  done (took 28.607604017 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.248143414 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.250317931 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.247901932 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.247196054 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.248283807 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.246949098 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.249971642 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.24832344 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.249232476 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.251478765 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.248777823 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.250955598 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.255789097 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.25476687 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.252138275 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.250216577 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.39275943 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.250194281 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.24931529 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.249345456 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.247961441 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.258850464 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.246911473 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.245986691 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.249428956 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.249291869 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.249705619 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.250293589 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.250108742 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.2506026 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.254587965 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.250097221 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.250207203 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.252605886 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.249839094 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.252350106 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.253716389 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.252111346 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.248920549 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.251012157 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.260723116 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.273472835 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.250553686 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.261677108 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.250333572 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.25226759 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.255912832 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.260747253 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.249424874 seconds)
  done (took 62.656936303 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.25105231 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.250756106 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.249520224 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.251345451 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.252306721 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.25261227 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.253991081 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.251515298 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.250820182 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.249198815 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.252008943 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.249462664 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.249989973 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.253364322 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.25309932 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.250067157 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.24925303 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.250171039 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.249945203 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.24941128 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.251054454 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.253057445 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.252851531 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.250565292 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.252109183 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.252269367 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.25023034 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.253203868 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.251425299 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.249462472 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.251913447 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.254094442 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.253893536 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.252107114 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.251364141 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.254593072 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.255551881 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.249487475 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.253407521 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.251610193 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.253463435 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.25309448 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.254330179 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.252711606 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.248344616 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.250002697 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.250764776 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.251044063 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.252324594 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.252280538 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.254301994 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.252574658 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.254525342 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.251872203 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.252647492 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.253740316 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.252224678 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.251635199 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.255012484 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.254880619 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.253636717 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.254568532 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.251942629 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.254752858 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.255485001 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.251997754 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.253343351 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.255156184 seconds)
  done (took 86.334137156 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25352555 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.255158044 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256187302 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255703136 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.254779547 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.256313427 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256773893 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.256795712 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.257806998 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.255700115 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.25643221 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.255709455 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.253979168 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.256060629 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.256171333 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.25588731 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.256882109 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256235808 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.254920787 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254303688 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.256032597 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.256663062 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.255733507 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.256260096 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.255869715 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.255376563 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255491811 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.25717586 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256389739 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.259373269 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.257488546 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.256263306 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.256614949 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.256410473 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.259418528 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.258113738 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.256646528 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254129553 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.257283159 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.257358306 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.25701722 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257496718 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258513981 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.256008313 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.256165529 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.258065502 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.257843947 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.257761708 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.256477391 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.259555873 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.25947939 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257340111 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256939748 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.258394518 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.2600483 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.25831496 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257829661 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257340351 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257925467 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.257179273 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25795655 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.258500469 seconds)
  done (took 79.110752642 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25868588 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.258495216 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.255536402 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.256024762 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.259892455 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.256438321 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.257586919 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.259500191 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.258621701 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.258124676 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258545886 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.254258993 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255172009 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258457396 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25600273 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255591967 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255073431 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.255619447 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.259276076 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.256861806 seconds)
  done (took 26.334541135 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.256509094 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.258912582 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.256619606 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.258166807 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.259899589 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.257177679 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.259259323 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258319674 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258316979 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25940897 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.260068401 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.260270039 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2598586 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.257722136 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.260852536 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.256561428 seconds)
  done (took 21.33015163 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.257664056 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.261306696 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.258981494 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.259819912 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.258490805 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.256991366 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.2607954 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.2583676 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.258043261 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.260123141 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.259608615 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.260219514 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.25966271 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.261022613 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.256977298 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.260640363 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.258627197 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.258322333 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.26134231 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.262248969 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.258063526 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.260073624 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.262012932 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.263566702 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.258740941 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.257841282 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.260734667 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.260151653 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.25940122 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.262089749 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.258025621 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.258994949 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.25930638 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.260452986 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.263358563 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.25955093 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.262472499 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.26317451 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.262979693 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.263637026 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.262595346 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.261826477 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.261836167 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.262979592 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.259827735 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.263958071 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.26070822 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.260126754 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.259506892 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.260209914 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.262690827 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.262309766 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.261731118 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.261205967 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.265207113 seconds)
  done (took 70.5250544 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263722679 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.263719918 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.261895117 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.263705667 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.265190737 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.262166484 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.261936826 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.260345398 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259978507 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.265037208 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261479703 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.263416754 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262393874 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.263976839 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.263332494 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265146666 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.264545398 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.262722406 seconds)
  done (took 23.929482963 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.26132126 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.262947317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.26347507 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.261547498 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.261483551 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.264644805 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262214201 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.263385949 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264779709 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.263429151 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26218264 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.266777511 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26576892 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.264817076 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.262798898 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262173269 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.265345469 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265911807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.262760701 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262433077 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.267040825 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263717202 seconds)
  done (took 28.997829377 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.264844121 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.265200764 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.282482148 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.30990772 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.297899999 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.265342555 seconds)
  done (took 8.882505178 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263732662 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265553208 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262525921 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264907927 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264851166 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264017037 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261533101 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26321256 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267876833 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26610738 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2642057 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266889911 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266722385 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263284736 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267247841 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26509794 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263855956 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264669439 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264911368 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26599949 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265402636 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26576607 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264510238 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264080998 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264205134 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263423457 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265076322 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263285495 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263198922 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264767541 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265466822 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263859102 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266784537 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26489103 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268196159 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266872415 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263055616 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268106206 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266843713 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265228184 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.267196573 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266209062 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266660038 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264975902 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26685371 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265372195 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26513533 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265649251 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267244968 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267512243 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268764964 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265452259 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267981342 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267779099 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268723874 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269094356 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265224708 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264591124 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266925434 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266301363 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265885679 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267476595 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265414076 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26708528 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267809437 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266596728 seconds)
  done (took 84.733191808 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26676005 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266698274 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265989148 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268329162 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26648523 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26726081 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266429085 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266617229 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264791822 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267127749 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271139742 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266766987 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266912959 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266337918 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266986608 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266183327 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267271736 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266573544 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267487823 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269501415 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268297663 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267775611 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268932946 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268424811 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268601138 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271501474 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268589798 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268734173 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267913953 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267096094 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267389839 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268968533 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268665799 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268901493 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266956782 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267459212 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266253166 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267420787 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269125476 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271288456 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26880907 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271567506 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26756291 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269614741 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26812529 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266616743 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268864924 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267960791 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269215567 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26828662 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271247498 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271491697 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268933959 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267703319 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268482658 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268982197 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267783061 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268148226 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269600441 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271739169 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270406186 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269609653 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274077523 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270307118 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270110605 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270346465 seconds)
  done (took 84.917910658 seconds)
done (took 1717.065680378 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.261466275 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.327161267 seconds)
  done (took 13.790912111 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.433670707 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.387388355 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.270914412 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.321024386 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.265170428 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.286673811 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.271346958 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.264974878 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.269801963 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.269014051 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.272534497 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.456397305 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.275567913 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.270191739 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.267092785 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.362237085 seconds)
  done (took 42.15256028 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.299089146 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.273956256 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.382300803 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.29012657 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.298688478 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.440848002 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.326258636 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.276113427 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.432623932 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.311087768 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.724251603 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.298302067 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.276876695 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.304432947 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.290349077 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.4486717 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.505526939 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.720908603 seconds)
  done (took 29.107935434 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.690315624 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.274419632 seconds)
  done (took 9.168354706 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.275824274 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.283839666 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.293774937 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.287442422 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.313314904 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.328707097 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.32719394 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.278626994 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.268679081 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.329554408 seconds)
  done (took 64.201441416 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.293449757 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.276262887 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.27765344 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.273607123 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.267709476 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.265742163 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.272641372 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.267699395 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.603375136 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.391159653 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.284570872 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.28154185 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.27570551 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.277481216 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.267190431 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.309906782 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.408464378 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.270172279 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.272858184 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.281995997 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.274794512 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.370732945 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.310690912 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.270855695 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.391985282 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.600219818 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.276759134 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.280647957 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.390410213 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.272992062 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.2742586 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.27450738 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.276148211 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.839898707 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.774170316 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.28503915 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.295494491 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.28107768 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.269719026 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.392163476 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.276443603 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.281317374 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.267306016 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.760623091 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.425312036 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.379724421 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.481934232 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.276826614 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.272142234 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.332073825 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.273472488 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.274626359 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.303494386 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.009553024 seconds)
  done (took 107.346084099 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.265802165 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.763976493 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.435003264 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.286003961 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.105694652 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.041092261 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.264325586 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.526294854 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.273599744 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.267216076 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.5502776 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.750771415 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.268761052 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.317130039 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.77812936 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.302138665 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.268586691 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.144748801 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.267814625 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.265440811 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.672966781 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.281499059 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.263525166 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.317871414 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.301847501 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.711856354 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.619755975 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.72251965 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.271812427 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.264287068 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.713414289 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.269538464 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.274529597 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.271386112 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.530574496 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.606208107 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.581187015 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.2688884 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.281856876 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.267304919 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.282104261 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.708069178 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.595410724 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.270150669 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.268676587 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.710017598 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.27118619 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.273639362 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.275380181 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.474690015 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.028155814 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.266922283 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.610672654 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.267934845 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.610627971 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.347328398 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.302130104 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.740293669 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.26705729 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.350212508 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.270239323 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.269900514 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.268147292 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.271442668 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.268438502 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.589657425 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.675214813 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.27403804 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.593918191 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.707130651 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.269194214 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.768706614 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.187540364 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.288000604 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.310767496 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.2703424 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.943098988 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.743165541 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.300870998 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.268004424 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.585185079 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.268552738 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.534575561 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.280288561 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.270185625 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.682983444 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.287851983 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.273961651 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.267490923 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.271086094 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.036821507 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.272568129 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.538574501 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.285503743 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.269567962 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.270943017 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.2863029 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.268135977 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.271252943 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.277482138 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.767670883 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.271780354 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.391874602 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.286838867 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.27141469 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.270297001 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.276245151 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.271211506 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.493853507 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.726052431 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.275272453 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.270549698 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.269525311 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.277028037 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.575411317 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.272719189 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.559063173 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.274121077 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.271272341 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.270836693 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.077764058 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.298996015 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.273210132 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.275325358 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.109284154 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.477383301 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.289154993 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.27030844 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.272956546 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.285365291 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.510556951 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.270520932 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.327439702 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.274290959 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.953532558 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.29421045 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.311825734 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.635222377 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.280511811 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.147362462 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.288213899 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.274061998 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.570495541 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.537126004 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.590263635 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.274860913 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.27188017 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927718377 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.326948145 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.419373834 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.289930371 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.403870896 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.470207329 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.548593682 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.273928115 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.828504707 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.274596501 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.489828173 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.272010279 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.583268283 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.745956799 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.274276951 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.279517824 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.958952535 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.916922105 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.065333662 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.279281109 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.542597565 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.239396115 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.729393961 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.276017899 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.274248563 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.840927586 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.275086527 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.282277645 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.275635089 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.274794269 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.338560749 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.450126532 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.014725891 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.27645841 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.710968202 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310280029 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.273512718 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.278760673 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.276106042 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.628556277 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.296018635 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.276140006 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.277857436 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.274864786 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.283570284 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.720658301 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.22454588 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.274384827 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.429645996 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.88208169 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.277869609 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.276230846 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.931002543 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.475449855 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.796469689 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.303504319 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.562055301 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.279503146 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.314853899 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.038902534 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350896789 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.726848576 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.278497482 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.276884344 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.850075322 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.277567281 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.343153683 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.27536368 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.278772349 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.785159078 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.27604514 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.278603085 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.547739023 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.277872738 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527149583 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.276832264 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.317574782 seconds)
  done (took 1096.934125617 seconds)
done (took 1363.902618371 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.278175495 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.275097938 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.265069136 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.277447556 seconds)
  done (took 26.312689198 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.28564554 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.283973487 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.285910842 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.282360246 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.28643693 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.286056862 seconds)
  done (took 8.927440005 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.376220837 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.273468516 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.276640843 seconds)
  done (took 19.142875543 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.485512644 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.473064029 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.634335361 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.300653357 seconds)
  done (took 10.109360503 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.283972847 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.282504991 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.284910559 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.285358534 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.286365484 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.286998702 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.286228593 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.286672542 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.287698523 seconds)
  done (took 12.786456755 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.95148925 seconds)
done (took 83.445185337 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.379387307 seconds)
    (2/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.265622375 seconds)
    (3/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.347215512 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.279360464 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.961120737 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.529612516 seconds)
    (7/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.280016936 seconds)
    (8/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.387631205 seconds)
    (9/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.625456406 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.319237933 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.30488452 seconds)
    (12/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.280614667 seconds)
    (13/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.702054643 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.636144736 seconds)
    (15/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.857098913 seconds)
    (16/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.339203144 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.328263764 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.276797864 seconds)
    (19/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.288452541 seconds)
    (20/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.80182938 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.747265732 seconds)
    (22/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.267017215 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.301393852 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.309768593 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.276906018 seconds)
    (26/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.48449305 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.382234057 seconds)
    (28/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.406239141 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.281346397 seconds)
    (30/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.068743796 seconds)
    (31/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.404498945 seconds)
    (32/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.280947258 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.116394893 seconds)
    (34/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.66021418 seconds)
    (35/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.322184943 seconds)
    (36/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.279253684 seconds)
    (37/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.354277486 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.283121754 seconds)
    (39/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.336606277 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.683698622 seconds)
    (41/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.647689183 seconds)
    (42/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.848073138 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.392774881 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.809820702 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.561817196 seconds)
    (46/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.759356631 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.32292711 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.892986826 seconds)
    (49/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.402383922 seconds)
    (50/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.298727345 seconds)
    (51/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.300214078 seconds)
    (52/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.281496136 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.894949383 seconds)
    (54/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.281990244 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.147812011 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.336926113 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.440703007 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.354804621 seconds)
    (59/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.290899706 seconds)
    (60/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.564418567 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.679818273 seconds)
    (62/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.639217774 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.763238776 seconds)
    (64/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.282440167 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.311867589 seconds)
    (66/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.468357878 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.683981619 seconds)
    (68/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.378018806 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.306995793 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.84688028 seconds)
    (71/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.292201206 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.899352451 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.690009639 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.096948481 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.271196619 seconds)
    (76/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.364312011 seconds)
    (77/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.979867073 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.306948556 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.28368722 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.431463915 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.508324036 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.308101974 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.640297816 seconds)
    (84/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.670082624 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.298562314 seconds)
    (86/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.365273486 seconds)
    (87/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.40275944 seconds)
    (88/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.304380117 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.901292032 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 5.253381853 seconds)
    (91/309) benchmarking ("sort", Float64, false)...
    done (took 5.522279787 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.280634679 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.271910353 seconds)
    (94/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.419696587 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.115294838 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.006602615 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.35975012 seconds)
    (98/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.467274234 seconds)
    (99/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.345988684 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.303866391 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.29259356 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.117826177 seconds)
    (103/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.516280114 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.17386393 seconds)
    (105/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.400677254 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.135503252 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.483564859 seconds)
    (108/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.269939323 seconds)
    (109/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.637358396 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.282106017 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.299761043 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.300312053 seconds)
    (113/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.31340194 seconds)
    (114/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.369497813 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.279017402 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 1.809083415 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.30965895 seconds)
    (118/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.562985581 seconds)
    (119/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.308541722 seconds)
    (120/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.885466479 seconds)
    (121/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.131072114 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.999287859 seconds)
    (123/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.543356127 seconds)
    (124/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.485977371 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.340202868 seconds)
    (126/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.430619792 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.33027287 seconds)
    (128/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.419469386 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.851284925 seconds)
    (130/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.523314366 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.419155282 seconds)
    (132/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.614902382 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.632355735 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.435077631 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.78210248 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.027932345 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.31082734 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.303302912 seconds)
    (139/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.821335524 seconds)
    (140/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.279789153 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.515116169 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.706975264 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.673842767 seconds)
    (144/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.817370812 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.396224453 seconds)
    (146/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.08160972 seconds)
    (147/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.549215819 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.015916489 seconds)
    (149/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.308058898 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.311159785 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.656085378 seconds)
    (152/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.603074748 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.306783359 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.015530209 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.287418014 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.131449623 seconds)
    (157/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.503654057 seconds)
    (158/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.796897086 seconds)
    (159/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.588116967 seconds)
    (160/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.312688062 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.87770351 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.489933415 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.704654636 seconds)
    (164/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.14964392 seconds)
    (165/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.288343163 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.254696197 seconds)
    (167/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.2863573 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.341232417 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.601646 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.714411194 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.390535935 seconds)
    (172/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.563399969 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.282811804 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.275238604 seconds)
    (175/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.880450811 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.277808937 seconds)
    (177/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.406886441 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.009764223 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.30549995 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.576978886 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.330678556 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.338653995 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.289977774 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.345848269 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.312025468 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.366055003 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.713656345 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.179013553 seconds)
    (189/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.471870891 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.305722711 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.298803058 seconds)
    (192/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.487462398 seconds)
    (193/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.345738511 seconds)
    (194/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.435221175 seconds)
    (195/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.288153622 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.856346136 seconds)
    (197/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.002083134 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.360923827 seconds)
    (199/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.354201444 seconds)
    (200/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.603613045 seconds)
    (201/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.351133056 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.311525976 seconds)
    (203/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.372943964 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.904918984 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.662551141 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.392228441 seconds)
    (207/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.577381872 seconds)
    (208/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.09689457 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.294892892 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.634680401 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.835036864 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.502658234 seconds)
    (213/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.543541055 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.358485185 seconds)
    (215/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.290162157 seconds)
    (216/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.558096672 seconds)
    (217/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.498483745 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.985539103 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.053239065 seconds)
    (220/309) benchmarking ("sort", Int8, false)...
    done (took 4.29946071 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.290699106 seconds)
    (222/309) benchmarking ("sort", BigInt, false)...
    done (took 6.294383279 seconds)
    (223/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.368805331 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.310471223 seconds)
    (225/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.316242308 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.395371357 seconds)
    (227/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.596840446 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.330613718 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.017839922 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.137959023 seconds)
    (231/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.151177917 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.475456572 seconds)
    (233/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.279453144 seconds)
    (234/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.116714333 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.599757262 seconds)
    (236/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.603637752 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.066338473 seconds)
    (238/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.566214379 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.286740215 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.412051172 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.366799164 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.529963034 seconds)
    (243/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.281144556 seconds)
    (244/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.333522149 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.898564258 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.294053301 seconds)
    (247/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.844384437 seconds)
    (248/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.650847614 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.829884032 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.31630227 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.277900812 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.290581165 seconds)
    (253/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.613499586 seconds)
    (254/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.00526418 seconds)
    (255/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.485014131 seconds)
    (256/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.47642295 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.704116827 seconds)
    (258/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.651876447 seconds)
    (259/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.588171832 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.505808906 seconds)
    (261/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.41503554 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.37765852 seconds)
    (263/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.811054125 seconds)
    (264/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.005798117 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.001491667 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.332102431 seconds)
    (267/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.375656709 seconds)
    (268/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.486147134 seconds)
    (269/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.866550049 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.176459837 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.355000966 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.302620535 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.676324282 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.330760611 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.094541016 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.539385165 seconds)
    (277/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.319003959 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.535258792 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.305243342 seconds)
    (280/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.69499844 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.768187594 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.437738144 seconds)
    (283/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.606823592 seconds)
    (284/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.621235903 seconds)
    (285/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.398520261 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.640886873 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.163323453 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.385278675 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.292986536 seconds)
    (290/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.390539211 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.375451536 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.295174537 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.408267164 seconds)
    (294/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.87271543 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.481964661 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.084877041 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.303688317 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.003100231 seconds)
    (299/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.77420877 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.351682265 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.340518193 seconds)
    (302/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.843129048 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.732142053 seconds)
    (304/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.321801038 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.674904355 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.335382423 seconds)
    (307/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.299322634 seconds)
    (308/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.321013487 seconds)
    (309/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.313001133 seconds)
  done (took 903.528650232 seconds)
done (took 904.747000277 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.325956731 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.321629236 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.302125524 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.324962804 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.415931276 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.333649762 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.312981511 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.308408243 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.352759043 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.35398159 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.303970268 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.332711274 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.305813619 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.30594509 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.302804248 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.317812753 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.267208523 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.305797259 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.320736616 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.315153502 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.320418497 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.301385632 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.350796331 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.331656511 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.307357705 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.306621056 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.30966294 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.324558344 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.418211045 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.308385781 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.309455179 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.316530437 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.272692637 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.307785575 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.30007519 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.323543479 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.319834836 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.313747858 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.310508622 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.337901068 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.655812308 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.307989835 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.30701067 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.308027495 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.308726662 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.313106379 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.310481431 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.315178947 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.322598833 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323281436 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.615027316 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.320273575 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.310871601 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.309190236 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.319972138 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.309436736 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.310602381 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.324018631 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.328188332 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.324396897 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.277485677 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.312198389 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.31131883 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.324303059 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.315837003 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.657864343 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.302286695 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.311484293 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.630384185 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.313132614 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.659978188 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.316042159 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.311807251 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.323962396 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.340990435 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.278686038 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.305435506 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.308670867 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.316439242 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.306724478 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.318557546 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.321618193 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.31463472 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.310658851 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.324212021 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.337417639 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.321270474 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.310728273 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.317468426 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.328832142 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.318200756 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.320702867 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.312535275 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.304375768 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.322046808 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.314021844 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.312521346 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.312429812 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.315056103 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.321334239 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.631607378 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323500395 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.305044647 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.309666127 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.309284091 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.323049867 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.633401708 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.306575043 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.331497709 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.35904612 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.313887566 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.285946394 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.314845611 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.323535921 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.319616559 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.31597491 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.307613333 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.281092624 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.631287381 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.322084278 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.313035554 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.310813698 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.32759675 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.313601222 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.308058062 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.286275518 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.312254508 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.325432541 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.432067486 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.320978935 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.344021531 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.308855664 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.314948812 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.344307963 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.328520117 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.341430507 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.315903436 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.328476086 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.325784707 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.310797549 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.324051567 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.3230941 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.314800384 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.316209214 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.308617687 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.342576052 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.325290463 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323079305 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.333791477 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.434246819 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.308279365 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.286090618 seconds)
done (took 220.292173718 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.372615235 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.303984504 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.400641434 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.311251223 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.408528993 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.407942435 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.307792402 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.307206771 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.306376964 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.685923391 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.30544966 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.307865843 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.311672963 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.306054542 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.393789714 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.310613394 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.306094776 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.649617354 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.31158092 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.379733562 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.309372195 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.308599326 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.309672363 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.690410896 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.307628748 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.306916046 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.382607843 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.31019256 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.654089092 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.303309564 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.311954447 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.657372101 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.400163439 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.327379994 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.319638937 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.317513481 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.408072948 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.328988267 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.392506543 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.390756617 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.400122466 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.350180182 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.309147772 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.307091704 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.31331108 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.312764541 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.307086973 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.335936028 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.306925989 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.310920791 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.649833956 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.320781846 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.318921364 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.310647154 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.310204844 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.329725573 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.310113016 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.312135394 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.400197853 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.312078031 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.373242407 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.694533109 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.686847032 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.312410722 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.309673658 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.311898814 seconds)
  done (took 146.891604529 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.379207578 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.383960399 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.42339888 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.314384447 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.362986403 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.427867613 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.3145753 seconds)
  done (took 10.849471978 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.317905272 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.313733379 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.363002604 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.363113525 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.311405208 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.470127333 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.311712056 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.323089702 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.312150152 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.367687747 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.312541772 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.31252649 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.321486596 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.31236116 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.360742649 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.324933601 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.431115134 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.314939712 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.311693926 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.473270722 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.311249147 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.3203406 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.36498596 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.323102772 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.316762832 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.318921061 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.878958355 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.314637267 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.309817031 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.313884055 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.312620016 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.351506606 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.312825952 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.312895555 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.313695523 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.43111442 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.313388889 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.312586918 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.315453088 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.311964724 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.313182374 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.315525153 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.314006599 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.313183637 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.314619162 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.338759739 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.314280235 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.3142909 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.315193434 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.313178268 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.366835093 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.313036548 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.31212079 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.314016529 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.373239933 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.32058782 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.314882728 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.314381269 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.318323823 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.313138697 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.473046095 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.36210429 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.314654173 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.365590788 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.314503727 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.315278003 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.316237372 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.316603767 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369235185 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.318137579 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.363025188 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.314787615 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.470681675 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.340079802 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.316818654 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.319412274 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.318623648 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.318395917 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.318749328 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.320890252 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.313461476 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.316313346 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.320952738 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.312760983 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.314591518 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.418533007 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.425450008 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.316309988 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.33076001 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.324497334 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.316641179 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.371890796 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.316635048 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.316695093 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36986087 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.432202625 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.372319858 seconds)
  done (took 151.423410392 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.322777204 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.32694182 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.319838266 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.335271753 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.317834967 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.319213417 seconds)
  done (took 9.192627855 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.320324751 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.317156077 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.317285761 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.318484075 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.31747569 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.31774699 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.320240506 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.318566899 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.321008376 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.318092589 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.320618924 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.318700092 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.322407377 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.320333043 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.320239667 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.320157663 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.320352694 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.31766015 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.321829346 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.317858975 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.424075238 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.317222796 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.320277862 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.318685823 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.325449813 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.318373647 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.328638523 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.320530477 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.31995688 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.324677579 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.324613989 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.319526147 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.321451795 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.326827596 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.324593894 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.321058162 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.325056115 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.323257179 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.319025817 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.322394151 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.321946687 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.321638307 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.318852938 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.322799374 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.320713909 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.325905339 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.325839808 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.327312131 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.320837379 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.32404014 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.322773616 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.322264269 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.320786087 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.32205282 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.324391359 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.326112878 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.324662883 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.323394491 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.321921893 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.323432307 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.32313923 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.32240011 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.324427547 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.325527915 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.319142944 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.323129797 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.325040313 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.326696567 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322743067 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.322878832 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.323255579 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.320089299 seconds)
  done (took 97.52515514 seconds)
done (took 417.120289042 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.636119483 seconds)
  done (took 7.892920294 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.328715447 seconds)
  done (took 7.587559757 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.463067694 seconds)
  done (took 20.720947501 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.347911629 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.371652007 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.324537514 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.318398061 seconds)
  done (took 26.619525644 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.672035647 seconds)
  done (took 7.926474226 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.327920783 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.315922408 seconds)
  done (took 13.901829994 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.861191819 seconds)
  done (took 8.118892106 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.72240026 seconds)
  done (took 7.985619249 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.330631077 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.342990102 seconds)
  done (took 14.195483666 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.301807587 seconds)
  done (took 7.554779353 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.44240912 seconds)
  done (took 8.701860742 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.328498632 seconds)
  done (took 7.587711277 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.382781296 seconds)
  done (took 7.638090229 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.870710007 seconds)
  done (took 9.129261664 seconds)
done (took 156.814510624 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.316270396 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.318720939 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.318794114 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.319584067 seconds)
  done (took 26.530957425 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.356656438 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.356221535 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.35838691 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.369170018 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.360729832 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.357344637 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.350148739 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.349741101 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.367385761 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.360251408 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.35967299 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.361017019 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.359222606 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.351064617 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.363682156 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.35884613 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.368440394 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.359506337 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.349000961 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.361255175 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.324846191 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.368836719 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.36143858 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.325191919 seconds)
  done (took 33.817108514 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.521941417 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.397170551 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.479870817 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.378000702 seconds)
  done (took 7.033622806 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.376818844 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.37843145 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.390869377 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.429517869 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.4552774 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.390064365 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.352501606 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.346162961 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.332590498 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.380198186 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.454553931 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.396438358 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.461690941 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.325056605 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.532222026 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.324299819 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.326427676 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.380554488 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.429657887 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.442310294 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.326345343 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.377743434 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.381852217 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.39383674 seconds)
  done (took 34.645724667 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.324621654 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.334805802 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.332104175 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.325459032 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.324937487 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.326453836 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.33303963 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.326223516 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.347140872 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.325662546 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.324985103 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.326742486 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.326152804 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.324807987 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.326918622 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.339102374 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.339398012 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.326399358 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.327801771 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.331356276 seconds)
  done (took 27.85718123 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.319048059 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.174172519 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.673178074 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.574825756 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.321506343 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.319358207 seconds)
  done (took 27.644037771 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.392287224 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.520362521 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.32869254 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.663603004 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.745089834 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.330031563 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.326880541 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.552329395 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.84506249 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.843899552 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.381912003 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.392312668 seconds)
  done (took 19.586095061 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.324788019 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.324002651 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.324756087 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.339843779 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.378631745 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.33367841 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.335618489 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.320872959 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.380752856 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.38635996 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.333353521 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.380502178 seconds)
  done (took 37.427153225 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410890347 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367635613 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.293355655 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071933683 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.701785972 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.534145254 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.108068479 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.750445626 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.330937654 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599336351 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284541141 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426447875 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.577417173 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333528356 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.325898179 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.299005987 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551273165 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808317675 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32815984 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.138957761 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350135776 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.335684373 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.313826229 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.353874592 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.535700418 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.453300837 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.584601548 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.323512797 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592610167 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335717607 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335553196 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32477239 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598714872 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986288018 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420029438 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334838864 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.010325982 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.037779469 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.326172707 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.155011669 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.029220725 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327531387 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335545476 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324248897 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.257828564 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333163599 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764073759 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.33319944 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.034622594 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.326765833 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334496884 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420192744 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.328813478 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.141730912 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338198534 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326521569 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.324125448 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332172316 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895951708 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.632635499 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338569391 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.263161284 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.434476217 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.140875036 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928927442 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.42910956 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.32911465 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.330019614 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261562455 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.150332278 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344471388 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474560013 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.346840856 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.975994661 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003467245 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.307719882 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272435933 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872290191 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.32966236 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.26304429 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.555504846 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326699429 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262445277 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.272535229 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.261512104 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022173574 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335399342 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.701929168 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337287348 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.771472024 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.340685211 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34650459 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351871545 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.54858217 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.213571214 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328534359 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.047468285 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487470373 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348748524 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.760339935 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265438779 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.332115724 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583150921 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.538458871 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33623482 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.300855857 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524622403 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330062837 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.360219034 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.328540893 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.33980618 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.88250855 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34263424 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.65041316 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346228547 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.32899241 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068585847 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331820209 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.430826339 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.331973351 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568838428 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.094020266 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333383804 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412422988 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331444257 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328344941 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.265569511 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.845424084 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.329723282 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.333793574 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335948211 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.339634534 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.329781149 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273039424 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.326523428 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336168739 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.331238408 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.551910801 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332009516 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606995011 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263488082 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478930819 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.420846997 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.551219667 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.497945171 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.331636306 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587233086 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32934297 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331763348 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342679017 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349102563 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428015863 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351095488 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.331555869 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.586704659 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.33492117 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.334298249 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.267146425 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.772627646 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33726545 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.335687834 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.161969271 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885594848 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310307996 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.338434534 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221375907 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.345222451 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395494276 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335578546 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.341905471 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.069422054 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.130331063 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.338791805 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.335447727 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555288972 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341417264 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.160279431 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411441712 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.520543101 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.888071446 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345042937 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.264081468 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.042042958 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.023529076 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331043202 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.264790614 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.330814975 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340125232 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.340834092 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.555703306 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.886886988 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335089386 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.157455619 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.339285132 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343222549 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.334786277 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331457591 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.053649705 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.655522184 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336800131 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.344187505 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474333525 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.344804484 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.265854752 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.334669325 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.336655339 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332528581 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332335796 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364413648 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.165723044 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805310678 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589897986 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.009726753 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.346605526 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.26004028 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.365367843 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.340517438 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.102051167 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350632595 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.336542902 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340425762 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.343642299 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.172415441 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.005353109 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900610609 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032580454 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840616012 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267228224 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.334920611 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335930338 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.766694612 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272263716 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.899173133 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514967653 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.768182937 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279992507 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527046951 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.51646635 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072244403 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344746679 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560560474 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258368724 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.104880496 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361629336 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.546070497 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369109394 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.333327519 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.265170315 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.622389968 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561512707 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.103546745 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414095616 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779615453 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.110856408 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35226697 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.334409881 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.691718644 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504805109 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.047429776 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.506393618 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346359276 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345522932 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805310747 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.344345153 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.559966751 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949257837 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346307878 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.529715793 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273311335 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.347194784 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.34632372 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.338212199 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.572364208 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.339033039 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.589141438 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346428917 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269028008 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333878688 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854823901 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.192175516 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.341007642 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336968116 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068007584 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341009458 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608136603 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.344770082 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.046220789 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34399428 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.273008447 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269388743 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.031040353 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344405128 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313080968 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8219308 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.428547358 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.331933842 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365757901 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182724813 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.592860943 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.351432168 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894858494 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564573844 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.116926527 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359321264 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.436560978 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.135408144 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.340285697 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335857852 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.57357236 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.167015954 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.563459855 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.337736446 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.246705713 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.336048999 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551079525 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338052504 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337663631 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577538616 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.050680589 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.350014937 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036197477 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36300758 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342289971 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.256492391 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.446865357 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346650328 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419184244 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348035589 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.348589904 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.350302228 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504632578 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352323035 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341215901 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.352316647 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432898838 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.696688131 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.053593414 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.343850338 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90146891 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057965149 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.904660378 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353107058 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339835991 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348885125 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273771787 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489521209 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.566265517 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612937117 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468165414 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.485716923 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361717653 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.161418672 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359260737 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554450034 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616553432 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.234795215 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344051709 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.354612268 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.339795366 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350732046 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.551933921 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828988193 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892583478 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462028679 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34545661 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.774918432 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618344942 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340730968 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341760008 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.929370103 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.347922793 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.70251532 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.348865447 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340614885 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49079401 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.352473436 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012400223 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.354185727 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.501271522 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.114181633 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.2904254 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.598104177 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.78297421 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.354092468 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905877303 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.018293726 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608528512 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408651502 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.353506251 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.445619992 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488835754 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.339164216 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.345047466 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343589061 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211967084 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.0543886 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.353328032 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90760518 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607086532 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.338833592 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.345700871 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366671057 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.35191729 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.56866995 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052224338 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567895351 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351999961 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348874761 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.163323427 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911957115 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356433248 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279669279 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.34579237 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578357519 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.581692176 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366371418 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.796216767 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.055719302 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902683785 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.316086222 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364535458 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353192484 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.027610013 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910906842 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.06910761 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832475362 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.901822137 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343635134 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619293917 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.349140239 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34423514 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634387032 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.347250569 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.343522622 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.355495196 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.908261317 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091357769 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.346108508 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.229939269 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.281954148 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684459786 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.969767703 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284570127 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355302321 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.528244094 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348238176 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475412346 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358380104 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.34500898 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353667518 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.079366952 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.628757156 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.352119577 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.349773115 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.209857656 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357871466 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35261682 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572855754 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353907477 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.020518911 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.69888255 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600118643 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353673136 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.335581696 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.3499479 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347773284 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.331806272 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.546320996 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.570825647 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900624982 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.355154317 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.358511023 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.351354739 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.56222887 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558965194 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346554896 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374513061 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359709616 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363943005 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.260286684 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.854724558 seconds)
  done (took 1587.407812601 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.393500071 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.368924533 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.372784289 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.424351592 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.363830596 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.426180171 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.380920083 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.461035986 seconds)
  done (took 52.476386567 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.354749402 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.568809119 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.3761091 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.353029088 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.357541575 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.348101919 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.772376419 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.358434618 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.356271761 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.358162845 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.355742618 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.360484363 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.967227737 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.358268591 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.352393446 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.339085851 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.356646096 seconds)
  done (took 65.588802297 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.355603196 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.800743613 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.449040999 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.347914996 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.348449172 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.345925783 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.081011658 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.408613115 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.34713952 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.574161731 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.998282173 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.390348007 seconds)
  done (took 84.73414595 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.354602266 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.354592492 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.353389315 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.354164828 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.354748206 seconds)
  done (took 8.057442028 seconds)
done (took 2014.065831722 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.602012707 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.023118905 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.01056023 seconds)
  done (took 5.321077014 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.49736229 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.547382571 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.667035673 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.688397941 seconds)
  done (took 7.689072055 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.631272157 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.72931566 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.527111891 seconds)
  done (took 6.175052424 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.710565934 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.349306771 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.425006235 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.354154509 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.351845439 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.349838332 seconds)
  done (took 20.347451402 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.358067448 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.354853792 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.355474313 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.359967204 seconds)
  done (took 6.71669256 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.3381254 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.111371933 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.339111054 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.354074039 seconds)
  done (took 18.430007765 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.103028693 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.115398017 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.097483397 seconds)
  done (took 7.604436773 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.362379593 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.194492454 seconds)
  done (took 9.844762278 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.658194622 seconds)
  done (took 2.948289527 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.486663298 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.625057012 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.343101028 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.302385227 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.368862547 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.040680386 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.926446934 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.521535892 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.286212507 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.438483528 seconds)
  done (took 27.63032942 seconds)
done (took 126.080610501 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.032920161 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.374653755 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.559992715 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.04783246 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.58254249 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.562911823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.630384009 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.018028291 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.515974052 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.503302032 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.006613543 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.585600308 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.805051177 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.37602205 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.806996703 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.755353784 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.586795011 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.067575851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.697649831 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.929556612 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.632116602 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.645547184 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.837582133 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.667278467 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.586031659 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.519866085 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.240546473 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.756260798 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.864476471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.25829896 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.507093002 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.104416291 seconds)
  done (took 189.354217333 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.355087051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.368793941 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.356845537 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.37366908 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.355437089 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.368327029 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.366704243 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.35442881 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.365451406 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.368925612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.351530912 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.352274444 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.367968774 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.355192215 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.355314107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.382863339 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.355164422 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.356099812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.352936403 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.355547237 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.367243331 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.354855438 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.355222601 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.352946353 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.355338641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.35554831 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.355294926 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.354990839 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.355650881 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.370097848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.353367614 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.356203188 seconds)
  done (took 204.797698633 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.357805965 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.362059305 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.355999153 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.354912412 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.353400568 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.368905473 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.358294713 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.36526269 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.363879488 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.354437388 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.370134367 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.361770135 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.361347475 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.355570972 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.355716505 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.370010165 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.356154102 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.355847532 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.362942385 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.364171476 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.353210081 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.35693911 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.355312436 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.381420722 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.354689071 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.358812298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.366932173 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.353849161 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.358063404 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.359746961 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.357083712 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.359378391 seconds)
  done (took 204.820631174 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.556607713 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.36694775 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.364368281 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.306216601 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.363468619 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.365192171 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.365631671 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.555324697 seconds)
  done (took 14.540321312 seconds)
done (took 614.802893322 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.684952938 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.398222642 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.565532713 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.387627642 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.128613108 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.387683536 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.388143971 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.554552768 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.287399388 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.553531508 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.618926986 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.381054483 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.729299771 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.380496453 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.642190387 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.480268006 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.247367227 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.351833391 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.688594263 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.943309055 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.642273959 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.867323271 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.55250835 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.272497677 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.733732576 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.858588613 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.069130329 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.246367202 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.383631162 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.694299817 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.043524742 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.296486277 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.442015711 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.422806325 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.478723272 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.462415652 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.278172093 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.420907081 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.563811086 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.596936426 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.900606063 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.093839422 seconds)
  done (took 92.415672283 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.359892903 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.356750859 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.35665748 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.358058129 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.358620982 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.360174121 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.355461151 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.355889756 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.360232102 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.357288625 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.358682077 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.361228484 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.356954247 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.356805237 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.360426406 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.359285052 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.356755487 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.359314715 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.35753459 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.361490227 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.357190546 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.357984908 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.359563135 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.35827752 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.362531426 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.360113361 seconds)
  done (took 36.624302016 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.370097237 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.603650982 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.78260742 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.374253042 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.366071055 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.373338129 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.444315067 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.369134562 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.372347281 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.372548652 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.527652915 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.371421572 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.406213516 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.784509916 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.372373284 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.369879006 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.371000944 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.367055233 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.60420466 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.377640687 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.447946695 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.372519495 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.446224587 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.381052506 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.368667429 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.3687886 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.373184147 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.860312359 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.375255671 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.524112299 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.108706698 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.441039735 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.828485578 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.821794991 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.110116427 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.373907861 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.368488934 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.52842768 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.372687984 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.370792231 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.445809764 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.373631638 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.7914501 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.986749002 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.38832426 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.371008871 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.885316141 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.525471052 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.607939429 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.380602234 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.806887612 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.374030764 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.37160078 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.370713815 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.608911192 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.378540004 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.370206681 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.889968769 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.378350516 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.44757534 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.37336562 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.371207319 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.610735337 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.373745477 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.606104987 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.375088903 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.382967422 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.372631089 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.788148167 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.377614559 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.017289654 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.389893143 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.37739111 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.528114573 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.60402137 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.914801333 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.378295535 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.618585429 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.830883406 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.448965082 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.379387291 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.855891332 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.453727165 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.382061058 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.378731263 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.378476438 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.378602621 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.420786714 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.448878363 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.943345606 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.997802357 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.925793348 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.451596889 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.390441613 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.376090885 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.904412115 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.391491328 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.377122975 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.793343524 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.009229886 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.393759033 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.385530963 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.994429586 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.395050571 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.452130069 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.384056863 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.800897837 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.378377644 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.419582754 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.376022261 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.382636073 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.381252999 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.452474699 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.381222312 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.380223157 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.989737017 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.554504116 seconds)
  done (took 179.759069183 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.375903625 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.372514519 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.381913807 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.368768283 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.371301863 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.37795291 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.370747989 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.371194735 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.37625208 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.371790253 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.372218653 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.373173361 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.375135678 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.36980613 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.381551598 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.379872274 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.027223928 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.372409106 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.369016717 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.370429365 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.161196354 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.374679398 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.368694402 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.371101732 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.372544524 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.374632371 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.375027834 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.374345034 seconds)
  done (took 153.210745539 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.378334111 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.934144603 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.382152542 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.505819714 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.401708777 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.37607013 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.504535858 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.434465954 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.381368053 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.376147221 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.378054354 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.67531684 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.381342043 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.884087916 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.563439381 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.507060136 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.884470531 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.381545761 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.37835607 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.379015538 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.508191166 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.392882003 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.668682615 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.918303752 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.380266029 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.920240256 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.372949601 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.380787884 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.379210084 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.924683524 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.379318759 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.668893528 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.454003082 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.438602306 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.922437739 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.870380957 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.870449437 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.520139153 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.381189954 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.37889958 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.378743272 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.371761314 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.923033137 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.381215995 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.382670706 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.919878394 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.394300563 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.382021062 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.390849975 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.38018265 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.436075643 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.438829931 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.676128456 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.931299969 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.45365555 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.400690729 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.506256002 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.773577234 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.385539313 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.87294887 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.372623273 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.92517668 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.383285033 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.371694289 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.381680366 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.386905647 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.525378498 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.508420052 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.88878752 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.384023977 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.889125427 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.525063052 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.381206489 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.381754299 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.384642298 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.926282954 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.892456988 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.52712012 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.512525228 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.568355517 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.375125665 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.382018055 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.374661422 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.456441826 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.381184853 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.930367558 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.885530552 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.385718083 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.383149991 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.384420636 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.383498024 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.552035808 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.928973145 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.45762462 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.881310437 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.691672107 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.676027099 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.38517209 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.438962683 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.382153459 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.677190123 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.384940288 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.441586253 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.840536677 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.678317989 seconds)
  done (took 163.767677776 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.623227798 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.553723449 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.472506847 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.495600291 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.892586927 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.954569502 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.641084892 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.504932363 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.487903395 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.626627166 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.511532736 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.47579106 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.564296799 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.462382318 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.081844078 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.454348142 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.475807251 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.512481617 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.49618117 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.381058099 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.997378572 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.664330378 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.556407265 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.477506347 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.475842808 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.10472429 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.925107035 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.895259372 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.544998334 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.596149271 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.901130204 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.491650673 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.298910198 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.029357993 seconds)
  done (took 65.94282587 seconds)
done (took 693.017247633 seconds)
SAVING RESULT...
DONE!
