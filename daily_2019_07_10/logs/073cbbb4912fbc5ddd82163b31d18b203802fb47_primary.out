cset: moving following pidspec: 22025
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.273638378 seconds)
loading group "string"... done (took 0.536616477 seconds)
loading group "linalg"... done (took 6.756062771 seconds)
loading group "parallel"... done (took 0.233373137 seconds)
loading group "find"... done (took 1.096897252 seconds)
loading group "tuple"... done (took 1.671026737 seconds)
loading group "dates"... done (took 1.161479764 seconds)
loading group "micro"... done (took 0.218302267 seconds)
loading group "io"... done (took 0.979372472 seconds)
loading group "scalar"... done (took 36.872212442 seconds)
loading group "sparse"... done (took 12.632274341 seconds)
loading group "broadcast"... done (took 0.951664653 seconds)
loading group "union"... done (took 12.354299826 seconds)
loading group "simd"... done (took 4.271781134 seconds)
loading group "random"... done (took 8.526352324 seconds)
loading group "problem"... done (took 1.993387706 seconds)
loading group "array"... done (took 20.820446882 seconds)
loading group "misc"... done (took 1.724742317 seconds)
loading group "sort"... done (took 3.283115477 seconds)
loading group "collection"... done (took 17.116792373 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.511757952 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122999035 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13245904 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.135113186 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.173873401 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144706046 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12603532 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100108828 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.084900181 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155467349 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134214867 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.466072628 seconds)
done (took 5.20049544 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.2477841 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083439091 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095998991 seconds)
  done (took 1.034736888 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066440604 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121172786 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065801609 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06544014 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065492974 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064758226 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.085014324 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067002614 seconds)
  done (took 1.387761306 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073610611 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068112803 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084618388 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067970285 seconds)
  done (took 1.148769857 seconds)
done (took 4.745356669 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.84105472 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.251832014 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183434848 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.450414338 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150712203 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.18239313 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.72271552 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.383884561 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.20231244 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082330544 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.120905045 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.362152782 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124220222 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.72532183 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077400741 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106339655 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.174965037 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.481676149 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085393979 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083137784 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10391684 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131306505 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101400767 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091351666 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.156807514 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082978642 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146430468 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083059455 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083921581 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225673771 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188020106 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.731036637 seconds)
  done (took 10.81078441 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09593855 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.113728339 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068950932 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141330636 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096901856 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068711924 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069836023 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066161494 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.10610517 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144709387 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089117361 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.119221277 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064889615 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086520345 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084952745 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.222341293 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08216672 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098621709 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071056624 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091788204 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106536026 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094100736 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078736089 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09414394 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129283845 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194290489 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097434965 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113194612 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068329758 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097235682 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130312941 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127617548 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065551114 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083590318 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123889004 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111536975 seconds)
  done (took 4.566692071 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.06214283 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084086653 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.157219604 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.109127756 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.180683378 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068012595 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125199514 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082044192 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085395187 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216598329 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.152367695 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.465771381 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129164999 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101033338 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068994186 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068802301 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083734731 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.561965523 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145216564 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113208648 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103149436 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07500168 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087309082 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.748301395 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068962241 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067170204 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085442084 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059936169 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131247693 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068978644 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.156614984 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.109271036 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069800985 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121324057 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.184865883 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090567664 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153695179 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085155599 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066613302 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166909755 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091809715 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068405581 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082953094 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122302204 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123070344 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069636856 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083932204 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177472263 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067823715 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083732076 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.849959814 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167408134 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07740099 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066313188 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283436547 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085077522 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085751945 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065398422 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.239633549 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.149227093 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06824259 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084207361 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067050264 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068389006 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.763766465 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084805784 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.294537502 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071818898 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07809433 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068278754 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06586491 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092469112 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073426543 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101838469 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06820699 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068506783 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084063327 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066543914 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068195662 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108757552 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064149917 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.103185815 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208442486 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06705084 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086050527 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066416597 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085408411 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11453376 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086289744 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067631631 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116129698 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069259123 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068200411 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119827862 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067969509 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103581757 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086252458 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115670542 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083033139 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.139668048 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072597779 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.112590985 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072384406 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115790173 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095807525 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068654922 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.242879947 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064737925 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063855736 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066420329 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085379018 seconds)
    (111/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064216868 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067938934 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086109443 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080144736 seconds)
  done (took 22.476663027 seconds)
done (took 39.768491634 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.292225322 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09451351 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075426049 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.095194666 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094974449 seconds)
  done (took 1.582536077 seconds)
done (took 2.483083357 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120029118 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118618173 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064505402 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115329927 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064112727 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.120285653 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098524729 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100100233 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116460909 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065531575 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09599261 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083036308 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064650178 seconds)
  done (took 2.157308122 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084038939 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083243702 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087875528 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083478504 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063191706 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100216012 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081163626 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106035179 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081941048 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07227914 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083246016 seconds)
  done (took 1.823034721 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082555052 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083630017 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086937939 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081647646 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06330669 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099637104 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080909984 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103868127 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081712477 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09062951 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065703603 seconds)
  done (took 1.818317576 seconds)
done (took 6.688474096 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078823254 seconds)
  done (took 0.970928701 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.656537328 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.076394324 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080129493 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134934233 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.202578831 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.140152457 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.341281194 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088942861 seconds)
  done (took 9.811098192 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101164699 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088025592 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072662302 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088912448 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073119754 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069484619 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.090792132 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070075976 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086832452 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072845865 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072594194 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086388842 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069165758 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086181458 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071095708 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087489298 seconds)
  done (took 2.245396634 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091858927 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111103448 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072637277 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.094798265 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072398391 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091609372 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075631587 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.093604668 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072067465 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.090766262 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075641085 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092149823 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072517638 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083236765 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07603283 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.09357514 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071921309 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074702362 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074745912 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.093832335 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076702588 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064861902 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091292206 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074530459 seconds)
  done (took 2.968893626 seconds)
done (took 16.893421229 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114307612 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.090004877 seconds)
  done (took 1.101667379 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08281968 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100910439 seconds)
  done (took 1.083930569 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084685044 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082550017 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092653936 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097547907 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066404788 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084047315 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106794347 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06780864 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066230652 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085031031 seconds)
  done (took 1.737792703 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070458537 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095064385 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072207087 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098813697 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075720077 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082471255 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07455599 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085318097 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080325926 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063134358 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070366355 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101355922 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072243648 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103078777 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074319594 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086771067 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071871381 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066846404 seconds)
  done (took 2.348528174 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067431902 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068042111 seconds)
  done (took 1.041711177 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06855879 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063789596 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084895982 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067077449 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081642239 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06332531 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081127004 seconds)
  done (took 1.416242757 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.415277551 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111319188 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.334958489 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072104778 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102552497 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.292259154 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067890595 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070678772 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09153998 seconds)
  done (took 2.503518128 seconds)
done (took 12.136518764 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081324584 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084783492 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112818086 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.401512417 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094036924 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.084759864 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.133181289 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.23156046 seconds)
done (took 2.130981773 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126596131 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.625440304 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.411377755 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214950805 seconds)
  done (took 2.165593827 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336475038 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.110489667 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05996269 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085428779 seconds)
  done (took 1.509754768 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067656844 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070012087 seconds)
  done (took 1.049067823 seconds)
done (took 5.763551139 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068407223 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082389718 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08676479 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064183689 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084920207 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065067206 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064390394 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085614422 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067437677 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066230254 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.066166821 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068115651 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063088575 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084100117 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06681608 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064042597 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084994329 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064559665 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064021241 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084952205 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065063723 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063516643 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064488722 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065866818 seconds)
  done (took 2.655697837 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084877797 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084304958 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073934138 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071896624 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092164223 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071969107 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091140917 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067222147 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090375723 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069502576 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088065119 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071802353 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067774073 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.089586139 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068802478 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.089588778 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072892567 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0850362 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070023688 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087928499 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073233616 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067556458 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.08970446 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072279831 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.089087468 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070635492 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08688834 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068539428 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088888494 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071824809 seconds)
  done (took 3.283809313 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070731538 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064031665 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08289102 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072743067 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063880171 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083901261 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064916173 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064706724 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083946308 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065256549 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064876175 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.08328378 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06438768 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082845589 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066512903 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067666673 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098568835 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065752613 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064116635 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.084335741 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069063759 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064032321 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.083654451 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064218084 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.082342926 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065279555 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065173817 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081834617 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065693458 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064855295 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.086021952 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06852374 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064147675 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.089851893 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068151647 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063861933 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086912499 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064298303 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064994603 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082542519 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064109346 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063463774 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063500062 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069975995 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084766222 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067123471 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064688113 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084453048 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06552006 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067340358 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083342407 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064736914 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083368211 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066950097 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.0681377 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082239041 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066132711 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063491078 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084144226 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064967971 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064047412 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082491926 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067059454 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064876532 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097805833 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07185265 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082438892 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06682988 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066150011 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085170099 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067058615 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076683272 seconds)
  done (took 6.140154024 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092666119 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108336187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065530912 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084877289 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062946496 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083583793 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069329577 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064834575 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08500726 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072019328 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083723026 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066144919 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066490916 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095991815 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065728817 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084402752 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072236136 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062415728 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08373825 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.182076383 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082482861 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069621876 seconds)
  done (took 2.729377357 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.174975451 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070996001 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.126478935 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092534169 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069992145 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0924466 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071823842 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070288866 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090343582 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069119593 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087808667 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071177508 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086967189 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069471615 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087322627 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069907587 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088479538 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070500841 seconds)
  done (took 2.486420583 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07909263 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066396173 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106112896 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067387153 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086185453 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069930191 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091082777 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076969314 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087739117 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068284502 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074183951 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088122808 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06925516 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084909579 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070373031 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066898894 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.088360478 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067231173 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094180708 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072144507 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090672931 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075780984 seconds)
  done (took 2.668954493 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082422306 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067590136 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102781573 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068957384 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082154775 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065408183 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089309482 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068720703 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07063692 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.089364093 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067525355 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064791187 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069183018 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06651151 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09211722 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067268554 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087294183 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067733389 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068852493 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082387651 seconds)
  done (took 2.451068138 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088114648 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086973895 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069265076 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095252193 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069445684 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086731297 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077536764 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08669862 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069805585 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10771704 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069632212 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068200311 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074686471 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0932646 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069945824 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095714494 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07757804 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09542372 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069390422 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087552824 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089923057 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06876157 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074835847 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089477336 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06911467 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087005379 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069735206 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092294227 seconds)
  done (took 3.211857688 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068171049 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066779787 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082588527 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065499228 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064569807 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083125568 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065347389 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065033241 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085750362 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064925234 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.0665987 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085232802 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067467837 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066028617 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085746172 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06788754 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066736924 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083226986 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065019738 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064326166 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086074389 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067204444 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066107311 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083581269 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064472688 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084629469 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065622283 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064742243 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085479497 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065073052 seconds)
  done (took 3.094066471 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077880276 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073153112 seconds)
  done (took 1.08485678 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065702425 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080768134 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084389277 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070692225 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089496878 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068263555 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074904069 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069811414 seconds)
  done (took 1.535667822 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083259886 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077666884 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088195933 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081099199 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097654571 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08309039 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157800092 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087340662 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074527523 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065334702 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.101117185 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066930872 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09235728 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068646377 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072764468 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093184364 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065041421 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092054511 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070338275 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065449835 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088120619 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076318704 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088813735 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063578843 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068270223 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110035695 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097604163 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068525598 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070434805 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094708244 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073212272 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079885532 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068756746 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067595161 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.084585367 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077450361 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101645028 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07080946 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094297831 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069687562 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09693023 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063854665 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072228059 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092816789 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077893851 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086733165 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069656859 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061827234 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084679243 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070357839 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062090725 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087470147 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062527619 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0926393 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07191111 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079908867 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085926887 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069501024 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089210387 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071518797 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073176161 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067929488 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068883514 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08763742 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077566348 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07154827 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09637216 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062402202 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080953977 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066126501 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076768672 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109705553 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073595116 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087639994 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068098707 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08447214 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07097041 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068619533 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09287542 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073469023 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08719293 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07352054 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09324404 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068351955 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06961881 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095238114 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065647472 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089890827 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065811206 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082280353 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064907321 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064457209 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087745507 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078008101 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090179287 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068733623 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065091434 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094209054 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062393896 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086578321 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06934093 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067945022 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097108857 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071779827 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09343122 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076465599 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094907186 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068362952 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088523906 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06522909 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068096225 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086003255 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074910743 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061741947 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090422647 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068508822 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087264793 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076865269 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064539676 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087330504 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074789299 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091973451 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066990463 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063978549 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089840982 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067609724 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09018273 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075943076 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065738699 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061718077 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061503463 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09187117 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068469479 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070657149 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092339744 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069892456 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.081119196 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065881297 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.091724697 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077332348 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068149502 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088215147 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073920548 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087644182 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067413548 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073025362 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08911162 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067527755 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091410696 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068662416 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062830468 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09033936 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070210666 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085350754 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072012484 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070565313 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089523053 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068592965 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085771864 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075886052 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086946899 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067856021 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06751279 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085344577 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079123058 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087159141 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06350408 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065102102 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.096231967 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.0661979 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085543745 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06799055 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069892954 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087397027 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066640496 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065800427 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088553903 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077661773 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091691008 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068730078 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092781605 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079065467 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085983974 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071655396 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066970563 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088203906 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069020766 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094670035 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073996727 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072182317 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090375307 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064464002 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091930989 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075801317 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066766301 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084730426 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066368436 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091069471 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074212171 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089893117 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069232239 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066098357 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067511025 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068933998 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.09032048 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068486537 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066595026 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.094921512 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065821242 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.094498644 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069167867 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09665952 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072059007 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062549007 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09069462 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066439763 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092299972 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063545389 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065801861 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086386885 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06916227 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065969462 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069381948 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060438765 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095027067 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076280521 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067541254 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086943167 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06760048 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09310727 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070356394 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071463643 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091131004 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07480703 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097303221 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066940147 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069937546 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097666167 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067959271 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.081018587 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073735886 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06593833 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086924512 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067352611 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08483963 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071659428 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095168579 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075572647 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061253111 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090212573 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066274906 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066070351 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083621764 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072007476 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090032296 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069499464 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07458297 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088871791 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068576005 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091167663 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067801335 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066960386 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088992069 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070253926 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088046733 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069952411 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06654337 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091333013 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067289157 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084881836 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070700482 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067903379 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088518531 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073576505 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08581676 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069236671 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070415134 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088498842 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068956826 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087157681 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068189642 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071038141 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087771691 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068426134 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069219265 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082796297 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075093951 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086224191 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076115867 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067506082 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084668088 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075381094 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090057735 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07368475 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087224367 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069839682 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068331316 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087975983 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070366344 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093309559 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0666933 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077753921 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095403573 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068255161 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089970292 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06804759 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068645214 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087199024 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068663979 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087333499 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069468037 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067459227 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092522844 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071062872 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086363918 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070734274 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068269074 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088447325 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06965119 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061789885 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065945714 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066436028 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.088477571 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078290802 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067569563 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08818628 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06678594 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088407785 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067218979 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063849748 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096606317 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07693915 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067483003 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073734766 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089025969 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069310723 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098484465 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063253906 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064952064 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085205649 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066289189 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074921695 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088876208 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076754857 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087726583 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067489272 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064320934 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088728609 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066875047 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081277877 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067136131 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071617929 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087009809 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067554876 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067257292 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089795338 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069104115 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097310993 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067586337 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067992085 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088547999 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064153116 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086435936 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067538284 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070250118 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08835208 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066033238 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064552756 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088043125 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068515718 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.0891753 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068799981 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068456905 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09470963 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068073159 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090181499 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07241763 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064942323 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091239441 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067328246 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086547011 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068261571 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071274608 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090992006 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068445552 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095718541 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067818328 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068039118 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088390628 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066108015 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086478112 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068718995 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067317254 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087867851 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069288112 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094451806 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067347303 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071222372 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088111244 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069271067 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093813849 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069124867 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070940457 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094919206 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067644789 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089166732 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076736127 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091279999 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072130873 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068295037 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089149246 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072957369 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086215841 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075568389 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067721584 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088477733 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069879116 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065397898 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087544227 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067391079 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085813413 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073878385 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067593217 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087730281 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066974328 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085209308 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070014715 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070185521 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0958847 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070134958 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089562659 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06385425 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064904063 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089686556 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066434808 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069357818 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090713967 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073667418 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090552335 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068635565 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066458208 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096651882 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073285825 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091775063 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06623024 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090388833 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06978703 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069885911 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067139781 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06720158 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067485335 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070287702 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067946557 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091155491 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075573898 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070756898 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090140466 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069599896 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089195198 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068629036 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062370594 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089134499 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070438367 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092545392 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071154931 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067070754 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098774845 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0658442 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087776274 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071600522 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066743837 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093572056 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062928564 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088559515 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070021339 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068108884 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083262857 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067324171 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064736749 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091248777 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067270184 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082667761 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079132606 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09654725 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071218221 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066362544 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086746402 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063927082 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062288183 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087867466 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06900495 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090119324 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078177007 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066691489 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087782079 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06302774 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087469968 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071789274 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071206945 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085644461 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063433704 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066477142 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092208082 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072936159 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086948246 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067395554 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07014943 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090843039 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065870981 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070404904 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06372727 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070254828 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103520865 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067861971 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089098876 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075008001 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09587757 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069240168 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062535658 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067885992 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070224293 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089823559 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069092732 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068455474 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081827508 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0691135 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089937939 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066869701 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070033071 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066428928 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075099641 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091200641 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069058861 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092111232 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.0704426 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076215736 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091391887 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075046387 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090953159 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070637707 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086558136 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068950355 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065312933 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087393726 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069615009 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068104254 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094797856 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076096582 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08832012 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07803536 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097024835 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069854851 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083772967 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069010474 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067383058 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083616376 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069554867 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066057773 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086336653 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06595714 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066654248 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.090664441 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07253761 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089381741 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069361771 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066890982 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.083542885 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069997319 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089736548 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069529793 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063981972 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088740049 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069108041 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071668226 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070053961 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064251332 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09200481 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070914559 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067750586 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.084522798 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07498532 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087326425 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070708472 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066458571 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088751044 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069692993 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09058442 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074022018 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067944368 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090575905 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07092868 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069207938 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064183565 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063459505 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096131707 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066673866 seconds)
  done (took 47.001259689 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101744904 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084898675 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063434506 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062921279 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097164066 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064032199 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084627828 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064558132 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063635607 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065077744 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06183386 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085351722 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072941912 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099917768 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074930299 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089024896 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062724024 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.084448091 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063472184 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063712314 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070592433 seconds)
  done (took 2.563089199 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076615845 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070030146 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071587078 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099628842 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068488324 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093960644 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074430785 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092765065 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077789173 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089333505 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077365199 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093087334 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068191807 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.089474341 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067680917 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093149348 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076142563 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089540634 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07123894 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094998064 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072304122 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095462376 seconds)
  done (took 2.78338198 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068655746 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066310401 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088702171 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063367081 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066243452 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.08331153 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.08024345 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064698597 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069109644 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065130841 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.088858163 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066648701 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068116872 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.083440408 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068224058 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064698934 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130630498 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091655978 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066799374 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088122986 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063503403 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06893758 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.083834718 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063858565 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06582235 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091674647 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067474065 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085612861 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068343388 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06600866 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.0879125 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065340096 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068451397 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088708154 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066601393 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06553613 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088057403 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066362834 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082704252 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06594964 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068160634 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083979519 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068455165 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068344127 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086760364 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06456524 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089196554 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067848654 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062011149 seconds)
  done (took 4.644794616 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082756559 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131853945 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06744564 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087675853 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.105398412 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073942219 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093681214 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111080739 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065453488 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06494068 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080645164 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107037903 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067938262 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.094202438 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074697725 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087731447 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069207319 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065615368 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092496167 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06550552 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069728724 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071582765 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079251833 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.104674669 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071900232 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087313781 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067248325 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071459393 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101381867 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091651313 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072555703 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093681054 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082341777 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.089466656 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066893504 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089412627 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084284318 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088036157 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069828861 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084606671 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070975038 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070967579 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.094619084 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104002654 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068206847 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092698288 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068545356 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063599101 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100760375 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06892406 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09640147 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101980868 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072344837 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087544791 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072540764 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102108975 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067631179 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084971843 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072207268 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099775428 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066222239 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070639831 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10285635 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088153458 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075362225 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102323316 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072662064 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091384627 seconds)
  done (took 6.770511143 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077646449 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094426359 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082314028 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103700084 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073791698 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.096650782 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093955359 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074708929 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094482207 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078406677 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094583644 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116148018 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069936943 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097486385 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075809333 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094790288 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074783326 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09437439 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073969008 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094268476 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074221601 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079321298 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072667522 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079244732 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124494299 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069317131 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094747628 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07378794 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103265426 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094056551 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08272236 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094852514 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074966961 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102532763 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079746266 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072120095 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066152073 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097319957 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074071382 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095815671 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068737007 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104283009 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09468346 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070094806 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0953843 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07464109 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080354708 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080737729 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.100332035 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100145707 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074307094 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102996275 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074109465 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09555764 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10253956 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107781518 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103189217 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102979907 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074778976 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103032339 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10323383 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088931549 seconds)
  done (took 6.455110253 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086129644 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097113269 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077742229 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084863426 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065898771 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093029189 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065428175 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065341793 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098233288 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075537357 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099833298 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091723047 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07567678 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099778882 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071973953 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095971518 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070900415 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093435292 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075167954 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092700513 seconds)
  done (took 2.673399817 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076710915 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08344937 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.090977184 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073278937 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091822551 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073213574 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09132854 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071550031 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088051879 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071618601 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077822966 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100146342 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06750327 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09547416 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097279473 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075203255 seconds)
  done (took 2.322834842 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07713647 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.094530536 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082230905 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088385055 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067756364 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063782711 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089905332 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062892395 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063438725 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.101671571 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066995282 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.092558258 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068019435 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086850452 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065445496 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069913681 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.085645239 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064913132 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087796146 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080831791 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098745458 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067744678 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067319281 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08975765 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067333435 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094032193 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067453266 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.086411425 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066258693 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067187739 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089317301 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070936872 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085523377 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065732825 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065849479 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063648192 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06585502 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090776973 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070304442 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06681622 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087982781 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068003145 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089146814 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068692811 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063009818 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066986695 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062886953 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092483121 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065954886 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088416378 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068315917 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069465686 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089666894 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074461091 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092075185 seconds)
  done (took 5.215545197 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081485042 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070058445 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084978853 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065601422 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069640916 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067732886 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069560588 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093476073 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069448468 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086557941 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07098584 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069812698 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090836803 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071286236 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090605887 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071535947 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062988011 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091023928 seconds)
  done (took 2.378091007 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073748099 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067085217 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096310371 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068049504 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066100424 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091960177 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063772602 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088102451 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067068727 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066861319 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088459542 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070424934 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086318227 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070498026 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066708851 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088454229 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070093016 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065449052 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08923863 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06363209 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090251369 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066920525 seconds)
  done (took 2.666540661 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074916986 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092670127 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162907264 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107471015 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084174406 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.079863799 seconds)
  done (took 1.606654753 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093434508 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101852023 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068984249 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089611872 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09812831 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068339957 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091922672 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068535968 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100732407 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099060955 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07063625 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098654436 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078266337 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099929292 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095632343 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077086432 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090410571 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07054735 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067849538 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108683689 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089917235 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07841869 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090408408 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069237513 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090366178 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077535101 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099337106 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077247764 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067094178 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100056687 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075815213 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090949424 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078891955 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099447489 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070363811 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098919797 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069460281 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108300288 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095599197 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078439715 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091388948 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076049656 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09850492 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074264363 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099452327 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068737218 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095979128 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068426429 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092474739 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109943683 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07546104 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099919362 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074855089 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101253536 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099278057 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089247577 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1005422 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098393459 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076286493 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100431216 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077579795 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097454057 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09840354 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079033512 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096723069 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080520977 seconds)
  done (took 6.775784608 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083787264 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10985544 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069604888 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076493868 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075253767 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093546315 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069900025 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091627204 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06966244 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090985357 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131467892 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07069464 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098366592 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077692564 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0916111 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069537768 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090522571 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076313894 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091345661 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109795147 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070588466 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098451952 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07730892 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099616463 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099934186 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075148112 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090021072 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069371902 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090673318 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069728077 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096105061 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070748636 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098830577 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068248303 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075323343 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067358035 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093379812 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073950916 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092239167 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075276566 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100791395 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108073778 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069344519 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09179688 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078161449 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067124907 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067808387 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093115726 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069901603 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090341337 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077916332 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101020424 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098510778 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079221307 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090888236 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069937163 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090637579 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069636659 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090491343 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075859801 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099368105 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070110451 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111134487 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068989979 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068771331 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099497565 seconds)
  done (took 6.603308175 seconds)
done (took 132.714173447 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.216925921 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.203341765 seconds)
  done (took 1.426983453 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070725868 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097116539 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10099056 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129685541 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089649687 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107065284 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099568399 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.101807705 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067806422 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089390049 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068736533 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068943379 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15659814 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068493454 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06728935 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.09132544 seconds)
  done (took 2.49259488 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100662504 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.198426094 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099463871 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.089593206 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098066627 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098111538 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066272342 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099097748 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073037734 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066546745 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.096962858 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071668037 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088171215 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07253647 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094259052 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075714491 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066225139 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09668811 seconds)
  done (took 2.667451889 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103085975 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155792159 seconds)
  done (took 1.274089771 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.189077008 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.145777019 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209802264 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.387950263 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.207324169 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.286819748 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.181910583 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.180266105 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165439184 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.178381403 seconds)
  done (took 3.147237865 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101349513 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171971759 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307347909 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117725675 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.096896344 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116847 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119718609 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.102060708 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080591669 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102872186 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.100406025 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078858804 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120099047 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076502782 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096789115 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078090627 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122986443 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074110074 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098933914 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076488167 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120380626 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067545881 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075259358 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096552514 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076511834 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099272099 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067325303 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088555312 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076572335 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096016362 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08030765 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114959771 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07606959 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.131077249 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.094389605 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107050844 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076653614 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.097393708 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075449332 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095971087 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078360032 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076857027 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072738506 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101121775 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067294647 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077567118 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089856402 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067577579 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101958493 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068793829 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.101141646 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080026287 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130878089 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.089598818 seconds)
  done (took 6.272950262 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.71809204 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.128410707 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071328513 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.131918276 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119246322 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074970657 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.746690709 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114805858 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203187117 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094264134 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111465378 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073019911 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103970302 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.087062468 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.132991807 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103220073 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117536142 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072643239 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125076642 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.122346824 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069822122 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118026784 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092270262 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.401672531 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068535906 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092882827 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06939621 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071317037 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15681739 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080918924 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071335542 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167630983 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087565138 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.147581849 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090601615 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069842852 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068783461 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.104661808 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.206467506 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.159658178 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.154619965 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069526469 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068612733 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.09304806 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091318581 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090710061 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.136780649 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082631981 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.144543795 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092938654 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072408514 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091319686 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07132437 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101444288 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079973991 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103763717 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.254239708 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09056884 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071022576 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072710893 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.227718896 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08066322 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103799431 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093645218 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.180310605 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0703922 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.746520856 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088204291 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069124788 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094529661 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069601562 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093275603 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07120176 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141735475 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.381583215 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07247009 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071995427 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091848013 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.176099742 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078717019 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092325245 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.11277054 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067457646 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093564735 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071711535 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070861991 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.164399872 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082867748 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070413594 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092650315 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07149774 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091359344 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069261986 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.189243928 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.103944728 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081705789 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.183230198 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092440948 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.137424764 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081761925 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070446981 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079353828 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092606503 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072848835 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070301764 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.103000463 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.119970737 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081126092 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093493044 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070526154 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.122158247 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08215347 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091327137 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080515619 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.424153315 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.104980859 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068319885 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105271936 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070160215 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.136281634 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094060758 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.208046425 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069097365 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103669617 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069368205 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091365306 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069919915 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.136778304 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093187759 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070570298 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070078985 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094802395 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082121538 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.183435185 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071979439 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.184483267 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.158120154 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.093197039 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.145097259 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069853879 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143177683 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092155806 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072060973 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071132726 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.73778397 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069890593 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069751852 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094780086 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168668939 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069998454 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102814291 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080477448 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068405244 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776186962 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081738597 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10254322 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080961832 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094648902 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069777338 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091329591 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072233711 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.135550768 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194365768 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073370103 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068520446 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101820055 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.136563028 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068649174 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102735032 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079198263 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103186229 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069687472 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093714536 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08329976 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143773995 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.103125007 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.162214606 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.554846722 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070172983 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.1010019 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.170408983 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06925529 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110497273 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069638289 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.10733708 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.13736989 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101177764 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.257368638 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.138687593 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.163861449 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08190989 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10681728 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068326708 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092587285 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081297542 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091836336 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071360385 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.102255108 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072787369 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070566421 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108627631 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069757248 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202503156 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090971762 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080836368 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09186903 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071611251 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107358694 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070735069 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071441557 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104350772 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071332142 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103239158 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.814264416 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101646926 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070333395 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071090983 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.161360927 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141269381 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069622917 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093606343 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070712609 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.135613496 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.183917649 seconds)
  done (took 31.212743237 seconds)
done (took 49.505271554 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.262299836 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178526452 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.254323371 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14427808 seconds)
  done (took 1.958079099 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.147644229 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102706887 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120223778 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065813608 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.127402642 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088240518 seconds)
  done (took 1.693061613 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.394905591 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.242128083 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234065025 seconds)
  done (took 1.911920268 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.223665758 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.239711436 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.422517521 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.306185733 seconds)
  done (took 2.343178185 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.169688392 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115646219 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069042272 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082924877 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.162505258 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.214695095 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127495505 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176370016 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07993802 seconds)
  done (took 2.288569497 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195301952 seconds)
done (took 11.427351102 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.203025001 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098961983 seconds)
    (3/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.102763696 seconds)
    (4/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.193821948 seconds)
    (5/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.218381516 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.234563178 seconds)
    (7/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.144005357 seconds)
    (8/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073714069 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.108155611 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078541205 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.241896665 seconds)
    (12/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.13912226 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074612641 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.217535595 seconds)
    (15/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.187951975 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.181855236 seconds)
    (17/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.237275568 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.164266493 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080134887 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.168600495 seconds)
    (21/309) benchmarking ("sort", Float64, false)...
    done (took 0.150135623 seconds)
    (22/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.162896639 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.211461323 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.171888248 seconds)
    (25/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121630988 seconds)
    (26/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.17567509 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080590168 seconds)
    (28/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.107055862 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.136823018 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083734204 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.096836091 seconds)
    (32/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.110089862 seconds)
    (33/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.115088269 seconds)
    (34/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.164752338 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074013033 seconds)
    (36/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.178647177 seconds)
    (37/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091364092 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.187278584 seconds)
    (39/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076671776 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051733368 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.164339416 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.123822181 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076050346 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107900782 seconds)
    (45/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075091627 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.098105986 seconds)
    (47/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062464406 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.164646227 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093115339 seconds)
    (50/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.133366622 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07513447 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.114395228 seconds)
    (53/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.185473223 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098041979 seconds)
    (55/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.14306895 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.202201255 seconds)
    (57/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072682607 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093378131 seconds)
    (59/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05219827 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.11426515 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086095364 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.133580133 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100094712 seconds)
    (64/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.22132672 seconds)
    (65/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.110288327 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.173855403 seconds)
    (67/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.124800464 seconds)
    (68/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.141209216 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.145920124 seconds)
    (70/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.208349694 seconds)
    (71/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07580304 seconds)
    (72/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072753949 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122351637 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091530359 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.127671147 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.206585597 seconds)
    (77/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074672904 seconds)
    (78/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.10832702 seconds)
    (79/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.225133411 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.098181326 seconds)
    (81/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.107243926 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.249180839 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.067947599 seconds)
    (84/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051772593 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.17403621 seconds)
    (86/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069846804 seconds)
    (87/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.086652555 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094168642 seconds)
    (89/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052332652 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098536449 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076628625 seconds)
    (92/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.075599112 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.112851938 seconds)
    (94/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.075946093 seconds)
    (95/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079256521 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092971816 seconds)
    (97/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.121970707 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.162672488 seconds)
    (99/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.118187659 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.123567187 seconds)
    (101/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.151237221 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118004882 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066500593 seconds)
    (104/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.101195076 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067750818 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.197489628 seconds)
    (107/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070856943 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054479092 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080578126 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07309605 seconds)
    (111/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074762636 seconds)
    (112/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.10141238 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089999849 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097659979 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06704372 seconds)
    (116/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07240259 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088444612 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076674432 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.196263933 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145021975 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.114692491 seconds)
    (122/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.163590887 seconds)
    (123/309) benchmarking ("sort", Float32, false)...
    done (took 0.130106435 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.125441774 seconds)
    (125/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.412090626 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.0991265 seconds)
    (127/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052620333 seconds)
    (128/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096238539 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054218754 seconds)
    (130/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096346784 seconds)
    (131/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075348924 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.160346538 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075437618 seconds)
    (134/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052981105 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097925392 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127718259 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.078318801 seconds)
    (138/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052820524 seconds)
    (139/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051597824 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096438649 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092180648 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090925185 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089650545 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105119367 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069057516 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.076412108 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.205034963 seconds)
    (148/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073690716 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.078789227 seconds)
    (150/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213993341 seconds)
    (151/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078731316 seconds)
    (152/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.101615733 seconds)
    (153/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.184444175 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074313027 seconds)
    (155/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074049055 seconds)
    (156/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.092453125 seconds)
    (157/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079100558 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090361806 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075499481 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053221791 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089450242 seconds)
    (162/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.171445159 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09538333 seconds)
    (164/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075279427 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065754179 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093438374 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069516776 seconds)
    (168/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063393691 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.134354253 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075489765 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147397943 seconds)
    (172/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074860226 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073086403 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134733798 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.172250006 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068083222 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.092579531 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067761643 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093986367 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195312123 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.09385644 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073935493 seconds)
    (183/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052527894 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.102827303 seconds)
    (185/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069509677 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066522435 seconds)
    (187/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.129409565 seconds)
    (188/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.111093324 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08982005 seconds)
    (190/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054306005 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072986458 seconds)
    (192/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138947772 seconds)
    (193/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091035201 seconds)
    (194/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097040058 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076819506 seconds)
    (196/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.163035574 seconds)
    (197/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078838424 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086835822 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093615527 seconds)
    (200/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070364123 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053148984 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13823981 seconds)
    (203/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.183367501 seconds)
    (204/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053948309 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066881867 seconds)
    (206/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094182197 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065711718 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065280169 seconds)
    (209/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.076779597 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147882168 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198853854 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094687834 seconds)
    (213/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079688528 seconds)
    (214/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07014403 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075503087 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.099098319 seconds)
    (217/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055630743 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05194761 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092600485 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068987486 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.139415553 seconds)
    (222/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069638968 seconds)
    (223/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.196911874 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06958828 seconds)
    (225/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053299761 seconds)
    (226/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.092236867 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073801772 seconds)
    (228/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080504186 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.077174326 seconds)
    (230/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069842756 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101590842 seconds)
    (232/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.07711578 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066415191 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066680728 seconds)
    (235/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095965891 seconds)
    (236/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075414573 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110818782 seconds)
    (238/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.139901634 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.165939697 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068876617 seconds)
    (241/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051290411 seconds)
    (242/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079375699 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052060818 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051737577 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.076113136 seconds)
    (246/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063264853 seconds)
    (247/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064022716 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.19666872 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088485663 seconds)
    (250/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.129636934 seconds)
    (251/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068291539 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.116187613 seconds)
    (253/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072599508 seconds)
    (254/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06136214 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.116619652 seconds)
    (256/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066095232 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.11458638 seconds)
    (258/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073533052 seconds)
    (259/309) benchmarking ("sort", Int8, false)...
    done (took 0.166403691 seconds)
    (260/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063411934 seconds)
    (261/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051619187 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091506481 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097920574 seconds)
    (264/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.079139623 seconds)
    (265/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054732488 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053868506 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072698797 seconds)
    (268/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.09373814 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067163421 seconds)
    (270/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051266592 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.100926984 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192940646 seconds)
    (273/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053197847 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067279962 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051600532 seconds)
    (276/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078342536 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054409127 seconds)
    (278/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07491757 seconds)
    (279/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.077378773 seconds)
    (280/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080778443 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066468287 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.077355469 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139514326 seconds)
    (284/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051226075 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12649419 seconds)
    (286/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061908566 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.102189941 seconds)
    (288/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.06709479 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065248043 seconds)
    (290/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.087421376 seconds)
    (291/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067093715 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065196343 seconds)
    (293/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.076680044 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074350608 seconds)
    (295/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067736948 seconds)
    (296/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.077302582 seconds)
    (297/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06625969 seconds)
    (298/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053654745 seconds)
    (299/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072351948 seconds)
    (300/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054540699 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051965801 seconds)
    (302/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054193711 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.101622466 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053302563 seconds)
    (305/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073690975 seconds)
    (306/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114710413 seconds)
    (307/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053166603 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.098052931 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067910948 seconds)
  done (took 33.543192947 seconds)
done (took 34.589972888 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083062789 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116318445 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076953903 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092869482 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.107614721 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076961534 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.098423969 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07959925 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.106380833 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082718465 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104259324 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056218865 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074276094 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099981684 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075678305 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116941564 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079114948 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.097887831 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075224452 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065370259 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073086284 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065252637 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066780716 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.08284447 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079074807 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071869889 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072316421 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073685091 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.093581467 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067743852 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069458446 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.099298691 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066613886 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078609864 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097864983 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074591783 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099566138 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078033734 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068455331 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091490308 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075663801 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065813909 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.098446584 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075057338 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072261966 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097391244 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074371656 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104141039 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092876245 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093390747 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075410282 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076543878 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.102953227 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073137549 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095008286 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075607982 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071765189 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117347343 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074644072 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093951625 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075973333 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074255764 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.097749927 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074416716 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073717145 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074909578 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075471382 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.099170657 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076082862 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071145593 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092307734 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073659168 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068864699 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065141421 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076293076 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.104490032 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065945145 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071951003 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.099012081 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072832472 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065682445 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094235628 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068902021 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072123636 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068149264 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054890934 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069117472 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.100332677 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066525638 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.098098492 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073692623 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07322255 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.092828532 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077744748 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065607198 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070711253 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066159431 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065913741 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.096028951 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070657684 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065996058 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094598216 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076265313 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066687788 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.098008114 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080445287 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091357105 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073505898 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06513171 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090716445 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081630515 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100128277 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067491995 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068493033 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.09051821 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074859283 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065673323 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091046208 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067049031 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065758657 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.097909368 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067343804 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068729749 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.098637396 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078526507 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.090204854 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070944324 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069489843 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.091146008 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073329502 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066611138 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.091636107 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069734631 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062495005 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094059385 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067434977 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072996817 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094016945 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074699633 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067481137 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099343573 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071494217 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096645054 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072972045 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065648004 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.083521386 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070074364 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068742069 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.092336158 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068108692 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068231229 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065562449 seconds)
done (took 13.307155694 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067705818 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.171465338 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124401832 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097946896 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112744475 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067809351 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076360562 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.129648254 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093136752 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10471272 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.113334229 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086008865 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.140461159 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065030943 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.092030846 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071113172 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067323797 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.115135346 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12623392 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087948026 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.136952939 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065736687 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121979109 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09035452 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115117658 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.127949831 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068141648 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070965534 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.095919631 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093600746 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.111973518 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070940977 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066723611 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097040798 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120500829 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086050759 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.091542145 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085145343 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067058365 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.092002456 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.089532102 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124567699 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079805711 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080155042 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098828341 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070682169 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067516453 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.111265581 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090740153 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.106754203 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112231663 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106172864 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.095079199 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.0821851 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.091092463 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088244901 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107394348 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069900979 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066516523 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.094511293 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067428835 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069867735 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114628448 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.115817051 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071362015 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106593612 seconds)
  done (took 7.365950258 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08490248 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090166503 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.109313631 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083773554 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.093100905 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068584175 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066585409 seconds)
  done (took 1.70704367 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069537103 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089029086 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116323803 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090250285 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110917866 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087565992 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103180097 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068147358 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.083248238 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.095546882 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088744798 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129601809 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069538327 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.100143999 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092778179 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067751269 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117983488 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067386146 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09648112 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091600189 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094460373 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088778073 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069574045 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093597322 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082297213 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067052721 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111949961 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098568627 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070328944 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070763986 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091701238 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109273889 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107334228 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075595578 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06700783 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108319158 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082030221 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091751856 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084796232 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097248064 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083122537 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06852226 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.094829946 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066582986 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071893563 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.104279153 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069011025 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068955308 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.097091621 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08782915 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094109844 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081811953 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067728809 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.098182916 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069360202 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097477838 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079650354 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068662991 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113942509 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06991202 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109410326 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085256567 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081279763 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111339089 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070357741 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107568776 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082133546 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070080107 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068908633 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070118532 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111487736 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066528597 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068646162 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104959266 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070497654 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117067335 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091388603 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068085743 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.104870988 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06760021 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093383958 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069247222 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090055142 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097855973 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067802945 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096760848 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0724662 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065421626 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.092970565 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072525286 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066048885 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.095425829 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071458525 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06808471 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096324504 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084757207 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.094409662 seconds)
  done (took 9.494077521 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070353681 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069050359 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095423163 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069658445 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068769593 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095177449 seconds)
  done (took 1.590549451 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096192704 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095559451 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083622668 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072478499 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.132064164 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081493574 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.109292813 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105786262 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087188112 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079735439 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.10953644 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.083453023 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.114746626 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073252575 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.108194658 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073564246 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10867934 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077428073 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.104796476 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075047548 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113826246 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075325705 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074174877 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109794126 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071949095 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100551821 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078951526 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105895557 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080655654 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.106370161 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074790637 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07114685 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097801789 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079657608 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109593042 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071785295 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099810264 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072648691 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103215722 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071960482 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10726599 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076189354 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075413901 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099016797 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080461141 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.097596903 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072917548 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10352897 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082465405 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096925227 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073460553 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073089361 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097900588 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071916982 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.097031447 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081179907 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071234054 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.080980294 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07222881 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.100301889 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070382684 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.097745896 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08027179 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097642832 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081666873 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.097462202 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072448178 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073132201 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101180702 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073542329 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.098356782 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071560438 seconds)
  done (took 7.493739351 seconds)
done (took 28.758337073 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693125536 seconds)
  done (took 1.814418954 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.757793542 seconds)
  done (took 1.881472083 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.548314548 seconds)
  done (took 17.671637173 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.612375699 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.788141969 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.854757086 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159311809 seconds)
  done (took 3.537369467 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.920948736 seconds)
  done (took 2.062943237 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241407289 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22732764 seconds)
  done (took 1.597565483 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.799522229 seconds)
  done (took 1.935212059 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.263091758 seconds)
  done (took 2.39191556 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.294774807 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.1815314 seconds)
  done (took 1.616268806 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.493665128 seconds)
  done (took 1.631284096 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.981686183 seconds)
  done (took 8.123712383 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209292714 seconds)
  done (took 1.3596084 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.269032378 seconds)
  done (took 1.413529476 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.512704806 seconds)
  done (took 4.654558201 seconds)
done (took 52.823067316 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079390932 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081470049 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108606468 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079325372 seconds)
  done (took 1.485184182 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079445624 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072768922 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104453655 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073761164 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10361 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075272688 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075292804 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076549606 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072191784 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102541139 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074441218 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072897595 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075345033 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073849465 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100160241 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07714417 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102312429 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07523 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076382847 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100330744 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072355822 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075109432 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103071055 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07253802 seconds)
  done (took 3.135344496 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079339402 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073122911 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101444549 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073512154 seconds)
  done (took 1.480159868 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07946786 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091735951 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.116978956 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077546082 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.12031398 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.113237755 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070958998 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069115157 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097454656 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078565687 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068150592 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.125222662 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114436729 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078530041 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079560261 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.093363755 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069067909 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.114895771 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079569593 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077908803 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100788718 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077665246 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094769401 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091091204 seconds)
  done (took 3.334085061 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079309977 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103313072 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.105733082 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087468641 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.118630678 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06530239 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103248977 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089993538 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.152433829 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066597939 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.097195298 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067308635 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073209032 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.092599865 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078068417 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.131708955 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111060024 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069043199 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.123993268 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066838594 seconds)
  done (took 3.039350257 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075052474 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07046416 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091590973 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071060051 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078451832 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100278018 seconds)
  done (took 1.644825103 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069989135 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068027914 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093849226 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069344775 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072471074 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09423019 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067963502 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068340871 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067158366 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06664471 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066649677 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.095273255 seconds)
  done (took 2.052785358 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.401226891 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.098838434 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069831583 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.093167878 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072235708 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093610684 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082286555 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068655166 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.118483682 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067829296 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067450765 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.096713788 seconds)
  done (took 2.484302118 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264985035 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078128631 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298186862 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166823207 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141652339 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144969639 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133728567 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14323502 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174030306 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133226941 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198520481 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196548716 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137826093 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16763989 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117587784 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099833808 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215268427 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193175302 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103488907 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225614327 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175242341 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154563196 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177538108 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130811348 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136029492 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152924283 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071793911 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108908433 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230501498 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16293587 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177439709 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140486064 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123493231 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235011011 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229030614 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173691641 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164888868 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084441819 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.15829469 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164303923 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26118944 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118052471 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197094823 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137588972 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108603639 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17178595 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149182972 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.149658903 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136632024 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090907724 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204728914 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21324586 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196061067 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087960911 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141056927 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144252417 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144916048 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132275168 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24179481 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192269674 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155852545 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.099404966 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100918925 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211508777 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1627745 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.138286426 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.157641789 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122040595 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164926444 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184398243 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148125569 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2019386 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.161862856 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116022799 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121660202 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198573486 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158623944 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200617659 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154417279 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100522748 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154526594 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132951745 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082390213 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.171219712 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076440454 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234692032 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09896257 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104791778 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14528967 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138860175 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138784999 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22173676 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177978528 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131662386 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06668031 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132080536 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148721481 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179331932 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115543655 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136906288 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146985316 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081066104 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168201411 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102900945 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152015582 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076713123 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153376714 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159912822 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.104922012 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153342995 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102274579 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098653505 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164494058 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219640798 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090173184 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111352843 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197194246 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177701163 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107955305 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202137133 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189577164 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128727518 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131449989 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183926596 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240521284 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089770744 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223704182 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137280015 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084061618 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.117176581 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154543703 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142577103 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151145377 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082680485 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.148452165 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228412123 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075062229 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125150155 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163919711 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10758838 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082229867 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13357348 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129529455 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.123423574 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103000378 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103419571 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171962838 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153828548 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104048341 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157054611 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128402241 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229760303 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118561225 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101602638 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134036487 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069678319 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.16648456 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190462099 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108436941 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195684353 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.152644541 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135560879 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148638455 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110380256 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171122302 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080373209 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070924389 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205495817 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140088563 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139068639 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.182661287 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13285316 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157764305 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150840171 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166358195 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162726657 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.158630763 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134585069 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115385984 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113273753 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185840482 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074613171 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121627426 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081975217 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134242512 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125298791 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08385285 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201495081 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156864815 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128068572 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113426784 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126939364 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176740248 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105543946 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12797699 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.150496689 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123777535 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18445664 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182342957 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189990682 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102094309 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206062213 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071678621 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102117024 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091819243 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152919834 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11263096 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084684429 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148299581 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205687763 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160473591 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168963238 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141665113 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151068558 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18483917 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097818578 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11809683 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17639861 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153551947 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.131171592 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119331635 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100258351 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201512683 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110215807 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243475562 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143956406 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152670377 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214450165 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.127656156 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082556659 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136452279 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167132137 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135736659 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175854023 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129049818 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117662694 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139671102 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076355457 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130551515 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158732527 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150740024 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19449794 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116958587 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192060155 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078101152 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153078644 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151095735 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152369837 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.092534724 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150433887 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193934537 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124598216 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148519454 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213391496 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082391349 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15493028 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238129421 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176496504 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113543953 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140470004 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147425597 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159657896 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151113472 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17146896 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14134782 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165426745 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13793294 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087516069 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117495489 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099243955 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13585922 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.124559598 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139194723 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144703328 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095293759 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191431941 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132838788 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111394872 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148385222 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126141137 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090977059 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127485891 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234131504 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14972935 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171786995 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098305176 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179092418 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22715322 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102914688 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081702226 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107031619 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172561862 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085272576 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163194392 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.128416505 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136193806 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155799186 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174604749 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125072294 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069183275 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139012475 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166104335 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142483788 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127681065 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134375148 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197603038 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129937569 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080233489 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143868099 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103864813 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10173536 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237629416 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.091077884 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099442391 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104702458 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082121939 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158914271 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214882384 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080751402 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155770499 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151411898 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140841646 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158740075 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131431623 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101135954 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144493483 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210383012 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161322775 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090631204 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142309725 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187645 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189137422 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136819618 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124610514 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203757523 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211744493 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.192740052 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.118877371 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144801871 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145011564 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110315456 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20034253 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111027199 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200124861 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110626521 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16880635 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135397072 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138337513 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161418223 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127597321 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091116915 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207853479 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149196455 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084907847 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106588204 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149320245 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15132847 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137990084 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077388431 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170659024 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102818568 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133072794 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199799554 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083826412 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136984289 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096867775 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079254405 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139297277 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132778636 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087871215 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.151288238 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237022516 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088832166 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210762108 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173508502 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144378475 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167050415 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098756919 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668386539 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108524434 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186342445 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147283054 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234217345 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126953001 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1482131 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138719656 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154920356 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177642665 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136342911 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203312585 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164393475 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.148013132 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080996041 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132598265 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134198416 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117524385 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107843048 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143981776 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147522895 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.124277648 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.145803528 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154405754 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081719027 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094738101 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219372971 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149223856 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17812213 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171659214 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11519539 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149245053 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171383109 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109664871 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.154202572 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184985287 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138328167 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128692537 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10918527 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.105033246 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231250026 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073375552 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226757932 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15134156 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13852642 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143110369 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14678252 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161802463 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138286808 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152288167 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123404232 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140811214 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142100995 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083735338 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106968062 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106071628 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111175009 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130868747 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129482433 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.125021622 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210543391 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073227994 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127327989 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132965562 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179573688 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23845955 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088775485 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114000945 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151668409 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145363493 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.145041496 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152737124 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080853711 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112125946 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083492447 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.133433686 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110266792 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143072751 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135546947 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142412752 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226582227 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084223883 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251027147 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096742854 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135567106 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.097497835 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081920636 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125591388 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127305298 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110826785 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131191119 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232450193 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09635963 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121519288 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123342012 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075216 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111788955 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160272676 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142266744 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149773594 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099561675 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.092108668 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140114285 seconds)
  done (took 70.683266808 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145405842 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.125464741 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.138541055 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.194113544 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168219989 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.259963852 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.200363712 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.245940854 seconds)
  done (took 2.704477457 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071649258 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.122463744 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101783392 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.111135422 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068073656 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.098720483 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.283455256 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081732099 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.095652954 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090320071 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.108369497 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09620606 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.496037864 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.0680239 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096376419 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065811411 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.096350363 seconds)
  done (took 3.378744907 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.439186447 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.693589424 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.426502469 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075319979 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.257430698 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113657633 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.925800848 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.17449922 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097540217 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.465460235 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.726622779 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.167443949 seconds)
  done (took 18.790959245 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076982188 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070183511 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112690763 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083774732 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072236973 seconds)
  done (took 1.651055949 seconds)
done (took 117.007258824 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081734991 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.36146577 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054346422 seconds)
  done (took 1.687364845 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08485057 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084642477 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114639908 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083433137 seconds)
  done (took 1.610113892 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076175076 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076349064 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113740988 seconds)
  done (took 1.506127098 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.290129822 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.141777234 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.118370539 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084343164 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078472082 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107173178 seconds)
  done (took 1.508612137 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074185779 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074708068 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101848481 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077035946 seconds)
  done (took 1.562197097 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078025191 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053428891 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05496594 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085383363 seconds)
  done (took 1.513038852 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087782244 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078267511 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.107910896 seconds)
  done (took 1.510480139 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108535462 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114102483 seconds)
  done (took 1.461573512 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084115087 seconds)
  done (took 1.320786037 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100785284 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.143372965 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.158643159 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.140167319 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167867422 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.139299124 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.11485919 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089743237 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106992004 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088509636 seconds)
  done (took 2.492022452 seconds)
done (took 18.043269464 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080143658 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.39350467 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362548666 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090121713 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.699728126 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357298905 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.010890189 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092315529 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152295463 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096674791 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085953452 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648567538 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.000185635 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32233998 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.98701723 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321802016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650035688 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067735087 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066750285 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098632175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966527553 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067413417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097853974 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068845663 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677952836 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373055716 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067986771 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.351185552 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068370357 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097353012 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.3573178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06885421 seconds)
  done (took 16.079651462 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07172729 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146534327 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075381138 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084098425 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100908952 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070022435 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100604866 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070974933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125397301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067126673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11455011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069443691 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072020843 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099343979 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088154786 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068178005 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06889531 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067235274 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.099329915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070575771 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086492459 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098062378 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069399528 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097194454 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070553634 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079967891 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098066975 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068997925 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067735982 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100366732 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071332571 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09761351 seconds)
  done (took 3.984334526 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117021597 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15478521 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074155886 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131927306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113677039 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100376784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143999939 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123068852 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158211107 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068232132 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114548995 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069279537 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130327592 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070778005 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08798608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098386912 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069562079 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097103681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069765008 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06855937 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116882033 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068815575 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095318081 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070485174 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069106681 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110425927 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069784526 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068046397 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098818808 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071051096 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100674263 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070103107 seconds)
  done (took 4.315956451 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074349108 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.0753476 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112433807 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084602428 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069171096 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.102406928 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072823915 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097465851 seconds)
  done (took 1.939810012 seconds)
done (took 27.562038209 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080501505 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069516049 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101506275 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081776953 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072603614 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.108799088 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068056363 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103185522 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074483128 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072934782 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104404322 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068307974 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070951257 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.096958728 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074633872 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067694031 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.109699179 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072408132 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.109270282 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080206632 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098089647 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075084074 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074394917 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.109294103 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080565686 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.107585437 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078965164 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072734609 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.099260625 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071017223 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075764156 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.114566953 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069001794 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10924004 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068882284 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067743761 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.102140252 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069084337 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.108021112 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077966004 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069410811 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.106448029 seconds)
  done (took 4.833987975 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089367394 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091430379 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11459983 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062059613 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066799081 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064076985 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087521307 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.090854795 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061306033 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088144835 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.086221584 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061015685 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063341642 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053720257 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.089519555 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057568521 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062171956 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.085511014 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060550907 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059284113 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057782401 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.083470808 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.06128357 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062409055 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.086066512 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063196511 seconds)
  done (took 3.164247927 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076453576 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084328227 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118610274 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12733647 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134620738 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076939051 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109575146 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088273701 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115006782 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068617312 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071816517 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.124928735 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088994517 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103578691 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072117265 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084638101 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.112109666 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070485714 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102809712 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092742783 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084762286 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.107984182 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093740158 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.110709363 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069106743 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069320141 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.101607788 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082998342 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.101539527 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078245335 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071441515 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.101259636 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07024746 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.107560373 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073400644 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069677928 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.119722562 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078146299 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.106759309 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070544239 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072124541 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.098383135 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091572047 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.152857997 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068260252 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074707612 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105791484 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07804012 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.09805205 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087971234 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078261807 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097504674 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072489398 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066897616 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098325971 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08174344 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098054202 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072529328 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076983487 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100859092 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081562206 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071137304 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113761508 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06798904 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105663949 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068661042 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068913946 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096926463 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093823482 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098689544 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110646297 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068814231 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.099102316 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077676762 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105176148 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075252846 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068029396 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114410175 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078618341 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100018559 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077901285 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071427817 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.101109085 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088845661 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069751573 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.099842819 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069150464 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103038259 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072362196 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069606774 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110952357 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069517755 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071327743 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.115336824 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068136739 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.098122257 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075777031 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072218307 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097731778 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08017205 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102569472 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070217231 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077494492 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098829695 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072260483 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078283232 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.104519911 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067478167 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101890775 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075544869 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068231529 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09983297 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071323627 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.0695606 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076505507 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073495003 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104601729 seconds)
  done (took 11.591068571 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.189277329 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154627774 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.101912253 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.178894791 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077892176 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079076 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179008466 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.126456909 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068808011 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068713005 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.101435109 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116012997 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.138758616 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.153545338 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079630074 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.099541366 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084960344 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.148510775 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.179904392 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144313841 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116502706 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077247209 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101754413 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070231228 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07389566 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.114599381 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091567054 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.107754718 seconds)
  done (took 4.491416952 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083073404 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130329598 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075836122 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089560884 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.123219053 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068191149 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101652985 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071269852 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08037057 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.111085533 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067828104 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.104583378 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076269901 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.103606929 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070534112 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075116173 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.105928572 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070680625 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070885504 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.10420479 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07817046 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.111892577 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073004625 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067537793 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105763939 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067548967 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.09548326 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086438616 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.099174525 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091052969 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065486774 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.107144673 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08256369 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068308186 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067692416 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06742569 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100887579 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069363934 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070349955 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.098127368 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068089725 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058422737 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.09786477 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081153837 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104498042 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.058444199 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073585803 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.104290107 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075076184 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065740923 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070806306 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070349245 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070253804 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10912029 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073946922 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103079311 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071008506 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066646282 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105779145 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069555057 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065704056 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.097173767 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074501459 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067501648 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.107253196 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072921737 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096165497 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069811225 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069957231 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104102171 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06907997 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071628137 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065699292 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068864344 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072499699 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.102549391 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.0696898 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06642402 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.099604469 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069653925 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056278206 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099533888 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.0543869 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071274469 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.097928905 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067522544 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096850958 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075802246 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080974011 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068587229 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073407542 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.100381481 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069706522 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072345464 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.091767906 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072897245 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083008029 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114723905 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067950712 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.096977885 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083819421 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.102240749 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069486157 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057340717 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075185619 seconds)
  done (took 9.914961188 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096421466 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088462186 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.101859895 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085084573 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.12146235 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089483088 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075114717 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.108447318 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070301004 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113008984 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075519224 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07701188 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.099212969 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078751674 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094382235 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.109030585 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071478121 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107501429 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074271895 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101838295 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114284277 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083425633 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.105910666 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070340564 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076277027 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079834505 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089387394 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113381584 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079945372 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.076178437 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.111802027 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091387737 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.10501619 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.074071906 seconds)
  done (took 4.398003314 seconds)
done (took 39.638254682 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.333501284 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.573363293 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.328000223 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.382747324 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.354491994 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.34771218 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.343333948 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.332363223 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.965277328 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.332044601 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.577795537 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.237679909 seconds)
done (took 61.383426937 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.489771689 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.474219994 seconds)
    (2/2) benchmarking "String"...
    done (took 1.608220576 seconds)
  done (took 4.368015083 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.740939333 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.301034361 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.595895812 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.337074211 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.331220268 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.638565346 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.145556563 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.245413599 seconds)
  done (took 28.868370271 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.339688629 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.752159449 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.221761392 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.205929711 seconds)
  done (took 19.794155343 seconds)
done (took 63.534515194 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.356068902 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.389370017 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.348814519 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.316725086 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.454085993 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.364089556 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.690816341 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.377404721 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.334818138 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.341459491 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.331313383 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.345882005 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.339782321 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.57373987 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.338319951 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.336426023 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.421377451 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.918175477 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.757260322 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.334485174 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.34295929 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.397286918 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.336377816 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.337520021 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.394696536 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.343956616 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.332155536 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.334204495 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.158056066 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.337856412 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.351332214 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.63150873 seconds)
  done (took 195.244171057 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.333158864 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.492287698 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.595047 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.361040031 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.001998947 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.549386401 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.496667755 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.054264473 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.350905055 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.344981877 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.648716252 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.334199068 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.723223169 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.304582149 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.342799017 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.417620661 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.679757116 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.716690788 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.352414591 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.635172436 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.333406037 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.562809679 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.489995526 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.594979566 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.358340914 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.41124276 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.348127999 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.356728147 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.528668962 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.602725181 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.338602938 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.367044471 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.997042454 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.196501094 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.351785699 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.337360019 seconds)
  done (took 156.186341 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.911684299 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.334240803 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.334641874 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.334801029 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.335258376 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.369450169 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.334331064 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.952913461 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.955929886 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.890843905 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.690809742 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.402354482 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620976065 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.339418899 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.430601502 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.348534382 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.33991414 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.350498124 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.360732135 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.336705911 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.337144289 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.954752892 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.353000938 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.907013789 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.346198095 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.336400716 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370277223 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.73327842 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.33634218 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.36994746 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.664572323 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.387436628 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.336823523 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.723148147 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.872159529 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.448135479 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.338233092 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.370411146 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.337026706 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.612612951 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.337238733 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.337365159 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.339360065 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.006169557 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.340348996 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.956220635 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.34241083 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.289073339 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.337448635 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.337767469 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.120485321 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.031080481 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.34128814 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.336141218 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.338780737 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.336317919 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.337514416 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.371568609 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.908748789 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.440756415 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.338994396 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.340902183 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.372099635 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.336952308 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.76993501 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.342469849 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.324514123 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.399476722 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.560793532 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.960310506 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.343545038 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.433964553 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.461300583 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.33876395 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.338041185 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.337896157 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.338253931 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.447702799 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.338731916 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.338853656 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.338784177 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.78616093 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.345371655 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.340619903 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.402308572 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.436412971 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.339171326 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.733527605 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.34328056 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.338466993 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.100119601 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.434830491 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.339065956 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.338814463 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.338701689 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.786601328 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.95853392 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.602481124 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.343450351 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.979832722 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.343881113 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.799363086 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.924497336 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.021742383 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.344806718 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.449624319 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.344577064 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.341666128 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.340578619 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.370397823 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.340987242 seconds)
    (111/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.340544184 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.339966816 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.397546761 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.744477464 seconds)
  done (took 364.204102653 seconds)
done (took 718.8211218 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.039786782 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.030857989 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.142249262 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.024856534 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.985715658 seconds)
  done (took 11.506069106 seconds)
done (took 12.788247713 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.550534891 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.554562687 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.412559458 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.556385128 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.375958224 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.571806246 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.535736149 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.365373194 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.451319267 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.437735066 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.45561107 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.404224696 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.373658775 seconds)
  done (took 20.328126397 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.682189182 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.676198871 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.403413038 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.680545726 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.380917783 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.674296147 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.546232031 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.559465483 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.547106226 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.354809149 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.35543296 seconds)
  done (took 18.14489283 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.681522185 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.676325005 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.408745575 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.683272593 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.383513598 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.690265692 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.548143283 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.558707122 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.540472359 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.356427036 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.354932831 seconds)
  done (took 18.16633193 seconds)
done (took 57.920939132 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.351984588 seconds)
  done (took 2.636014476 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.385805515 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.561061442 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.37469767 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.355509401 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.353455033 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.352141534 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.355333362 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.351969621 seconds)
  done (took 12.375983017 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.350985378 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.347662429 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.351589854 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.351108443 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.350978316 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.349110634 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.351687035 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.348662533 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.34952237 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.351922957 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.351626806 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.348464736 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.348590124 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.349564175 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.349680686 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.352191772 seconds)
  done (took 22.888902571 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.350880007 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.349071403 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.349213708 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.35069217 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.349937096 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.350219744 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.351136763 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.349135463 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.349360245 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.349024361 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.349730263 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.349939954 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.350227013 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.348818818 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.350011697 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.350759839 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.349618593 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.349453718 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.354833197 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.350286769 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.350888031 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.349400083 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.350283432 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.350581823 seconds)
  done (took 33.691941972 seconds)
done (took 72.876321332 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.641992309 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.126553728 seconds)
  done (took 10.054789532 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.353183207 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.351769224 seconds)
  done (took 3.992656216 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.353151537 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.352625362 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.353096697 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.352661851 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.353106143 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.352785771 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.352483219 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.353962101 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.353309519 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.353471227 seconds)
  done (took 14.817858102 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.353311771 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.3538385 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.351679227 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.354521001 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.353514935 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.350634925 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.35458663 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.354781285 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.353776758 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.351438085 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.353686923 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.352132623 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.354028713 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.352251737 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.354561586 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.351550631 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.351790457 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.351552529 seconds)
  done (took 25.641799617 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.354836474 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.354042328 seconds)
  done (took 3.996862065 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.352693568 seconds)
    (2/7) benchmarking "second"...
    done (took 1.351589325 seconds)
    (3/7) benchmarking "month"...
    done (took 1.35237579 seconds)
    (4/7) benchmarking "year"...
    done (took 1.352586149 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.352763729 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.353073431 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.352745063 seconds)
  done (took 10.756858325 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.35616025 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.538055655 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.622322038 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.026902092 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.356660573 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.358992213 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.309850592 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.357955159 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.360926247 seconds)
  done (took 15.576744337 seconds)
done (took 86.124158276 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.420015208 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.351377646 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.361099803 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.355169106 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.368557541 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.648830039 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.367944382 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.623462012 seconds)
done (took 39.785641914 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.347173427 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.085872256 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.138406951 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.352795296 seconds)
  done (took 11.867149235 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.338649591 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.380276039 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.349731904 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.48338378 seconds)
  done (took 18.842194315 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.053909448 seconds)
    (2/2) benchmarking "read"...
    done (took 1.689726505 seconds)
  done (took 5.033769606 seconds)
done (took 43.380296714 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.357383833 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.354160156 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.357466396 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.354330392 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.357066927 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.354269257 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.353946746 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.356702313 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.356704201 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.356818599 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.356519404 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355964578 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353953254 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35353222 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356790093 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.354493523 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.357025129 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354077408 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354834728 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356766558 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.354472325 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.35566417 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.354602422 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.358276334 seconds)
  done (took 33.82714076 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.357516914 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.356500681 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.358067299 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.357306631 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.354961419 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.35740972 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.358733044 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.354804282 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.358713863 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.357923178 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.3566835 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.35562429 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.358222453 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.356411677 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35797066 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.355042564 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.357930241 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355827614 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358151611 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.355894018 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.357819423 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355459764 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.356545702 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357785478 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.355502688 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.355717419 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.35863582 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.356411301 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.358997271 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.355775622 seconds)
  done (took 42.000637483 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.365218082 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.367598339 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.360248775 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.360011453 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.359514376 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.359241106 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.359294445 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.359119738 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.359960068 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.359493733 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.359240099 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.36018035 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.359649243 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.35995131 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.359869063 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.360235702 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.360904344 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.359843113 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.360979601 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.360068205 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.360626448 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.360556238 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.359679374 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.360362395 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.360132629 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.361115153 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.36029059 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.36070485 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.359881465 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.359853413 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.361058298 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.360145202 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.360166238 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.360704741 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.360971405 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.36008537 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.366257671 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.368350218 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.360874527 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.360465826 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.360991756 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.360714933 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.361307351 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.360535296 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.360861062 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.361655077 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.360666142 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.360733416 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.360593857 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.362526673 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.360864296 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.361199998 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.361483325 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.361479429 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.360865441 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.361725703 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.361611456 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.361783873 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.362876811 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.360408123 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.361967167 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.36160456 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.36186843 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.361773371 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.362446888 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.362270989 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.361641383 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.361964292 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.362248615 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.363416091 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.363462297 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.362405999 seconds)
  done (took 99.300742482 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.362389546 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.361092355 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.360133167 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.360240674 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.360160835 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.362574466 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.35997251 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362639515 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360923556 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.36357132 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363604418 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.361145023 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360254774 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.36425408 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363049618 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.360919057 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.363631725 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.360319348 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.363846764 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.363970332 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.364234687 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.360213052 seconds)
  done (took 31.261708688 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.364417719 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.363288018 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.360580381 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.364821136 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.360974791 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.363170206 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.364174827 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.364858564 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363117627 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.36242926 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.361219934 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364292453 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.362241385 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.362462047 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.362291293 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.36169575 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.365166417 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.36223749 seconds)
  done (took 25.830936058 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.36280421 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.361735605 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.364035065 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.361447782 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.362685154 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.364954314 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.361557774 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.36491872 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.364304052 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.362122597 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.364983926 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364621593 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.365307343 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363035696 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365520721 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.362591015 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.365648814 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363452001 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.365728222 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.362173377 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.362545801 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.365558347 seconds)
  done (took 31.300575607 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365840967 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.366560633 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.363907307 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.362752432 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.36346153 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.366131223 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.365464277 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.363915015 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.366587927 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.367664701 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363550457 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.366088013 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.364194889 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.364770114 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.364517595 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.363878974 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.366081923 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.364551042 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.366010474 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.363395093 seconds)
  done (took 28.599428802 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.36816877 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.369075372 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.36826952 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368983149 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.369232862 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.368788564 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.368947319 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.369222706 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.369190219 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.369204771 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.370239175 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.368782907 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.369248473 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.368276489 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.369646349 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.369222467 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.36822546 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.36912494 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.37043839 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.36886299 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.370040456 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.370068733 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.369507387 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.368681014 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.368954183 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.369754512 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.369220494 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.370255076 seconds)
  done (took 39.63965412 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.368744507 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.367989756 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.36565049 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.365683566 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.366625051 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.365661673 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.365355879 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.365942144 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.368567195 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.365621801 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.369409982 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.369066408 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.367826935 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.369022952 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.368938281 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.368861764 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.368427931 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.366516358 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.367246417 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.366818229 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.369229845 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.369082722 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.369020751 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.366301522 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.367480754 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.368851401 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.36729832 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.367604456 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.370163871 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.36735552 seconds)
  done (took 42.334178472 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.388907283 seconds)
    (2/2) benchmarking "in"...
    done (took 1.388198826 seconds)
  done (took 4.081271132 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.366671881 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.370124238 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.370389734 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.367978259 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.367369103 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.370413117 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.370487927 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.366937916 seconds)
  done (took 12.254258499 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.370890191 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.370407119 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.371367908 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.371329331 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.372667485 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.372773827 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.380180732 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.390783934 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.374440755 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.373381933 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.379165947 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.38133847 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.37662904 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.372240039 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.371354436 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.372989699 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.372369434 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.372557438 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.372823069 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.372290005 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.37214977 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.374940722 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.374676896 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.369226208 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.373422308 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.385735474 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.379189489 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.371643742 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.373691099 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.378623535 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.373369532 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.368997027 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.374670987 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.373422225 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.373447147 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.373410494 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.384568053 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.395771129 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.38264869 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.374224616 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.373043009 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.370700306 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.374407186 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.37528951 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.374868804 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.3743445 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.373506599 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.370077165 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.372450043 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.376817817 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.378962974 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.372076122 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.370628511 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.379923755 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.376061703 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.3812092 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.393705216 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.377769462 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.38508898 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.387919294 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.391015045 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.38437246 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376320418 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.374937258 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.38564565 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.400104242 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.383813684 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.391466634 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.371563371 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.375057592 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.385038803 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.390375196 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.385260035 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.375830767 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.37541632 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.374946495 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.375165305 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.375718996 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.384709416 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.397755032 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.374946778 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.375824691 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.386320098 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.398574308 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.37464908 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.375498245 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.376163491 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.375695155 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.376662657 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.389766844 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.395739103 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.375587957 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.374864984 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.37563884 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.379472594 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.376910676 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.375387783 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.377964521 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.373140079 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.376308534 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.376408368 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.380240116 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.386101882 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.376372554 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.376191112 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.386638995 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.377129991 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.376485575 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.388396495 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.377129655 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.377363063 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.377836366 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.386189587 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.374444694 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.380785602 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.386168399 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.377496177 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.379187992 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.378238028 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.377059836 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.388185345 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.406017645 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.377867268 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.37757955 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.383735464 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.390143839 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.378603596 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.381271013 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.377884205 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.376099209 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.374772497 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.379653915 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.377698123 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.379602608 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.377700334 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.380561669 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.37578199 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.378259783 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.378840106 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.379621678 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.381991207 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.380164338 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.380146786 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.382040569 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.379453207 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.380678196 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.388421616 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.380626425 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.380982551 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.380370204 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.376618988 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.379973646 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.381000056 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.380421457 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.380718774 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.379666124 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.37960875 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.380049814 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.380511 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.380293506 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.380565716 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.381041713 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.385481848 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.380236701 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.385726685 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.379760762 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.377880427 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.380263349 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.380234665 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.380764871 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.380421014 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.379607358 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.384713085 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.390151604 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.380713467 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.380395322 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.385124008 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.380906818 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.382026384 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.382047448 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.385580027 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.389877666 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.380846245 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.390593481 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.381403463 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.381658976 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.380963736 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.381634136 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.381042783 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.380869501 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.385116097 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.390034237 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.396684784 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.392693872 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.382926257 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.386289745 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.38284249 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.385377273 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.388752192 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.382761395 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.381919845 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.382393732 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.381635928 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.382237226 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.385372278 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.382107879 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.383128565 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.381901801 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.382569718 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.381992942 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.383110585 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.383825677 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.384232602 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.381140792 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.383244577 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.382776399 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.383494444 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.380318129 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.381471005 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.383126285 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.38245859 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.383268132 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.394218428 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.380761975 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.383834932 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.385295288 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.383660677 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.382176749 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.383406118 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.385822135 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.383833929 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.392561878 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.403916963 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.385714303 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.391343306 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.402463056 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.384515958 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.386581789 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.383682446 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.38067874 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.387274362 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.392499866 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.385246488 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.383595808 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.384183088 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.384815341 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.385327995 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.391711146 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.382220795 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.383418498 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.384327958 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.387947742 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.381555865 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.38541115 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.38546729 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.38614337 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.38739804 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.384153795 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.384901312 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.386871659 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.384087665 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.384876866 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.385560369 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.389358869 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.39366218 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.392307939 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.386851256 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.389194335 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.386841189 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.388611057 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.386805266 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.386363883 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.385915811 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.400948496 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.395313374 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.396500881 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.389259153 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.385838493 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.393785621 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.388253974 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.392251076 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.387286294 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.386558977 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.385947298 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.38454718 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.383471406 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.387142006 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.385942798 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.386868267 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.388836156 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.391497911 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.386168658 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.386087783 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.387117217 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.387820774 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.38663634 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.387682571 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.387697788 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.392023943 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.389345417 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.387508735 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.387756063 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.395516011 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.406916955 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.390045907 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.386614492 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.387324637 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.387213662 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.388794661 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.387868044 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.391963115 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.39636712 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.391636871 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.399571911 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.39069007 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.399544037 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.387765412 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.392029995 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.397337666 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.38579542 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.387115514 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.388758026 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.388537123 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.397851849 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.407600625 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.389915341 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.393159715 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.389232084 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.389628388 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.388624865 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.389253489 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.388370217 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.389397434 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.40015691 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.412578788 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.394042816 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.390565268 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.386245065 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.389150387 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.388828999 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.388618621 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.396317579 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.388859654 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.390503156 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.389379578 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.390262824 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.389340277 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.390138423 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.38903566 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.38701087 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.390427539 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.398633636 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.409434652 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.395361364 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.390255362 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.402737249 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.39018994 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.398999052 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.409773194 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.391025764 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.390767243 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.390957749 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.393718434 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.390694371 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.392187799 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.390930572 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.392180889 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.394795376 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.391035761 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.39530878 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.390645488 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.391392351 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.391574162 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.401755041 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.416076113 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.394215973 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.395789025 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.38752495 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.393423025 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.395880919 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.391716332 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.391095243 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.394608622 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.40362158 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.399977535 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.391074528 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.391595132 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.392477767 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.391658885 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.390279469 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.391518041 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.39190335 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.391785275 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.394698823 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.392559247 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.399061099 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.39180909 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.393118217 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.394239699 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.39390335 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.405067085 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.39263032 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.393201466 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.392433434 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.392452436 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.393614286 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.392488529 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.39236881 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.394013924 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.392175288 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.394445537 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.401429867 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.399671556 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.396503766 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.391677889 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.392294567 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.394622709 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.394984017 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.39426067 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.393897922 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.39355963 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.393700918 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.393590655 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.395576564 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.39230236 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.394227803 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.395280724 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.39315091 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.397777255 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.402718537 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.394381279 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.39144481 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.39383309 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.393260149 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.392541472 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.395366794 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.406991166 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.398038115 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.406299804 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.404737034 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.398490539 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.394484894 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.397335537 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.404073499 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.393600232 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.397045136 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.394240657 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.398574311 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.396496153 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.399252738 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.394204581 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.404349772 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.39661448 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.395079774 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.4061632 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.418605416 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.395306369 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.397032575 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.399917463 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.397959829 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.393048627 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.396540113 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.394348873 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.406161842 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.41693184 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.396185621 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.398049914 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.394462499 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.39667324 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.400742993 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.396406576 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.396895396 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.392617454 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.396382581 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.396130979 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.395758061 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.393511071 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.395796365 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.396943337 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.400306851 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.405375292 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.393050267 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.397801086 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.397184991 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.398064652 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.397179863 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.39670419 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.396436048 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.393271507 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.397949065 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.396958329 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.398667007 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.399465983 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.396254672 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.397956565 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.399015786 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.398321112 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.401601931 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.408887695 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.406517457 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.394724375 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.39687488 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.397938315 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.400765119 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.397550742 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.397876268 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.399256892 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.400662572 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.398054622 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.3986949 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.39816241 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.401896712 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.41829927 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.420757973 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.399176866 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.399350912 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.404073378 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.398187088 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.395900998 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.399243847 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.402074644 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.403776896 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.406841726 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.39918777 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.405846764 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.417723789 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.399492403 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.402425891 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.40230295 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.409084753 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.402917516 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.399531795 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.399345772 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.405284792 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.419092125 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.398565325 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.410102161 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.432677869 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.418885896 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.400423284 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.399904169 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.399539336 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.399120632 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.40283771 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.399967585 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.399454135 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.399947527 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.399779281 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.401431033 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.406126903 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.401817096 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.398819279 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.399965261 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.401139833 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.404271505 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.398048596 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.399983071 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.399913619 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.400481668 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.400730006 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.400364729 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.401584557 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.415084624 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.412844832 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.400490231 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.400636933 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.398221828 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.405625556 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.405149516 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.412916849 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.40904973 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.401752797 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.401532074 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.40324283 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.401798975 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.398385487 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.403136716 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.401865451 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.401858825 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.398781737 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.418258767 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.411965148 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.408931337 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.403316862 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.403305909 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.402642978 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.404500105 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.402413209 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.401411053 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.405415362 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.402458675 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.406362045 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.402573688 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.401757897 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.406631876 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.410892144 seconds)
  done (took 829.734034391 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.400839412 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.399707246 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.39964147 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.399252211 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.400430379 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.399720004 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.400168552 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.399453339 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.399791257 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.400713744 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.399037594 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.400022285 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.399283977 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.399869564 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.400615203 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.400549565 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.400824002 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.400240056 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.400326614 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.400637592 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.400037544 seconds)
  done (took 30.73698202 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.403508436 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.400265226 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.400303948 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.403547877 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.400549929 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.40327971 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.400798756 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.403104608 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.403737231 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400512541 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.403732455 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.403436155 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.400517229 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.400776569 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.40117109 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.403927924 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.403456256 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.401060435 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.402869017 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.401361963 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.403875973 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.402190273 seconds)
  done (took 32.184147938 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.404944079 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.404612902 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.403708372 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.40146048 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.404543912 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.402058062 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.404939969 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.404721084 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.405070622 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.407105855 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.404307832 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.406758339 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.412612215 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.411684876 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.408715048 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.404808402 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.549441723 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.406070636 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.405887083 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.406451157 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.403000988 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.413003083 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.402944312 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.402239177 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.405665317 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.406221302 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.405445612 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.406034126 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.406734722 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.408240561 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.410870735 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.40616533 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.405578725 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.409100373 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.406173792 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.407030057 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.410785779 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.406422619 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.404505237 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.407033073 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.417013257 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.430434628 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.407423128 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.414824295 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.406983263 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.406559262 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.410739525 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.415774375 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.404070811 seconds)
  done (took 70.445588967 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.407308476 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.406954334 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.404003384 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.40609915 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.407392365 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.406597735 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.406575465 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.406727475 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.404827196 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.404269423 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.406415127 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.404560977 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.40461236 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.407642638 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.407241936 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.404598948 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.404012411 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.404942168 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.404594818 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.405468237 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.404416791 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.407841583 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.408499462 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.405726948 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.407877219 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.405430141 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.40578876 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.40729417 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.406777433 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.40565608 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.408717243 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.408031458 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.408756232 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.406844465 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.406679516 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.40896779 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.408329909 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.405817875 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.408284194 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.405926434 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.409122717 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.408262393 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.408762967 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.409092457 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.405841906 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.407942197 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.406017695 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.405790094 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.406905874 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.409013718 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.408753128 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.40671305 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.409380039 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.40681491 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.408970606 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.409777479 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.407018622 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.405890564 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.409245071 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.406879289 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.407414482 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.409154192 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.407637627 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.410665857 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.409522241 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.407978468 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.408317489 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.409011579 seconds)
  done (took 97.024436847 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.410501651 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.411043029 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.410951646 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.410387523 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.410580791 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.411320956 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.411851127 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.411276032 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.410613373 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.411030236 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.410714172 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.410400746 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.410157417 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.41080648 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.411513853 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.411782041 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.411498546 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.412044292 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.410681166 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.41088051 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.411501828 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.411992471 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.41107821 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.412263815 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.413027565 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.411682481 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.411889719 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.412345879 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.411164363 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.411757719 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.413443101 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.412174404 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.411217272 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.412240717 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.412855448 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.412304265 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.411878235 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.412063973 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.411845282 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.411998713 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.413011967 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.411991155 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.412536733 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.412584459 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.412720668 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.412068904 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.41306008 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.414108671 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.412377984 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.412919604 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.412694628 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.412761291 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.412493963 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.413635177 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.413477138 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.41192188 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.413685223 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.413316203 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.413148653 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.413172324 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.412984496 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.413608783 seconds)
  done (took 88.890252765 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.413877272 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.412835343 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.410769966 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.410360004 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.412856201 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.410810691 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.413411105 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.412320508 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.413698409 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.412632037 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.413016907 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.410701389 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.410977552 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.41367617 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.410699217 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.411278329 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.411147057 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.411460149 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.414280217 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.411399436 seconds)
  done (took 29.588949585 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.410958042 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.41395645 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.410687094 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.410973288 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.414112425 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.412080881 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.414307011 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.413820502 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.411716679 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.41494228 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.414967908 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.413944642 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.412653071 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.411780959 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.415367905 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.411718265 seconds)
  done (took 23.955629161 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.412130529 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.415409646 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.416167293 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.415479143 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.412940366 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.412890713 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.415197926 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.413664352 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.41298431 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.415524253 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.41538674 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.41550248 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.416241409 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.415875968 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.413240868 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.415990336 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.413587637 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.413914354 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.416740155 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.41579357 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.413430108 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.413386894 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.416188069 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.41691466 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.413922276 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.413893376 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.413443187 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.413471398 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.413347225 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.415578365 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.414678981 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.413955294 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.414750142 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.413355549 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.416978051 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.413847255 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.41650225 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.41614536 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.416291548 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.415848962 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.417164555 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.413619962 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.417667635 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.416587028 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.413941161 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.417160946 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.414331652 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.415609577 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.41427055 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.415236333 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.417531311 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.417790733 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.418087721 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.418245361 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.417301602 seconds)
  done (took 79.185471493 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.417350602 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.417084725 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.415131822 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.417903704 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.418209561 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.414660658 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.417500209 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.415002728 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.415068558 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.417528023 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.416371247 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.418385013 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.41520953 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.418914084 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.41683482 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.419016517 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.415607214 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.416463347 seconds)
  done (took 26.853251045 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.416474473 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.416371157 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.418788403 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.41617194 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.416237365 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.419358557 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.416088702 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.419130256 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.419229115 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.416615327 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.416221661 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.419807213 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.419133736 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.419017336 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.415918623 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.416846696 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.419420698 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.418966967 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.416449584 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.417419931 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.419863305 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.41958102 seconds)
  done (took 32.545593175 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.419923821 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.420013311 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.438185361 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.46655845 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.452281184 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.418689992 seconds)
  done (took 9.968117962 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418288727 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420066295 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.417920128 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421098406 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419898416 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418085491 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418165903 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418508233 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419615935 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419007 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418825889 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.4205627 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420888915 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41750568 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420781389 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421041528 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417904927 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417688289 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419452462 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421598976 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418648679 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421887697 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419034215 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419173617 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41907677 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418507444 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422325048 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419912013 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41946019 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423080057 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421430513 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419728887 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421640812 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419314866 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422503106 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422076669 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418733864 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421802312 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421576188 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419435764 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.422079035 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42269104 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421966445 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420627137 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422266622 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421363602 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420534611 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420163805 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420483289 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422598048 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42283783 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420915364 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422730645 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423420916 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423082606 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423290569 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420584863 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420300494 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42277764 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421011459 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419965466 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422839974 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420110769 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421122331 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423698777 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421361119 seconds)
  done (took 95.116143255 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421422702 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.420972723 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420951467 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422544038 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421305355 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420856047 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421554343 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421297674 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421604574 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42134148 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425049587 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421687382 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421149215 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421801399 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42115193 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422274884 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422311789 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4224128 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421255354 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424208321 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421766051 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421442124 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421992779 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421966846 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422966692 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423826715 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422308135 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422351807 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4222019 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422259678 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422326916 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422656103 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422616761 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.422239658 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422558559 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423349233 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423066761 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422760395 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424323344 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425974095 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423660022 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426310268 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422758667 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42325672 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422545936 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423412288 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423322329 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424636972 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42307752 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422885678 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424408752 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424478187 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423948625 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423464596 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423585946 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422837588 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424446134 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423859968 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42373825 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426294239 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423855536 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423246837 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426663069 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424465028 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424022201 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424137858 seconds)
  done (took 95.274480315 seconds)
done (took 1933.223565619 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.507473577 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.507286299 seconds)
  done (took 14.373451657 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.59215609 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.541064253 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.425394842 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.419816473 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.425983543 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.445676862 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.439900323 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.426431557 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.425626012 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.426679843 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.425694641 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.615342361 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.477759819 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.428322461 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.426538649 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.517988905 seconds)
  done (took 44.827529919 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.42996454 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.429827015 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.469130398 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.429822505 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.428589691 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.475250926 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.512818567 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.430319959 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.637417866 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.489039912 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.909279886 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.434967718 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.430664924 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.765859829 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.475324201 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.47582797 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.753004969 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.913624992 seconds)
  done (took 29.251659409 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.969190433 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.460868612 seconds)
  done (took 9.792989631 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.471056444 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.455281956 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.466567899 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.439302113 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.458121202 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.466355581 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.498913174 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.48342865 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.431221825 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.472116921 seconds)
  done (took 66.010943583 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.453032992 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.430734289 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.431769521 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.42926062 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.437855488 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.427861044 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.42933009 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.427336582 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.700803019 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.582414454 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.460265238 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.436398118 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.430362822 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.432832048 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.428020189 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.468832949 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.561442156 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.427659096 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.427493598 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.435551908 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.43095311 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.523529071 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.479141094 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.429792433 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.577827506 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.72276962 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.438786229 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.438911997 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.570406489 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.430007723 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.431035034 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.430947899 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.433106931 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.040201806 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.926361577 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.448724369 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.45733164 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.438715787 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.428544903 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.569966468 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.431859876 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.436859493 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.423724647 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.915087812 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.596239828 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.558994445 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.932551618 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.43741519 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.434249181 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.501856744 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.432747407 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.433430889 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.46508847 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.26432141 seconds)
  done (took 118.537747536 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.472304323 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.916847106 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.598224989 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.446748754 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.018889356 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.963060288 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.429620377 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.765775181 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.46694304 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.978316942 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.745692016 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.860487088 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.431034584 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.42796891 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.427734482 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.431038548 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.715278972 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.806890827 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.431079121 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.42778143 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.480822556 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012377348 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.698945006 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.609209927 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.469425368 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.952194319 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.695244349 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.868139696 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.430905213 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.426243362 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.794331152 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.437759781 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.426562047 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.430157019 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.728512064 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.849428002 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.83063656 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.43186545 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.47585132 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.429863623 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.445975754 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.94945821 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.830320032 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.706379923 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.83422329 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.947705486 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.427567307 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.427859912 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.430049216 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.640379003 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.681904019 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.99749808 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.698092017 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.44908252 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.788651808 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.427472624 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.489331965 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.973538843 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.802786806 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.856495263 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.460386261 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.42882028 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.427843777 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.04395861 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.431681209 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.832542813 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.561522872 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.430291635 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.824495897 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.822980273 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.799516189 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.97410587 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.476470167 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.439337594 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.516516597 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.994804948 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.789318627 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961758182 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.443068925 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.428487186 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.801906938 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.430894676 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.739315131 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.040834499 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.971360871 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.485355501 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.453616647 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.429521744 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.957129407 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.955850549 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.680886667 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.839247774 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.755190851 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.48238448 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.428933132 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.42918492 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.462244182 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.705788486 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.452146296 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.794144785 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.956845483 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.206591358 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.481038634 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.040189277 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.711554057 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.451289775 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.434012348 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.429108686 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.655056351 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.510883598 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.45387111 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.432163427 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.967411499 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.308244349 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.573027412 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.159059988 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.791190365 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.437358781 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993357346 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.436256401 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.971190114 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.436888554 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033402604 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.018656365 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.492976827 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.663641725 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.843939558 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.451381354 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.000462417 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.037400034 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.6991353 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.000966796 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.271282442 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.431291362 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027764658 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.465824323 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.465344831 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.61869215 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.461745534 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.745698906 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.461423518 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.001191198 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.478061474 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.745445388 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.505889814 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.011983947 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.497307692 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.799008652 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.474458585 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.567964988 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.455936776 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.430220152 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.633495429 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.771461601 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.434818401 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.014638515 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.433171387 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.604226413 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.050603837 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.479114202 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.80328291 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.43851421 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.438709118 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.820234591 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.478622991 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.184633524 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.434657669 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.744671441 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.451397773 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.894564177 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.433837 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.049811556 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.665152751 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.454672745 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.443561568 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.237440118 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.434356394 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.494302132 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.612558116 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.67536456 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.441200017 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959124233 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.439400874 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.710928186 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.455560947 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.438096906 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.787195271 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.504072121 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.436773787 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.476759348 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.434557669 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.433520569 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.966230537 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.48237067 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.15897986 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.591165355 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008570787 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.751011963 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.000422998 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.50318516 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.459826884 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.045356328 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.490284999 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.803044423 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.439210278 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.478933892 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97489366 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.441163552 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.953663201 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.018181094 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.475948393 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.7829781 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.438077435 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.796939061 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.43608493 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.713775622 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.83326902 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.435205564 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.437165678 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.690911534 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.715778806 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.661269328 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.457549459 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.437742994 seconds)
  done (took 878.808394598 seconds)
done (took 1162.962568851 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.436418682 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.441837518 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.427835541 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.439696682 seconds)
  done (took 27.121453113 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.44681184 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.443713818 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.444880323 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.44255908 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.44429032 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.443306518 seconds)
  done (took 10.043753383 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.8847859 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.440600443 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.439624279 seconds)
  done (took 20.140817977 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.709105318 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.855744457 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.887162649 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.93902876 seconds)
  done (took 11.770001877 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.445680424 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.445868248 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.444959502 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.446168198 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.446534182 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.448274263 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.446284123 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.446019625 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.447978148 seconds)
  done (took 14.393965604 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.992978487 seconds)
done (took 90.836872405 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.129900208 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.513136486 seconds)
    (3/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.470675675 seconds)
    (4/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.637550837 seconds)
    (5/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.072047377 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.441865047 seconds)
    (7/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.665850443 seconds)
    (8/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.466354239 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.709321678 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.497502206 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.4249698 seconds)
    (12/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.216230613 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.490921213 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.99658321 seconds)
    (15/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 3.004838534 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.445352435 seconds)
    (17/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.724786708 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.897440304 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.48085597 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.439480699 seconds)
    (21/309) benchmarking ("sort", Float64, false)...
    done (took 5.849632236 seconds)
    (22/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.793667598 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.431673591 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.857333792 seconds)
    (25/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.442447994 seconds)
    (26/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.008148174 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.948943808 seconds)
    (28/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.438586456 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.172924562 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.091928808 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.971977317 seconds)
    (32/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.525537487 seconds)
    (33/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.448317571 seconds)
    (34/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.697170172 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.543963019 seconds)
    (36/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.346191166 seconds)
    (37/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.467450143 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.679637922 seconds)
    (39/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.456797264 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.439509657 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.552405981 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.460488566 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.575803266 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.957505562 seconds)
    (45/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.467591619 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.550501634 seconds)
    (47/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.042173335 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.034655259 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.326347042 seconds)
    (50/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.433490539 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.7255094 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.200270602 seconds)
    (53/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.036497783 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.290483808 seconds)
    (55/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.876467184 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.444020983 seconds)
    (57/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.469036229 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.498459993 seconds)
    (59/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.90409511 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.448578573 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.101689448 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.427193172 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.513754948 seconds)
    (64/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.055485003 seconds)
    (65/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.177783632 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.641411506 seconds)
    (67/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.877180504 seconds)
    (68/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.802680166 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.430619429 seconds)
    (70/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.451285925 seconds)
    (71/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.530116379 seconds)
    (72/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.567075849 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.161645057 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.492757337 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.440578886 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.428478365 seconds)
    (77/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.442999111 seconds)
    (78/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.657354776 seconds)
    (79/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.201082232 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.466556747 seconds)
    (81/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.566378092 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.624893824 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.732545911 seconds)
    (84/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.354298382 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.447738523 seconds)
    (86/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.50594634 seconds)
    (87/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.863551128 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.739158665 seconds)
    (89/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.439881596 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.47052288 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.448977493 seconds)
    (92/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.141345997 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.433087213 seconds)
    (94/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.166912539 seconds)
    (95/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.53160131 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.214016186 seconds)
    (97/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.645335383 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.565881285 seconds)
    (99/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.523444651 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.435484013 seconds)
    (101/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.777852649 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.444082606 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.016212354 seconds)
    (104/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.573015251 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.421442906 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.444648643 seconds)
    (107/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.445235559 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.472731968 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 3.052429304 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.360405757 seconds)
    (111/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.473772032 seconds)
    (112/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.528117272 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.907989061 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.660846968 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.37813988 seconds)
    (116/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.552432834 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.430883836 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.506382245 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.443515373 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.445600898 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.358137937 seconds)
    (122/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.620527905 seconds)
    (123/309) benchmarking ("sort", Float32, false)...
    done (took 5.514575666 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.447103109 seconds)
    (125/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.452358888 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.394769478 seconds)
    (127/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.338297188 seconds)
    (128/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.512454522 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.431684675 seconds)
    (130/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.157852415 seconds)
    (131/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.474441931 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.966562458 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.471138451 seconds)
    (134/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.867478322 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.745294554 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.538657476 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.437492798 seconds)
    (138/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.884766106 seconds)
    (139/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.995869832 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.35465634 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.709911447 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.533895471 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.439091878 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.217876298 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.478468525 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.874032234 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.463438313 seconds)
    (148/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.474110462 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.430827669 seconds)
    (150/309) benchmarking ("sort", BigInt, false)...
    done (took 6.47579201 seconds)
    (151/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.447533211 seconds)
    (152/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.449196212 seconds)
    (153/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.674277768 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.552511824 seconds)
    (155/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.570161374 seconds)
    (156/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.446122175 seconds)
    (157/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.537874557 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.379058037 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.477646557 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.431915279 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.945190683 seconds)
    (162/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.489512543 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.478468969 seconds)
    (164/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.458572894 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.888118125 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.857426355 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.575627801 seconds)
    (168/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.386470718 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.199036888 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.497366058 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.47103292 seconds)
    (172/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.44638396 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.473573607 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.448117156 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.550738237 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.461133481 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.45102017 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.888010121 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.289660619 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.451068728 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.555891161 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.536885013 seconds)
    (183/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.08574208 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.387006223 seconds)
    (185/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.532410621 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.829292155 seconds)
    (187/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.185322044 seconds)
    (188/309) benchmarking ("map", identity, Float64, true)...
    done (took 3.079807069 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.485289642 seconds)
    (190/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.659381342 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.474276903 seconds)
    (192/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.429161904 seconds)
    (193/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.465412741 seconds)
    (194/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.470550965 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.48657847 seconds)
    (196/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.048000026 seconds)
    (197/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.457115221 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.962865601 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.512074402 seconds)
    (200/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.551533082 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.748708824 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.522584133 seconds)
    (203/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.364475257 seconds)
    (204/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.852032153 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.408800024 seconds)
    (206/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.512629905 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.502045599 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.526670523 seconds)
    (209/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.144967898 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.446899702 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.469675564 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.500551757 seconds)
    (213/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.361788051 seconds)
    (214/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.514768226 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.17564849 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.663568486 seconds)
    (217/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.430237469 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.929127945 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.354170999 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.463288032 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.522645299 seconds)
    (222/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.504435635 seconds)
    (223/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.442444361 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.593827035 seconds)
    (225/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.161638332 seconds)
    (226/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.461895148 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.469627683 seconds)
    (228/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.332985623 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.22020541 seconds)
    (230/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.596202643 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.519949871 seconds)
    (232/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.135981963 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.489291294 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.118251338 seconds)
    (235/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.467737155 seconds)
    (236/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.528368848 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.461516197 seconds)
    (238/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.154963224 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.447921486 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.573145925 seconds)
    (241/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.83180175 seconds)
    (242/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.527509673 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.597564339 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.834224187 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.912477591 seconds)
    (246/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.860645339 seconds)
    (247/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.074057189 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.28610755 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.491426146 seconds)
    (250/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.054928786 seconds)
    (251/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.461151338 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.166142995 seconds)
    (253/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.466469334 seconds)
    (254/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.857332662 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.948509481 seconds)
    (256/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.549517788 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.351395771 seconds)
    (258/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.714143709 seconds)
    (259/309) benchmarking ("sort", Int8, false)...
    done (took 4.511009812 seconds)
    (260/309) benchmarking ("map", abs, Float64, true)...
    done (took 3.09301279 seconds)
    (261/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.297984215 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.720646186 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.468147499 seconds)
    (264/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.103462062 seconds)
    (265/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.439606066 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.492116174 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.477550385 seconds)
    (268/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.456816295 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.360636496 seconds)
    (270/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.150205948 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.838730994 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.572026367 seconds)
    (273/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.454220356 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.189522996 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.651975002 seconds)
    (276/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.79067285 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.128585319 seconds)
    (278/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.580769166 seconds)
    (279/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.990680363 seconds)
    (280/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.126821167 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.451165305 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.999623081 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.481284179 seconds)
    (284/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.393215431 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.550071934 seconds)
    (286/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.3732138 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.536065797 seconds)
    (288/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.051138978 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.532715061 seconds)
    (290/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.865046719 seconds)
    (291/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.762969235 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.60049375 seconds)
    (293/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.793830435 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.629820536 seconds)
    (295/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.535406178 seconds)
    (296/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.456758912 seconds)
    (297/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.701534343 seconds)
    (298/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.175906808 seconds)
    (299/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.50792267 seconds)
    (300/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.441613743 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.667923997 seconds)
    (302/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.464751409 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.524470987 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.230351904 seconds)
    (305/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.470602896 seconds)
    (306/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.455101387 seconds)
    (307/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.063557163 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.483089577 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.442760804 seconds)
  done (took 992.639819293 seconds)
done (took 994.016591709 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.489873124 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.483911778 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.467461809 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.489783835 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.579209806 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.495593582 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.478245261 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.469627999 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.51629617 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.518481148 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.467224417 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.495025077 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.46956508 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.467205924 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.46848059 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.48235404 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.614451045 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.47037095 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.485135929 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.477069815 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.486509799 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.467447396 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.518532085 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.496513212 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.472652018 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.471893325 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.473325661 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.489259977 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.581520424 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.473028762 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.470967323 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.481033549 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.683783876 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.470013125 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.464392856 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.49087563 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.480040463 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.478151768 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.473200825 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.500959742 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.08015447 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.469594853 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.47155443 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.47102161 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.47111544 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.474830018 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.471903759 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.476958132 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.483214449 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.483765967 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.067529686 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.485362519 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.473793368 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.470458146 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.481027951 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.470517087 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.474321236 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.487112203 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.491807181 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.486411487 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.631993703 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.476910193 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.473367777 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.48756158 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.478782022 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.109838116 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.466985038 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.47607175 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.0846281 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.477535018 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.1084164 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.480541382 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.472446969 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.48527356 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.502824479 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.621581473 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.467033621 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.472371645 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.480025059 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.47060495 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.481211692 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.483406995 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.477280998 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.472405232 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.484728973 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.500917764 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.482922857 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.473353652 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.480669189 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.492072646 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.480127931 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.483065727 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.476558077 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.468646196 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.482048419 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.476433189 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.476125128 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.475717958 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.478090672 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.484408394 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.099941991 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.490563301 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.469724119 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.469966403 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.473244449 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.487886012 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.17870809 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.478072473 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.495650766 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.520672805 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.475633982 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.665376015 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.479888564 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.489674199 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.482576004 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.47734725 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.469145815 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.614752712 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.10080925 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.490168538 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.475795703 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.47237487 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.491067926 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.475785851 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.471032644 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.626572205 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.475731504 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.487318612 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.596373536 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.485289449 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.506288733 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.473648049 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.478884997 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.503882761 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.491098345 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.507212715 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.478247572 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.491049536 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.490338187 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.471618775 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.486756427 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.485780738 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.476560219 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.482653242 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.469612722 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.50408565 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.488154928 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.489055875 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.496404655 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.59706722 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.4741905 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.61811407 seconds)
done (took 249.216695692 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.534711501 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.470008552 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.571252042 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.472291591 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.575257531 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.574205579 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.470482941 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.470055482 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.469507727 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.85428286 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.470523546 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.471233716 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.472114114 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.471388778 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.555217211 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.472817101 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.470369837 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.814865641 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.474007411 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.54488347 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.467866102 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.470479791 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.473648857 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.856900012 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.467682535 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.4660873 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.545618355 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.473680147 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.821076835 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.475919314 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.46893947 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.820919188 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.564971576 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.491013782 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.48388403 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.481214615 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.577158643 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.494187527 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.556280718 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.554952742 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.573490138 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.513538728 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.469475507 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.469593321 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.475850913 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.476397218 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.471622154 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.500887223 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.472415122 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.472306643 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.817582373 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.484723088 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.481879813 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.472881662 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.472881539 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.495309692 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.4737045 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.476259808 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.565722606 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.476840346 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.538283022 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.859724673 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.855969893 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.475710761 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.4736291 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.473781525 seconds)
  done (took 157.888594229 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.543026477 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.54928002 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.600417247 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.478135247 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.527794324 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.604276995 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.477663144 seconds)
  done (took 12.187979218 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.482031431 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.476526484 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.526633577 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.526756943 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.476856699 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.626773292 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.477387599 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.487155669 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.473837216 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.530050105 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.478209799 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.477649579 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.484142953 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.474835279 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.526455664 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.48844168 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.592435424 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.477273133 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.479353912 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.634283991 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.475765862 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.483521602 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.529782178 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.488769137 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.478395504 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.483158784 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.06020394 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.477972156 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.475226263 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.47713404 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.474147717 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.516820169 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.477885119 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.474473128 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.475184638 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.594135096 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.478744224 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.475898356 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.478315245 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.473756256 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.477800171 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.478909656 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.47876585 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.475564293 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.477991707 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.502345877 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.47858444 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.478735005 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.478319698 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.479166292 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.529578858 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.479555499 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.476891594 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.475795949 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.531189447 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.481997278 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.476618133 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.47290051 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.475957284 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.473462304 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.632701605 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.523410322 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.47603842 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.524836417 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.476207953 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.476992695 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.476266045 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.475777593 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.531694198 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.477176741 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.525010948 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.4735375 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.632762733 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.500539239 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.478189732 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.47938618 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.480278125 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.477753041 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.4709327 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.483870902 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.474679118 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.478454988 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.483218673 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.473727189 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.47430313 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.584173399 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.584985 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.474110947 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.489584587 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.484863021 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.473271703 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.530503172 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.477489293 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.474829632 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.529840036 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.591451686 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.531165299 seconds)
  done (took 167.32093434 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.482854004 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.485621453 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.479278618 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.49412605 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.477876036 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.476996845 seconds)
  done (took 10.305347238 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.48173273 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.479411928 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.477589219 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.47786479 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.477847992 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.478446297 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.479922058 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.480001349 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.483071223 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.478430057 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.478411862 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.479496723 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.478904343 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.479379157 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.479175629 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.478311748 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.480264969 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.477345884 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.479737573 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.479056397 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.584520321 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.479776255 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.479740305 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.480364915 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.485038997 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.479415632 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.487480285 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.478183873 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.479829034 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.488501569 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.481711833 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.479740166 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.481543899 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.487486728 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.484080636 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.481651445 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.484077188 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.970288725 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.478217701 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.479980952 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.482429773 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.480668288 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.480302393 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.481311689 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.482580851 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.486393378 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.484988854 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.488533413 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.480489142 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.481374411 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.480661569 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.48005985 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.480682391 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.481342841 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.484265648 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.485726574 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.486873296 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.481937268 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.481107326 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.482862438 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.483704416 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.481551922 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.484141189 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.486035408 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.478610476 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.482020589 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.483143078 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.485937423 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.482341539 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.481584574 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.482259278 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.479466147 seconds)
  done (took 109.672784791 seconds)
done (took 458.778195302 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.995963588 seconds)
  done (took 8.40827145 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.792794986 seconds)
  done (took 8.207372962 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.516680645 seconds)
  done (took 25.934063182 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.564205902 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.566089241 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.478131788 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.477166134 seconds)
  done (took 27.500079341 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.960702782 seconds)
  done (took 8.373133053 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.474349157 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.487645945 seconds)
  done (took 14.377027558 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.988535702 seconds)
  done (took 8.40126932 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.109516183 seconds)
  done (took 8.526368659 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.497579622 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.495074359 seconds)
  done (took 14.679214086 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.460494188 seconds)
  done (took 7.872430519 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.879365449 seconds)
  done (took 9.29199047 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.479281517 seconds)
  done (took 7.893206509 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.50480196 seconds)
  done (took 7.917462272 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.720736852 seconds)
  done (took 11.133597924 seconds)
done (took 169.926874369 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.475215143 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.47589329 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.477063444 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.475332425 seconds)
  done (took 27.316465884 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.516588343 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.516569469 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.517853594 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.527442576 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.519175562 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.516540261 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.508648733 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.508916761 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.52684843 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.519223335 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.51848072 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.519012027 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.517362955 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.508676565 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.519094872 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.518574821 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.527844695 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.517745928 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.509256683 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.520752519 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.484254094 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.528924508 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.521281138 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.4845799 seconds)
  done (took 37.787261438 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.682313483 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.556364868 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.636858985 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.536610176 seconds)
  done (took 7.82694977 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.535156821 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.538203583 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.552086724 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.590668079 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.621405984 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.546584568 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.512287363 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.505872949 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.491234336 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.537428285 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.613273225 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.55347974 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.647605632 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.483513418 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.672663821 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.486127641 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.484777104 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.537968143 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.58850244 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.603798598 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.484425189 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.536715606 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.541234813 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.554406438 seconds)
  done (took 38.635879302 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.483876471 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.492594862 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.490413931 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.484331975 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.484558833 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.48474443 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.490331041 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.485371645 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.506306816 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.486291312 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.482382288 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.483954849 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.483358857 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.485321109 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.484453285 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.497433826 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.498517768 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.485602624 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.48788586 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.490063237 seconds)
  done (took 31.184375437 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.478289201 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.334743494 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.832486827 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.737003361 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.478337226 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.4823342 seconds)
  done (took 28.759530697 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.571315373 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.723646077 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.488690735 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.933648915 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.018343249 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.489936687 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.486862429 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.768939276 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.157574062 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.15892396 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.559453886 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.548610471 seconds)
  done (took 22.325636121 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.480791401 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.482429322 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.49326295 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.499492639 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.552595538 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.492286457 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.492869213 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.480520362 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.553699521 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.558232384 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.493146228 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.555283265 seconds)
  done (took 39.555983421 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575739723 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.533975048 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.554274815 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424046637 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.901904642 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.694249731 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.440653752 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.974593679 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.486830697 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.756642359 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488696764 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583554934 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.742554962 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.484604483 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.484996484 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.627919524 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711390892 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093397323 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.484211143 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.087268235 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511282464 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.497737891 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.28778617 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.516455306 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.69466761 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.620503338 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.743727142 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.483554498 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81774069 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.497479645 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493914787 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.483465424 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757325364 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231391774 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57846018 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493390754 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.454698461 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.197523387 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.480681861 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.16552709 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.493082055 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.488400789 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495081368 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483921636 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.418926773 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.483356303 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00423012 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.489584162 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.195366563 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.483690148 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495076568 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578118956 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.487336321 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.302262769 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722855324 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484303495 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.481869522 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490605024 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054144741 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.7426006 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489350898 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.423576448 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.653173117 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.125874462 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27627714 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.588036572 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.488071838 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.489011601 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435892613 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.162597947 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.504982046 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.858708938 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.505811978 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.179501615 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373895538 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.499800176 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.431753243 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158868654 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.487003055 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.441689776 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715464529 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.484920098 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.425780386 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.432190633 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.420241278 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.280319517 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494501885 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.991758472 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493388388 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.974870428 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.496841286 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503606063 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509923372 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.71115174 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.371813172 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486650083 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.486373741 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63805774 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508795419 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.98198229 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437277993 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.490019288 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.745908408 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.699312437 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489568584 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.648568936 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.733640021 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.494753417 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.505692114 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.494078146 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.501456517 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.236735178 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.501100945 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.745780532 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505642359 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.487251458 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.326013531 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.492977598 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.591435845 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.504467672 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769310632 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.369275923 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487983858 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570993979 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.490830553 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.48812358 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.203668871 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.011060636 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.487447209 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.491194676 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.49865514 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.502097885 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.488552215 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.488795565 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.485355842 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.494303504 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.493791518 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.714203359 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.488726782 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766521241 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423196818 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.864481833 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.626029905 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.713577668 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.844022884 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.487811424 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.75358184 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.505746985 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.491246717 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504036804 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509087822 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587257292 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511514403 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.504079841 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.752133911 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.493152206 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.494721782 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.213810795 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.493423814 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.497084417 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.495447398 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.523426301 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241050531 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480364174 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.498597166 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384770393 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.504958595 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55591451 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.495725138 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50090831 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.673885659 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.565662472 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.497051518 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.48716896 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.71926437 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.502346207 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.112009499 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572711361 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.733800168 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246122379 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506606429 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.425290647 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.203556392 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.184072547 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.491734256 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.427358101 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.491154607 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500414487 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.501526431 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.819040904 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.24509596 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.493580999 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.139267169 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.499984307 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.503820992 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.497197127 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.492428871 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.658642084 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.783985706 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.50758031 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.506658507 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635755299 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.506402024 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.427450587 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.496424477 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4975727 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.492135469 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.492927614 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526603152 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.132817479 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027679241 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.756815982 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.437783748 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.506779924 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.264291134 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.53028823 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.492524136 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.505712469 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.5076465 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.497997742 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5208137 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.504161067 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.223970437 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.210975189 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060305555 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382749853 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187631996 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.619012021 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.498984061 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.495659514 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.997092907 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428891512 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.062277325 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721757691 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994377359 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.493489592 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.73853896 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.847923396 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.389046231 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508142737 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.723994801 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.613339208 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.507769124 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509819606 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.707373068 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528891721 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.512209226 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.441224834 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.78133371 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798201667 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.500278126 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575285791 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988813521 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.499748456 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.499324384 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.494058763 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.968571611 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704361481 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.215749091 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.709916213 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.499158568 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.513941648 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029019211 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.503312573 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.727304981 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290434619 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.509840868 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.745324011 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437866921 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.506888606 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.507345831 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.497643327 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.182506904 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.51211833 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.754104935 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507269219 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430913266 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.508346481 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199159196 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.354358448 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.502895989 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.496346278 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331038105 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.513734182 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840991064 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.500165558 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.672239637 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.50497887 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.431785537 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.43267864 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.190049753 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.505320459 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482226277 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10932734 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.612432547 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.718002661 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.527090438 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556023508 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.755953145 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.511492968 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.253729478 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.730013001 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.544259811 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522324414 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.598786321 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.496581349 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.485681235 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.497873691 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.734457863 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.528518026 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.72383794 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.590175383 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.40582955 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.496585907 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.710667819 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.498572042 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.508206481 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79736352 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.211653476 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.505822183 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387604402 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522602944 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.509805551 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.451769635 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.667476785 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506359326 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579120378 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510579606 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.510255234 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.510989974 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707159028 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.501936377 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.503041707 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.513333656 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593053402 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.523618127 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.58230599 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.503920588 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262425349 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399604148 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.259307694 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514359938 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.49975294 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.499498509 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447046445 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648477711 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.731419802 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.773593799 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.627805057 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.719159248 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523195984 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.50222222 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.503102874 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.715616428 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774945641 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.401448137 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.507295392 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.517535009 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.500099116 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.512355979 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.713101227 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1168143 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175451632 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619426337 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.507022171 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.997011515 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775604727 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.501531286 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.500810209 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.099319775 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.517204209 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.980229313 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.507022279 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.501667529 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672815136 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.513223155 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256450677 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.514837321 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.66145387 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.27637832 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.256449328 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.764015952 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.082531876 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.513378668 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262464148 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.427588415 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769728901 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56951932 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.513651145 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.613495211 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650231872 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.502626545 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.505413339 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.502388862 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725051041 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.213658366 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.514188287 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26789296 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770845805 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.500277381 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.511386998 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529119023 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.51346275 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.729381114 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.313936196 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.728831383 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.514837594 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.511548156 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.326417683 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267168243 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517516862 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.450806696 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.508807653 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801272179 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.743311375 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524911317 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.956964248 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.215298987 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18551681 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.481103692 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525534505 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.521793061 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432597603 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266193593 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.597882889 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128036329 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.075121699 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.520576903 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780647209 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.510144529 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.521448742 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782904191 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.50905187 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.519074858 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519478333 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.263320566 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.41893877 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.517877056 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.195199212 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.445799456 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.854854608 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297822837 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.455514047 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.505191471 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.722874642 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.505317895 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633086225 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517555281 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.519068035 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.522884217 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.242252833 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.822667462 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.512396673 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.497020706 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.490881068 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.52280101 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515810828 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812383823 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51360773 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.182540698 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.859304555 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.76588406 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.512656552 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.494170613 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.511639584 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.507301557 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.545499148 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.748163429 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.838549132 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188226204 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.517458023 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.520474481 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.510349173 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.724889835 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.719427549 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.507476437 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52115339 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.524947125 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525195478 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.414405754 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.047062984 seconds)
  done (took 1698.247683393 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.544735583 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.52756853 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.545257226 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.529191825 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.572649751 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.516107988 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.619877529 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.552754021 seconds)
  done (took 53.851848462 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.510890175 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.752042798 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.54184676 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.508965576 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.517717717 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.514377156 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.043983834 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.513030921 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.518187786 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.518689012 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.512945327 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.520010075 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.262664719 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.521238641 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.514099664 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.498865538 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.517832 seconds)
  done (took 68.73873658 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.523834655 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.566126428 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.589646062 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.512472256 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.542463474 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.522293454 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.386112798 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.527966856 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.509705186 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.732409154 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.160337584 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.525476377 seconds)
  done (took 83.545626854 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.515830427 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.516472498 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.515880992 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.516551575 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.5163867 seconds)
  done (took 9.026415553 seconds)
done (took 2148.217148872 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.765183335 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.390821744 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.267021104 seconds)
  done (took 6.103655681 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.660974026 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.708835141 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.830582392 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.854587623 seconds)
  done (took 8.503543842 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.798194237 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.899500917 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.723275543 seconds)
  done (took 6.869818598 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.208405003 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.514393363 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.608334464 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.511359795 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.513688164 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.515224205 seconds)
  done (took 20.991028961 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.516916518 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.519660404 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.516308652 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.519465228 seconds)
  done (took 7.524303324 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.498666384 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.286544076 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.499007516 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.512226797 seconds)
  done (took 19.24622286 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.276854095 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.277744457 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.261005564 seconds)
  done (took 8.265149293 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.515239119 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.358639438 seconds)
  done (took 10.323802159 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.845837738 seconds)
  done (took 3.2950362 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.648732969 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.780734457 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.893722404 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.704321871 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.906435707 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.311674669 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.581263781 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 3.049662025 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.69102044 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.253573938 seconds)
  done (took 33.270980443 seconds)
done (took 138.934783151 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.894569752 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.533200727 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.719965923 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.864584749 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.747734141 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.719177389 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.799453947 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.834857525 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.37257944 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.367257873 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.872445871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.748472867 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.749810987 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.533019111 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.75012846 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.529555858 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.755011453 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.926991593 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.530271843 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.514839218 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.803316827 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.507114995 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.701715198 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.522822065 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.752018001 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.671913628 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.084275968 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.530441974 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.517123224 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.109443111 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.6731277 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.517753909 seconds)
  done (took 203.606471738 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.515571029 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.552637692 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.516185414 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.53340314 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.515414361 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.518321588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.540118779 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.516277659 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.51575071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.524788322 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.515068366 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.515729369 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.515332327 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.515747517 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.51695613 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.515160848 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.516582304 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.516412983 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.517245318 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.516643295 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.515926187 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.527732092 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.532743534 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.516471257 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.528271127 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.51579909 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.52888374 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.516174168 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.530572204 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.516987456 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.517918334 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.515767234 seconds)
  done (took 210.126279861 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.517875119 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.517859624 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.51801732 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.516853429 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.516816991 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.535148321 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.520158712 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.534981749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.530548317 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.52440978 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.535253672 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.517574697 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.542479117 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.517749093 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.538421033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.518139536 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.517446301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.528999952 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.531918103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.517149739 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.51811404 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.517117548 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.517626629 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.517081728 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.519885232 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.51664559 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.534469491 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.518520829 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.517861883 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.518481046 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.51788136 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.522822426 seconds)
  done (took 210.190503652 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.715545848 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.525558036 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.526210983 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.466184246 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.527426315 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.526590981 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.524069139 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.725564552 seconds)
  done (took 15.991819641 seconds)
done (took 641.365940374 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.045694523 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.734049913 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.741943497 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.547130455 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.448295998 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.548771546 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.547794844 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.741651182 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.12791511 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.727163676 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.894365433 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.545012941 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.041340073 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.544548065 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.822659865 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.656920639 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.477755249 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.598835676 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.891709634 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.212870986 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.827683591 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.220088187 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.742483142 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.165787349 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.052037854 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.250114641 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.426515074 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.481314735 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.546349475 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.894462214 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.452344736 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.66016374 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.62044843 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.598363252 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.654130107 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.635300003 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.672212661 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.59605293 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.742899085 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.973712522 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.211269942 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.917259706 seconds)
  done (took 104.694981922 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.517337687 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.516938912 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.516215531 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.517507127 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.518533549 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.517112276 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.516798757 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.516096571 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.51759907 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.517116744 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.516461767 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.518894449 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.517704314 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.518380112 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.517128633 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.517512612 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.518183311 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.520283266 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.517003743 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.517385281 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.5188295 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.5173003 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.519158686 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.517826022 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.518330902 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.518391954 seconds)
  done (took 40.919131976 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.531167977 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.783869041 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.998868131 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.538356573 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.529774005 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.535657953 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.621968443 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.531028301 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.533805832 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.534924557 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.698886379 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.53314649 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.566937289 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.995071767 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.534222887 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.531859714 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.530847839 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.532283775 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.790715353 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.540288804 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.644654772 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.532531968 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.623368734 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.541350668 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.555057156 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.531987528 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.536260738 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.117273648 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.534170232 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.699712486 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.495749469 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.622561535 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.069104261 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.011246718 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.500277611 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.535085212 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.532305288 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.70244807 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.534662207 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.533308479 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.623015572 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.532699603 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.998684498 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.188240202 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.553182699 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.533845211 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.142031677 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.703299111 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.826849831 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.540668811 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.028404938 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.536505586 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.534093711 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.534320845 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.825850735 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.541231128 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.53375623 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.99108855 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.538786314 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.623707061 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.534523502 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.534469152 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.800472436 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.534317261 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.791115928 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.536702055 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.542455271 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.534326587 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.00222859 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.537904392 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.202130957 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.554494137 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.534663611 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.700835363 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.790201217 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.177654474 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.537524736 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.805367216 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.081695257 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.624091082 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.539199196 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.107830457 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.62807259 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.539495386 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.537173902 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.536514928 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.534587196 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.579022345 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.623417458 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.133619254 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.195127845 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.013097143 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.626947211 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.548809073 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.536666811 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.993986644 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.535595415 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.535246796 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.996962018 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.205295284 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.55542206 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.543267927 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.188748803 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.558251925 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.626560257 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.541797608 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.006654072 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.537853151 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.578891185 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.536507879 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.542135789 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.540139226 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.62745587 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.540846768 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.536794407 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.178121277 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.728133037 seconds)
  done (took 200.712548871 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.530023626 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.548966409 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.531232408 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.530835294 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.529503897 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.536840262 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.529788452 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.530250919 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.536127949 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.530101066 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.531113324 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.530179105 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.533548563 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.53259484 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.539390838 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.53729995 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.141774524 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.534126078 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.531040111 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.531204822 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.371713088 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.535250748 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.530521569 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.53134548 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.535923815 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.538173889 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.555270934 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.532956233 seconds)
  done (took 157.875119719 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.537966339 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.200697335 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.540418501 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.693775668 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.562819288 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.53640589 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.692105675 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.606184861 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.540244945 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.536453495 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.535098794 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.893379423 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.540193197 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.14524236 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.770415758 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.696788329 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.145936233 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.54009266 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.537554086 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.536632167 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.699272103 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.552077937 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.89520947 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.205290117 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.541382411 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.205423568 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.529836392 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.539301752 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.538714049 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.228365845 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.539327318 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.897480037 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.631083816 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.609984839 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.207990023 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.145928842 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.148284138 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.717242361 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.540528832 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.538330238 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.537197939 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.527996162 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.246881232 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.543058318 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.540951714 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.241370076 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.561418566 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.541484315 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.5482865 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.538224814 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.609859934 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.611921052 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.918603197 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.260629901 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.632140649 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.561447312 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.701438989 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.941646058 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.543115959 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.147398155 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.5286836 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.213809993 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.543086814 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.528440424 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.540402912 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.545773751 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.725081318 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.70570572 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.150427571 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.541005656 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.149566413 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.727461106 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.540571923 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.539633847 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.542119981 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.264790329 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.152366689 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.728085726 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.708438591 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.776334117 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.532141855 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.54123424 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.530601464 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.632019371 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.540820037 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.270706438 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.153559695 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.543511783 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.54169083 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.543559512 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.544428656 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.753119915 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.272721873 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.634239475 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.152760928 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.944164984 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.929386594 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.545383873 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.613154476 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.54253437 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.929638228 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.545128504 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.611201119 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.008369559 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.903353937 seconds)
  done (took 184.837899768 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.825329593 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.852915504 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.641190436 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.671930224 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.151879485 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.185621603 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.698312865 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.625870784 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.646797297 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.671115895 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.336723756 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.633210294 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.766153472 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.62954531 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.282868502 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.618983794 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.644577773 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.666893989 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.66934304 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.633158639 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.188510224 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.853084801 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.724649404 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.657434065 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.611250534 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.383095966 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.353691444 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.073123408 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.730583673 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.82149298 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.088164871 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.801672123 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.439858992 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.259314685 seconds)
  done (took 72.312671255 seconds)
done (took 762.807133789 seconds)
SAVING RESULT...
DONE!
